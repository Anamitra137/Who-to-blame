File,Commit,Author,Commit Message,Start Line,End Line,Previous Author,Previous Commit,Keyword Label,Commit Date,Previous Commit Date
callbacks/create_test.go,f7ebf04,Jinghao Lu,"fix(create): fix insert column order (#6855)  * fix(create): fix insert column order  * chore: add ConvertToCreateValues ut for Slice case  * fix: remvoe testify dependency  ---------  Co-authored-by: lujinghao <lujinghao@bytedance.com>",1,71,,,1,2024-03-18 05:48:42,
callbacks/helper_test.go,9b9ae32,chenrui,"fix: circular reference save, close #5140  commit 2ac099a37ac7bd74f0a98a6fdc42cc8527404144 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 23:49:21 2022 +0800      Refactor #5140  commit 6e3ca2d1aa09943dcfb5d9a4b93bea28212f71be Author: a631807682 <631807682@qq.com> Date:   Sun Mar 13 12:52:08 2022 +0800      test: add test for LoadOrStoreVisitMap  commit 9d5c68e41000fd15dea124797dd5f2656bf6b304 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:33:47 2022 +0800      chore: add more comment  commit bfffefb179c883389b72bef8f04469c0a8418043 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:28:48 2022 +0800      fix: should check values has been saved instead of rel.Name  commit e55cdfa4b3fbcf8b80baf009e8ddb2e40d471494 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:48:01 2022 +0800      chore: go lint  commit fe4715c5bd4ac28950c97dded9848710d8becb88 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:27:24 2022 +0800      chore: add test comment  commit 326862f3f8980482a09d7d1a7f4d1011bb8a7c59 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:22:33 2022 +0800      fix: circular reference save",1,5,,,1,2022-03-17 15:53:31,
callbacks/helper_test.go,52404cd,Chef,"CHORE add unittest test function  ConvertMapToValueForCreate (#6846)  * CHORE add unittest test function  ConvertMapToValueForCreate  * CHORE move the test cases located in the files convert_map_test.go and visit_map_test.go into the file helper_test.go.",6,8,,,0,2024-02-27 02:48:04,
callbacks/helper_test.go,f118e55,Chef,Add unittest test helper function ConvertSliceOfMapToValuesForCreate (#6854),98,157,Chef,52404cd,0,2024-03-05 02:22:57,2024-02-27 02:48:04
callbacks/helper_test.go,9b9ae32,chenrui,"fix: circular reference save, close #5140  commit 2ac099a37ac7bd74f0a98a6fdc42cc8527404144 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 23:49:21 2022 +0800      Refactor #5140  commit 6e3ca2d1aa09943dcfb5d9a4b93bea28212f71be Author: a631807682 <631807682@qq.com> Date:   Sun Mar 13 12:52:08 2022 +0800      test: add test for LoadOrStoreVisitMap  commit 9d5c68e41000fd15dea124797dd5f2656bf6b304 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:33:47 2022 +0800      chore: add more comment  commit bfffefb179c883389b72bef8f04469c0a8418043 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:28:48 2022 +0800      fix: should check values has been saved instead of rel.Name  commit e55cdfa4b3fbcf8b80baf009e8ddb2e40d471494 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:48:01 2022 +0800      chore: go lint  commit fe4715c5bd4ac28950c97dded9848710d8becb88 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:27:24 2022 +0800      chore: add test comment  commit 326862f3f8980482a09d7d1a7f4d1011bb8a7c59 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:22:33 2022 +0800      fix: circular reference save",9,39,,,1,2022-03-17 15:53:31,
callbacks/helper_test.go,52404cd,Chef,"CHORE add unittest test function  ConvertMapToValueForCreate (#6846)  * CHORE add unittest test function  ConvertMapToValueForCreate  * CHORE move the test cases located in the files convert_map_test.go and visit_map_test.go into the file helper_test.go.",40,97,,,0,2024-02-27 02:48:04,
callbacks/callmethod.go,e66a059,black-06,"fix: update panic if model is not ptr (#6037)  * fix: update panic if model is not ptr  * fix: update panic if model is not ptr  * fix: update panic if model is not ptr  * fix: raise an error if the value is not addressable  * fix: return",16,21,Jinzhu,26504f5,1,2023-02-18 01:20:29,2020-11-17 08:28:37
callbacks/callmethod.go,26504f5,Jinzhu,Use NewDB to replace WithConditions for Session,10,10,Jinzhu,4009ec5,0,2020-11-17 08:28:37,2020-10-27 10:14:36
callbacks/callmethod.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,1,9,,,0,2020-06-05 15:26:56,
callbacks/callmethod.go,929c0c5,Jinzhu,Test Hooks For Slice,14,14,Jinzhu,1490a06,0,2020-06-30 14:47:21,2020-06-05 15:26:56
callbacks/callmethod.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,12,13,,,0,2020-06-05 15:26:56,
callbacks/callmethod.go,4009ec5,Jinzhu,Fix call hook methods when updating with struct,11,11,Jinzhu,3e4dbde,1,2020-10-27 10:14:36,2020-07-01 11:49:04
callbacks/callmethod.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,15,15,,,0,2020-06-05 15:26:56,
callbacks/callmethod.go,929c0c5,Jinzhu,Test Hooks For Slice,22,22,,,0,2020-06-30 14:47:21,
callbacks/callmethod.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,23,24,,,0,2020-06-05 15:26:56,
callbacks/callmethod.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,30,32,,,0,2020-06-05 15:26:56,
callbacks/callmethod.go,e66a059,black-06,"fix: update panic if model is not ptr (#6037)  * fix: update panic if model is not ptr  * fix: update panic if model is not ptr  * fix: update panic if model is not ptr  * fix: raise an error if the value is not addressable  * fix: return",25,29,Jinzhu,26504f5,1,2023-02-18 01:20:29,2020-11-17 08:28:37
callbacks/interfaces.go,ce8853e,Jinzhu,Add GormValuer interface support,1,39,,,0,2020-08-27 07:03:57,
callbacks/callbacks.go,46b1c85,Jinzhu,Add more clauses,5,5,Jinzhu,728c0d4,0,2020-02-04 00:56:15,2020-02-02 12:05:10
callbacks/callbacks.go,6951be0,Jinzhu,Allow customize clauses,7,13,Jinzhu,deff059,0,2021-04-28 09:19:30,2021-02-07 06:24:11
callbacks/callbacks.go,6951be0,Jinzhu,Allow customize clauses,16,19,Jinzhu,deff059,0,2021-04-28 09:19:30,2021-02-07 06:24:11
callbacks/callbacks.go,8cb15ca,Jinzhu,Improve test structure,6,6,,,0,2020-02-02 00:35:01,
callbacks/callbacks.go,f7f6335,Jinzhu,"Fix tests with mysql, postgres",14,15,Jinzhu,215f5e7,1,2020-03-12 05:05:22,2020-02-22 11:41:01
callbacks/callbacks.go,e986371,Jinzhu,Rename package name,4,4,Jinzhu,1559fe2,0,2020-06-02 01:18:01,2020-06-01 11:41:33
callbacks/callbacks.go,8cb15ca,Jinzhu,Improve test structure,1,2,,,0,2020-02-02 00:35:01,
callbacks/callbacks.go,46b1c85,Jinzhu,Add more clauses,3,3,Jinzhu,728c0d4,0,2020-02-04 00:56:15,2020-02-02 12:05:10
callbacks/callbacks.go,f7f6335,Jinzhu,"Fix tests with mysql, postgres",20,22,Jinzhu,215f5e7,1,2020-03-12 05:05:22,2020-02-22 11:41:01
callbacks/callbacks.go,af3fbdc,Jinzhu,Improve returning support,27,39,Jinzhu,6951be0,0,2021-10-26 14:40:14,2021-04-28 09:19:30
callbacks/callbacks.go,728c0d4,Jinzhu,Add callbacks,23,26,Jinzhu,8cb15ca,0,2020-02-02 12:05:10,2020-02-02 00:35:01
callbacks/callbacks.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",43,43,Jinzhu,70a7bd5,0,2021-02-07 06:24:11,2020-09-10 13:46:18
callbacks/callbacks.go,f7f6335,Jinzhu,"Fix tests with mysql, postgres",44,44,Jinzhu,46b1c85,1,2020-03-12 05:05:22,2020-02-04 00:56:15
callbacks/callbacks.go,728c0d4,Jinzhu,Add callbacks,46,47,,,0,2020-02-02 12:05:10,
callbacks/callbacks.go,728c0d4,Jinzhu,Add callbacks,40,42,,,0,2020-02-02 12:05:10,
callbacks/callbacks.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",45,45,Jinzhu,70a7bd5,0,2021-02-07 06:24:11,2020-09-10 13:46:18
callbacks/callbacks.go,6951be0,Jinzhu,Allow customize clauses,48,48,Jinzhu,deff059,0,2021-04-28 09:19:30,2021-02-07 06:24:11
callbacks/callbacks.go,728c0d4,Jinzhu,Add callbacks,49,50,,,0,2020-02-02 12:05:10,
callbacks/callbacks.go,46b1c85,Jinzhu,Add more clauses,51,51,,,0,2020-02-04 00:56:15,
callbacks/callbacks.go,728c0d4,Jinzhu,Add callbacks,55,58,,,0,2020-02-02 12:05:10,
callbacks/callbacks.go,6951be0,Jinzhu,Allow customize clauses,54,54,Jinzhu,deff059,0,2021-04-28 09:19:30,2021-02-07 06:24:11
callbacks/callbacks.go,835d7bd,Jinzhu,Add returning support to delete,60,60,Jinzhu,af3fbdc,0,2021-10-27 23:56:55,2021-10-26 14:40:14
callbacks/callbacks.go,728c0d4,Jinzhu,Add callbacks,61,62,,,0,2020-02-02 12:05:10,
callbacks/callbacks.go,6951be0,Jinzhu,Allow customize clauses,63,63,Jinzhu,deff059,0,2021-04-28 09:19:30,2021-02-07 06:24:11
callbacks/callbacks.go,728c0d4,Jinzhu,Add callbacks,52,53,,,0,2020-02-02 12:05:10,
callbacks/callbacks.go,728c0d4,Jinzhu,Add callbacks,68,68,,,0,2020-02-02 12:05:10,
callbacks/callbacks.go,728c0d4,Jinzhu,Add callbacks,64,66,,,0,2020-02-02 12:05:10,
callbacks/callbacks.go,af3fbdc,Jinzhu,Improve returning support,70,70,Jinzhu,6951be0,0,2021-10-26 14:40:14,2021-04-28 09:19:30
callbacks/callbacks.go,728c0d4,Jinzhu,Add callbacks,72,73,,,0,2020-02-02 12:05:10,
callbacks/callbacks.go,6951be0,Jinzhu,Allow customize clauses,74,78,Jinzhu,deff059,0,2021-04-28 09:19:30,2021-02-07 06:24:11
callbacks/callbacks.go,6951be0,Jinzhu,Allow customize clauses,80,82,Jinzhu,deff059,0,2021-04-28 09:19:30,2021-02-07 06:24:11
callbacks/callbacks.go,8cb15ca,Jinzhu,Improve test structure,83,83,,,0,2020-02-02 00:35:01,
callbacks/callbacks.go,1559fe2,Jinzhu,Add more updates test,67,67,,,0,2020-06-01 11:41:33,
callbacks/callbacks.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",79,79,,,0,2020-02-22 11:41:01,
callbacks/callbacks.go,70a7bd5,Jinzhu,Support delete associations with Select when deleting,59,59,,,0,2020-09-10 13:46:18,
callbacks/callbacks.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",69,69,,,0,2021-02-07 06:24:11,
callbacks/callbacks.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",71,71,,,0,2021-02-07 06:24:11,
callbacks/raw.go,6d58b62,Jinzhu,Add sqlite migration tests,3,3,Jinzhu,215f5e7,0,2020-02-22 12:57:29,2020-02-22 11:41:01
callbacks/raw.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",1,2,,,0,2020-02-22 11:41:01,
callbacks/raw.go,e986371,Jinzhu,Rename package name,4,4,Jinzhu,befef0c,0,2020-06-02 01:18:01,2020-05-31 16:12:20
callbacks/raw.go,89ea620,Jinzhu,"DryRun for RowQuery, Exec, close #3106",8,8,Jinzhu,e986371,0,2020-07-04 00:35:11,2020-06-02 01:18:01
callbacks/raw.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",6,7,,,0,2020-02-22 11:41:01,
callbacks/raw.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",12,12,Jinzhu,89ea620,0,2021-11-29 01:33:20,2020-07-04 00:35:11
callbacks/raw.go,befef0c,Jinzhu,Improve Hooks,9,11,Jinzhu,a145d7e,0,2020-05-31 16:12:20,2020-03-09 06:25:50
callbacks/raw.go,6d58b62,Jinzhu,Add sqlite migration tests,5,5,Jinzhu,215f5e7,0,2020-02-22 12:57:29,2020-02-22 11:41:01
callbacks/raw.go,befef0c,Jinzhu,Improve Hooks,13,13,Jinzhu,a145d7e,0,2020-05-31 16:12:20,2020-03-09 06:25:50
callbacks/raw.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",14,15,Jinzhu,89ea620,0,2021-11-29 01:33:20,2020-07-04 00:35:11
callbacks/raw.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",16,17,,,0,2020-02-22 11:41:01,
callbacks/row.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",11,12,Jinzhu,8e67a08,0,2021-11-29 01:33:20,2021-06-18 07:38:20
callbacks/row.go,befef0c,Jinzhu,Improve Hooks,8,8,Jinzhu,749ca37,0,2020-05-31 16:12:20,2020-05-31 11:23:32
callbacks/row.go,e986371,Jinzhu,Rename package name,4,4,Jinzhu,befef0c,0,2020-06-02 01:18:01,2020-05-31 16:12:20
callbacks/row.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",13,13,,,0,2020-02-22 11:41:01,
callbacks/row.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",5,7,,,0,2020-02-22 11:41:01,
callbacks/row.go,878ac51,Cr,"fix:throw model value required error (#6031)  * fix:throw model value required error  * chore:ingore typecheck  * chore:ingore errcheck  * refactor: use other error  * chore: gofumpt style",10,10,heige,9d5f315,1,2023-02-08 05:40:41,2021-11-29 01:33:20
callbacks/row.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",1,3,,,0,2020-02-22 11:41:01,
callbacks/row.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",9,9,Jinzhu,9eec6ae,1,2020-11-04 03:03:22,2020-09-27 04:25:38
callbacks/row.go,befef0c,Jinzhu,Improve Hooks,19,19,Jinzhu,749ca37,0,2020-05-31 16:12:20,2020-05-31 11:23:32
callbacks/row.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",22,23,,,0,2020-02-22 11:41:01,
callbacks/row.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",14,18,Jinzhu,8e67a08,0,2021-11-29 01:33:20,2021-06-18 07:38:20
callbacks/row.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",20,21,Jinzhu,8e67a08,0,2021-11-29 01:33:20,2021-06-18 07:38:20
callbacks/transaction.go,b8692c7,Jinzhu,Allow temporarily disable default transaction,9,11,Jinzhu,2c1b04a,0,2020-07-16 10:05:55,2020-06-19 04:38:03
callbacks/transaction.go,c170af1,kinggo,"fix connections leak (#4826)  * fix connections leak  * fix connections leak  * fix connections leak  * fix connections leak  Co-authored-by: 李龙 <lilong.21@bytedance.com>",8,8,Jinzhu,7701c88,1,2021-11-03 05:39:52,2021-04-16 11:27:23
callbacks/transaction.go,728c0d4,Jinzhu,Add callbacks,1,2,,,0,2020-02-02 12:05:10,
callbacks/transaction.go,befef0c,Jinzhu,Improve Hooks,3,3,Jinzhu,728c0d4,0,2020-05-31 16:12:20,2020-02-02 12:05:10
callbacks/transaction.go,e986371,Jinzhu,Rename package name,4,4,Jinzhu,befef0c,0,2020-06-02 01:18:01,2020-05-31 16:12:20
callbacks/transaction.go,728c0d4,Jinzhu,Add callbacks,6,7,,,0,2020-02-02 12:05:10,
callbacks/transaction.go,befef0c,Jinzhu,Improve Hooks,5,5,Jinzhu,728c0d4,0,2020-05-31 16:12:20,2020-02-02 12:05:10
callbacks/transaction.go,4a15540,Jinzhu,SkipDefaultTransaction skip CreateInBatches transaction,12,12,Jinzhu,b8692c7,0,2021-01-18 03:43:42,2020-07-16 10:05:55
callbacks/transaction.go,b8692c7,Jinzhu,Allow temporarily disable default transaction,13,13,Jinzhu,2c1b04a,0,2020-07-16 10:05:55,2020-06-19 04:38:03
callbacks/transaction.go,b8692c7,Jinzhu,Allow temporarily disable default transaction,16,16,Jinzhu,2c1b04a,0,2020-07-16 10:05:55,2020-06-19 04:38:03
callbacks/transaction.go,b8692c7,Jinzhu,Allow temporarily disable default transaction,21,22,Jinzhu,2c1b04a,0,2020-07-16 10:05:55,2020-06-19 04:38:03
callbacks/transaction.go,b8692c7,Jinzhu,Allow temporarily disable default transaction,24,24,Jinzhu,2c1b04a,0,2020-07-16 10:05:55,2020-06-19 04:38:03
callbacks/transaction.go,befef0c,Jinzhu,Improve Hooks,17,17,Jinzhu,728c0d4,0,2020-05-31 16:12:20,2020-02-02 12:05:10
callbacks/transaction.go,728c0d4,Jinzhu,Add callbacks,18,20,,,0,2020-02-02 12:05:10,
callbacks/transaction.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",23,23,kinggo,c170af1,0,2021-11-29 01:33:20,2021-11-03 05:39:52
callbacks/transaction.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",25,26,kinggo,c170af1,0,2021-11-29 01:33:20,2021-11-03 05:39:52
callbacks/transaction.go,7701c88,Jinzhu,Assign transaction error to db,14,15,Jinzhu,4a15540,1,2021-04-16 11:27:23,2021-01-18 03:43:42
callbacks/transaction.go,b8692c7,Jinzhu,Allow temporarily disable default transaction,27,27,Jinzhu,2c1b04a,0,2020-07-16 10:05:55,2020-06-19 04:38:03
callbacks/transaction.go,b8692c7,Jinzhu,Allow temporarily disable default transaction,29,29,Jinzhu,2c1b04a,0,2020-07-16 10:05:55,2020-06-19 04:38:03
callbacks/transaction.go,728c0d4,Jinzhu,Add callbacks,32,32,,,0,2020-02-02 12:05:10,
callbacks/transaction.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",28,28,kinggo,c170af1,0,2021-11-29 01:33:20,2021-11-03 05:39:52
callbacks/transaction.go,befef0c,Jinzhu,Improve Hooks,30,30,,,0,2020-05-31 16:12:20,
callbacks/transaction.go,befef0c,Jinzhu,Improve Hooks,31,31,,,0,2020-05-31 16:12:20,
callbacks/helper.go,15ce5b3,Jinzhu,Add create value converter,5,6,,,0,2020-02-20 02:12:10,
callbacks/helper.go,9b9ae32,chenrui,"fix: circular reference save, close #5140  commit 2ac099a37ac7bd74f0a98a6fdc42cc8527404144 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 23:49:21 2022 +0800      Refactor #5140  commit 6e3ca2d1aa09943dcfb5d9a4b93bea28212f71be Author: a631807682 <631807682@qq.com> Date:   Sun Mar 13 12:52:08 2022 +0800      test: add test for LoadOrStoreVisitMap  commit 9d5c68e41000fd15dea124797dd5f2656bf6b304 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:33:47 2022 +0800      chore: add more comment  commit bfffefb179c883389b72bef8f04469c0a8418043 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:28:48 2022 +0800      fix: should check values has been saved instead of rel.Name  commit e55cdfa4b3fbcf8b80baf009e8ddb2e40d471494 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:48:01 2022 +0800      chore: go lint  commit fe4715c5bd4ac28950c97dded9848710d8becb88 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:27:24 2022 +0800      chore: add test comment  commit 326862f3f8980482a09d7d1a7f4d1011bb8a7c59 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:22:33 2022 +0800      fix: circular reference save",4,4,Jinzhu,f2edda5,1,2022-03-17 15:53:31,2022-02-27 00:40:15
callbacks/helper.go,e986371,Jinzhu,Rename package name,7,8,Jinzhu,9d3e929,0,2020-06-02 01:18:01,2020-05-31 05:34:53
callbacks/helper.go,29cd352,Jinzhu,"Add creatable, updatable, readable permission",11,12,Jinzhu,3a12623,0,2020-04-08 00:15:00,2020-03-23 14:40:12
callbacks/helper.go,f556628,Jinzhu,"Add SetColumn, Changed method",14,14,Jinzhu,5883490,0,2020-06-30 08:53:54,2020-06-20 09:21:01
callbacks/helper.go,15ce5b3,Jinzhu,Add create value converter,9,10,,,0,2020-02-20 02:12:10,
callbacks/helper.go,15ce5b3,Jinzhu,Add create value converter,1,3,,,0,2020-02-20 02:12:10,
callbacks/helper.go,4456df7,Jinzhu,Lint with golangci-lint,13,13,Jinzhu,66dcd7e,0,2020-07-16 03:27:12,2020-07-01 11:49:04
callbacks/helper.go,15ce5b3,Jinzhu,Add create value converter,18,22,,,0,2020-02-20 02:12:10,
callbacks/helper.go,15ce5b3,Jinzhu,Add create value converter,15,15,,,0,2020-02-20 02:12:10,
callbacks/helper.go,15ce5b3,Jinzhu,Add create value converter,28,30,,,0,2020-02-20 02:12:10,
callbacks/helper.go,7a90496,Jinzhu,Test create from sql expr with map,24,27,Jinzhu,9fcc337,0,2020-08-27 08:27:59,2020-08-17 09:41:36
callbacks/helper.go,4456df7,Jinzhu,Lint with golangci-lint,31,31,Jinzhu,66dcd7e,0,2020-07-16 03:27:12,2020-07-01 11:49:04
callbacks/helper.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),16,16,Jinzhu,835d7bd,0,2022-01-06 07:02:53,2021-10-27 23:56:55
callbacks/helper.go,cbd55db,Jinzhu,Add Update test,23,23,,,0,2020-03-07 07:20:09,
callbacks/helper.go,29cd352,Jinzhu,"Add creatable, updatable, readable permission",42,43,Jinzhu,3a12623,0,2020-04-08 00:15:00,2020-03-23 14:40:12
callbacks/helper.go,15ce5b3,Jinzhu,Add create value converter,37,41,,,0,2020-02-20 02:12:10,
callbacks/helper.go,cbd55db,Jinzhu,Add Update test,36,36,,,0,2020-03-07 07:20:09,
callbacks/helper.go,9fcc337,Jinzhu,Fix create from map,32,35,Jinzhu,4456df7,1,2020-08-17 09:41:36,2020-07-16 03:27:12
callbacks/helper.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),44,44,Jinzhu,835d7bd,0,2022-01-06 07:02:53,2021-10-27 23:56:55
callbacks/helper.go,15ce5b3,Jinzhu,Add create value converter,45,45,,,0,2020-02-20 02:12:10,
callbacks/helper.go,41ac73b,daheige,update comment for ConvertSliceOfMapToValuesForCreate func,46,46,heige,74e7a9c,0,2021-07-28 10:56:39,2021-04-14 05:00:54
callbacks/helper.go,d11c424,Jinzhu,Fix typo,17,17,Jinzhu,7bcd95d,1,2020-06-07 07:26:43,2020-04-19 15:11:56
callbacks/helper.go,74e7a9c,heige,"Optimize reflect value length and method (#4280)  * Respect ignore migration when add column (#4276)  continue https://github.com/go-gorm/gorm/pull/4028  * feat: Optimal value type acquisition for v (#4278)  * feat: optimize relect value length and value  * feat: optimize ConvertSliceOfMapToValuesForCreate method  Co-authored-by: yrong1997 <yrong1997@gmail.com>",47,47,Jinzhu,1e241aa,0,2021-04-14 05:00:54,2020-11-10 13:23:20
callbacks/helper.go,15ce5b3,Jinzhu,Add create value converter,58,59,,,0,2020-02-20 02:12:10,
callbacks/helper.go,15ce5b3,Jinzhu,Add create value converter,82,82,,,0,2020-02-20 02:12:10,
callbacks/helper.go,74e7a9c,heige,"Optimize reflect value length and method (#4280)  * Respect ignore migration when add column (#4276)  continue https://github.com/go-gorm/gorm/pull/4028  * feat: Optimal value type acquisition for v (#4278)  * feat: optimize relect value length and value  * feat: optimize ConvertSliceOfMapToValuesForCreate method  Co-authored-by: yrong1997 <yrong1997@gmail.com>",53,57,Jinzhu,1e241aa,0,2021-04-14 05:00:54,2020-11-10 13:23:20
callbacks/helper.go,15ce5b3,Jinzhu,Add create value converter,64,80,,,0,2020-02-20 02:12:10,
callbacks/helper.go,48b395b,Jinzhu,returns ErrEmptySlice when creating with zero length slice,48,52,Jinzhu,7a90496,0,2020-09-03 03:32:30,2020-08-27 08:27:59
callbacks/helper.go,15ce5b3,Jinzhu,Add create value converter,85,85,,,0,2020-02-20 02:12:10,
callbacks/helper.go,15ce5b3,Jinzhu,Add create value converter,87,88,,,0,2020-02-20 02:12:10,
callbacks/helper.go,15ce5b3,Jinzhu,Add create value converter,90,94,,,0,2020-02-20 02:12:10,
callbacks/helper.go,6a18a15,Jinzhu,Refactor check missing where condition,108,123,kinggo,b47cf57,0,2022-02-25 02:48:23,2022-01-06 07:02:53
callbacks/helper.go,835d7bd,Jinzhu,Add returning support to delete,95,107,daheige,41ac73b,0,2021-10-27 23:56:55,2021-07-28 10:56:39
callbacks/helper.go,9b9ae32,chenrui,"fix: circular reference save, close #5140  commit 2ac099a37ac7bd74f0a98a6fdc42cc8527404144 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 23:49:21 2022 +0800      Refactor #5140  commit 6e3ca2d1aa09943dcfb5d9a4b93bea28212f71be Author: a631807682 <631807682@qq.com> Date:   Sun Mar 13 12:52:08 2022 +0800      test: add test for LoadOrStoreVisitMap  commit 9d5c68e41000fd15dea124797dd5f2656bf6b304 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:33:47 2022 +0800      chore: add more comment  commit bfffefb179c883389b72bef8f04469c0a8418043 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:28:48 2022 +0800      fix: should check values has been saved instead of rel.Name  commit e55cdfa4b3fbcf8b80baf009e8ddb2e40d471494 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:48:01 2022 +0800      chore: go lint  commit fe4715c5bd4ac28950c97dded9848710d8becb88 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:27:24 2022 +0800      chore: add test comment  commit 326862f3f8980482a09d7d1a7f4d1011bb8a7c59 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:22:33 2022 +0800      fix: circular reference save",129,136,Jinzhu,f2edda5,1,2022-03-17 15:53:31,2022-02-27 00:40:15
callbacks/helper.go,9b9ae32,chenrui,"fix: circular reference save, close #5140  commit 2ac099a37ac7bd74f0a98a6fdc42cc8527404144 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 23:49:21 2022 +0800      Refactor #5140  commit 6e3ca2d1aa09943dcfb5d9a4b93bea28212f71be Author: a631807682 <631807682@qq.com> Date:   Sun Mar 13 12:52:08 2022 +0800      test: add test for LoadOrStoreVisitMap  commit 9d5c68e41000fd15dea124797dd5f2656bf6b304 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:33:47 2022 +0800      chore: add more comment  commit bfffefb179c883389b72bef8f04469c0a8418043 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:28:48 2022 +0800      fix: should check values has been saved instead of rel.Name  commit e55cdfa4b3fbcf8b80baf009e8ddb2e40d471494 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:48:01 2022 +0800      chore: go lint  commit fe4715c5bd4ac28950c97dded9848710d8becb88 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:27:24 2022 +0800      chore: add test comment  commit 326862f3f8980482a09d7d1a7f4d1011bb8a7c59 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:22:33 2022 +0800      fix: circular reference save",124,127,Jinzhu,f2edda5,1,2022-03-17 15:53:31,2022-02-27 00:40:15
callbacks/helper.go,e0ed3ce,ZhangShenao,fix spelling mistake (#5256)  Co-authored-by: Shenao Zhang <shenao.zhang@shopee.com>,128,128,chenrui,9b9ae32,1,2022-04-14 12:32:57,2022-03-17 15:53:31
callbacks/helper.go,e0ed3ce,ZhangShenao,fix spelling mistake (#5256)  Co-authored-by: Shenao Zhang <shenao.zhang@shopee.com>,137,137,chenrui,9b9ae32,1,2022-04-14 12:32:57,2022-03-17 15:53:31
callbacks/helper.go,7a90496,Jinzhu,Test create from sql expr with map,60,63,,,0,2020-08-27 08:27:59,
callbacks/helper.go,9b9ae32,chenrui,"fix: circular reference save, close #5140  commit 2ac099a37ac7bd74f0a98a6fdc42cc8527404144 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 23:49:21 2022 +0800      Refactor #5140  commit 6e3ca2d1aa09943dcfb5d9a4b93bea28212f71be Author: a631807682 <631807682@qq.com> Date:   Sun Mar 13 12:52:08 2022 +0800      test: add test for LoadOrStoreVisitMap  commit 9d5c68e41000fd15dea124797dd5f2656bf6b304 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:33:47 2022 +0800      chore: add more comment  commit bfffefb179c883389b72bef8f04469c0a8418043 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:28:48 2022 +0800      fix: should check values has been saved instead of rel.Name  commit e55cdfa4b3fbcf8b80baf009e8ddb2e40d471494 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:48:01 2022 +0800      chore: go lint  commit fe4715c5bd4ac28950c97dded9848710d8becb88 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:27:24 2022 +0800      chore: add test comment  commit 326862f3f8980482a09d7d1a7f4d1011bb8a7c59 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:22:33 2022 +0800      fix: circular reference save",138,143,Jinzhu,f2edda5,1,2022-03-17 15:53:31,2022-02-27 00:40:15
callbacks/helper.go,e0ed3ce,ZhangShenao,fix spelling mistake (#5256)  Co-authored-by: Shenao Zhang <shenao.zhang@shopee.com>,147,147,chenrui,9b9ae32,1,2022-04-14 12:32:57,2022-03-17 15:53:31
callbacks/helper.go,9b9ae32,chenrui,"fix: circular reference save, close #5140  commit 2ac099a37ac7bd74f0a98a6fdc42cc8527404144 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 23:49:21 2022 +0800      Refactor #5140  commit 6e3ca2d1aa09943dcfb5d9a4b93bea28212f71be Author: a631807682 <631807682@qq.com> Date:   Sun Mar 13 12:52:08 2022 +0800      test: add test for LoadOrStoreVisitMap  commit 9d5c68e41000fd15dea124797dd5f2656bf6b304 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:33:47 2022 +0800      chore: add more comment  commit bfffefb179c883389b72bef8f04469c0a8418043 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:28:48 2022 +0800      fix: should check values has been saved instead of rel.Name  commit e55cdfa4b3fbcf8b80baf009e8ddb2e40d471494 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:48:01 2022 +0800      chore: go lint  commit fe4715c5bd4ac28950c97dded9848710d8becb88 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:27:24 2022 +0800      chore: add test comment  commit 326862f3f8980482a09d7d1a7f4d1011bb8a7c59 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:22:33 2022 +0800      fix: circular reference save",145,146,Jinzhu,f2edda5,1,2022-03-17 15:53:31,2022-02-27 00:40:15
callbacks/helper.go,e0ed3ce,ZhangShenao,fix spelling mistake (#5256)  Co-authored-by: Shenao Zhang <shenao.zhang@shopee.com>,144,144,chenrui,9b9ae32,1,2022-04-14 12:32:57,2022-03-17 15:53:31
callbacks/helper.go,9b9ae32,chenrui,"fix: circular reference save, close #5140  commit 2ac099a37ac7bd74f0a98a6fdc42cc8527404144 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 23:49:21 2022 +0800      Refactor #5140  commit 6e3ca2d1aa09943dcfb5d9a4b93bea28212f71be Author: a631807682 <631807682@qq.com> Date:   Sun Mar 13 12:52:08 2022 +0800      test: add test for LoadOrStoreVisitMap  commit 9d5c68e41000fd15dea124797dd5f2656bf6b304 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:33:47 2022 +0800      chore: add more comment  commit bfffefb179c883389b72bef8f04469c0a8418043 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:28:48 2022 +0800      fix: should check values has been saved instead of rel.Name  commit e55cdfa4b3fbcf8b80baf009e8ddb2e40d471494 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:48:01 2022 +0800      chore: go lint  commit fe4715c5bd4ac28950c97dded9848710d8becb88 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:27:24 2022 +0800      chore: add test comment  commit 326862f3f8980482a09d7d1a7f4d1011bb8a7c59 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:22:33 2022 +0800      fix: circular reference save",148,152,Jinzhu,f2edda5,1,2022-03-17 15:53:31,2022-02-27 00:40:15
callbacks/helper.go,9fcc337,Jinzhu,Fix create from map,81,81,,,1,2020-08-17 09:41:36,
callbacks/helper.go,9fcc337,Jinzhu,Fix create from map,89,89,,,1,2020-08-17 09:41:36,
callbacks/helper.go,9fcc337,Jinzhu,Fix create from map,86,86,,,1,2020-08-17 09:41:36,
callbacks/helper.go,9fcc337,Jinzhu,Fix create from map,83,84,,,1,2020-08-17 09:41:36,
callbacks/query.go,e2a360b,Jinzhu,Add Before/After callbacks,5,5,,,0,2020-02-23 13:22:35,
callbacks/query.go,41697d5,Jinzhu,Handle preload,6,6,,,0,2020-05-07 02:03:48,
callbacks/query.go,46b1c85,Jinzhu,Add more clauses,3,3,,,0,2020-02-04 00:56:15,
callbacks/query.go,50aa9be,Jinzhu,Add joins support,4,4,,,0,2020-04-15 01:45:43,
callbacks/query.go,e986371,Jinzhu,Rename package name,8,9,,,0,2020-06-02 01:18:01,
callbacks/query.go,e2a360b,Jinzhu,Add Before/After callbacks,7,7,,,0,2020-02-23 13:22:35,
callbacks/query.go,d833efe,Jinzhu,Work on clauses,1,2,,,0,2020-02-02 11:11:17,
callbacks/query.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",10,11,Michael Anstis,532e9cf,1,2023-03-10 09:21:56,2023-02-18 01:06:43
callbacks/query.go,46b1c85,Jinzhu,Add more clauses,12,12,,,0,2020-02-04 00:56:15,
callbacks/query.go,befef0c,Jinzhu,Improve Hooks,15,15,,,0,2020-05-31 16:12:20,
callbacks/query.go,d833efe,Jinzhu,Work on clauses,13,14,,,0,2020-02-02 11:11:17,
callbacks/query.go,4e147e1,Jinzhu,Test SubQuery,19,23,,,0,2020-06-01 13:26:23,
callbacks/query.go,50aa9be,Jinzhu,Add joins support,17,17,,,0,2020-04-15 01:45:43,
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",16,16,Jinzhu,ce8853e,1,2020-11-04 03:03:22,2020-08-27 07:03:57
callbacks/query.go,69d8111,Jinzhu,"Fix panic when using invalid data, close #3193",18,18,,,1,2020-07-24 00:32:50,
callbacks/query.go,4e147e1,Jinzhu,Test SubQuery,28,28,,,0,2020-06-01 13:26:23,
callbacks/query.go,af3fbdc,Jinzhu,Improve returning support,27,27,kinggo,418c60c,0,2021-10-26 14:40:14,2021-10-09 08:55:45
callbacks/query.go,ea8509b,Jinzhu,Use defer to close rows to avoid scan panic leak rows,24,26,chenrui,5431da8,0,2022-03-29 10:48:32,2022-03-18 05:38:46
callbacks/query.go,befef0c,Jinzhu,Improve Hooks,29,29,,,0,2020-05-31 16:12:20,
callbacks/query.go,749ca37,Jinzhu,Add sql builder test,30,32,,,0,2020-05-31 11:23:32,
callbacks/query.go,24026bf,liweitingwt,"modify unscoped judge (#4929)  * modify unscoped judge  * modify unscoped judge  Co-authored-by: liweiting <liweiting1995@gmail.com>",33,33,kinggo,e5bdd61,0,2021-12-16 02:41:34,2021-12-08 05:58:06
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",34,35,Jinzhu,ce8853e,1,2020-11-04 03:03:22,2020-08-27 07:03:57
callbacks/query.go,1559fe2,Jinzhu,Add more updates test,36,38,,,0,2020-06-01 11:41:33,
callbacks/query.go,e5bdd61,kinggo,"fix: save not use soft_delete (#4897)  * fix: Save not use soft_delete  * fix: save not use soft_delete  * fix: save not use soft_delete  * fix: save not use soft_delete  Co-authored-by: kinggo <>",39,39,Jinzhu,300a23f,1,2021-12-08 05:58:06,2021-12-02 02:39:24
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",47,48,Jinzhu,ce8853e,1,2020-11-04 03:03:22,2020-08-27 07:03:57
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",50,52,Jinzhu,ce8853e,1,2020-11-04 03:03:22,2020-08-27 07:03:57
callbacks/query.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",46,46,li-jin-gou,c0bea44,1,2022-02-19 09:02:53,2022-01-28 14:16:42
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",40,45,Jinzhu,ce8853e,1,2020-11-04 03:03:22,2020-08-27 07:03:57
callbacks/query.go,50aa9be,Jinzhu,Add joins support,49,49,,,0,2020-04-15 01:45:43,
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",56,71,Jinzhu,ce8853e,1,2020-11-04 03:03:22,2020-08-27 07:03:57
callbacks/query.go,a8655f7,Jinzhu,Fix auto select with smaller struct for slices,55,55,,,1,2020-07-09 04:15:35,
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",73,75,Jinzhu,ce8853e,1,2020-11-04 03:03:22,2020-08-27 07:03:57
callbacks/query.go,a0477f9,Jinzhu,"Allow Omit with Query, close #3165",53,54,,,0,2020-07-19 13:48:58,
callbacks/query.go,dec8748,Jinzhu,Refactor QueryFields Option,76,77,Luis Guillermo Gómez,47ffd0b,0,2020-11-20 07:44:39,2020-11-20 07:38:25
callbacks/query.go,47ffd0b,Luis Guillermo Gómez,"Select all fields in SQL queries avoiding the SELECT * FROM (#3731)  * Select all fields in SQL queries avoiding the SELECT * FROM  * Select table name with fields in SQL queries  * Use QueryFields to execute the SQL query with all fields of the table",72,72,Jinzhu,9df9f76,0,2020-11-20 07:38:25,2020-11-17 09:49:43
callbacks/query.go,47ffd0b,Luis Guillermo Gómez,"Select all fields in SQL queries avoiding the SELECT * FROM (#3731)  * Select all fields in SQL queries avoiding the SELECT * FROM  * Select table name with fields in SQL queries  * Use QueryFields to execute the SQL query with all fields of the table",78,79,Jinzhu,9df9f76,0,2020-11-20 07:38:25,2020-11-17 09:49:43
callbacks/query.go,dec8748,Jinzhu,Refactor QueryFields Option,80,80,Luis Guillermo Gómez,47ffd0b,0,2020-11-20 07:44:39,2020-11-20 07:38:25
callbacks/query.go,dec8748,Jinzhu,Refactor QueryFields Option,82,82,Luis Guillermo Gómez,47ffd0b,0,2020-11-20 07:44:39,2020-11-20 07:38:25
callbacks/query.go,47ffd0b,Luis Guillermo Gómez,"Select all fields in SQL queries avoiding the SELECT * FROM (#3731)  * Select all fields in SQL queries avoiding the SELECT * FROM  * Select table name with fields in SQL queries  * Use QueryFields to execute the SQL query with all fields of the table",81,81,Jinzhu,9df9f76,0,2020-11-20 07:38:25,2020-11-17 09:49:43
callbacks/query.go,dec8748,Jinzhu,Refactor QueryFields Option,84,84,Luis Guillermo Gómez,47ffd0b,0,2020-11-20 07:44:39,2020-11-20 07:38:25
callbacks/query.go,47ffd0b,Luis Guillermo Gómez,"Select all fields in SQL queries avoiding the SELECT * FROM (#3731)  * Select all fields in SQL queries avoiding the SELECT * FROM  * Select table name with fields in SQL queries  * Use QueryFields to execute the SQL query with all fields of the table",83,83,Jinzhu,9df9f76,0,2020-11-20 07:38:25,2020-11-17 09:49:43
callbacks/query.go,dec8748,Jinzhu,Refactor QueryFields Option,86,86,Luis Guillermo Gómez,47ffd0b,0,2020-11-20 07:44:39,2020-11-20 07:38:25
callbacks/query.go,47ffd0b,Luis Guillermo Gómez,"Select all fields in SQL queries avoiding the SELECT * FROM (#3731)  * Select all fields in SQL queries avoiding the SELECT * FROM  * Select table name with fields in SQL queries  * Use QueryFields to execute the SQL query with all fields of the table",85,85,Jinzhu,9df9f76,0,2020-11-20 07:38:25,2020-11-17 09:49:43
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",90,90,Jinzhu,ce8853e,1,2020-11-04 03:03:22,2020-08-27 07:03:57
callbacks/query.go,dec8748,Jinzhu,Refactor QueryFields Option,89,89,Luis Guillermo Gómez,47ffd0b,0,2020-11-20 07:44:39,2020-11-20 07:38:25
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",87,88,Jinzhu,ce8853e,1,2020-11-04 03:03:22,2020-08-27 07:03:57
callbacks/query.go,9075b33,Jinzhu,Query with smaller struct,91,91,,,0,2020-07-01 00:56:21,
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",92,92,Jinzhu,ce8853e,1,2020-11-04 03:03:22,2020-08-27 07:03:57
callbacks/query.go,47ffd0b,Luis Guillermo Gómez,"Select all fields in SQL queries avoiding the SELECT * FROM (#3731)  * Select all fields in SQL queries avoiding the SELECT * FROM  * Select table name with fields in SQL queries  * Use QueryFields to execute the SQL query with all fields of the table",93,93,Jinzhu,9df9f76,0,2020-11-20 07:38:25,2020-11-17 09:49:43
callbacks/query.go,9075b33,Jinzhu,Query with smaller struct,96,97,,,0,2020-07-01 00:56:21,
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",94,94,Jinzhu,ce8853e,1,2020-11-04 03:03:22,2020-08-27 07:03:57
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",99,99,Jinzhu,ce8853e,1,2020-11-04 03:03:22,2020-08-27 07:03:57
callbacks/query.go,a8655f7,Jinzhu,Fix auto select with smaller struct for slices,95,95,,,1,2020-07-09 04:15:35,
callbacks/query.go,38a2460,huangcheng1,"fix: tables lost when joins exists in from clause, close #5218  commit 7f6a603afa26820e187489b5203f93adc513687c Author: Jinzhu <wosmvp@gmail.com> Date:   Sat Apr 2 17:26:48 2022 +0800      Refactor #5218  commit 95d00e6ff2668233f3eca98aa4917291e3d869bd Author: huangcheng1 <huangcheng1@sensetime.com> Date:   Fri Apr 1 16:30:27 2022 +0800      fix: tables lost when joins exists in from clause",100,102,Jinzhu,ea8509b,1,2022-04-02 09:27:53,2022-03-29 10:48:32
callbacks/query.go,749ca37,Jinzhu,Add sql builder test,98,98,,,0,2020-05-31 11:23:32,
callbacks/query.go,418c60c,kinggo,fixed: clauseSelect.Columns missed when use Join And execute multiple query. (#4757),103,104,Jinzhu,a16db07,1,2021-10-09 08:55:45,2021-09-07 13:21:44
callbacks/query.go,c0bea44,li-jin-gou,fix: omit not work when use join (#5034),106,106,liweitingwt,24026bf,1,2022-01-28 14:16:42,2021-12-16 02:41:34
callbacks/query.go,38a2460,huangcheng1,"fix: tables lost when joins exists in from clause, close #5218  commit 7f6a603afa26820e187489b5203f93adc513687c Author: Jinzhu <wosmvp@gmail.com> Date:   Sat Apr 2 17:26:48 2022 +0800      Refactor #5218  commit 95d00e6ff2668233f3eca98aa4917291e3d869bd Author: huangcheng1 <huangcheng1@sensetime.com> Date:   Fri Apr 1 16:30:27 2022 +0800      fix: tables lost when joins exists in from clause",105,105,Jinzhu,ea8509b,1,2022-04-02 09:27:53,2022-03-29 10:48:32
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",107,110,Jinzhu,ce8853e,1,2020-11-04 03:03:22,2020-08-27 07:03:57
callbacks/query.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",113,113,Michael Anstis,532e9cf,1,2023-03-10 09:21:56,2023-02-18 01:06:43
callbacks/query.go,50aa9be,Jinzhu,Add joins support,112,112,,,0,2020-04-15 01:45:43,
callbacks/query.go,749ca37,Jinzhu,Add sql builder test,111,111,,,0,2020-05-31 11:23:32,
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",114,114,Jinzhu,ce8853e,1,2020-11-04 03:03:22,2020-08-27 07:03:57
callbacks/query.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",115,138,Michael Anstis,532e9cf,1,2023-03-10 09:21:56,2023-02-18 01:06:43
callbacks/query.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",140,143,Michael Anstis,532e9cf,1,2023-03-10 09:21:56,2023-02-18 01:06:43
callbacks/query.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",147,151,Michael Anstis,532e9cf,1,2023-03-10 09:21:56,2023-02-18 01:06:43
callbacks/query.go,db428f2,Jinzhu,Fix postgres tests,146,146,,,1,2020-05-29 16:18:22,
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",145,145,Jinzhu,ce8853e,1,2020-11-04 03:03:22,2020-08-27 07:03:57
callbacks/query.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",153,166,Michael Anstis,532e9cf,1,2023-03-10 09:21:56,2023-02-18 01:06:43
callbacks/query.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",168,188,Michael Anstis,532e9cf,1,2023-03-10 09:21:56,2023-02-18 01:06:43
callbacks/query.go,a16db07,Jinzhu,Refactor Join ON,152,152,Adrien Carreira,c301aeb,0,2021-09-07 13:21:44,2021-09-06 12:13:20
callbacks/query.go,aaf0725,Jinzhu,Refactor for performance,190,190,,,0,2020-06-08 09:21:26,
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",167,167,Jinzhu,ce8853e,1,2020-11-04 03:03:22,2020-08-27 07:03:57
callbacks/query.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",192,196,Michael Anstis,532e9cf,1,2023-03-10 09:21:56,2023-02-18 01:06:43
callbacks/query.go,a16db07,Jinzhu,Refactor Join ON,191,191,ruozhixian,c575a4e,0,2021-09-07 13:21:44,2021-03-11 08:36:49
callbacks/query.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",198,200,Michael Anstis,532e9cf,1,2023-03-10 09:21:56,2023-02-18 01:06:43
callbacks/query.go,c2e36eb,chenrui,"fix: soft delete for join, close #5132  commit a83023bdfc0dc6eaccc6704b64ff6436c2fe7725 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 01:05:25 2022 +0800      Refactor #5132  commit 8559f51102c01be6c19913c0bc3a5771721ff1f5 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 20:33:12 2022 +0800      fix: should add deleted_at exprs for every joins  commit 2b7a1bdcf3eff9d23253173d21e73c1f056f9be4 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 14:46:48 2022 +0800      test: move debug flag  commit ce13a2a7bc50d2c23678806acf65dbd589827c77 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 14:39:56 2022 +0800      fix: soft delete for join.on",201,201,Jinzhu,39d84cb,1,2022-03-17 17:09:20,2022-02-19 09:02:53
callbacks/query.go,52cc438,Adrien Carreira,JoinsOn unit test + use all primary keys,197,197,ruozhixian,c575a4e,0,2021-09-06 12:13:20,2021-03-11 08:36:49
callbacks/query.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",202,204,Michael Anstis,532e9cf,1,2023-03-10 09:21:56,2023-02-18 01:06:43
callbacks/query.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",206,217,Michael Anstis,532e9cf,1,2023-03-10 09:21:56,2023-02-18 01:06:43
callbacks/query.go,c2e36eb,chenrui,"fix: soft delete for join, close #5132  commit a83023bdfc0dc6eaccc6704b64ff6436c2fe7725 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 01:05:25 2022 +0800      Refactor #5132  commit 8559f51102c01be6c19913c0bc3a5771721ff1f5 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 20:33:12 2022 +0800      fix: should add deleted_at exprs for every joins  commit 2b7a1bdcf3eff9d23253173d21e73c1f056f9be4 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 14:46:48 2022 +0800      test: move debug flag  commit ce13a2a7bc50d2c23678806acf65dbd589827c77 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 14:39:56 2022 +0800      fix: soft delete for join.on",205,205,Jinzhu,39d84cb,1,2022-03-17 17:09:20,2022-02-19 09:02:53
callbacks/query.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",220,225,Michael Anstis,532e9cf,1,2023-03-10 09:21:56,2023-02-18 01:06:43
callbacks/query.go,b2f4252,Cr,"fix(Joins): args with select and omit (#5790)  * fix(Joins): args with select and omit  * chore: gofumpt style",144,144,Adrien Carreira,c301aeb,1,2022-11-02 02:28:00,2021-09-06 12:13:20
callbacks/query.go,b2f4252,Cr,"fix(Joins): args with select and omit (#5790)  * fix(Joins): args with select and omit  * chore: gofumpt style",139,139,Adrien Carreira,c301aeb,1,2022-11-02 02:28:00,2021-09-06 12:13:20
callbacks/query.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",242,247,Michael Anstis,532e9cf,1,2023-03-10 09:21:56,2023-02-18 01:06:43
callbacks/query.go,407beda,Cr,fix: nested joins alias (#6265),236,241,black-06,828e22b,1,2023-04-26 14:19:32,2023-04-11 05:10:38
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",189,189,,,1,2020-11-04 03:03:22,
callbacks/query.go,a16db07,Jinzhu,Refactor Join ON,227,227,Jinzhu,6951be0,0,2021-09-07 13:21:44,2021-04-28 09:19:30
callbacks/query.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",228,235,Michael Anstis,532e9cf,1,2023-03-10 09:21:56,2023-02-18 01:06:43
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",248,248,,,1,2020-11-04 03:03:22,
callbacks/query.go,38a2460,huangcheng1,"fix: tables lost when joins exists in from clause, close #5218  commit 7f6a603afa26820e187489b5203f93adc513687c Author: Jinzhu <wosmvp@gmail.com> Date:   Sat Apr 2 17:26:48 2022 +0800      Refactor #5218  commit 95d00e6ff2668233f3eca98aa4917291e3d869bd Author: huangcheng1 <huangcheng1@sensetime.com> Date:   Fri Apr 1 16:30:27 2022 +0800      fix: tables lost when joins exists in from clause",249,249,chenrui,c2e36eb,1,2022-04-02 09:27:53,2022-03-17 17:09:20
callbacks/query.go,50aa9be,Jinzhu,Add joins support,254,254,,,0,2020-04-15 01:45:43,
callbacks/query.go,38a2460,huangcheng1,"fix: tables lost when joins exists in from clause, close #5218  commit 7f6a603afa26820e187489b5203f93adc513687c Author: Jinzhu <wosmvp@gmail.com> Date:   Sat Apr 2 17:26:48 2022 +0800      Refactor #5218  commit 95d00e6ff2668233f3eca98aa4917291e3d869bd Author: huangcheng1 <huangcheng1@sensetime.com> Date:   Fri Apr 1 16:30:27 2022 +0800      fix: tables lost when joins exists in from clause",255,255,chenrui,c2e36eb,1,2022-04-02 09:27:53,2022-03-17 17:09:20
callbacks/query.go,749ca37,Jinzhu,Add sql builder test,253,253,,,0,2020-05-31 11:23:32,
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",251,252,,,1,2020-11-04 03:03:22,
callbacks/query.go,1403ee7,Jinzhu,Make Query works,261,261,,,0,2020-03-03 06:18:12,
callbacks/query.go,46b1c85,Jinzhu,Add more clauses,259,259,,,0,2020-02-04 00:56:15,
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",256,258,,,1,2020-11-04 03:03:22,
callbacks/query.go,d833efe,Jinzhu,Work on clauses,264,266,,,0,2020-02-02 11:11:17,
callbacks/query.go,e195292,Jinzhu,"Support named Joins, close #3833",250,250,,,0,2020-12-07 02:31:06,
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",260,260,,,1,2020-11-04 03:03:22,
callbacks/query.go,418ee3f,black-06,"fix: preload shouldn't overwrite the value of join (#6771)  * fix: preload shouldn't overwrite the value of join  * fix lint  * fix: join may automatically add nested query",273,275,Cr,407beda,1,2024-01-29 03:34:57,2023-04-26 14:19:32
callbacks/query.go,aaf0725,Jinzhu,Refactor for performance,267,267,,,0,2020-06-08 09:21:26,
callbacks/query.go,aaf0725,Jinzhu,Refactor for performance,276,276,,,0,2020-06-08 09:21:26,
callbacks/query.go,c2e36eb,chenrui,"fix: soft delete for join, close #5132  commit a83023bdfc0dc6eaccc6704b64ff6436c2fe7725 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 01:05:25 2022 +0800      Refactor #5132  commit 8559f51102c01be6c19913c0bc3a5771721ff1f5 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 20:33:12 2022 +0800      fix: should add deleted_at exprs for every joins  commit 2b7a1bdcf3eff9d23253173d21e73c1f056f9be4 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 14:46:48 2022 +0800      test: move debug flag  commit ce13a2a7bc50d2c23678806acf65dbd589827c77 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 14:39:56 2022 +0800      fix: soft delete for join.on",226,226,ruozhixian,c575a4e,1,2022-03-17 17:09:20,2021-03-11 08:36:49
callbacks/query.go,418ee3f,black-06,"fix: preload shouldn't overwrite the value of join (#6771)  * fix: preload shouldn't overwrite the value of join  * fix lint  * fix: join may automatically add nested query",278,279,Cr,407beda,1,2024-01-29 03:34:57,2023-04-26 14:19:32
callbacks/query.go,aaf0725,Jinzhu,Refactor for performance,277,277,,,0,2020-06-08 09:21:26,
callbacks/query.go,41697d5,Jinzhu,Handle preload,284,284,,,0,2020-05-07 02:03:48,
callbacks/query.go,418ee3f,black-06,"fix: preload shouldn't overwrite the value of join (#6771)  * fix: preload shouldn't overwrite the value of join  * fix lint  * fix: join may automatically add nested query",282,283,Cr,407beda,1,2024-01-29 03:34:57,2023-04-26 14:19:32
callbacks/query.go,d833efe,Jinzhu,Work on clauses,285,287,,,0,2020-02-02 11:11:17,
callbacks/query.go,418ee3f,black-06,"fix: preload shouldn't overwrite the value of join (#6771)  * fix: preload shouldn't overwrite the value of join  * fix lint  * fix: join may automatically add nested query",288,288,Cr,407beda,1,2024-01-29 03:34:57,2023-04-26 14:19:32
callbacks/query.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",263,263,,,1,2020-11-04 03:03:22,
callbacks/query.go,9c4070e,贾一饼,fix: AfterQuery should clear FROM Clause's Joins rather than the Statement (#7027),289,290,black-06,418ee3f,1,2024-06-12 09:51:44,2024-01-29 03:34:57
callbacks/query.go,0daaf17,abhijeet45,fix: AfterQuery using safer right trim while clearing from clause's join added as part of https://github.com/go-gorm/gorm/pull/7027 (#7153)  Co-authored-by: Abhijeet Bhowmik <abhijeet.bhowmik@cambiumnetworks.com>,291,291,贾一饼,9c4070e,1,2024-08-22 11:03:42,2024-06-12 09:51:44
callbacks/query.go,c2e36eb,chenrui,"fix: soft delete for join, close #5132  commit a83023bdfc0dc6eaccc6704b64ff6436c2fe7725 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 01:05:25 2022 +0800      Refactor #5132  commit 8559f51102c01be6c19913c0bc3a5771721ff1f5 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 20:33:12 2022 +0800      fix: should add deleted_at exprs for every joins  commit 2b7a1bdcf3eff9d23253173d21e73c1f056f9be4 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 14:46:48 2022 +0800      test: move debug flag  commit ce13a2a7bc50d2c23678806acf65dbd589827c77 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 14:39:56 2022 +0800      fix: soft delete for join.on",218,219,ruozhixian,c575a4e,1,2022-03-17 17:09:20,2021-03-11 08:36:49
callbacks/query.go,9c4070e,贾一饼,fix: AfterQuery should clear FROM Clause's Joins rather than the Statement (#7027),292,293,black-06,418ee3f,1,2024-06-12 09:51:44,2024-01-29 03:34:57
callbacks/query.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,295,295,,,0,2020-06-05 15:26:56,
callbacks/query.go,ce8853e,Jinzhu,Add GormValuer interface support,296,296,,,0,2020-08-27 07:03:57,
callbacks/query.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,297,298,,,0,2020-06-05 15:26:56,
callbacks/query.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,301,301,,,0,2020-06-05 15:26:56,
callbacks/query.go,e2a360b,Jinzhu,Add Before/After callbacks,299,300,,,0,2020-02-23 13:22:35,
callbacks/query.go,e2a360b,Jinzhu,Add Before/After callbacks,302,302,,,0,2020-02-23 13:22:35,
callbacks/query.go,d833efe,Jinzhu,Work on clauses,303,303,,,0,2020-02-02 11:11:17,
callbacks/query.go,6951be0,Jinzhu,Allow customize clauses,262,262,,,0,2021-04-28 09:19:30,
callbacks/query.go,4373aa0,Jinzhu,"Don't call AfterFind hooks if no record found, close #4048",294,294,,,0,2021-02-07 04:44:59,
callbacks/query.go,6befa0c,Jinzhu,Refactor preload error check,268,272,,,1,2022-03-17 03:22:25,
callbacks/query.go,5431da8,chenrui,fix: preload panic when model and dest different close #5130  commit e8307b5ef5273519a32cd8e4fd29250d1c277f6e Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 13:37:22 2022 +0800      Refactor #5130  commit 40cbba49f374c9bae54f80daee16697ae45e905b Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:36:56 2022 +0800      test: fix test fail  commit 66d3f078291102a30532b6a9d97c757228a9b543 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:29:09 2022 +0800      test: drop table and auto migrate  commit 7cbf019a930019476a97ac7ac0f5fc186e8d5b42 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 15:27:45 2022 +0800      fix: preload panic when model and dest different,280,281,,,1,2022-03-18 05:38:46,
callbacks/delete.go,e2a360b,Jinzhu,Add Before/After callbacks,3,4,Jinzhu,728c0d4,0,2020-02-23 13:22:35,2020-02-02 12:05:10
callbacks/delete.go,728c0d4,Jinzhu,Add callbacks,1,2,,,0,2020-02-02 12:05:10,
callbacks/delete.go,e2a360b,Jinzhu,Add Before/After callbacks,6,6,Jinzhu,728c0d4,0,2020-02-23 13:22:35,2020-02-02 12:05:10
callbacks/delete.go,a932175,Jinzhu,Refactor cascade delete associations,5,5,Jinzhu,06d534d,0,2020-09-15 06:28:26,2020-09-15 04:41:45
callbacks/delete.go,835d7bd,Jinzhu,Add returning support to delete,10,10,Jinzhu,6951be0,0,2021-10-27 23:56:55,2021-04-28 09:19:30
callbacks/delete.go,e986371,Jinzhu,Rename package name,7,9,Jinzhu,4e147e1,0,2020-06-02 01:18:01,2020-06-01 13:26:23
callbacks/delete.go,e2a360b,Jinzhu,Add Before/After callbacks,11,11,Jinzhu,728c0d4,0,2020-02-23 13:22:35,2020-02-02 12:05:10
callbacks/delete.go,728c0d4,Jinzhu,Add callbacks,12,13,,,0,2020-02-02 12:05:10,
callbacks/delete.go,ce8853e,Jinzhu,Add GormValuer interface support,16,16,Jinzhu,3dfa8a6,0,2020-08-27 07:03:57,2020-08-25 09:27:28
callbacks/delete.go,9df9f76,Jinzhu,Change UpdatingColumn to SkipHooks,14,14,Jinzhu,26504f5,0,2020-11-17 09:49:43,2020-11-17 08:28:37
callbacks/delete.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,15,15,Jinzhu,163200d,0,2020-06-05 15:26:56,2020-06-05 12:24:15
callbacks/delete.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,17,18,Jinzhu,163200d,0,2020-06-05 15:26:56,2020-06-05 12:24:15
callbacks/delete.go,e2a360b,Jinzhu,Add Before/After callbacks,20,20,Jinzhu,728c0d4,0,2020-02-23 13:22:35,2020-02-02 12:05:10
callbacks/delete.go,e2a360b,Jinzhu,Add Before/After callbacks,19,19,Jinzhu,728c0d4,0,2020-02-23 13:22:35,2020-02-02 12:05:10
callbacks/delete.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,21,22,Jinzhu,163200d,0,2020-06-05 15:26:56,2020-06-05 12:24:15
callbacks/delete.go,728c0d4,Jinzhu,Add callbacks,24,25,,,0,2020-02-02 12:05:10,
callbacks/delete.go,e2a360b,Jinzhu,Add Before/After callbacks,23,23,Jinzhu,728c0d4,0,2020-02-23 13:22:35,2020-02-02 12:05:10
callbacks/delete.go,70a7bd5,Jinzhu,Support delete associations with Select when deleting,26,28,Jinzhu,ce8853e,0,2020-09-10 13:46:18,2020-08-27 07:03:57
callbacks/delete.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",29,41,Jinzhu,835d7bd,0,2021-11-04 05:45:44,2021-10-27 23:56:55
callbacks/delete.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",45,45,kinggo,e5bdd61,1,2022-02-19 09:02:53,2021-12-08 05:58:06
callbacks/delete.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",43,44,Jinzhu,835d7bd,0,2021-11-04 05:45:44,2021-10-27 23:56:55
callbacks/delete.go,70a7bd5,Jinzhu,Support delete associations with Select when deleting,42,42,Jinzhu,ce8853e,0,2020-09-10 13:46:18,2020-08-27 07:03:57
callbacks/delete.go,70a7bd5,Jinzhu,Support delete associations with Select when deleting,60,61,Jinzhu,ce8853e,0,2020-09-10 13:46:18,2020-08-27 07:03:57
callbacks/delete.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",62,99,Jinzhu,835d7bd,0,2021-11-04 05:45:44,2021-10-27 23:56:55
callbacks/delete.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",46,59,Jinzhu,835d7bd,0,2021-11-04 05:45:44,2021-10-27 23:56:55
callbacks/delete.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",100,100,kinggo,e5bdd61,1,2022-02-19 09:02:53,2021-12-08 05:58:06
callbacks/delete.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",101,105,Jinzhu,835d7bd,0,2021-11-04 05:45:44,2021-10-27 23:56:55
callbacks/delete.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",109,109,Jinzhu,835d7bd,0,2021-11-04 05:45:44,2021-10-27 23:56:55
callbacks/delete.go,6a18a15,Jinzhu,Refactor check missing where condition,121,126,Jinzhu,39d84cb,0,2022-02-25 02:48:23,2022-02-19 09:02:53
callbacks/delete.go,835d7bd,Jinzhu,Add returning support to delete,113,120,Jinzhu,6951be0,0,2021-10-27 23:56:55,2021-04-28 09:19:30
callbacks/delete.go,70a7bd5,Jinzhu,Support delete associations with Select when deleting,110,112,Jinzhu,ebdb4ed,0,2020-09-10 13:46:18,2020-08-23 12:08:23
callbacks/delete.go,70a7bd5,Jinzhu,Support delete associations with Select when deleting,106,108,Jinzhu,ebdb4ed,0,2020-09-10 13:46:18,2020-08-23 12:08:23
callbacks/delete.go,ce0e6f9,Jinzhu,Add Delete test,130,130,,,0,2020-03-08 06:51:52,
callbacks/delete.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",132,132,kinggo,e5bdd61,1,2022-02-19 09:02:53,2021-12-08 05:58:06
callbacks/delete.go,befef0c,Jinzhu,Improve Hooks,129,129,,,0,2020-05-31 16:12:20,
callbacks/delete.go,e5bdd61,kinggo,"fix: save not use soft_delete (#4897)  * fix: Save not use soft_delete  * fix: save not use soft_delete  * fix: save not use soft_delete  * fix: save not use soft_delete  Co-authored-by: kinggo <>",127,127,Jinzhu,2ae0653,1,2021-12-08 05:58:06,2020-07-09 01:03:48
callbacks/delete.go,ce0e6f9,Jinzhu,Add Delete test,137,137,,,0,2020-03-08 06:51:52,
callbacks/delete.go,dea48a8,Jinzhu,Test Many2Many Association,134,135,,,0,2020-05-25 16:16:44,
callbacks/delete.go,befef0c,Jinzhu,Improve Hooks,131,131,,,0,2020-05-31 16:12:20,
callbacks/delete.go,5507421,Jinzhu,Add SoftDelete support,136,136,,,0,2020-05-28 23:35:45,
callbacks/delete.go,9f19378,Jinzhu,Grow SQL capacity to reduce allocation,128,128,,,0,2020-06-08 12:23:47,
callbacks/delete.go,3dfa8a6,Jinzhu,"Fix panic when delet without pointer, close #3308",139,139,,,1,2020-08-25 09:27:28,
callbacks/delete.go,ce0e6f9,Jinzhu,Add Delete test,147,147,,,0,2020-03-08 06:51:52,
callbacks/delete.go,e5bdd61,kinggo,"fix: save not use soft_delete (#4897)  * fix: Save not use soft_delete  * fix: save not use soft_delete  * fix: save not use soft_delete  * fix: save not use soft_delete  Co-authored-by: kinggo <>",150,150,Jinzhu,300a23f,1,2021-12-08 05:58:06,2021-12-02 02:39:24
callbacks/delete.go,ce0e6f9,Jinzhu,Add Delete test,148,148,,,0,2020-03-08 06:51:52,
callbacks/delete.go,befef0c,Jinzhu,Improve Hooks,149,149,,,0,2020-05-31 16:12:20,
callbacks/delete.go,befef0c,Jinzhu,Improve Hooks,142,146,,,0,2020-05-31 16:12:20,
callbacks/delete.go,33c4861,Jinzhu,"Fix customize table with Delete, close #3129",133,133,,,1,2020-07-10 05:08:29,
callbacks/delete.go,befef0c,Jinzhu,Improve Hooks,138,138,,,0,2020-05-31 16:12:20,
callbacks/delete.go,6a18a15,Jinzhu,Refactor check missing where condition,154,154,Jinzhu,39d84cb,0,2022-02-25 02:48:23,2022-02-19 09:02:53
callbacks/delete.go,ce0e6f9,Jinzhu,Add Delete test,153,153,,,0,2020-03-08 06:51:52,
callbacks/delete.go,835d7bd,Jinzhu,Add returning support to delete,159,162,Jinzhu,6951be0,0,2021-10-27 23:56:55,2021-04-28 09:19:30
callbacks/delete.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",157,158,heige,4c8810a,0,2021-11-29 01:33:20,2021-11-04 05:45:44
callbacks/delete.go,33c4861,Jinzhu,"Fix customize table with Delete, close #3129",141,141,,,1,2020-07-10 05:08:29,
callbacks/delete.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",140,140,Jinzhu,ebdb4ed,1,2022-02-19 09:02:53,2020-08-23 12:08:23
callbacks/delete.go,300a23f,Jinzhu,"Check rows.Close error, close #4891",169,169,heige,9d5f315,1,2021-12-02 02:39:24,2021-11-29 01:33:20
callbacks/delete.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",163,168,heige,4c8810a,0,2021-11-29 01:33:20,2021-11-04 05:45:44
callbacks/delete.go,728c0d4,Jinzhu,Add callbacks,173,175,,,0,2020-02-02 12:05:10,
callbacks/delete.go,befef0c,Jinzhu,Improve Hooks,152,152,,,0,2020-05-31 16:12:20,
callbacks/delete.go,ce0e6f9,Jinzhu,Add Delete test,172,172,,,0,2020-03-08 06:51:52,
callbacks/delete.go,befef0c,Jinzhu,Improve Hooks,171,171,,,0,2020-05-31 16:12:20,
callbacks/delete.go,4e147e1,Jinzhu,Test SubQuery,170,170,,,0,2020-06-01 13:26:23,
callbacks/delete.go,e2a360b,Jinzhu,Add Before/After callbacks,181,182,,,0,2020-02-23 13:22:35,
callbacks/delete.go,6951be0,Jinzhu,Allow customize clauses,151,151,Jinzhu,befef0c,0,2021-04-28 09:19:30,2020-05-31 16:12:20
callbacks/delete.go,e2a360b,Jinzhu,Add Before/After callbacks,184,184,,,0,2020-02-23 13:22:35,
callbacks/delete.go,3dfa8a6,Jinzhu,"Fix panic when delet without pointer, close #3308",155,155,,,1,2020-08-25 09:27:28,
callbacks/delete.go,728c0d4,Jinzhu,Add callbacks,185,185,,,0,2020-02-02 12:05:10,
callbacks/delete.go,69d8111,Jinzhu,"Fix panic when using invalid data, close #3193",156,156,,,1,2020-07-24 00:32:50,
callbacks/delete.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,177,177,,,0,2020-06-05 15:26:56,
callbacks/delete.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,183,183,,,0,2020-06-05 15:26:56,
callbacks/delete.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,179,180,,,0,2020-06-05 15:26:56,
callbacks/delete.go,9df9f76,Jinzhu,Change UpdatingColumn to SkipHooks,176,176,,,0,2020-11-17 09:49:43,
callbacks/delete.go,ce8853e,Jinzhu,Add GormValuer interface support,178,178,,,0,2020-08-27 07:03:57,
clause/benchmarks_test.go,9fcc546,Jinzhu,Fix tests,14,14,Jinzhu,e2a360b,1,2020-02-26 11:06:42,2020-02-23 13:22:35
clause/benchmarks_test.go,c1afe19,Jinzhu,Add benchmark tests for clause,1,6,,,0,2020-02-13 16:09:44,
clause/benchmarks_test.go,c1afe19,Jinzhu,Add benchmark tests for clause,31,31,,,0,2020-02-13 16:09:44,
clause/benchmarks_test.go,9fcc546,Jinzhu,Fix tests,30,30,Jinzhu,e2a360b,1,2020-02-26 11:06:42,2020-02-23 13:22:35
clause/benchmarks_test.go,c1afe19,Jinzhu,Add benchmark tests for clause,11,13,,,0,2020-02-13 16:09:44,
clause/benchmarks_test.go,c1afe19,Jinzhu,Add benchmark tests for clause,15,29,,,0,2020-02-13 16:09:44,
clause/benchmarks_test.go,e986371,Jinzhu,Rename package name,7,9,Jinzhu,a158d1a,0,2020-06-02 01:18:01,2020-03-08 10:05:22
clause/benchmarks_test.go,8bb05a5,Jinzhu,Refactor tests files,10,10,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
clause/benchmarks_test.go,e8f48b5,robhafner,fix: limit=0 results (#5735) (#5736),32,32,kinggo,b47cf57,1,2022-10-07 12:14:14,2022-01-06 07:02:53
clause/benchmarks_test.go,c1afe19,Jinzhu,Add benchmark tests for clause,33,35,,,0,2020-02-13 16:09:44,
clause/benchmarks_test.go,c1afe19,Jinzhu,Add benchmark tests for clause,38,45,,,0,2020-02-13 16:09:44,
clause/benchmarks_test.go,a158d1a,Jinzhu,Add GroupBy test,46,46,Jinzhu,9fcc546,0,2020-03-08 10:05:22,2020-02-26 11:06:42
clause/benchmarks_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),36,37,Jinzhu,8bb05a5,0,2022-01-06 07:02:53,2020-06-02 02:50:38
clause/benchmarks_test.go,c1afe19,Jinzhu,Add benchmark tests for clause,48,58,,,0,2020-02-13 16:09:44,
clause/benchmarks_test.go,e8f48b5,robhafner,fix: limit=0 results (#5735) (#5736),47,47,kinggo,b47cf57,1,2022-10-07 12:14:14,2022-01-06 07:02:53
clause/clause.go,1f38ec4,Jinzhu,Finish clauses tests,3,9,Jinzhu,46b1c85,0,2020-02-08 15:23:45,2020-02-04 00:56:15
clause/clause.go,504f427,Jinzhu,Refactor clause Writer,20,20,Jinzhu,1f38ec4,0,2020-03-09 09:07:00,2020-02-08 15:23:45
clause/clause.go,504f427,Jinzhu,Refactor clause Writer,13,17,Jinzhu,1f38ec4,0,2020-03-09 09:07:00,2020-02-08 15:23:45
clause/clause.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",1,2,,,0,2020-01-29 11:22:44,
clause/clause.go,1f38ec4,Jinzhu,Finish clauses tests,18,19,Jinzhu,46b1c85,0,2020-02-08 15:23:45,2020-02-04 00:56:15
clause/clause.go,1f38ec4,Jinzhu,Finish clauses tests,12,12,Jinzhu,46b1c85,0,2020-02-08 15:23:45,2020-02-04 00:56:15
clause/clause.go,d05128b,Jinzhu,OnConflict support for mysql,11,11,Jinzhu,504f427,0,2020-05-29 14:34:35,2020-03-09 09:07:00
clause/clause.go,9b8d3b3,Philip Sahli,fix typo (#3911),10,10,Jinzhu,4456df7,1,2021-01-04 03:30:05,2020-07-16 03:27:12
clause/clause.go,504f427,Jinzhu,Refactor clause Writer,22,22,Jinzhu,1f38ec4,0,2020-03-09 09:07:00,2020-02-08 15:23:45
clause/clause.go,4456df7,Jinzhu,Lint with golangci-lint,21,21,Jinzhu,a1e35bd,0,2020-07-16 03:27:12,2020-06-20 08:52:15
clause/clause.go,9d5b983,Jinzhu,Refactor builder,26,27,Jinzhu,85bfd17,0,2020-01-30 11:47:00,2020-01-29 19:03:06
clause/clause.go,9d5b983,Jinzhu,Refactor builder,36,38,Jinzhu,85bfd17,0,2020-01-30 11:47:00,2020-01-29 19:03:06
clause/clause.go,6937d71,Jinzhu,Refactor clauses,28,33,Jinzhu,d05128b,0,2020-06-06 14:52:08,2020-05-29 14:34:35
clause/clause.go,9d5b983,Jinzhu,Refactor builder,34,35,Jinzhu,85bfd17,0,2020-01-30 11:47:00,2020-01-29 19:03:06
clause/clause.go,1f38ec4,Jinzhu,Finish clauses tests,24,25,Jinzhu,46b1c85,0,2020-02-08 15:23:45,2020-02-04 00:56:15
clause/clause.go,4d6b70e,Jinzhu,Allow modify statement from dest,23,23,Ratan Phayade,a3abb5f,0,2023-02-02 09:15:08,2021-03-07 02:59:00
clause/clause.go,6937d71,Jinzhu,Refactor clauses,40,45,Jinzhu,d05128b,0,2020-06-06 14:52:08,2020-05-29 14:34:35
clause/clause.go,d05128b,Jinzhu,OnConflict support for mysql,39,39,Jinzhu,504f427,0,2020-05-29 14:34:35,2020-03-09 09:07:00
clause/clause.go,6937d71,Jinzhu,Refactor clauses,47,48,Jinzhu,d05128b,0,2020-06-06 14:52:08,2020-05-29 14:34:35
clause/clause.go,9d5b983,Jinzhu,Refactor builder,46,46,Jinzhu,85bfd17,0,2020-01-30 11:47:00,2020-01-29 19:03:06
clause/clause.go,9d5b983,Jinzhu,Refactor builder,49,50,Jinzhu,85bfd17,0,2020-01-30 11:47:00,2020-01-29 19:03:06
clause/clause.go,6937d71,Jinzhu,Refactor clauses,53,53,Jinzhu,d05128b,0,2020-06-06 14:52:08,2020-05-29 14:34:35
clause/clause.go,56bdded,Jinzhu,Fix statement modifier support,52,52,Jinzhu,6937d71,1,2020-06-14 04:18:46,2020-06-06 14:52:08
clause/clause.go,6937d71,Jinzhu,Refactor clauses,51,51,Jinzhu,d05128b,0,2020-06-06 14:52:08,2020-05-29 14:34:35
clause/clause.go,9d5b983,Jinzhu,Refactor builder,54,55,Jinzhu,85bfd17,0,2020-01-30 11:47:00,2020-01-29 19:03:06
clause/clause.go,6937d71,Jinzhu,Refactor clauses,56,60,Jinzhu,d05128b,0,2020-06-06 14:52:08,2020-05-29 14:34:35
clause/clause.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",63,64,,,0,2020-01-29 11:22:44,
clause/clause.go,9d5b983,Jinzhu,Refactor builder,61,62,Jinzhu,85bfd17,0,2020-01-30 11:47:00,2020-01-29 19:03:06
clause/clause.go,1f38ec4,Jinzhu,Finish clauses tests,65,65,Jinzhu,46b1c85,0,2020-02-08 15:23:45,2020-02-04 00:56:15
clause/clause.go,a3abb5f,Ratan Phayade,"support named params in Select API  (#4142)  * adds support for named arguments in select  * changes clause identifies and adds test",66,68,Philip Sahli,9b8d3b3,0,2021-03-07 02:59:00,2021-01-04 03:30:05
clause/clause.go,85bfd17,Jinzhu,Implement build conditions,70,70,,,0,2020-01-29 19:03:06,
clause/clause.go,1f38ec4,Jinzhu,Finish clauses tests,69,69,Jinzhu,46b1c85,0,2020-02-08 15:23:45,2020-02-04 00:56:15
clause/clause.go,1f38ec4,Jinzhu,Finish clauses tests,71,74,Jinzhu,46b1c85,0,2020-02-08 15:23:45,2020-02-04 00:56:15
clause/clause.go,1f38ec4,Jinzhu,Finish clauses tests,76,81,Jinzhu,46b1c85,0,2020-02-08 15:23:45,2020-02-04 00:56:15
clause/clause.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",82,83,,,0,2020-01-29 11:22:44,
clause/clause.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",75,75,,,0,2020-01-29 11:22:44,
clause/clause.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",89,89,,,0,2020-01-29 11:22:44,
clause/clause.go,1f38ec4,Jinzhu,Finish clauses tests,84,88,,,0,2020-02-08 15:23:45,
clause/clause_test.go,9d19be0,Jinzhu,Setup clauses tests,6,8,,,0,2020-02-04 01:51:19,
clause/clause_test.go,9d19be0,Jinzhu,Setup clauses tests,1,3,,,0,2020-02-04 01:51:19,
clause/clause_test.go,1f38ec4,Jinzhu,Finish clauses tests,5,5,Jinzhu,0160bab,0,2020-02-08 15:23:45,2020-02-05 10:28:58
clause/clause_test.go,1f38ec4,Jinzhu,Finish clauses tests,15,17,Jinzhu,0160bab,0,2020-02-08 15:23:45,2020-02-05 10:28:58
clause/clause_test.go,8bb05a5,Jinzhu,Refactor tests files,12,12,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
clause/clause_test.go,e986371,Jinzhu,Rename package name,9,11,Jinzhu,9fcc546,0,2020-06-02 01:18:01,2020-02-26 11:06:42
clause/clause_test.go,9d19be0,Jinzhu,Setup clauses tests,13,14,,,0,2020-02-04 01:51:19,
clause/clause_test.go,9d19be0,Jinzhu,Setup clauses tests,4,4,,,0,2020-02-04 01:51:19,
clause/clause_test.go,9d19be0,Jinzhu,Setup clauses tests,18,18,,,0,2020-02-04 01:51:19,
clause/clause_test.go,1f38ec4,Jinzhu,Finish clauses tests,19,20,Jinzhu,0160bab,0,2020-02-08 15:23:45,2020-02-05 10:28:58
clause/clause_test.go,1f38ec4,Jinzhu,Finish clauses tests,22,22,Jinzhu,0160bab,0,2020-02-08 15:23:45,2020-02-05 10:28:58
clause/clause_test.go,9fcc546,Jinzhu,Fix tests,21,21,Jinzhu,e2a360b,1,2020-02-26 11:06:42,2020-02-23 13:22:35
clause/clause_test.go,1f38ec4,Jinzhu,Finish clauses tests,25,41,Jinzhu,0160bab,0,2020-02-08 15:23:45,2020-02-05 10:28:58
clause/clause_test.go,9d19be0,Jinzhu,Setup clauses tests,23,24,,,0,2020-02-04 01:51:19,
clause/clause_test.go,9d19be0,Jinzhu,Setup clauses tests,42,43,,,0,2020-02-04 01:51:19,
clause/delete.go,1f38ec4,Jinzhu,Finish clauses tests,1,11,,,0,2020-02-08 15:23:45,
clause/delete.go,504f427,Jinzhu,Refactor clause Writer,12,12,Jinzhu,1f38ec4,0,2020-03-09 09:07:00,2020-02-08 15:23:45
clause/delete.go,1f38ec4,Jinzhu,Finish clauses tests,17,23,,,0,2020-02-08 15:23:45,
clause/delete.go,504f427,Jinzhu,Refactor clause Writer,16,16,Jinzhu,1f38ec4,0,2020-03-09 09:07:00,2020-02-08 15:23:45
clause/delete.go,1f38ec4,Jinzhu,Finish clauses tests,13,15,,,0,2020-02-08 15:23:45,
clause/delete_test.go,1f38ec4,Jinzhu,Finish clauses tests,1,6,,,0,2020-02-08 15:23:45,
clause/delete_test.go,1f38ec4,Jinzhu,Finish clauses tests,8,31,,,0,2020-02-08 15:23:45,
clause/delete_test.go,e986371,Jinzhu,Rename package name,7,7,Jinzhu,1f38ec4,0,2020-06-02 01:18:01,2020-02-08 15:23:45
callbacks/update.go,835d7bd,Jinzhu,Add returning support to delete,10,10,Jinzhu,af3fbdc,0,2021-10-27 23:56:55,2021-10-26 14:40:14
callbacks/update.go,e2a360b,Jinzhu,Add Before/After callbacks,11,11,,,0,2020-02-23 13:22:35,
callbacks/update.go,e986371,Jinzhu,Rename package name,7,9,Jinzhu,4e147e1,0,2020-06-02 01:18:01,2020-06-01 13:26:23
callbacks/update.go,e2a360b,Jinzhu,Add Before/After callbacks,3,4,,,0,2020-02-23 13:22:35,
callbacks/update.go,728c0d4,Jinzhu,Add callbacks,1,2,,,0,2020-02-02 12:05:10,
callbacks/update.go,cbd55db,Jinzhu,Add Update test,5,5,,,0,2020-03-07 07:20:09,
callbacks/update.go,e2a360b,Jinzhu,Add Before/After callbacks,6,6,,,0,2020-02-23 13:22:35,
callbacks/update.go,728c0d4,Jinzhu,Add callbacks,12,12,,,0,2020-02-02 12:05:10,
callbacks/update.go,d50879c,Jinzhu,Add field permission test,14,14,Jinzhu,e986371,0,2020-06-05 11:18:22,2020-06-02 01:18:01
callbacks/update.go,1559fe2,Jinzhu,Add more updates test,15,23,Jinzhu,befef0c,0,2020-06-01 11:41:33,2020-05-31 16:12:20
callbacks/update.go,1559fe2,Jinzhu,Add more updates test,13,13,Jinzhu,befef0c,0,2020-06-01 11:41:33,2020-05-31 16:12:20
callbacks/update.go,1559fe2,Jinzhu,Add more updates test,25,31,Jinzhu,befef0c,0,2020-06-01 11:41:33,2020-05-31 16:12:20
callbacks/update.go,728c0d4,Jinzhu,Add callbacks,33,33,,,0,2020-02-02 12:05:10,
callbacks/update.go,a7b3b59,Jinzhu,"Fix hooks order, close https://github.com/go-gorm/gorm.io/pull/519",32,32,Jinzhu,f2edda5,1,2022-03-22 14:42:36,2022-02-27 00:40:15
callbacks/update.go,f92e674,Jinzhu,Handle field set value error,24,24,Jinzhu,a7b3b59,1,2022-03-23 09:24:25,2022-03-22 14:42:36
callbacks/update.go,9df9f76,Jinzhu,Change UpdatingColumn to SkipHooks,34,34,Jinzhu,dacbaa5,0,2020-11-17 09:49:43,2020-08-27 11:52:01
callbacks/update.go,e2a360b,Jinzhu,Add Before/After callbacks,36,36,,,0,2020-02-23 13:22:35,
callbacks/update.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,35,35,Jinzhu,163200d,0,2020-06-05 15:26:56,2020-06-05 12:24:15
callbacks/update.go,ce8853e,Jinzhu,Add GormValuer interface support,37,37,Jinzhu,ebdb4ed,0,2020-08-27 07:03:57,2020-08-23 12:08:23
callbacks/update.go,163200d,Jinzhu,Test Hooks,38,38,Jinzhu,d50879c,0,2020-06-05 12:24:15,2020-06-05 11:18:22
callbacks/update.go,befef0c,Jinzhu,Improve Hooks,39,39,,,0,2020-05-31 16:12:20,
callbacks/update.go,e2a360b,Jinzhu,Add Before/After callbacks,40,43,,,0,2020-02-23 13:22:35,
callbacks/update.go,ce8853e,Jinzhu,Add GormValuer interface support,44,44,Jinzhu,ebdb4ed,0,2020-08-27 07:03:57,2020-08-23 12:08:23
callbacks/update.go,befef0c,Jinzhu,Improve Hooks,46,46,,,0,2020-05-31 16:12:20,
callbacks/update.go,163200d,Jinzhu,Test Hooks,45,45,Jinzhu,d50879c,0,2020-06-05 12:24:15,2020-06-05 11:18:22
callbacks/update.go,e2a360b,Jinzhu,Add Before/After callbacks,47,48,,,0,2020-02-23 13:22:35,
callbacks/update.go,e2a360b,Jinzhu,Add Before/After callbacks,49,49,,,0,2020-02-23 13:22:35,
callbacks/update.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,50,51,Jinzhu,163200d,0,2020-06-05 15:26:56,2020-06-05 12:24:15
callbacks/update.go,e2a360b,Jinzhu,Add Before/After callbacks,52,52,,,0,2020-02-23 13:22:35,
callbacks/update.go,728c0d4,Jinzhu,Add callbacks,53,54,,,0,2020-02-02 12:05:10,
callbacks/update.go,af3fbdc,Jinzhu,Improve returning support,56,56,kinggo,b46e2af,0,2021-10-26 14:40:14,2021-10-08 05:47:01
callbacks/update.go,cbd55db,Jinzhu,Add Update test,58,58,,,0,2020-03-07 07:20:09,
callbacks/update.go,835d7bd,Jinzhu,Add returning support to delete,57,57,Jinzhu,af3fbdc,0,2021-10-27 23:56:55,2021-10-26 14:40:14
callbacks/update.go,a7b3b59,Jinzhu,"Fix hooks order, close https://github.com/go-gorm/gorm.io/pull/519",55,55,Jinzhu,f2edda5,1,2022-03-22 14:42:36,2022-02-27 00:40:15
callbacks/update.go,af3fbdc,Jinzhu,Improve returning support,59,60,kinggo,b46e2af,0,2021-10-26 14:40:14,2021-10-08 05:47:01
callbacks/update.go,1d9e563,riverchu,style: prepose error judgement,63,63,Jinzhu,6951be0,1,2021-09-06 12:13:20,2021-04-28 09:19:30
callbacks/update.go,befef0c,Jinzhu,Improve Hooks,61,62,,,0,2020-05-31 16:12:20,
callbacks/update.go,6a18a15,Jinzhu,Refactor check missing where condition,64,69,Jinzhu,b1201fc,0,2022-02-25 02:48:23,2022-02-23 09:48:26
callbacks/update.go,af3fbdc,Jinzhu,Improve returning support,71,72,kinggo,b46e2af,0,2021-10-26 14:40:14,2021-10-08 05:47:01
callbacks/update.go,e5bdd61,kinggo,"fix: save not use soft_delete (#4897)  * fix: Save not use soft_delete  * fix: save not use soft_delete  * fix: save not use soft_delete  * fix: save not use soft_delete  Co-authored-by: kinggo <>",70,70,Jinzhu,300a23f,1,2021-12-08 05:58:06,2021-12-02 02:39:24
callbacks/update.go,4906259,qqxhb,fix: update omit (#5699),73,74,Jinzhu,b13d175,1,2022-09-16 07:02:44,2022-07-07 07:39:29
callbacks/update.go,c3d7d08,Jinzhu,Clear SET clause after build SQL,75,75,Cr,b621924,0,2023-05-15 07:43:44,2023-03-10 09:04:54
callbacks/update.go,af3fbdc,Jinzhu,Improve returning support,80,80,kinggo,b46e2af,0,2021-10-26 14:40:14,2021-10-08 05:47:01
callbacks/update.go,e5bdd61,kinggo,"fix: save not use soft_delete (#4897)  * fix: Save not use soft_delete  * fix: save not use soft_delete  * fix: save not use soft_delete  * fix: save not use soft_delete  Co-authored-by: kinggo <>",81,81,Jinzhu,300a23f,1,2021-12-08 05:58:06,2021-12-02 02:39:24
callbacks/update.go,4906259,qqxhb,fix: update omit (#5699),76,79,Jinzhu,b13d175,1,2022-09-16 07:02:44,2022-07-07 07:39:29
callbacks/update.go,af3fbdc,Jinzhu,Improve returning support,82,83,kinggo,b46e2af,0,2021-10-26 14:40:14,2021-10-08 05:47:01
callbacks/update.go,cbd55db,Jinzhu,Add Update test,84,84,,,0,2020-03-07 07:20:09,
callbacks/update.go,af3fbdc,Jinzhu,Improve returning support,86,87,kinggo,b46e2af,0,2021-10-26 14:40:14,2021-10-08 05:47:01
callbacks/update.go,835d7bd,Jinzhu,Add returning support to delete,88,88,Jinzhu,af3fbdc,0,2021-10-27 23:56:55,2021-10-26 14:40:14
callbacks/update.go,af3fbdc,Jinzhu,Improve returning support,89,89,kinggo,b46e2af,0,2021-10-26 14:40:14,2021-10-08 05:47:01
callbacks/update.go,835d7bd,Jinzhu,Add returning support to delete,92,92,Jinzhu,af3fbdc,0,2021-10-27 23:56:55,2021-10-26 14:40:14
callbacks/update.go,e953880,Jinzhu,Add returning tests,93,93,Jinzhu,835d7bd,0,2021-10-28 01:17:33,2021-10-27 23:56:55
callbacks/update.go,e953880,Jinzhu,Add returning tests,90,91,Jinzhu,835d7bd,0,2021-10-28 01:17:33,2021-10-27 23:56:55
callbacks/update.go,300a23f,Jinzhu,"Check rows.Close error, close #4891",94,94,heige,9d5f315,1,2021-12-02 02:39:24,2021-11-29 01:33:20
callbacks/update.go,af3fbdc,Jinzhu,Improve returning support,95,98,kinggo,b46e2af,0,2021-10-26 14:40:14,2021-10-08 05:47:01
callbacks/update.go,835d7bd,Jinzhu,Add returning support to delete,99,99,kinggo,b46e2af,0,2021-10-27 23:56:55,2021-10-08 05:47:01
callbacks/update.go,af3fbdc,Jinzhu,Improve returning support,100,100,kinggo,b46e2af,0,2021-10-26 14:40:14,2021-10-08 05:47:01
callbacks/update.go,af3fbdc,Jinzhu,Improve returning support,101,102,kinggo,b46e2af,0,2021-10-26 14:40:14,2021-10-08 05:47:01
callbacks/update.go,728c0d4,Jinzhu,Add callbacks,105,106,,,0,2020-02-02 12:05:10,
callbacks/update.go,a7b3b59,Jinzhu,"Fix hooks order, close https://github.com/go-gorm/gorm.io/pull/519",107,107,Jinzhu,f2edda5,1,2022-03-22 14:42:36,2022-02-27 00:40:15
callbacks/update.go,cbd55db,Jinzhu,Add Update test,104,104,,,0,2020-03-07 07:20:09,
callbacks/update.go,befef0c,Jinzhu,Improve Hooks,103,103,,,0,2020-05-31 16:12:20,
callbacks/update.go,163200d,Jinzhu,Test Hooks,113,113,Jinzhu,d50879c,0,2020-06-05 12:24:15,2020-06-05 11:18:22
callbacks/update.go,728c0d4,Jinzhu,Add callbacks,108,108,,,0,2020-02-02 12:05:10,
callbacks/update.go,a7b3b59,Jinzhu,"Fix hooks order, close https://github.com/go-gorm/gorm.io/pull/519",111,112,Jinzhu,f2edda5,1,2022-03-22 14:42:36,2022-02-27 00:40:15
callbacks/update.go,a7b3b59,Jinzhu,"Fix hooks order, close https://github.com/go-gorm/gorm.io/pull/519",114,114,Jinzhu,f2edda5,1,2022-03-22 14:42:36,2022-02-27 00:40:15
callbacks/update.go,6a18a15,Jinzhu,Refactor check missing where condition,85,85,Jinzhu,835d7bd,0,2022-02-25 02:48:23,2021-10-27 23:56:55
callbacks/update.go,e2a360b,Jinzhu,Add Before/After callbacks,115,117,,,0,2020-02-23 13:22:35,
callbacks/update.go,a7b3b59,Jinzhu,"Fix hooks order, close https://github.com/go-gorm/gorm.io/pull/519",121,121,Jinzhu,f2edda5,1,2022-03-22 14:42:36,2022-02-27 00:40:15
callbacks/update.go,163200d,Jinzhu,Test Hooks,120,120,Jinzhu,d50879c,0,2020-06-05 12:24:15,2020-06-05 11:18:22
callbacks/update.go,a7b3b59,Jinzhu,"Fix hooks order, close https://github.com/go-gorm/gorm.io/pull/519",118,119,Jinzhu,f2edda5,1,2022-03-22 14:42:36,2022-02-27 00:40:15
callbacks/update.go,a7b3b59,Jinzhu,"Fix hooks order, close https://github.com/go-gorm/gorm.io/pull/519",124,124,Jinzhu,f2edda5,1,2022-03-22 14:42:36,2022-02-27 00:40:15
callbacks/update.go,163200d,Jinzhu,Test Hooks,125,125,Jinzhu,d50879c,0,2020-06-05 12:24:15,2020-06-05 11:18:22
callbacks/update.go,e2a360b,Jinzhu,Add Before/After callbacks,122,123,,,0,2020-02-23 13:22:35,
callbacks/update.go,e2a360b,Jinzhu,Add Before/After callbacks,127,127,,,0,2020-02-23 13:22:35,
callbacks/update.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,110,110,Jinzhu,befef0c,0,2020-06-05 15:26:56,2020-05-31 16:12:20
callbacks/update.go,cbd55db,Jinzhu,Add Update test,129,130,,,0,2020-03-07 07:20:09,
callbacks/update.go,728c0d4,Jinzhu,Add callbacks,128,128,,,0,2020-02-02 12:05:10,
callbacks/update.go,91a6958,Jinzhu,Test Association For BelongsTo,132,132,,,0,2020-05-24 10:33:15,
callbacks/update.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,126,126,Jinzhu,befef0c,0,2020-06-05 15:26:56,2020-05-31 16:12:20
callbacks/update.go,91a6958,Jinzhu,Test Association For BelongsTo,134,136,,,0,2020-05-24 10:33:15,
callbacks/update.go,2da0ad5,Jinzhu,Add more tests for Update,131,131,,,0,2020-03-08 05:24:08,
callbacks/update.go,1559fe2,Jinzhu,Add more updates test,137,137,Jinzhu,befef0c,0,2020-06-01 11:41:33,2020-05-31 16:12:20
callbacks/update.go,91a6958,Jinzhu,Test Association For BelongsTo,138,139,,,0,2020-05-24 10:33:15,
callbacks/update.go,91a6958,Jinzhu,Test Association For BelongsTo,144,147,,,0,2020-05-24 10:33:15,
callbacks/update.go,1559fe2,Jinzhu,Add more updates test,140,140,Jinzhu,befef0c,0,2020-06-01 11:41:33,2020-05-31 16:12:20
callbacks/update.go,e66a059,black-06,"fix: update panic if model is not ptr (#6037)  * fix: update panic if model is not ptr  * fix: update panic if model is not ptr  * fix: update panic if model is not ptr  * fix: raise an error if the value is not addressable  * fix: return",141,143,qqxhb,4906259,1,2023-02-18 01:20:29,2022-09-16 07:02:44
callbacks/update.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",149,149,kinggo,b47cf57,1,2022-02-19 09:02:53,2022-01-06 07:02:53
callbacks/update.go,1559fe2,Jinzhu,Add more updates test,148,148,Jinzhu,befef0c,0,2020-06-01 11:41:33,2020-05-31 16:12:20
callbacks/update.go,91a6958,Jinzhu,Test Association For BelongsTo,151,155,,,0,2020-05-24 10:33:15,
callbacks/update.go,abae7f7,Jinzhu,Test non std primary key and default value,150,150,,,0,2020-05-30 08:03:27,
callbacks/update.go,cbd55db,Jinzhu,Add Update test,156,156,,,0,2020-03-07 07:20:09,
callbacks/update.go,1559fe2,Jinzhu,Add more updates test,157,161,Jinzhu,befef0c,0,2020-06-01 11:41:33,2020-05-31 16:12:20
callbacks/update.go,4f19e2a,Jinzhu,Test ForeignKeyConstraints,162,164,Jinzhu,9f19378,0,2020-06-19 17:20:18,2020-06-08 12:23:47
callbacks/update.go,e953880,Jinzhu,Add returning tests,165,165,Jinzhu,835d7bd,0,2021-10-28 01:17:33,2021-10-27 23:56:55
callbacks/update.go,b13d175,Jinzhu,Refactor Model with slice data,166,166,Jinzhu,fe01e1b,0,2022-07-07 07:39:29,2022-07-07 06:43:33
callbacks/update.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",167,167,Jinzhu,835d7bd,0,2021-11-29 01:33:20,2021-10-27 23:56:55
callbacks/update.go,e953880,Jinzhu,Add returning tests,173,173,Jinzhu,835d7bd,0,2021-10-28 01:17:33,2021-10-27 23:56:55
callbacks/update.go,b13d175,Jinzhu,Refactor Model with slice data,168,172,Jinzhu,fe01e1b,0,2022-07-07 07:39:29,2022-07-07 06:43:33
callbacks/update.go,4f19e2a,Jinzhu,Test ForeignKeyConstraints,174,174,Jinzhu,1490a06,0,2020-06-19 17:20:18,2020-06-05 15:26:56
callbacks/update.go,b13d175,Jinzhu,Refactor Model with slice data,176,180,Jinzhu,fe01e1b,0,2022-07-07 07:39:29,2022-07-07 06:43:33
callbacks/update.go,e953880,Jinzhu,Add returning tests,175,175,Jinzhu,835d7bd,0,2021-10-28 01:17:33,2021-10-27 23:56:55
callbacks/update.go,1559fe2,Jinzhu,Add more updates test,191,191,,,0,2020-06-01 11:41:33,
callbacks/update.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",184,184,kinggo,b47cf57,1,2022-02-19 09:02:53,2022-01-06 07:02:53
callbacks/update.go,cbd55db,Jinzhu,Add Update test,192,192,,,0,2020-03-07 07:20:09,
callbacks/update.go,4f19e2a,Jinzhu,Test ForeignKeyConstraints,181,181,Jinzhu,e986371,0,2020-06-19 17:20:18,2020-06-02 01:18:01
callbacks/update.go,f556628,Jinzhu,"Add SetColumn, Changed method",133,133,Jinzhu,befef0c,0,2020-06-30 08:53:54,2020-05-31 16:12:20
callbacks/update.go,cbd55db,Jinzhu,Add Update test,194,194,,,0,2020-03-07 07:20:09,
callbacks/update.go,9df9f76,Jinzhu,Change UpdatingColumn to SkipHooks,109,109,Jinzhu,163200d,0,2020-11-17 09:49:43,2020-06-05 12:24:15
callbacks/update.go,2da0ad5,Jinzhu,Add more tests for Update,193,193,,,0,2020-03-08 05:24:08,
callbacks/update.go,4f19e2a,Jinzhu,Test ForeignKeyConstraints,185,190,Jinzhu,e986371,0,2020-06-19 17:20:18,2020-06-02 01:18:01
callbacks/update.go,d50879c,Jinzhu,Add field permission test,207,210,Jinzhu,e986371,0,2020-06-05 11:18:22,2020-06-02 01:18:01
callbacks/update.go,4f19e2a,Jinzhu,Test ForeignKeyConstraints,182,183,Jinzhu,e986371,0,2020-06-19 17:20:18,2020-06-02 01:18:01
callbacks/update.go,cbd55db,Jinzhu,Add Update test,197,201,,,0,2020-03-07 07:20:09,
callbacks/update.go,d11c424,Jinzhu,Fix typo,196,196,Jinzhu,d50879c,1,2020-06-07 07:26:43,2020-06-05 11:18:22
callbacks/update.go,ecc946b,Jinzhu,Test update from sub query,211,211,Jinzhu,69d8111,0,2020-08-13 08:05:06,2020-07-24 00:32:50
callbacks/update.go,1559fe2,Jinzhu,Add more updates test,215,216,Jinzhu,befef0c,0,2020-06-01 11:41:33,2020-05-31 16:12:20
callbacks/update.go,aaf0725,Jinzhu,Refactor for performance,195,195,Jinzhu,d50879c,0,2020-06-08 09:21:26,2020-06-05 11:18:22
callbacks/update.go,ecc946b,Jinzhu,Test update from sub query,202,206,Jinzhu,66dcd7e,0,2020-08-13 08:05:06,2020-07-01 11:49:04
callbacks/update.go,cbd55db,Jinzhu,Add Update test,223,225,,,0,2020-03-07 07:20:09,
callbacks/update.go,d50879c,Jinzhu,Add field permission test,217,217,Jinzhu,e986371,0,2020-06-05 11:18:22,2020-06-02 01:18:01
callbacks/update.go,cbd55db,Jinzhu,Add Update test,218,218,,,0,2020-03-07 07:20:09,
callbacks/update.go,dacbaa5,Jinzhu,Fix update attrs order,227,228,Jinzhu,ce8853e,1,2020-08-27 11:52:01,2020-08-27 07:03:57
callbacks/update.go,d50879c,Jinzhu,Add field permission test,212,214,Jinzhu,befef0c,0,2020-06-05 11:18:22,2020-05-31 16:12:20
callbacks/update.go,d50879c,Jinzhu,Add field permission test,219,221,Jinzhu,e986371,0,2020-06-05 11:18:22,2020-06-02 01:18:01
callbacks/update.go,9dd516a,Jinzhu,Test UpdateColumn,229,229,,,0,2020-05-30 09:34:22,
callbacks/update.go,9df9f76,Jinzhu,Change UpdatingColumn to SkipHooks,226,226,Jinzhu,ce8853e,0,2020-11-17 09:49:43,2020-08-27 07:03:57
callbacks/update.go,0f00493,Jinzhu,"Continue to update tracking fields even not selected with Select, but skip them if omited with Omit, fix #3856",230,230,Jinzhu,9df9f76,1,2020-12-15 03:18:29,2020-11-17 09:49:43
callbacks/update.go,ab89d54,jessetang,chore: UnixNano convert to UnixMilli (#6907),237,237,Jinzhu,c3d7d08,0,2024-03-18 05:44:55,2023-05-15 07:43:44
callbacks/update.go,b1201fc,Jinzhu,"Fix update with customized time type, close #5101",238,238,Jinzhu,39d84cb,1,2022-02-23 09:48:26,2022-02-19 09:02:53
callbacks/update.go,9dd516a,Jinzhu,Test UpdateColumn,244,244,,,0,2020-05-30 09:34:22,
callbacks/update.go,b572594,Jinzhu,Test Select with Update Struct,231,235,Jinzhu,e986371,0,2020-07-06 03:20:43,2020-06-02 01:18:01
callbacks/update.go,b1201fc,Jinzhu,"Fix update with customized time type, close #5101",240,241,Jinzhu,39d84cb,1,2022-02-23 09:48:26,2022-02-19 09:02:53
callbacks/update.go,d50879c,Jinzhu,Add field permission test,243,243,Jinzhu,befef0c,0,2020-06-05 11:18:22,2020-05-31 16:12:20
callbacks/update.go,b572594,Jinzhu,Test Select with Update Struct,242,242,Jinzhu,befef0c,0,2020-07-06 03:20:43,2020-05-31 16:12:20
callbacks/update.go,2da0ad5,Jinzhu,Add more tests for Update,245,246,,,0,2020-03-08 05:24:08,
callbacks/update.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),248,248,kinggo,e5bdd61,0,2022-01-06 07:02:53,2021-12-08 05:58:06
callbacks/update.go,cbd55db,Jinzhu,Add Update test,247,247,,,0,2020-03-07 07:20:09,
callbacks/update.go,b621924,Cr,fix: diff schema update assign value (#6096),249,249,black-06,e66a059,1,2023-03-10 09:04:54,2023-02-18 01:20:29
callbacks/update.go,b621924,Cr,fix: diff schema update assign value (#6096),255,255,black-06,e66a059,1,2023-03-10 09:04:54,2023-02-18 01:20:29
callbacks/update.go,ecc946b,Jinzhu,Test update from sub query,222,222,Jinzhu,befef0c,0,2020-08-13 08:05:06,2020-05-31 16:12:20
callbacks/update.go,cbd55db,Jinzhu,Add Update test,260,260,,,0,2020-03-07 07:20:09,
callbacks/update.go,1559fe2,Jinzhu,Add more updates test,259,259,,,0,2020-06-01 11:41:33,
callbacks/update.go,ba16b23,Jinzhu,Refactor update record (#4679),250,254,riverchu,eaa63d1,0,2021-09-07 12:04:54,2021-09-06 12:13:20
callbacks/update.go,ba16b23,Jinzhu,Refactor update record (#4679),256,258,riverchu,eaa63d1,0,2021-09-07 12:04:54,2021-09-06 12:13:20
callbacks/update.go,2da0ad5,Jinzhu,Add more tests for Update,261,261,,,0,2020-03-08 05:24:08,
callbacks/update.go,ba16b23,Jinzhu,Refactor update record (#4679),264,265,riverchu,eaa63d1,0,2021-09-07 12:04:54,2021-09-06 12:13:20
callbacks/update.go,b46e2af,kinggo,"fix : update miss where's condition when primary key use ""<-:create"" tag (#4738)  * fix:update miss where condition  * fix:rename test case",263,263,riverchu,eaa63d1,1,2021-10-08 05:47:01,2021-09-06 12:13:20
callbacks/update.go,7bb883b,lninl,"Auto creating/updating time with unix (milli) second (#3213)  * Auto creating/updating time with unix (milli) second  * add test for 'Auto creating/updating time with unix (milli) second'",236,236,Jinzhu,e986371,0,2020-07-30 09:39:57,2020-06-02 01:18:01
callbacks/update.go,b572594,Jinzhu,Test Select with Update Struct,239,239,Jinzhu,befef0c,0,2020-07-06 03:20:43,2020-05-31 16:12:20
callbacks/update.go,ab89d54,jessetang,chore: UnixNano convert to UnixMilli (#6907),271,271,Jinzhu,c3d7d08,0,2024-03-18 05:44:55,2023-05-15 07:43:44
callbacks/update.go,b1201fc,Jinzhu,"Fix update with customized time type, close #5101",272,272,Jinzhu,39d84cb,1,2022-02-23 09:48:26,2022-02-19 09:02:53
callbacks/update.go,2da0ad5,Jinzhu,Add more tests for Update,279,279,,,0,2020-03-08 05:24:08,
callbacks/update.go,ba16b23,Jinzhu,Refactor update record (#4679),267,270,Jinzhu,ecc946b,0,2021-09-07 12:04:54,2020-08-13 08:05:06
callbacks/update.go,9dd516a,Jinzhu,Test UpdateColumn,278,278,,,0,2020-05-30 09:34:22,
callbacks/update.go,b621924,Cr,fix: diff schema update assign value (#6096),282,288,black-06,e66a059,1,2023-03-10 09:04:54,2023-02-18 01:20:29
callbacks/update.go,b1201fc,Jinzhu,"Fix update with customized time type, close #5101",274,275,Jinzhu,ba16b23,1,2022-02-23 09:48:26,2021-09-07 12:04:54
callbacks/update.go,dacbaa5,Jinzhu,Fix update attrs order,262,262,,,1,2020-08-27 11:52:01,
callbacks/update.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",266,266,riverchu,eaa63d1,1,2022-02-19 09:02:53,2021-09-06 12:13:20
callbacks/update.go,2da0ad5,Jinzhu,Add more tests for Update,294,294,,,0,2020-03-08 05:24:08,
callbacks/update.go,2da0ad5,Jinzhu,Add more tests for Update,295,295,,,0,2020-03-08 05:24:08,
callbacks/update.go,cbd55db,Jinzhu,Add Update test,296,297,,,0,2020-03-07 07:20:09,
callbacks/update.go,ba16b23,Jinzhu,Refactor update record (#4679),289,291,,,0,2021-09-07 12:04:54,
callbacks/update.go,ba16b23,Jinzhu,Refactor update record (#4679),276,277,,,0,2021-09-07 12:04:54,
callbacks/update.go,b46e2af,kinggo,"fix : update miss where's condition when primary key use ""<-:create"" tag (#4738)  * fix:update miss where condition  * fix:rename test case",280,280,,,1,2021-10-08 05:47:01,
callbacks/update.go,cbd55db,Jinzhu,Add Update test,304,304,,,0,2020-03-07 07:20:09,
callbacks/update.go,2da0ad5,Jinzhu,Add more tests for Update,303,303,,,0,2020-03-08 05:24:08,
callbacks/update.go,cbd55db,Jinzhu,Add Update test,300,302,,,0,2020-03-07 07:20:09,
callbacks/update.go,ba16b23,Jinzhu,Refactor update record (#4679),273,273,,,0,2021-09-07 12:04:54,
callbacks/update.go,ba16b23,Jinzhu,Refactor update record (#4679),293,293,,,0,2021-09-07 12:04:54,
callbacks/update.go,ba16b23,Jinzhu,Refactor update record (#4679),281,281,,,0,2021-09-07 12:04:54,
callbacks/update.go,5082674,Jinzhu,Add error gorm.ErrInvalidData,298,299,,,1,2020-08-18 10:00:36,
callbacks/update.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",292,292,,,1,2022-02-19 09:02:53,
callbacks.go,8def7be,Jinzhu,Add context to logger,4,4,Jinzhu,af080e6,0,2020-05-05 13:28:38,2020-03-12 00:39:42
callbacks.go,d833efe,Jinzhu,Work on clauses,5,5,,,0,2020-02-02 11:11:17,
callbacks.go,04adbaf,Jinzhu,Fix parse stmt ReflectValue,7,7,Jinzhu,fa22807,1,2020-02-24 00:51:35,2020-02-23 11:41:29
callbacks.go,e509b31,Jinzhu,Implement callbacks,1,3,,,0,2020-01-30 22:35:25,
callbacks.go,c11c939,Jinzhu,callbacks support sort with wildcard,8,8,Jinzhu,bba569a,0,2020-08-03 13:48:36,2020-07-10 04:28:24
callbacks.go,e509b31,Jinzhu,Implement callbacks,6,6,,,0,2020-01-30 22:35:25,
callbacks.go,e509b31,Jinzhu,Implement callbacks,10,10,,,0,2020-01-30 22:35:25,
callbacks.go,bc5ceff,Jinzhu,Explain SQL for dialects,9,9,Jinzhu,62dcd78,0,2020-02-23 04:41:13,2020-02-20 15:04:03
callbacks.go,5959c81,Jinzhu,Refactor callbacks,16,17,,,0,2020-01-31 00:44:45,
callbacks.go,e509b31,Jinzhu,Implement callbacks,31,33,,,0,2020-01-30 22:35:25,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,24,30,,,0,2020-01-31 00:44:45,
callbacks.go,e509b31,Jinzhu,Implement callbacks,13,14,,,0,2020-01-30 22:35:25,
callbacks.go,e986371,Jinzhu,Rename package name,11,12,Jinzhu,4e147e1,0,2020-06-02 01:18:01,2020-06-01 13:26:23
callbacks.go,9fd73ae,Jinzhu,"Revert ""use callback to handle transaction""  This reverts commit 93f28bc116526ba4decdd969a7b2b0b245ad70f1.",18,23,Joe,2cb4088,0,2022-07-07 07:06:48,2022-07-01 06:37:38
callbacks.go,728c0d4,Jinzhu,Add callbacks,15,15,,,0,2020-02-02 12:05:10,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,34,34,,,0,2020-01-31 00:44:45,
callbacks.go,6951be0,Jinzhu,Allow customize clauses,35,35,Jinzhu,82cb4eb,0,2021-04-28 09:19:30,2021-04-22 05:12:20
callbacks.go,e509b31,Jinzhu,Implement callbacks,41,47,,,0,2020-01-30 22:35:25,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,48,48,,,0,2020-01-31 00:44:45,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,51,52,,,0,2020-01-31 00:44:45,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,36,40,,,0,2020-01-31 00:44:45,
callbacks.go,e509b31,Jinzhu,Implement callbacks,53,54,,,0,2020-01-30 22:35:25,
callbacks.go,e509b31,Jinzhu,Implement callbacks,49,50,,,0,2020-01-30 22:35:25,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,55,56,,,0,2020-01-31 00:44:45,
callbacks.go,e509b31,Jinzhu,Implement callbacks,61,62,,,0,2020-01-30 22:35:25,
callbacks.go,e509b31,Jinzhu,Implement callbacks,57,58,,,0,2020-01-30 22:35:25,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,59,60,,,0,2020-01-31 00:44:45,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,63,64,,,0,2020-01-31 00:44:45,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,67,68,,,0,2020-01-31 00:44:45,
callbacks.go,e509b31,Jinzhu,Implement callbacks,65,66,,,0,2020-01-30 22:35:25,
callbacks.go,e509b31,Jinzhu,Implement callbacks,69,70,,,0,2020-01-30 22:35:25,
callbacks.go,e509b31,Jinzhu,Implement callbacks,73,74,,,0,2020-01-30 22:35:25,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,71,72,,,0,2020-01-31 00:44:45,
callbacks.go,92c3ba9,Jinzhu,Fix create new db sessions in scopes,75,75,Jinzhu,6951be0,1,2021-05-17 07:36:07,2021-04-28 09:19:30
callbacks.go,82cb4eb,Jinzhu,Fix overwrite Statement in scopes,77,77,Jinzhu,d483ffa,1,2021-04-22 05:12:20,2021-04-15 02:37:05
callbacks.go,4b0da0e,black-06,"fix cond in scopes (#6152)  * fix cond in scopes  * replace quote  * fix execute scopes",78,78,Jinzhu,4d6b70e,1,2023-04-11 04:01:23,2023-02-02 09:15:08
callbacks.go,704e53a,Jinzhu,"Call scopes before parse model value, close #4209",79,80,Jinzhu,e85b73e,0,2021-03-24 08:35:39,2021-03-19 05:44:25
callbacks.go,82cb4eb,Jinzhu,Fix overwrite Statement in scopes,81,81,Jinzhu,d483ffa,1,2021-04-22 05:12:20,2021-04-15 02:37:05
callbacks.go,6951be0,Jinzhu,Allow customize clauses,82,84,Jinzhu,82cb4eb,0,2021-04-28 09:19:30,2021-04-22 05:12:20
callbacks.go,6951be0,Jinzhu,Allow customize clauses,87,91,Jinzhu,82cb4eb,0,2021-04-28 09:19:30,2021-04-22 05:12:20
callbacks.go,704e53a,Jinzhu,"Call scopes before parse model value, close #4209",76,76,rorschach,ba59065,0,2021-03-24 08:35:39,2021-01-27 03:48:47
callbacks.go,82cb4eb,Jinzhu,Fix overwrite Statement in scopes,85,86,Jinzhu,d483ffa,1,2021-04-22 05:12:20,2021-04-15 02:37:05
callbacks.go,704e53a,Jinzhu,"Call scopes before parse model value, close #4209",96,96,Jinzhu,e85b73e,0,2021-03-24 08:35:39,2021-03-19 05:44:25
callbacks.go,4d6b70e,Jinzhu,Allow modify statement from dest,92,95,Jinzhu,ddd3cc2,0,2023-02-02 09:15:08,2022-12-25 03:37:23
callbacks.go,4555796,Jinzhu,Refactor Execute callbacks,101,102,Jinzhu,d11c424,0,2020-06-08 14:32:35,2020-06-07 07:26:43
callbacks.go,d833efe,Jinzhu,Work on clauses,111,111,,,0,2020-02-02 11:11:17,
callbacks.go,4555796,Jinzhu,Refactor Execute callbacks,97,98,Jinzhu,d11c424,0,2020-06-08 14:32:35,2020-06-07 07:26:43
callbacks.go,f21e35f,Jinzhu,Fix table not supported error when using unexpected table name,105,106,heige,50e85e1,1,2021-08-26 05:14:16,2021-06-10 02:21:28
callbacks.go,4555796,Jinzhu,Refactor Execute callbacks,104,104,Jinzhu,d11c424,0,2020-06-08 14:32:35,2020-06-07 07:26:43
callbacks.go,4555796,Jinzhu,Refactor Execute callbacks,112,112,Jinzhu,d11c424,0,2020-06-08 14:32:35,2020-06-07 07:26:43
callbacks.go,dbaa6b0,Jinzhu,"Fix Scan struct with primary key, close #3357",99,100,Jinzhu,d11c424,1,2020-09-02 08:14:26,2020-06-07 07:26:43
callbacks.go,704e53a,Jinzhu,"Call scopes before parse model value, close #4209",103,103,Jinzhu,9eec6ae,0,2021-03-24 08:35:39,2020-09-27 04:25:38
callbacks.go,14b9bd1,Jinzhu,"Don't panic when using nil pointer, close #4168",118,118,heige,495ec4b,0,2021-03-10 11:32:56,2021-03-07 02:56:32
callbacks.go,704e53a,Jinzhu,"Call scopes before parse model value, close #4209",114,114,Jinzhu,675de6f,0,2021-03-24 08:35:39,2021-03-08 11:21:09
callbacks.go,dbc6b34,Jinzhu,Add detailed error information when missing table name,107,110,Jinzhu,d11c424,1,2020-09-29 07:43:31,2020-06-07 07:26:43
callbacks.go,ba59065,rorschach,retrieving gorm object support pointer,120,121,Jinzhu,4555796,0,2021-01-27 03:48:47,2020-06-08 14:32:35
callbacks.go,d833efe,Jinzhu,Work on clauses,127,128,,,0,2020-02-02 11:11:17,
callbacks.go,72460df,Jinzhu,Fix associations find,113,113,,,1,2020-05-23 03:57:28,
callbacks.go,ba59065,rorschach,retrieving gorm object support pointer,119,119,Jinzhu,4555796,0,2021-01-27 03:48:47,2020-06-08 14:32:35
callbacks.go,495ec4b,heige,invalid db error and value and invalid value length error (#4151),125,125,Jinzhu,4555796,1,2021-03-07 02:56:32,2020-06-08 14:32:35
callbacks.go,5959c81,Jinzhu,Refactor callbacks,129,131,,,0,2020-01-31 00:44:45,
callbacks.go,b23c3b2,Jinzhu,Don't query with primary key when using Save,133,134,Jinzhu,f21e35f,0,2021-11-08 10:49:59,2021-08-26 05:14:16
callbacks.go,bc5ceff,Jinzhu,Explain SQL for dialects,132,132,,,0,2020-02-23 04:41:13,
callbacks.go,ddd3cc2,Jinzhu,"Add ParameterizedQueries option support for logger, close #5288",135,139,Jinzhu,9fd73ae,0,2022-12-25 03:37:23,2022-07-07 07:06:48
callbacks.go,b23c3b2,Jinzhu,Don't query with primary key when using Save,140,141,Jinzhu,f21e35f,0,2021-11-08 10:49:59,2021-08-26 05:14:16
callbacks.go,bc5ceff,Jinzhu,Explain SQL for dialects,146,146,,,0,2020-02-23 04:41:13,
callbacks.go,72460df,Jinzhu,Fix associations find,126,126,,,1,2020-05-23 03:57:28,
callbacks.go,6951be0,Jinzhu,Allow customize clauses,147,150,Jinzhu,82cb4eb,0,2021-04-28 09:19:30,2021-04-22 05:12:20
callbacks.go,e509b31,Jinzhu,Implement callbacks,153,155,,,0,2020-01-30 22:35:25,
callbacks.go,3aa1891,Jinzhu,Add sync pool,142,142,,,0,2020-03-09 07:32:55,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,156,157,,,0,2020-01-31 00:44:45,
callbacks.go,e509b31,Jinzhu,Implement callbacks,158,163,,,0,2020-01-30 22:35:25,
callbacks.go,728c0d4,Jinzhu,Add callbacks,188,189,,,0,2020-02-02 12:05:10,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,164,187,,,0,2020-01-31 00:44:45,
callbacks.go,26195e6,snackmgmg,"fix: remove `callback` from `callbacks` if `Remove()` called (#6916)  * fix: remove callback from callbacks if Remove() called  * reduce number of loops  * remove unnecessary blank line",190,190,hanwn,aeb2986,1,2024-03-26 03:33:36,2023-04-26 14:19:46
callbacks.go,728c0d4,Jinzhu,Add callbacks,202,202,,,0,2020-02-02 12:05:10,
callbacks.go,4555796,Jinzhu,Refactor Execute callbacks,115,117,,,0,2020-06-08 14:32:35,
callbacks.go,26195e6,snackmgmg,"fix: remove `callback` from `callbacks` if `Remove()` called (#6916)  * fix: remove callback from callbacks if Remove() called  * reduce number of loops  * remove unnecessary blank line",195,201,hanwn,aeb2986,1,2024-03-26 03:33:36,2023-04-26 14:19:46
callbacks.go,728c0d4,Jinzhu,Add callbacks,191,194,,,0,2020-02-02 12:05:10,
callbacks.go,728c0d4,Jinzhu,Add callbacks,204,204,,,0,2020-02-02 12:05:10,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,205,205,,,0,2020-01-31 00:44:45,
callbacks.go,4555796,Jinzhu,Refactor Execute callbacks,122,124,,,0,2020-06-08 14:32:35,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,207,208,,,0,2020-01-31 00:44:45,
callbacks.go,e509b31,Jinzhu,Implement callbacks,214,215,,,0,2020-01-30 22:35:25,
callbacks.go,e509b31,Jinzhu,Implement callbacks,209,210,,,0,2020-01-30 22:35:25,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,211,213,,,0,2020-01-31 00:44:45,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,216,224,,,0,2020-01-31 00:44:45,
callbacks.go,728c0d4,Jinzhu,Add callbacks,225,225,,,0,2020-02-02 12:05:10,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,226,228,,,0,2020-01-31 00:44:45,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,230,232,,,0,2020-01-31 00:44:45,
callbacks.go,728c0d4,Jinzhu,Add callbacks,233,233,,,0,2020-02-02 12:05:10,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,238,241,,,0,2020-01-31 00:44:45,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,234,236,,,0,2020-01-31 00:44:45,
callbacks.go,4555796,Jinzhu,Refactor Execute callbacks,143,145,,,0,2020-06-08 14:32:35,
callbacks.go,e509b31,Jinzhu,Implement callbacks,243,254,,,0,2020-01-30 22:35:25,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,255,255,,,0,2020-01-31 00:44:45,
callbacks.go,e959a67,Jinzhu,Fix callbacks with Match,203,203,,,1,2020-06-02 04:46:55,
callbacks.go,728c0d4,Jinzhu,Add callbacks,242,242,,,0,2020-02-02 12:05:10,
callbacks.go,e509b31,Jinzhu,Implement callbacks,256,256,,,0,2020-01-30 22:35:25,
callbacks.go,e509b31,Jinzhu,Implement callbacks,259,259,,,0,2020-01-30 22:35:25,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,257,258,,,0,2020-01-31 00:44:45,
callbacks.go,e509b31,Jinzhu,Implement callbacks,269,269,,,0,2020-01-30 22:35:25,
callbacks.go,b010494,Cr,fix: callbcak sort when using multiple plugin (#5304),261,267,Jinzhu,92c3ba9,1,2022-04-30 01:57:16,2021-05-17 07:36:07
callbacks.go,aeb2986,hanwn,debug: use slice Stale sort (#6263)  Co-authored-by: hanwang <hanwang.7721@bytedance.com>,260,260,Jinzhu,b23c3b2,0,2023-04-26 14:19:46,2021-11-08 10:49:59
callbacks.go,e509b31,Jinzhu,Implement callbacks,271,271,,,0,2020-01-30 22:35:25,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,272,272,,,0,2020-01-31 00:44:45,
callbacks.go,e509b31,Jinzhu,Implement callbacks,274,274,,,0,2020-01-30 22:35:25,
callbacks.go,53caa85,Jinzhu,"Use db's Logger for callbacks logs, close #3448, #3447",206,206,,,0,2020-09-10 11:20:47,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,270,270,,,0,2020-01-31 00:44:45,
callbacks.go,e509b31,Jinzhu,Implement callbacks,276,277,,,0,2020-01-30 22:35:25,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,275,275,,,0,2020-01-31 00:44:45,
callbacks.go,92c3ba9,Jinzhu,Fix create new db sessions in scopes,151,152,,,1,2021-05-17 07:36:07,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,278,279,,,0,2020-01-31 00:44:45,
callbacks.go,e509b31,Jinzhu,Implement callbacks,290,290,,,0,2020-01-30 22:35:25,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,285,288,,,0,2020-01-31 00:44:45,
callbacks.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",289,289,Jinzhu,92c3ba9,1,2021-06-10 02:21:28,2021-05-17 07:36:07
callbacks.go,5959c81,Jinzhu,Refactor callbacks,291,293,,,0,2020-01-31 00:44:45,
callbacks.go,e509b31,Jinzhu,Implement callbacks,296,296,,,0,2020-01-30 22:35:25,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,295,295,,,0,2020-01-31 00:44:45,
callbacks.go,e509b31,Jinzhu,Implement callbacks,294,294,,,0,2020-01-30 22:35:25,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,297,297,,,0,2020-01-31 00:44:45,
callbacks.go,e509b31,Jinzhu,Implement callbacks,304,304,,,0,2020-01-30 22:35:25,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,303,303,,,0,2020-01-31 00:44:45,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,305,306,,,0,2020-01-31 00:44:45,
callbacks.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",237,237,,,1,2021-06-10 02:21:28,
callbacks.go,c11c939,Jinzhu,callbacks support sort with wildcard,268,268,,,0,2020-08-03 13:48:36,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,308,319,,,0,2020-01-31 00:44:45,
callbacks.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",229,229,,,1,2021-06-10 02:21:28,
callbacks.go,e509b31,Jinzhu,Implement callbacks,321,321,,,0,2020-01-30 22:35:25,
callbacks.go,e509b31,Jinzhu,Implement callbacks,320,320,,,0,2020-01-30 22:35:25,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,322,324,,,0,2020-01-31 00:44:45,
callbacks.go,e509b31,Jinzhu,Implement callbacks,325,327,,,0,2020-01-30 22:35:25,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,328,331,,,0,2020-01-31 00:44:45,
callbacks.go,e509b31,Jinzhu,Implement callbacks,332,332,,,0,2020-01-30 22:35:25,
callbacks.go,e509b31,Jinzhu,Implement callbacks,334,335,,,0,2020-01-30 22:35:25,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,333,333,,,0,2020-01-31 00:44:45,
callbacks.go,e509b31,Jinzhu,Implement callbacks,339,341,,,0,2020-01-30 22:35:25,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,336,338,,,0,2020-01-31 00:44:45,
callbacks.go,5959c81,Jinzhu,Refactor callbacks,342,344,,,0,2020-01-31 00:44:45,
callbacks.go,e509b31,Jinzhu,Implement callbacks,349,349,,,0,2020-01-30 22:35:25,
callbacks.go,e509b31,Jinzhu,Implement callbacks,345,347,,,0,2020-01-30 22:35:25,
callbacks.go,26195e6,snackmgmg,"fix: remove `callback` from `callbacks` if `Remove()` called (#6916)  * fix: remove callback from callbacks if Remove() called  * reduce number of loops  * remove unnecessary blank line",350,360,hanwn,aeb2986,1,2024-03-26 03:33:36,2023-04-26 14:19:46
callbacks.go,5959c81,Jinzhu,Refactor callbacks,348,348,,,0,2020-01-31 00:44:45,
callbacks.go,c11c939,Jinzhu,callbacks support sort with wildcard,280,284,,,0,2020-08-03 13:48:36,
callbacks.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",273,273,,,1,2021-06-10 02:21:28,
callbacks.go,c11c939,Jinzhu,callbacks support sort with wildcard,298,302,,,0,2020-08-03 13:48:36,
callbacks.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",307,307,,,1,2021-06-10 02:21:28,
clause/from.go,9d19be0,Jinzhu,Setup clauses tests,16,20,Jinzhu,46b1c85,0,2020-02-04 01:51:19,2020-02-04 00:56:15
clause/from.go,9d19be0,Jinzhu,Setup clauses tests,22,25,Jinzhu,46b1c85,0,2020-02-04 01:51:19,2020-02-04 00:56:15
clause/from.go,d833efe,Jinzhu,Work on clauses,21,21,,,0,2020-02-02 11:11:17,
clause/from.go,d833efe,Jinzhu,Work on clauses,11,15,,,0,2020-02-02 11:11:17,
clause/from.go,d833efe,Jinzhu,Work on clauses,9,9,,,0,2020-02-02 11:11:17,
clause/from.go,1f38ec4,Jinzhu,Finish clauses tests,6,8,Jinzhu,9d19be0,0,2020-02-08 15:23:45,2020-02-04 01:51:19
clause/from.go,1f38ec4,Jinzhu,Finish clauses tests,10,10,Jinzhu,9d19be0,0,2020-02-08 15:23:45,2020-02-04 01:51:19
clause/from.go,d833efe,Jinzhu,Work on clauses,1,5,,,0,2020-02-02 11:11:17,
clause/from.go,1f38ec4,Jinzhu,Finish clauses tests,27,33,Jinzhu,9d19be0,0,2020-02-08 15:23:45,2020-02-04 01:51:19
clause/from.go,46b1c85,Jinzhu,Add more clauses,37,37,,,0,2020-02-04 00:56:15,
clause/from.go,d833efe,Jinzhu,Work on clauses,26,26,,,0,2020-02-02 11:11:17,
clause/from.go,1f38ec4,Jinzhu,Finish clauses tests,36,36,Jinzhu,46b1c85,0,2020-02-08 15:23:45,2020-02-04 00:56:15
clause/from.go,1f38ec4,Jinzhu,Finish clauses tests,34,35,Jinzhu,46b1c85,0,2020-02-08 15:23:45,2020-02-04 00:56:15
clause/from_test.go,1f38ec4,Jinzhu,Finish clauses tests,48,52,,,0,2020-02-08 15:23:45,
clause/from_test.go,72a64be,Jinzhu,Don't merge clause From,43,44,Jinzhu,e986371,0,2020-07-15 02:25:10,2020-06-02 01:18:01
clause/from_test.go,1f38ec4,Jinzhu,Finish clauses tests,1,6,,,0,2020-02-08 15:23:45,
clause/from_test.go,1f38ec4,Jinzhu,Finish clauses tests,47,47,,,0,2020-02-08 15:23:45,
clause/from_test.go,1f38ec4,Jinzhu,Finish clauses tests,45,45,,,0,2020-02-08 15:23:45,
clause/from_test.go,e986371,Jinzhu,Rename package name,7,7,Jinzhu,1f38ec4,0,2020-06-02 01:18:01,2020-02-08 15:23:45
clause/from_test.go,1f38ec4,Jinzhu,Finish clauses tests,8,42,,,0,2020-02-08 15:23:45,
clause/from_test.go,72a64be,Jinzhu,Don't merge clause From,46,46,Jinzhu,e986371,0,2020-07-15 02:25:10,2020-06-02 01:18:01
clause/from_test.go,72a64be,Jinzhu,Don't merge clause From,66,66,Jinzhu,e986371,0,2020-07-15 02:25:10,2020-06-02 01:18:01
clause/from_test.go,1f38ec4,Jinzhu,Finish clauses tests,62,65,,,0,2020-02-08 15:23:45,
clause/from_test.go,1f38ec4,Jinzhu,Finish clauses tests,67,75,,,0,2020-02-08 15:23:45,
clause/from_test.go,1f38ec4,Jinzhu,Finish clauses tests,57,57,,,0,2020-02-08 15:23:45,
clause/from_test.go,72a64be,Jinzhu,Don't merge clause From,56,56,Jinzhu,e986371,0,2020-07-15 02:25:10,2020-06-02 01:18:01
clause/from_test.go,1f38ec4,Jinzhu,Finish clauses tests,55,55,,,0,2020-02-08 15:23:45,
clause/from_test.go,72a64be,Jinzhu,Don't merge clause From,53,54,Jinzhu,e986371,0,2020-07-15 02:25:10,2020-06-02 01:18:01
clause/from_test.go,72a64be,Jinzhu,Don't merge clause From,58,61,Jinzhu,e986371,0,2020-07-15 02:25:10,2020-06-02 01:18:01
clause/group_by.go,1f38ec4,Jinzhu,Finish clauses tests,27,32,Jinzhu,d833efe,0,2020-02-08 15:23:45,2020-02-02 11:11:17
clause/group_by.go,d833efe,Jinzhu,Work on clauses,1,4,,,0,2020-02-02 11:11:17,
clause/group_by.go,a158d1a,Jinzhu,Add GroupBy test,26,26,Jinzhu,1f38ec4,0,2020-03-08 10:05:22,2020-02-08 15:23:45
clause/group_by.go,1f38ec4,Jinzhu,Finish clauses tests,7,23,Jinzhu,d833efe,0,2020-02-08 15:23:45,2020-02-02 11:11:17
clause/group_by.go,a158d1a,Jinzhu,Add GroupBy test,6,6,Jinzhu,1f38ec4,0,2020-03-08 10:05:22,2020-02-08 15:23:45
clause/group_by.go,1f38ec4,Jinzhu,Finish clauses tests,5,5,Jinzhu,d833efe,0,2020-02-08 15:23:45,2020-02-02 11:11:17
clause/group_by.go,504f427,Jinzhu,Refactor clause Writer,25,25,Jinzhu,a158d1a,0,2020-03-09 09:07:00,2020-03-08 10:05:22
clause/group_by.go,a158d1a,Jinzhu,Add GroupBy test,24,24,Jinzhu,1f38ec4,0,2020-03-08 10:05:22,2020-02-08 15:23:45
clause/group_by.go,72d0fa6,Douglas Danger Manley,"Fix Statement Where clone array corruption in v2  Method-chaining in gorm is predicated on a `Clause`'s `MergeClause` method ensuring that the two clauses are disconnected in terms of pointers (at least in the Wherec case).  However, the original Where implementation used `append`, which only returns a new instance if the backing array needs to be resized. In some cases, this is true.  Practically, go doubles the size of the slice once it gets full, so the following slice `append` calls would result in a new slice:  * 0 -> 1 * 1 -> 2 * 2 -> 4 * 4 -> 8 * and so on.  So, when the number of ""where"" conditions was 0, 1, 2, or 4, method-chaining would work as expected.  However, when it was 3, 5, 6, or 7, modifying the copy would modify the original.  This also updates the ""order by"", ""group by"" and ""set"" clauses.",33,39,Jinzhu,504f427,1,2020-06-07 20:54:01,2020-03-09 09:07:00
clause/group_by.go,d833efe,Jinzhu,Work on clauses,48,48,,,0,2020-02-02 11:11:17,
clause/group_by.go,33601dc,Jinzhu,Support Having w/o Group,42,47,Douglas Danger Manley,72d0fa6,0,2021-03-30 10:28:09,2020-06-07 20:54:01
clause/group_by.go,1f38ec4,Jinzhu,Finish clauses tests,40,41,,,0,2020-02-08 15:23:45,
clause/group_by_test.go,1f38ec4,Jinzhu,Finish clauses tests,20,20,,,0,2020-02-08 15:23:45,
clause/group_by_test.go,a158d1a,Jinzhu,Add GroupBy test,27,27,Jinzhu,1f38ec4,0,2020-03-08 10:05:22,2020-02-08 15:23:45
clause/group_by_test.go,1f38ec4,Jinzhu,Finish clauses tests,23,26,,,0,2020-02-08 15:23:45,
clause/group_by_test.go,1f38ec4,Jinzhu,Finish clauses tests,8,18,,,0,2020-02-08 15:23:45,
clause/group_by_test.go,1f38ec4,Jinzhu,Finish clauses tests,1,6,,,0,2020-02-08 15:23:45,
clause/group_by_test.go,a158d1a,Jinzhu,Add GroupBy test,19,19,Jinzhu,1f38ec4,0,2020-03-08 10:05:22,2020-02-08 15:23:45
clause/group_by_test.go,e986371,Jinzhu,Rename package name,7,7,Jinzhu,a158d1a,0,2020-06-02 01:18:01,2020-03-08 10:05:22
clause/group_by_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),21,22,Jinzhu,e986371,0,2022-01-06 07:02:53,2020-06-02 01:18:01
clause/group_by_test.go,1f38ec4,Jinzhu,Finish clauses tests,28,29,,,0,2020-02-08 15:23:45,
clause/group_by_test.go,1f38ec4,Jinzhu,Finish clauses tests,31,31,,,0,2020-02-08 15:23:45,
clause/group_by_test.go,1f38ec4,Jinzhu,Finish clauses tests,34,42,,,0,2020-02-08 15:23:45,
clause/group_by_test.go,a158d1a,Jinzhu,Add GroupBy test,30,30,Jinzhu,1f38ec4,0,2020-03-08 10:05:22,2020-02-08 15:23:45
clause/group_by_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),32,33,Jinzhu,e986371,0,2022-01-06 07:02:53,2020-06-02 01:18:01
clause/insert.go,d52ee0a,Jinzhu,Work on create callbacks,1,4,,,0,2020-02-03 02:40:03,
clause/insert.go,d52ee0a,Jinzhu,Work on create callbacks,17,19,,,0,2020-02-03 02:40:03,
clause/insert.go,1f38ec4,Jinzhu,Finish clauses tests,5,5,Jinzhu,d52ee0a,0,2020-02-08 15:23:45,2020-02-03 02:40:03
clause/insert.go,d52ee0a,Jinzhu,Work on create callbacks,6,14,,,0,2020-02-03 02:40:03,
clause/insert.go,1f38ec4,Jinzhu,Finish clauses tests,15,15,Jinzhu,d52ee0a,0,2020-02-08 15:23:45,2020-02-03 02:40:03
clause/insert.go,1f38ec4,Jinzhu,Finish clauses tests,21,25,Jinzhu,d52ee0a,0,2020-02-08 15:23:45,2020-02-03 02:40:03
clause/insert.go,504f427,Jinzhu,Refactor clause Writer,20,20,Jinzhu,1f38ec4,0,2020-03-09 09:07:00,2020-02-08 15:23:45
clause/insert.go,504f427,Jinzhu,Refactor clause Writer,16,16,Jinzhu,1f38ec4,0,2020-03-09 09:07:00,2020-02-08 15:23:45
clause/insert.go,1f38ec4,Jinzhu,Finish clauses tests,34,34,Jinzhu,d52ee0a,0,2020-02-08 15:23:45,2020-02-03 02:40:03
clause/insert.go,d52ee0a,Jinzhu,Work on create callbacks,26,27,,,0,2020-02-03 02:40:03,
clause/insert.go,d52ee0a,Jinzhu,Work on create callbacks,33,33,,,0,2020-02-03 02:40:03,
clause/insert.go,1f38ec4,Jinzhu,Finish clauses tests,28,32,Jinzhu,d52ee0a,0,2020-02-08 15:23:45,2020-02-03 02:40:03
clause/insert.go,d52ee0a,Jinzhu,Work on create callbacks,35,37,,,0,2020-02-03 02:40:03,
clause/insert.go,d52ee0a,Jinzhu,Work on create callbacks,39,39,,,0,2020-02-03 02:40:03,
clause/insert.go,1f38ec4,Jinzhu,Finish clauses tests,38,38,Jinzhu,d52ee0a,0,2020-02-08 15:23:45,2020-02-03 02:40:03
clause/insert_test.go,1f38ec4,Jinzhu,Finish clauses tests,1,6,,,0,2020-02-08 15:23:45,
clause/insert_test.go,e986371,Jinzhu,Rename package name,7,7,Jinzhu,1f38ec4,0,2020-06-02 01:18:01,2020-02-08 15:23:45
clause/insert_test.go,1f38ec4,Jinzhu,Finish clauses tests,8,35,,,0,2020-02-08 15:23:45,
callbacks/create.go,8cb15ca,Jinzhu,Improve test structure,1,2,,,0,2020-02-02 00:35:01,
callbacks/create.go,d833efe,Jinzhu,Work on clauses,3,3,,,0,2020-02-02 11:11:17,
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,5,5,,,0,2020-02-20 02:12:10,
callbacks/create.go,28121d4,Jinzhu,"Fix panic when batch creating from slice contains invalid data, close #3385",4,4,Jinzhu,48b395b,1,2020-09-03 12:59:41,2020-09-03 03:32:30
callbacks/create.go,d833efe,Jinzhu,Work on clauses,7,7,,,0,2020-02-02 11:11:17,
callbacks/create.go,e986371,Jinzhu,Rename package name,8,10,,,0,2020-06-02 01:18:01,
callbacks/create.go,835d7bd,Jinzhu,Add returning support to delete,11,11,Jinzhu,af3fbdc,0,2021-10-27 23:56:55,2021-10-26 14:40:14
callbacks/create.go,d833efe,Jinzhu,Work on clauses,12,12,,,0,2020-02-02 11:11:17,
callbacks/create.go,e9f25c7,Cr,"fix: on confilct with default null (#6129)  * fix: on confilct with default null  * Update create.go  ---------  Co-authored-by: Jinzhu <wosmvp@gmail.com>",6,6,Jinzhu,ea8509b,1,2023-03-10 08:35:26,2022-03-29 10:48:32
callbacks/create.go,a7b3b59,Jinzhu,"Fix hooks order, close https://github.com/go-gorm/gorm.io/pull/519",14,14,Jinzhu,e2e802b,1,2022-03-22 14:42:36,2022-02-28 05:00:30
callbacks/create.go,8cb15ca,Jinzhu,Improve test structure,15,15,,,0,2020-02-02 00:35:01,
callbacks/create.go,9df9f76,Jinzhu,Change UpdatingColumn to SkipHooks,16,16,Jinzhu,f6e1786,0,2020-11-17 09:49:43,2020-11-17 07:19:58
callbacks/create.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,17,17,,,0,2020-06-05 15:26:56,
callbacks/create.go,ce8853e,Jinzhu,Add GormValuer interface support,19,19,Jinzhu,5082674,0,2020-08-27 07:03:57,2020-08-18 10:00:36
callbacks/create.go,8cb15ca,Jinzhu,Improve test structure,13,13,,,0,2020-02-02 00:35:01,
callbacks/create.go,e2a360b,Jinzhu,Add Before/After callbacks,18,18,,,0,2020-02-23 13:22:35,
callbacks/create.go,e2a360b,Jinzhu,Add Before/After callbacks,22,25,,,0,2020-02-23 13:22:35,
callbacks/create.go,163200d,Jinzhu,Test Hooks,20,20,,,0,2020-06-05 12:24:15,
callbacks/create.go,163200d,Jinzhu,Test Hooks,27,27,,,0,2020-06-05 12:24:15,
callbacks/create.go,befef0c,Jinzhu,Improve Hooks,28,28,,,0,2020-05-31 16:12:20,
callbacks/create.go,befef0c,Jinzhu,Improve Hooks,21,21,,,0,2020-05-31 16:12:20,
callbacks/create.go,e2a360b,Jinzhu,Add Before/After callbacks,29,30,,,0,2020-02-23 13:22:35,
callbacks/create.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,32,32,,,0,2020-06-05 15:26:56,
callbacks/create.go,e2a360b,Jinzhu,Add Before/After callbacks,33,33,,,0,2020-02-23 13:22:35,
callbacks/create.go,163200d,Jinzhu,Test Hooks,31,31,,,0,2020-06-05 12:24:15,
callbacks/create.go,8cb15ca,Jinzhu,Improve test structure,34,35,,,0,2020-02-02 00:35:01,
callbacks/create.go,a7b3b59,Jinzhu,"Fix hooks order, close https://github.com/go-gorm/gorm.io/pull/519",36,36,Jinzhu,e2e802b,1,2022-03-22 14:42:36,2022-02-28 05:00:30
callbacks/create.go,f7f6335,Jinzhu,"Fix tests with mysql, postgres",37,37,,,1,2020-03-12 05:05:22,
callbacks/create.go,835d7bd,Jinzhu,Add returning support to delete,38,38,Jinzhu,af3fbdc,0,2021-10-27 23:56:55,2021-10-26 14:40:14
callbacks/create.go,ce8853e,Jinzhu,Add GormValuer interface support,26,26,,,0,2020-08-27 07:03:57,
callbacks/create.go,af3fbdc,Jinzhu,Improve returning support,45,49,Jinzhu,b27095e,0,2021-10-26 14:40:14,2021-10-13 13:01:36
callbacks/create.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",50,51,Jinzhu,6951be0,1,2021-06-10 02:21:28,2021-04-28 09:19:30
callbacks/create.go,f7f6335,Jinzhu,"Fix tests with mysql, postgres",44,44,,,1,2020-03-12 05:05:22,
callbacks/create.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",42,43,Jinzhu,6951be0,1,2021-06-10 02:21:28,2021-04-28 09:19:30
callbacks/create.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",40,41,Jinzhu,6951be0,1,2021-06-10 02:21:28,2021-04-28 09:19:30
callbacks/create.go,5507421,Jinzhu,Add SoftDelete support,39,39,,,0,2020-05-28 23:35:45,
callbacks/create.go,835d7bd,Jinzhu,Add returning support to delete,52,52,Jinzhu,af3fbdc,0,2021-10-27 23:56:55,2021-10-26 14:40:14
callbacks/create.go,af3fbdc,Jinzhu,Improve returning support,53,56,Jinzhu,b27095e,0,2021-10-26 14:40:14,2021-10-13 13:01:36
callbacks/create.go,af3fbdc,Jinzhu,Improve returning support,58,58,Jinzhu,b27095e,0,2021-10-26 14:40:14,2021-10-13 13:01:36
callbacks/create.go,f7f6335,Jinzhu,"Fix tests with mysql, postgres",57,57,,,1,2020-03-12 05:05:22,
callbacks/create.go,f7f6335,Jinzhu,"Fix tests with mysql, postgres",59,59,,,1,2020-03-12 05:05:22,
callbacks/create.go,e5bdd61,kinggo,"fix: save not use soft_delete (#4897)  * fix: Save not use soft_delete  * fix: save not use soft_delete  * fix: save not use soft_delete  * fix: save not use soft_delete  Co-authored-by: kinggo <>",63,63,Jinzhu,300a23f,1,2021-12-08 05:58:06,2021-12-02 02:39:24
callbacks/create.go,d52ee0a,Jinzhu,Work on create callbacks,62,62,,,0,2020-02-03 02:40:03,
callbacks/create.go,f7f6335,Jinzhu,"Fix tests with mysql, postgres",60,61,,,1,2020-03-12 05:05:22,
callbacks/create.go,af3fbdc,Jinzhu,Improve returning support,64,64,Jinzhu,b27095e,0,2021-10-26 14:40:14,2021-10-13 13:01:36
callbacks/create.go,5507421,Jinzhu,Add SoftDelete support,67,67,,,0,2020-05-28 23:35:45,
callbacks/create.go,befef0c,Jinzhu,Improve Hooks,66,66,,,0,2020-05-31 16:12:20,
callbacks/create.go,f7f6335,Jinzhu,"Fix tests with mysql, postgres",70,70,,,1,2020-03-12 05:05:22,
callbacks/create.go,3df249c,Jinzhu,"Use table expr when inserting table, close #3239",65,65,,,0,2020-08-06 09:12:31,
callbacks/create.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",71,74,Jinzhu,835d7bd,0,2021-11-04 05:45:44,2021-10-27 23:56:55
callbacks/create.go,befef0c,Jinzhu,Improve Hooks,69,69,,,0,2020-05-31 16:12:20,
callbacks/create.go,835d7bd,Jinzhu,Add returning support to delete,75,75,Jinzhu,af3fbdc,0,2021-10-27 23:56:55,2021-10-26 14:40:14
callbacks/create.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",76,80,Jinzhu,835d7bd,0,2021-11-04 05:45:44,2021-10-27 23:56:55
callbacks/create.go,befef0c,Jinzhu,Improve Hooks,81,81,,,0,2020-05-31 16:12:20,
callbacks/create.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",82,82,Jinzhu,835d7bd,0,2021-11-04 05:45:44,2021-10-27 23:56:55
callbacks/create.go,f7f6335,Jinzhu,"Fix tests with mysql, postgres",83,83,,,1,2020-03-12 05:05:22,
callbacks/create.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",91,91,Jinzhu,835d7bd,0,2021-11-04 05:45:44,2021-10-27 23:56:55
callbacks/create.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",84,87,Jinzhu,835d7bd,0,2021-11-04 05:45:44,2021-10-27 23:56:55
callbacks/create.go,ea8509b,Jinzhu,Use defer to close rows to avoid scan panic leak rows,88,90,Jinzhu,f92e674,0,2022-03-29 10:48:32,2022-03-23 09:24:25
callbacks/create.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",92,105,Jinzhu,835d7bd,0,2021-11-04 05:45:44,2021-10-27 23:56:55
callbacks/create.go,3207ad6,FangSqing,map insert support return increment id (#6662),133,148,Cr,e9f25c7,0,2023-11-15 13:32:56,2023-03-10 08:35:26
callbacks/create.go,81536f8,Jinzhu,"Fix insert id into map results, fix #6812",114,124,Jinghao Lu,f7ebf04,1,2024-03-19 03:50:28,2024-03-18 05:48:42
callbacks/create.go,81536f8,Jinzhu,"Fix insert id into map results, fix #6812",149,153,Jinghao Lu,f7ebf04,1,2024-03-19 03:50:28,2024-03-18 05:48:42
callbacks/create.go,3207ad6,FangSqing,map insert support return increment id (#6662),125,132,Cr,e9f25c7,0,2023-11-15 13:32:56,2023-03-10 08:35:26
callbacks/create.go,3207ad6,FangSqing,map insert support return increment id (#6662),106,113,Cr,e9f25c7,0,2023-11-15 13:32:56,2023-03-10 08:35:26
callbacks/create.go,0546b59,Jinzhu,"Fix save many2many associations with UUID primary key, close #3182",173,173,,,1,2020-07-22 03:28:00,
callbacks/create.go,3207ad6,FangSqing,map insert support return increment id (#6662),176,177,Cr,e9f25c7,0,2023-11-15 13:32:56,2023-03-10 08:35:26
callbacks/create.go,3207ad6,FangSqing,map insert support return increment id (#6662),154,161,Cr,e9f25c7,0,2023-11-15 13:32:56,2023-03-10 08:35:26
callbacks/create.go,4e147e1,Jinzhu,Test SubQuery,178,178,,,0,2020-06-01 13:26:23,
callbacks/create.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",162,172,Jinzhu,d4f3c10,0,2021-11-04 05:45:44,2021-07-13 13:29:31
callbacks/create.go,befef0c,Jinzhu,Improve Hooks,179,179,,,0,2020-05-31 16:12:20,
callbacks/create.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",175,175,Jinzhu,d4f3c10,0,2021-11-04 05:45:44,2021-07-13 13:29:31
callbacks/create.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",180,186,Jinzhu,d4f3c10,0,2021-11-04 05:45:44,2021-07-13 13:29:31
callbacks/create.go,3207ad6,FangSqing,map insert support return increment id (#6662),187,189,Cr,e9f25c7,0,2023-11-15 13:32:56,2023-03-10 08:35:26
callbacks/create.go,6951be0,Jinzhu,Allow customize clauses,68,68,Jinzhu,3df249c,0,2021-04-28 09:19:30,2020-08-06 09:12:31
callbacks/create.go,f7f6335,Jinzhu,"Fix tests with mysql, postgres",199,199,,,1,2020-03-12 05:05:22,
callbacks/create.go,4e147e1,Jinzhu,Test SubQuery,197,197,,,0,2020-06-01 13:26:23,
callbacks/create.go,3207ad6,FangSqing,map insert support return increment id (#6662),194,194,Jinzhu,e2e802b,0,2023-11-15 13:32:56,2022-02-28 05:00:30
callbacks/create.go,fa22807,Jinzhu,Make inesrt into db works,200,200,,,0,2020-02-23 11:41:29,
callbacks/create.go,e490e09,Jinzhu,Add SetupJoinTable support,198,198,,,0,2020-06-01 15:58:22,
callbacks/create.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",190,193,heige,50e85e1,0,2021-11-04 05:45:44,2021-06-10 02:21:28
callbacks/create.go,8cb15ca,Jinzhu,Improve test structure,201,202,,,0,2020-02-02 00:35:01,
callbacks/create.go,8cb15ca,Jinzhu,Improve test structure,204,204,,,0,2020-02-02 00:35:01,
callbacks/create.go,9df9f76,Jinzhu,Change UpdatingColumn to SkipHooks,205,205,Jinzhu,f6e1786,0,2020-11-17 09:49:43,2020-11-17 07:19:58
callbacks/create.go,a7b3b59,Jinzhu,"Fix hooks order, close https://github.com/go-gorm/gorm.io/pull/519",207,208,Jinzhu,39d84cb,1,2022-03-22 14:42:36,2022-02-19 09:02:53
callbacks/create.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,206,206,,,0,2020-06-05 15:26:56,
callbacks/create.go,163200d,Jinzhu,Test Hooks,209,209,,,0,2020-06-05 12:24:15,
callbacks/create.go,e2a360b,Jinzhu,Add Before/After callbacks,211,213,,,0,2020-02-23 13:22:35,
callbacks/create.go,163200d,Jinzhu,Test Hooks,216,216,,,0,2020-06-05 12:24:15,
callbacks/create.go,a7b3b59,Jinzhu,"Fix hooks order, close https://github.com/go-gorm/gorm.io/pull/519",210,210,Jinzhu,39d84cb,1,2022-03-22 14:42:36,2022-02-19 09:02:53
callbacks/create.go,e2a360b,Jinzhu,Add Before/After callbacks,218,219,,,0,2020-02-23 13:22:35,
callbacks/create.go,a7b3b59,Jinzhu,"Fix hooks order, close https://github.com/go-gorm/gorm.io/pull/519",214,215,Jinzhu,39d84cb,1,2022-03-22 14:42:36,2022-02-19 09:02:53
callbacks/create.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,221,221,,,0,2020-06-05 15:26:56,
callbacks/create.go,a7b3b59,Jinzhu,"Fix hooks order, close https://github.com/go-gorm/gorm.io/pull/519",217,217,Jinzhu,39d84cb,1,2022-03-22 14:42:36,2022-02-19 09:02:53
callbacks/create.go,e2a360b,Jinzhu,Add Before/After callbacks,222,222,,,0,2020-02-23 13:22:35,
callbacks/create.go,3207ad6,FangSqing,map insert support return increment id (#6662),196,196,Jinzhu,e2e802b,0,2023-11-15 13:32:56,2022-02-28 05:00:30
callbacks/create.go,163200d,Jinzhu,Test Hooks,220,220,,,0,2020-06-05 12:24:15,
callbacks/create.go,8cb15ca,Jinzhu,Improve test structure,223,223,,,0,2020-02-02 00:35:01,
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,229,230,,,0,2020-02-20 02:12:10,
callbacks/create.go,a7b3b59,Jinzhu,"Fix hooks order, close https://github.com/go-gorm/gorm.io/pull/519",203,203,heige,4c8810a,1,2022-03-22 14:42:36,2021-11-04 05:45:44
callbacks/create.go,7a90496,Jinzhu,Test create from sql expr with map,232,233,Jinzhu,ce8853e,0,2020-08-27 08:27:59,2020-08-27 07:03:57
callbacks/create.go,f3424c6,Jinzhu,Support save slice of data,231,231,,,0,2020-06-09 16:02:14,
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,224,225,,,0,2020-02-20 02:12:10,
callbacks/create.go,f3424c6,Jinzhu,Support save slice of data,235,235,,,0,2020-06-09 16:02:14,
callbacks/create.go,f3424c6,Jinzhu,Support save slice of data,226,226,,,0,2020-06-09 16:02:14,
callbacks/create.go,da16a8a,Jinzhu,Update updated_at when upserting with Create OnConflict,227,228,Jinzhu,d4f3c10,0,2021-09-17 07:29:49,2021-07-13 13:29:31
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,234,234,,,0,2020-02-20 02:12:10,
callbacks/create.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",195,195,Jinzhu,9df9f76,0,2021-11-04 05:45:44,2020-11-17 09:49:43
callbacks/create.go,3207ad6,FangSqing,map insert support return increment id (#6662),174,174,Jinzhu,835d7bd,0,2023-11-15 13:32:56,2021-10-27 23:56:55
callbacks/create.go,7a90496,Jinzhu,Test create from sql expr with map,236,237,Jinzhu,ce8853e,0,2020-08-27 08:27:59,2020-08-27 07:03:57
callbacks/create.go,f556628,Jinzhu,"Add SetColumn, Changed method",240,240,,,0,2020-06-30 08:53:54,
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,243,243,,,0,2020-02-20 02:12:10,
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,238,239,,,0,2020-02-20 02:12:10,
callbacks/create.go,05e6a65,Jinzhu,Fix typo,242,242,,,1,2020-06-09 04:00:43,
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,247,248,,,0,2020-02-20 02:12:10,
callbacks/create.go,0f00493,Jinzhu,"Continue to update tracking fields even not selected with Select, but skip them if omited with Omit, fix #3856",250,250,Jinzhu,9df9f76,1,2020-12-15 03:18:29,2020-11-17 09:49:43
callbacks/create.go,f3424c6,Jinzhu,Support save slice of data,246,246,,,0,2020-06-09 16:02:14,
callbacks/create.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,249,249,,,0,2020-06-05 15:26:56,
callbacks/create.go,c4872cd,Jinzhu,Refactor callbacks,251,251,,,0,2020-06-09 02:17:24,
callbacks/create.go,8e67a08,Jinzhu,"Fix Scopes with Row, close #4465",244,245,heige,50e85e1,1,2021-06-18 07:38:20,2021-06-10 02:21:28
callbacks/create.go,43ce0b8,Jinzhu,Handle create with default db values,252,252,,,0,2020-02-20 02:13:26,
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,253,255,,,0,2020-02-20 02:12:10,
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,257,257,,,0,2020-02-20 02:12:10,
callbacks/create.go,48b395b,Jinzhu,returns ErrEmptySlice when creating with zero length slice,260,263,Jinzhu,b4166d9,0,2020-09-03 03:32:30,2020-08-30 02:21:11
callbacks/create.go,fa22807,Jinzhu,Make inesrt into db works,270,270,,,0,2020-02-23 11:41:29,
callbacks/create.go,e2e802b,Jinzhu,Refactor Scan,264,267,kinggo,e5bdd61,0,2022-02-28 05:00:30,2021-12-08 05:58:06
callbacks/create.go,fa22807,Jinzhu,Make inesrt into db works,256,256,,,0,2020-02-23 11:41:29,
callbacks/create.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",268,269,heige,50e85e1,0,2021-11-29 01:33:20,2021-06-10 02:21:28
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,280,281,,,0,2020-02-20 02:12:10,
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,276,278,,,0,2020-02-20 02:12:10,
callbacks/create.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",279,279,kinggo,e5bdd61,1,2022-02-19 09:02:53,2021-12-08 05:58:06
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,283,283,,,0,2020-02-20 02:12:10,
callbacks/create.go,f92e674,Jinzhu,Handle field set value error,282,282,kinggo,e5bdd61,1,2022-03-23 09:24:25,2021-12-08 05:58:06
callbacks/create.go,8e67a08,Jinzhu,"Fix Scopes with Row, close #4465",287,287,heige,50e85e1,1,2021-06-18 07:38:20,2021-06-10 02:21:28
callbacks/create.go,f92e674,Jinzhu,Handle field set value error,284,284,kinggo,e5bdd61,1,2022-03-23 09:24:25,2021-12-08 05:58:06
callbacks/create.go,43ce0b8,Jinzhu,Handle create with default db values,286,286,,,0,2020-02-20 02:13:26,
callbacks/create.go,28121d4,Jinzhu,"Fix panic when batch creating from slice contains invalid data, close #3385",271,275,,,1,2020-09-03 12:59:41,
callbacks/create.go,8e67a08,Jinzhu,"Fix Scopes with Row, close #4465",241,241,Jinzhu,ce8853e,1,2021-06-18 07:38:20,2020-08-27 07:03:57
callbacks/create.go,f92e674,Jinzhu,Handle field set value error,288,288,heige,4c8810a,1,2022-03-23 09:24:25,2021-11-04 05:45:44
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,292,292,,,0,2020-02-20 02:12:10,
callbacks/create.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,293,294,,,0,2020-06-05 15:26:56,
callbacks/create.go,43ce0b8,Jinzhu,Handle create with default db values,290,291,,,0,2020-02-20 02:13:26,
callbacks/create.go,a1e35bd,Jinzhu,Support merge batch data some having primary values,296,296,,,0,2020-06-20 08:52:15,
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,298,298,,,0,2020-02-20 02:12:10,
callbacks/create.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",297,297,Jinzhu,d4f3c10,0,2021-11-29 01:33:20,2021-07-13 13:29:31
callbacks/create.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",289,289,Jinzhu,2ec7043,1,2022-02-19 09:02:53,2021-07-13 10:04:42
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,300,303,,,0,2020-02-20 02:12:10,
callbacks/create.go,f7ebf04,Jinghao Lu,"fix(create): fix insert column order (#6855)  * fix(create): fix insert column order  * chore: add ConvertToCreateValues ut for Slice case  * fix: remvoe testify dependency  ---------  Co-authored-by: lujinghao <lujinghao@bytedance.com>",305,309,jessetang,ab89d54,1,2024-03-18 05:48:42,2024-03-18 05:44:55
callbacks/create.go,43ce0b8,Jinzhu,Handle create with default db values,304,304,,,0,2020-02-20 02:13:26,
callbacks/create.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",299,299,Jinzhu,d4f3c10,0,2021-11-29 01:33:20,2021-07-13 13:29:31
callbacks/create.go,1e13fd7,Jinzhu,Fix duplicated columns in INSERT SQL for some fields with default value,310,310,Jinzhu,81536f8,1,2024-04-08 03:29:55,2024-03-19 03:50:28
callbacks/create.go,43ce0b8,Jinzhu,Handle create with default db values,314,316,,,0,2020-02-20 02:13:26,
callbacks/create.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",259,259,,,0,2021-11-29 01:33:20,
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,317,320,,,0,2020-02-20 02:12:10,
callbacks/create.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",295,295,Jinzhu,8e67a08,1,2022-02-19 09:02:53,2021-06-18 07:38:20
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,322,323,,,0,2020-02-20 02:12:10,
callbacks/create.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",258,258,,,0,2021-11-29 01:33:20,
callbacks/create.go,f7ebf04,Jinghao Lu,"fix(create): fix insert column order (#6855)  * fix(create): fix insert column order  * chore: add ConvertToCreateValues ut for Slice case  * fix: remvoe testify dependency  ---------  Co-authored-by: lujinghao <lujinghao@bytedance.com>",311,313,Jinzhu,a7b3b59,1,2024-03-18 05:48:42,2022-03-22 14:42:36
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,325,325,,,0,2020-02-20 02:12:10,
callbacks/create.go,f92e674,Jinzhu,Handle field set value error,324,324,heige,9d5f315,1,2022-03-23 09:24:25,2021-11-29 01:33:20
callbacks/create.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",321,321,heige,9d5f315,1,2022-02-19 09:02:53,2021-11-29 01:33:20
callbacks/create.go,f92e674,Jinzhu,Handle field set value error,326,326,heige,9d5f315,1,2022-03-23 09:24:25,2021-11-29 01:33:20
callbacks/create.go,43ce0b8,Jinzhu,Handle create with default db values,328,328,,,0,2020-02-20 02:13:26,
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,334,334,,,0,2020-02-20 02:12:10,
callbacks/create.go,8e67a08,Jinzhu,"Fix Scopes with Row, close #4465",329,329,heige,50e85e1,1,2021-06-18 07:38:20,2021-06-10 02:21:28
callbacks/create.go,43ce0b8,Jinzhu,Handle create with default db values,332,333,,,0,2020-02-20 02:13:26,
callbacks/create.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,335,335,,,0,2020-06-05 15:26:56,
callbacks/create.go,1e13fd7,Jinzhu,Fix duplicated columns in INSERT SQL for some fields with default value,336,336,Jinzhu,81536f8,1,2024-04-08 03:29:55,2024-03-19 03:50:28
callbacks/create.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,338,338,,,0,2020-06-05 15:26:56,
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,340,342,,,0,2020-02-20 02:12:10,
callbacks/create.go,f92e674,Jinzhu,Handle field set value error,330,330,heige,9d5f315,1,2022-03-23 09:24:25,2021-11-29 01:33:20
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,345,345,,,0,2020-02-20 02:12:10,
callbacks/create.go,62be27d,Jinzhu,Add OnConflict UpdateAll support,348,349,Jinzhu,1e241aa,0,2020-11-16 12:22:08,2020-11-10 13:23:20
callbacks/create.go,f3424c6,Jinzhu,Support save slice of data,346,347,,,0,2020-06-09 16:02:14,
callbacks/create.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",331,331,Jinzhu,eb9a704,1,2022-02-19 09:02:53,2021-02-26 09:11:25
callbacks/create.go,d4f3c10,Jinzhu,"Fix OnConflict with one column, close #4370",350,350,Jinzhu,2ec7043,1,2021-07-13 13:29:31,2021-07-13 10:04:42
callbacks/create.go,5082674,Jinzhu,Add error gorm.ErrInvalidData,343,344,,,1,2020-08-18 10:00:36,
callbacks/create.go,2ec7043,Jinzhu,Respect update permission for OnConflict Create,351,352,Jinzhu,8e67a08,0,2021-07-13 10:04:42,2021-06-18 07:38:20
callbacks/create.go,62be27d,Jinzhu,Add OnConflict UpdateAll support,353,355,Jinzhu,1e241aa,0,2020-11-16 12:22:08,2020-11-10 13:23:20
callbacks/create.go,2ec7043,Jinzhu,Respect update permission for OnConflict Create,356,356,Jinzhu,8e67a08,0,2021-07-13 10:04:42,2021-06-18 07:38:20
callbacks/create.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",327,327,Jinzhu,eb9a704,1,2022-02-19 09:02:53,2021-02-26 09:11:25
callbacks/create.go,da16a8a,Jinzhu,Update updated_at when upserting with Create OnConflict,366,373,Jinzhu,d4f3c10,0,2021-09-17 07:29:49,2021-07-13 13:29:31
callbacks/create.go,da16a8a,Jinzhu,Update updated_at when upserting with Create OnConflict,359,364,Jinzhu,d4f3c10,0,2021-09-17 07:29:49,2021-07-13 13:29:31
callbacks/create.go,f3424c6,Jinzhu,Support save slice of data,376,377,,,0,2020-06-09 16:02:14,
callbacks/create.go,43ce0b8,Jinzhu,Handle create with default db values,378,378,,,0,2020-02-20 02:13:26,
callbacks/create.go,ab89d54,jessetang,chore: UnixNano convert to UnixMilli (#6907),365,365,Jinzhu,d4f3c10,0,2024-03-18 05:44:55,2021-07-13 13:29:31
callbacks/create.go,62be27d,Jinzhu,Add OnConflict UpdateAll support,375,375,,,0,2020-11-16 12:22:08,
callbacks/create.go,da16a8a,Jinzhu,Update updated_at when upserting with Create OnConflict,379,379,Jinzhu,d4f3c10,0,2021-09-17 07:29:49,2021-07-13 13:29:31
callbacks/create.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",285,285,Jinzhu,9fcc337,1,2022-02-19 09:02:53,2020-08-17 09:41:36
callbacks/create.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",337,337,,,1,2022-02-19 09:02:53,
callbacks/create.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",339,339,,,0,2021-11-29 01:33:20,
callbacks/create.go,62be27d,Jinzhu,Add OnConflict UpdateAll support,383,383,,,0,2020-11-16 12:22:08,
callbacks/create.go,f3424c6,Jinzhu,Support save slice of data,392,392,,,0,2020-06-09 16:02:14,
callbacks/create.go,f3424c6,Jinzhu,Support save slice of data,391,391,,,0,2020-06-09 16:02:14,
callbacks/create.go,2ec7043,Jinzhu,Respect update permission for OnConflict Create,374,374,,,0,2021-07-13 10:04:42,
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,393,393,,,0,2020-02-20 02:12:10,
callbacks/create.go,f3424c6,Jinzhu,Support save slice of data,394,395,,,0,2020-06-09 16:02:14,
callbacks/create.go,15ce5b3,Jinzhu,Add create value converter,396,396,,,0,2020-02-20 02:12:10,
callbacks/create.go,62be27d,Jinzhu,Add OnConflict UpdateAll support,390,390,,,0,2020-11-16 12:22:08,
callbacks/create.go,62be27d,Jinzhu,Add OnConflict UpdateAll support,389,389,,,0,2020-11-16 12:22:08,
callbacks/create.go,e1b4c06,Jinzhu,"Fix FullSaveAssociations, close #4874",380,382,,,1,2021-11-29 03:02:44,
callbacks/create.go,27bb913,Jinzhu,Refactor OnConflict.UpdateALl,384,388,,,0,2021-03-18 03:44:20,
callbacks/create.go,e9f25c7,Cr,"fix: on confilct with default null (#6129)  * fix: on confilct with default null  * Update create.go  ---------  Co-authored-by: Jinzhu <wosmvp@gmail.com>",357,358,,,1,2023-03-10 08:35:26,
clause/joins_test.go,f82e9cf,jessetang,test(clause/joins): add join unit test (#5832),1,101,,,0,2022-11-03 13:03:13,
clause/joins.go,f82e9cf,jessetang,test(clause/joins): add join unit test (#5832),12,12,Jinzhu,4456df7,0,2022-11-03 13:03:13,2020-07-16 03:27:12
clause/joins.go,af080e6,Jinzhu,Fix primary key tag,10,11,Jinzhu,5fce175,1,2020-03-12 00:39:42,2020-03-08 11:12:33
clause/joins.go,5fce175,Jinzhu,Add Joins,1,2,,,0,2020-03-08 11:12:33,
clause/joins.go,4456df7,Jinzhu,Lint with golangci-lint,7,9,Jinzhu,50aa9be,0,2020-07-16 03:27:12,2020-04-15 01:45:43
clause/joins.go,af080e6,Jinzhu,Fix primary key tag,19,21,Jinzhu,5fce175,1,2020-03-12 00:39:42,2020-03-08 11:12:33
clause/joins.go,af080e6,Jinzhu,Fix primary key tag,13,13,Jinzhu,5fce175,1,2020-03-12 00:39:42,2020-03-08 11:12:33
clause/joins.go,50aa9be,Jinzhu,Add joins support,14,18,Jinzhu,af080e6,0,2020-04-15 01:45:43,2020-03-12 00:39:42
clause/joins.go,af080e6,Jinzhu,Fix primary key tag,3,6,Jinzhu,5fce175,1,2020-03-12 00:39:42,2020-03-08 11:12:33
clause/joins.go,50aa9be,Jinzhu,Add joins support,22,28,Jinzhu,af080e6,0,2020-04-15 01:45:43,2020-03-12 00:39:42
clause/joins.go,50aa9be,Jinzhu,Add joins support,33,42,Jinzhu,af080e6,0,2020-04-15 01:45:43,2020-03-12 00:39:42
clause/joins.go,af080e6,Jinzhu,Fix primary key tag,29,29,Jinzhu,5fce175,1,2020-03-12 00:39:42,2020-03-08 11:12:33
clause/joins.go,50aa9be,Jinzhu,Add joins support,44,44,Jinzhu,af080e6,0,2020-04-15 01:45:43,2020-03-12 00:39:42
clause/joins.go,af080e6,Jinzhu,Fix primary key tag,45,45,,,1,2020-03-12 00:39:42,
clause/joins.go,50aa9be,Jinzhu,Add joins support,30,31,Jinzhu,af080e6,0,2020-04-15 01:45:43,2020-03-12 00:39:42
clause/joins.go,af080e6,Jinzhu,Fix primary key tag,43,43,,,1,2020-03-12 00:39:42,
clause/joins.go,af080e6,Jinzhu,Fix primary key tag,32,32,Jinzhu,5fce175,1,2020-03-12 00:39:42,2020-03-08 11:12:33
clause/joins.go,5fce175,Jinzhu,Add Joins,47,47,,,0,2020-03-08 11:12:33,
clause/joins.go,af080e6,Jinzhu,Fix primary key tag,46,46,,,1,2020-03-12 00:39:42,
clause/limit.go,1f38ec4,Jinzhu,Finish clauses tests,6,15,Jinzhu,d833efe,0,2020-02-08 15:23:45,2020-02-02 11:11:17
clause/limit.go,e8f48b5,robhafner,fix: limit=0 results (#5735) (#5736),21,21,Mikhail Faraponov,2990790,1,2022-10-07 12:14:14,2022-03-17 14:54:30
clause/limit.go,3c03b6e,SmallTianTian,"fix no limit no offset. (#3101)  * fix no limit no offset.  * add test for playground.",19,20,Jinzhu,504f427,1,2020-07-02 10:14:33,2020-03-09 09:07:00
clause/limit.go,504f427,Jinzhu,Refactor clause Writer,17,17,Jinzhu,cbd55db,0,2020-03-09 09:07:00,2020-03-07 07:20:09
clause/limit.go,d833efe,Jinzhu,Work on clauses,1,4,,,0,2020-02-02 11:11:17,
clause/limit.go,9514d5f,jasonchuan,"let limit and offset use bind parameter (#6806)  * let limit and offset use bind parameter  * format  * format limt_test  * try again  * fix test case fro connpool  * adding driverName for postgres  ,if not to do so, the stmt vars will be added  a wrong  one called pgx.QueryExecModeSimpleProtocol  ,  causing the SQL with limit  problem  need 1 parameter ,but given two.  * delete trunk files  * restore the test_test.go  * restore test_test.go  * driver/postgres->v1.5.5  * change postgres version rollback to 1.5.4  ---------  Co-authored-by: chenchuan <chenchuan@360.cn> Co-authored-by: jason_chuan <jason_chuan@126.com>",18,18,hanwn,59ca46d,1,2024-02-06 02:54:40,2023-04-11 02:25:47
clause/limit.go,e8f48b5,robhafner,fix: limit=0 results (#5735) (#5736),16,16,Mikhail Faraponov,2990790,1,2022-10-07 12:14:14,2022-03-17 14:54:30
clause/limit.go,e8f48b5,robhafner,fix: limit=0 results (#5735) (#5736),5,5,Mikhail Faraponov,2990790,1,2022-10-07 12:14:14,2022-03-17 14:54:30
clause/limit.go,2990790,Mikhail Faraponov,Use WriteByte for single byte operations (#5167)  Co-authored-by: Mikhail Faraponov <mikefaraponov@Mikhails-MacBook-Pro.local>,22,22,Jinzhu,e583dfa,0,2022-03-17 14:54:30,2020-09-11 03:54:21
clause/limit.go,cbd55db,Jinzhu,Add Update test,23,23,Jinzhu,0c34123,0,2020-03-07 07:20:09,2020-03-04 15:56:42
clause/limit.go,3c03b6e,SmallTianTian,"fix no limit no offset. (#3101)  * fix no limit no offset.  * add test for playground.",24,24,Jinzhu,504f427,1,2020-07-02 10:14:33,2020-03-09 09:07:00
clause/limit.go,1f38ec4,Jinzhu,Finish clauses tests,42,45,Jinzhu,d833efe,0,2020-02-08 15:23:45,2020-02-02 11:11:17
clause/limit.go,1f38ec4,Jinzhu,Finish clauses tests,26,33,Jinzhu,d833efe,0,2020-02-08 15:23:45,2020-02-02 11:11:17
clause/limit.go,0c34123,Jinzhu,"Add Limit, Offset",40,41,Jinzhu,1f38ec4,0,2020-03-04 15:56:42,2020-02-08 15:23:45
clause/limit.go,d833efe,Jinzhu,Work on clauses,46,46,,,0,2020-02-02 11:11:17,
clause/limit.go,9514d5f,jasonchuan,"let limit and offset use bind parameter (#6806)  * let limit and offset use bind parameter  * format  * format limt_test  * try again  * fix test case fro connpool  * adding driverName for postgres  ,if not to do so, the stmt vars will be added  a wrong  one called pgx.QueryExecModeSimpleProtocol  ,  causing the SQL with limit  problem  need 1 parameter ,but given two.  * delete trunk files  * restore the test_test.go  * restore test_test.go  * driver/postgres->v1.5.5  * change postgres version rollback to 1.5.4  ---------  Co-authored-by: chenchuan <chenchuan@360.cn> Co-authored-by: jason_chuan <jason_chuan@126.com>",25,25,hanwn,59ca46d,1,2024-02-06 02:54:40,2023-04-11 02:25:47
clause/limit.go,1f38ec4,Jinzhu,Finish clauses tests,35,39,Jinzhu,d833efe,0,2020-02-08 15:23:45,2020-02-02 11:11:17
clause/limit.go,59ca46d,hanwn,fix: `limit(0).offset(0)` return all data (#6191)  Co-authored-by: hanwang <hanwang.7721@bytedance.com>,34,34,robhafner,e8f48b5,1,2023-04-11 02:25:47,2022-10-07 12:14:14
clause/locking.go,1f38ec4,Jinzhu,Finish clauses tests,10,16,,,0,2020-02-08 15:23:45,
clause/locking.go,1f38ec4,Jinzhu,Finish clauses tests,18,21,,,0,2020-02-08 15:23:45,
clause/locking.go,38d1cd2,Jinzhu,Replace For with Locking,17,17,Jinzhu,504f427,0,2020-06-06 13:35:28,2020-03-09 09:07:00
clause/locking.go,1f38ec4,Jinzhu,Finish clauses tests,28,28,,,0,2020-02-08 15:23:45,
clause/locking.go,1f38ec4,Jinzhu,Finish clauses tests,1,2,,,0,2020-02-08 15:23:45,
clause/locking.go,38d1cd2,Jinzhu,Replace For with Locking,29,31,Jinzhu,504f427,0,2020-06-06 13:35:28,2020-03-09 09:07:00
clause/locking.go,b9ebdb1,Maciej Laskowski,"Making locking parameters more intuitive (#6719)  * Making locking parameters more intuitive  * remove dedicated type",3,9,Jinzhu,38d1cd2,0,2023-12-15 08:32:56,2020-06-06 13:35:28
clause/locking.go,38d1cd2,Jinzhu,Replace For with Locking,22,27,Jinzhu,504f427,0,2020-06-06 13:35:28,2020-03-09 09:07:00
clause/locking.go,1f38ec4,Jinzhu,Finish clauses tests,32,35,,,0,2020-02-08 15:23:45,
clause/locking.go,1f38ec4,Jinzhu,Finish clauses tests,38,38,,,0,2020-02-08 15:23:45,
clause/locking.go,38d1cd2,Jinzhu,Replace For with Locking,36,37,,,0,2020-06-06 13:35:28,
clause/locking_test.go,1f38ec4,Jinzhu,Finish clauses tests,8,9,,,0,2020-02-08 15:23:45,
clause/locking_test.go,1f38ec4,Jinzhu,Finish clauses tests,18,20,,,0,2020-02-08 15:23:45,
clause/locking_test.go,1f38ec4,Jinzhu,Finish clauses tests,1,6,,,0,2020-02-08 15:23:45,
clause/locking_test.go,b9ebdb1,Maciej Laskowski,"Making locking parameters more intuitive (#6719)  * Making locking parameters more intuitive  * remove dedicated type",21,21,Jinzhu,6937d71,0,2023-12-15 08:32:56,2020-06-06 14:52:08
clause/locking_test.go,6937d71,Jinzhu,Refactor clauses,10,10,Jinzhu,38d1cd2,0,2020-06-06 14:52:08,2020-06-06 13:35:28
clause/locking_test.go,b9ebdb1,Maciej Laskowski,"Making locking parameters more intuitive (#6719)  * Making locking parameters more intuitive  * remove dedicated type",17,17,Jinzhu,6937d71,0,2023-12-15 08:32:56,2020-06-06 14:52:08
clause/locking_test.go,1f38ec4,Jinzhu,Finish clauses tests,11,16,,,0,2020-02-08 15:23:45,
clause/locking_test.go,1f38ec4,Jinzhu,Finish clauses tests,23,24,,,0,2020-02-08 15:23:45,
clause/locking_test.go,e986371,Jinzhu,Rename package name,7,7,Jinzhu,1f38ec4,0,2020-06-02 01:18:01,2020-02-08 15:23:45
clause/locking_test.go,38d1cd2,Jinzhu,Replace For with Locking,22,22,Jinzhu,e986371,0,2020-06-06 13:35:28,2020-06-02 01:18:01
clause/locking_test.go,b9ebdb1,Maciej Laskowski,"Making locking parameters more intuitive (#6719)  * Making locking parameters more intuitive  * remove dedicated type",25,25,Jinzhu,6937d71,0,2023-12-15 08:32:56,2020-06-06 14:52:08
clause/locking_test.go,1f38ec4,Jinzhu,Finish clauses tests,27,27,,,0,2020-02-08 15:23:45,
clause/locking_test.go,38d1cd2,Jinzhu,Replace For with Locking,26,26,Jinzhu,e986371,0,2020-06-06 13:35:28,2020-06-02 01:18:01
clause/locking_test.go,1f38ec4,Jinzhu,Finish clauses tests,32,39,,,0,2020-02-08 15:23:45,
clause/locking_test.go,b9ebdb1,Maciej Laskowski,"Making locking parameters more intuitive (#6719)  * Making locking parameters more intuitive  * remove dedicated type",28,31,Jinzhu,6937d71,0,2023-12-15 08:32:56,2020-06-06 14:52:08
clause/limit_test.go,e986371,Jinzhu,Rename package name,7,7,Jinzhu,1f38ec4,0,2020-06-02 01:18:01,2020-02-08 15:23:45
clause/limit_test.go,1f38ec4,Jinzhu,Finish clauses tests,1,6,,,0,2020-02-08 15:23:45,
clause/limit_test.go,9514d5f,jasonchuan,"let limit and offset use bind parameter (#6806)  * let limit and offset use bind parameter  * format  * format limt_test  * try again  * fix test case fro connpool  * adding driverName for postgres  ,if not to do so, the stmt vars will be added  a wrong  one called pgx.QueryExecModeSimpleProtocol  ,  causing the SQL with limit  problem  need 1 parameter ,but given two.  * delete trunk files  * restore the test_test.go  * restore test_test.go  * driver/postgres->v1.5.5  * change postgres version rollback to 1.5.4  ---------  Co-authored-by: chenchuan <chenchuan@360.cn> Co-authored-by: jason_chuan <jason_chuan@126.com>",25,26,hanwn,59ca46d,1,2024-02-06 02:54:40,2023-04-11 02:25:47
clause/limit_test.go,1f38ec4,Jinzhu,Finish clauses tests,23,24,,,0,2020-02-08 15:23:45,
clause/limit_test.go,1f38ec4,Jinzhu,Finish clauses tests,15,21,,,0,2020-02-08 15:23:45,
clause/limit_test.go,1f38ec4,Jinzhu,Finish clauses tests,8,10,,,0,2020-02-08 15:23:45,
clause/limit_test.go,e8f48b5,robhafner,fix: limit=0 results (#5735) (#5736),22,22,SmallTianTian,3c03b6e,1,2022-10-07 12:14:14,2020-07-02 10:14:33
clause/limit_test.go,e8f48b5,robhafner,fix: limit=0 results (#5735) (#5736),11,14,SmallTianTian,3c03b6e,1,2022-10-07 12:14:14,2020-07-02 10:14:33
clause/limit_test.go,1f38ec4,Jinzhu,Finish clauses tests,27,28,,,0,2020-02-08 15:23:45,
clause/limit_test.go,e8f48b5,robhafner,fix: limit=0 results (#5735) (#5736),29,29,SmallTianTian,3c03b6e,1,2022-10-07 12:14:14,2020-07-02 10:14:33
clause/limit_test.go,e8f48b5,robhafner,fix: limit=0 results (#5735) (#5736),32,33,SmallTianTian,3c03b6e,1,2022-10-07 12:14:14,2020-07-02 10:14:33
clause/limit_test.go,9514d5f,jasonchuan,"let limit and offset use bind parameter (#6806)  * let limit and offset use bind parameter  * format  * format limt_test  * try again  * fix test case fro connpool  * adding driverName for postgres  ,if not to do so, the stmt vars will be added  a wrong  one called pgx.QueryExecModeSimpleProtocol  ,  causing the SQL with limit  problem  need 1 parameter ,but given two.  * delete trunk files  * restore the test_test.go  * restore test_test.go  * driver/postgres->v1.5.5  * change postgres version rollback to 1.5.4  ---------  Co-authored-by: chenchuan <chenchuan@360.cn> Co-authored-by: jason_chuan <jason_chuan@126.com>",40,41,hanwn,59ca46d,1,2024-02-06 02:54:40,2023-04-11 02:25:47
clause/limit_test.go,9514d5f,jasonchuan,"let limit and offset use bind parameter (#6806)  * let limit and offset use bind parameter  * format  * format limt_test  * try again  * fix test case fro connpool  * adding driverName for postgres  ,if not to do so, the stmt vars will be added  a wrong  one called pgx.QueryExecModeSimpleProtocol  ,  causing the SQL with limit  problem  need 1 parameter ,but given two.  * delete trunk files  * restore the test_test.go  * restore test_test.go  * driver/postgres->v1.5.5  * change postgres version rollback to 1.5.4  ---------  Co-authored-by: chenchuan <chenchuan@360.cn> Co-authored-by: jason_chuan <jason_chuan@126.com>",30,31,hanwn,59ca46d,1,2024-02-06 02:54:40,2023-04-11 02:25:47
clause/limit_test.go,9514d5f,jasonchuan,"let limit and offset use bind parameter (#6806)  * let limit and offset use bind parameter  * format  * format limt_test  * try again  * fix test case fro connpool  * adding driverName for postgres  ,if not to do so, the stmt vars will be added  a wrong  one called pgx.QueryExecModeSimpleProtocol  ,  causing the SQL with limit  problem  need 1 parameter ,but given two.  * delete trunk files  * restore the test_test.go  * restore test_test.go  * driver/postgres->v1.5.5  * change postgres version rollback to 1.5.4  ---------  Co-authored-by: chenchuan <chenchuan@360.cn> Co-authored-by: jason_chuan <jason_chuan@126.com>",35,36,hanwn,59ca46d,1,2024-02-06 02:54:40,2023-04-11 02:25:47
clause/limit_test.go,59ca46d,hanwn,fix: `limit(0).offset(0)` return all data (#6191)  Co-authored-by: hanwang <hanwang.7721@bytedance.com>,37,38,robhafner,e8f48b5,1,2023-04-11 02:25:47,2022-10-07 12:14:14
clause/limit_test.go,9514d5f,jasonchuan,"let limit and offset use bind parameter (#6806)  * let limit and offset use bind parameter  * format  * format limt_test  * try again  * fix test case fro connpool  * adding driverName for postgres  ,if not to do so, the stmt vars will be added  a wrong  one called pgx.QueryExecModeSimpleProtocol  ,  causing the SQL with limit  problem  need 1 parameter ,but given two.  * delete trunk files  * restore the test_test.go  * restore test_test.go  * driver/postgres->v1.5.5  * change postgres version rollback to 1.5.4  ---------  Co-authored-by: chenchuan <chenchuan@360.cn> Co-authored-by: jason_chuan <jason_chuan@126.com>",45,46,hanwn,59ca46d,1,2024-02-06 02:54:40,2023-04-11 02:25:47
clause/limit_test.go,3c03b6e,SmallTianTian,"fix no limit no offset. (#3101)  * fix no limit no offset.  * add test for playground.",42,44,Jinzhu,e986371,1,2020-07-02 10:14:33,2020-06-02 01:18:01
clause/limit_test.go,59ca46d,hanwn,fix: `limit(0).offset(0)` return all data (#6191)  Co-authored-by: hanwang <hanwang.7721@bytedance.com>,34,34,robhafner,e8f48b5,1,2023-04-11 02:25:47,2022-10-07 12:14:14
clause/limit_test.go,9514d5f,jasonchuan,"let limit and offset use bind parameter (#6806)  * let limit and offset use bind parameter  * format  * format limt_test  * try again  * fix test case fro connpool  * adding driverName for postgres  ,if not to do so, the stmt vars will be added  a wrong  one called pgx.QueryExecModeSimpleProtocol  ,  causing the SQL with limit  problem  need 1 parameter ,but given two.  * delete trunk files  * restore the test_test.go  * restore test_test.go  * driver/postgres->v1.5.5  * change postgres version rollback to 1.5.4  ---------  Co-authored-by: chenchuan <chenchuan@360.cn> Co-authored-by: jason_chuan <jason_chuan@126.com>",50,51,hanwn,59ca46d,1,2024-02-06 02:54:40,2023-04-11 02:25:47
clause/limit_test.go,3c03b6e,SmallTianTian,"fix no limit no offset. (#3101)  * fix no limit no offset.  * add test for playground.",47,48,Jinzhu,e986371,1,2020-07-02 10:14:33,2020-06-02 01:18:01
clause/limit_test.go,e8f48b5,robhafner,fix: limit=0 results (#5735) (#5736),49,49,SmallTianTian,3c03b6e,1,2022-10-07 12:14:14,2020-07-02 10:14:33
clause/limit_test.go,9514d5f,jasonchuan,"let limit and offset use bind parameter (#6806)  * let limit and offset use bind parameter  * format  * format limt_test  * try again  * fix test case fro connpool  * adding driverName for postgres  ,if not to do so, the stmt vars will be added  a wrong  one called pgx.QueryExecModeSimpleProtocol  ,  causing the SQL with limit  problem  need 1 parameter ,but given two.  * delete trunk files  * restore the test_test.go  * restore test_test.go  * driver/postgres->v1.5.5  * change postgres version rollback to 1.5.4  ---------  Co-authored-by: chenchuan <chenchuan@360.cn> Co-authored-by: jason_chuan <jason_chuan@126.com>",55,56,hanwn,59ca46d,1,2024-02-06 02:54:40,2023-04-11 02:25:47
clause/limit_test.go,e8f48b5,robhafner,fix: limit=0 results (#5735) (#5736),54,54,SmallTianTian,3c03b6e,1,2022-10-07 12:14:14,2020-07-02 10:14:33
clause/limit_test.go,3c03b6e,SmallTianTian,"fix no limit no offset. (#3101)  * fix no limit no offset.  * add test for playground.",39,39,,,1,2020-07-02 10:14:33,
clause/limit_test.go,1f38ec4,Jinzhu,Finish clauses tests,62,63,,,0,2020-02-08 15:23:45,
clause/limit_test.go,e8f48b5,robhafner,fix: limit=0 results (#5735) (#5736),59,59,SmallTianTian,3c03b6e,1,2022-10-07 12:14:14,2020-07-02 10:14:33
clause/limit_test.go,9514d5f,jasonchuan,"let limit and offset use bind parameter (#6806)  * let limit and offset use bind parameter  * format  * format limt_test  * try again  * fix test case fro connpool  * adding driverName for postgres  ,if not to do so, the stmt vars will be added  a wrong  one called pgx.QueryExecModeSimpleProtocol  ,  causing the SQL with limit  problem  need 1 parameter ,but given two.  * delete trunk files  * restore the test_test.go  * restore test_test.go  * driver/postgres->v1.5.5  * change postgres version rollback to 1.5.4  ---------  Co-authored-by: chenchuan <chenchuan@360.cn> Co-authored-by: jason_chuan <jason_chuan@126.com>",60,61,hanwn,59ca46d,1,2024-02-06 02:54:40,2023-04-11 02:25:47
clause/limit_test.go,3c03b6e,SmallTianTian,"fix no limit no offset. (#3101)  * fix no limit no offset.  * add test for playground.",52,53,,,1,2020-07-02 10:14:33,
clause/limit_test.go,1f38ec4,Jinzhu,Finish clauses tests,57,58,,,0,2020-02-08 15:23:45,
clause/limit_test.go,1f38ec4,Jinzhu,Finish clauses tests,72,80,,,0,2020-02-08 15:23:45,
clause/limit_test.go,9514d5f,jasonchuan,"let limit and offset use bind parameter (#6806)  * let limit and offset use bind parameter  * format  * format limt_test  * try again  * fix test case fro connpool  * adding driverName for postgres  ,if not to do so, the stmt vars will be added  a wrong  one called pgx.QueryExecModeSimpleProtocol  ,  causing the SQL with limit  problem  need 1 parameter ,but given two.  * delete trunk files  * restore the test_test.go  * restore test_test.go  * driver/postgres->v1.5.5  * change postgres version rollback to 1.5.4  ---------  Co-authored-by: chenchuan <chenchuan@360.cn> Co-authored-by: jason_chuan <jason_chuan@126.com>",70,71,hanwn,59ca46d,1,2024-02-06 02:54:40,2023-04-11 02:25:47
clause/limit_test.go,1f38ec4,Jinzhu,Finish clauses tests,67,68,,,0,2020-02-08 15:23:45,
clause/limit_test.go,9514d5f,jasonchuan,"let limit and offset use bind parameter (#6806)  * let limit and offset use bind parameter  * format  * format limt_test  * try again  * fix test case fro connpool  * adding driverName for postgres  ,if not to do so, the stmt vars will be added  a wrong  one called pgx.QueryExecModeSimpleProtocol  ,  causing the SQL with limit  problem  need 1 parameter ,but given two.  * delete trunk files  * restore the test_test.go  * restore test_test.go  * driver/postgres->v1.5.5  * change postgres version rollback to 1.5.4  ---------  Co-authored-by: chenchuan <chenchuan@360.cn> Co-authored-by: jason_chuan <jason_chuan@126.com>",65,66,hanwn,59ca46d,1,2024-02-06 02:54:40,2023-04-11 02:25:47
clause/limit_test.go,e8f48b5,robhafner,fix: limit=0 results (#5735) (#5736),64,64,,,1,2022-10-07 12:14:14,
clause/limit_test.go,e8f48b5,robhafner,fix: limit=0 results (#5735) (#5736),69,69,,,1,2022-10-07 12:14:14,
clause/order_by.go,1f38ec4,Jinzhu,Finish clauses tests,15,15,Jinzhu,46b1c85,0,2020-02-08 15:23:45,2020-02-04 00:56:15
clause/order_by.go,1f38ec4,Jinzhu,Finish clauses tests,9,9,Jinzhu,46b1c85,0,2020-02-08 15:23:45,2020-02-04 00:56:15
clause/order_by.go,1f38ec4,Jinzhu,Finish clauses tests,3,3,Jinzhu,46b1c85,0,2020-02-08 15:23:45,2020-02-04 00:56:15
clause/order_by.go,d833efe,Jinzhu,Work on clauses,1,2,,,0,2020-02-02 11:11:17,
clause/order_by.go,c915471,Jinzhu,Support Expression for OrderBy clause,10,11,Douglas Danger Manley,72d0fa6,0,2020-11-03 02:30:05,2020-06-07 20:54:01
clause/order_by.go,46b1c85,Jinzhu,Add more clauses,16,19,Jinzhu,d833efe,0,2020-02-04 00:56:15,2020-02-02 11:11:17
clause/order_by.go,46b1c85,Jinzhu,Add more clauses,12,14,Jinzhu,d833efe,0,2020-02-04 00:56:15,2020-02-02 11:11:17
clause/order_by.go,46b1c85,Jinzhu,Add more clauses,4,8,Jinzhu,d833efe,0,2020-02-04 00:56:15,2020-02-02 11:11:17
clause/order_by.go,1f38ec4,Jinzhu,Finish clauses tests,20,20,Jinzhu,46b1c85,0,2020-02-08 15:23:45,2020-02-04 00:56:15
clause/order_by.go,c915471,Jinzhu,Support Expression for OrderBy clause,21,27,Douglas Danger Manley,72d0fa6,0,2020-11-03 02:30:05,2020-06-07 20:54:01
clause/order_by.go,46b1c85,Jinzhu,Add more clauses,28,28,Jinzhu,d833efe,0,2020-02-04 00:56:15,2020-02-02 11:11:17
clause/order_by.go,c915471,Jinzhu,Support Expression for OrderBy clause,29,32,Douglas Danger Manley,72d0fa6,0,2020-11-03 02:30:05,2020-06-07 20:54:01
clause/order_by.go,46b1c85,Jinzhu,Add more clauses,51,51,,,0,2020-02-04 00:56:15,
clause/order_by.go,46b1c85,Jinzhu,Add more clauses,33,36,Jinzhu,d833efe,0,2020-02-04 00:56:15,2020-02-02 11:11:17
clause/order_by.go,1f38ec4,Jinzhu,Finish clauses tests,37,47,Jinzhu,46b1c85,0,2020-02-08 15:23:45,2020-02-04 00:56:15
clause/order_by.go,d833efe,Jinzhu,Work on clauses,54,54,,,0,2020-02-02 11:11:17,
clause/order_by.go,72d0fa6,Douglas Danger Manley,"Fix Statement Where clone array corruption in v2  Method-chaining in gorm is predicated on a `Clause`'s `MergeClause` method ensuring that the two clauses are disconnected in terms of pointers (at least in the Wherec case).  However, the original Where implementation used `append`, which only returns a new instance if the backing array needs to be resized. In some cases, this is true.  Practically, go doubles the size of the slice once it gets full, so the following slice `append` calls would result in a new slice:  * 0 -> 1 * 1 -> 2 * 2 -> 4 * 4 -> 8 * and so on.  So, when the number of ""where"" conditions was 0, 1, 2, or 4, method-chaining would work as expected.  However, when it was 3, 5, 6, or 7, modifying the copy would modify the original.  This also updates the ""order by"", ""group by"" and ""set"" clauses.",48,50,Jinzhu,504f427,1,2020-06-07 20:54:01,2020-03-09 09:07:00
clause/order_by.go,1f38ec4,Jinzhu,Finish clauses tests,52,53,,,0,2020-02-08 15:23:45,
clause/order_by_test.go,e986371,Jinzhu,Rename package name,7,7,Jinzhu,1f38ec4,0,2020-06-02 01:18:01,2020-02-08 15:23:45
clause/order_by_test.go,1f38ec4,Jinzhu,Finish clauses tests,8,41,,,0,2020-02-08 15:23:45,
clause/order_by_test.go,1f38ec4,Jinzhu,Finish clauses tests,51,58,,,0,2020-02-08 15:23:45,
clause/order_by_test.go,c915471,Jinzhu,Support Expression for OrderBy clause,42,47,Jinzhu,e986371,0,2020-11-03 02:30:05,2020-06-02 01:18:01
clause/order_by_test.go,1f38ec4,Jinzhu,Finish clauses tests,1,6,,,0,2020-02-08 15:23:45,
clause/order_by_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),48,49,Jinzhu,c915471,0,2022-01-06 07:02:53,2020-11-03 02:30:05
clause/order_by_test.go,c915471,Jinzhu,Support Expression for OrderBy clause,50,50,Jinzhu,e986371,0,2020-11-03 02:30:05,2020-06-02 01:18:01
clause/on_conflict.go,435bf70,Jinzhu,"Add OnConflict OnConstraint support, close #3882",7,10,Jinzhu,62be27d,0,2021-01-05 13:31:51,2020-11-16 12:22:08
clause/on_conflict.go,435bf70,Jinzhu,"Add OnConflict OnConstraint support, close #3882",4,5,Jinzhu,62be27d,0,2021-01-05 13:31:51,2020-11-16 12:22:08
clause/on_conflict.go,cc064f2,Jinzhu,Add on conflict support,1,3,Jinzhu,1f38ec4,0,2020-05-25 15:11:42,2020-02-08 15:23:45
clause/on_conflict.go,435bf70,Jinzhu,"Add OnConflict OnConstraint support, close #3882",40,41,Jinzhu,62be27d,0,2021-01-05 13:31:51,2020-11-16 12:22:08
clause/on_conflict.go,cc064f2,Jinzhu,Add on conflict support,11,18,Jinzhu,1f38ec4,0,2020-05-25 15:11:42,2020-02-08 15:23:45
clause/on_conflict.go,9564b82,Wen Sun,Fix OnConstraint builder (#5738),23,39,Jinzhu,af3fbdc,1,2022-10-07 05:46:20,2021-10-26 14:40:14
clause/on_conflict.go,dd8bf88,Vitaliy Shein,add Target where clause for on conflict (#4442)  Co-authored-by: Vitaliy Shein <vitaliy.shein@thebricks.com>,6,6,Karolos Lykos,f0d0bbb,0,2021-06-07 02:39:00,2021-04-28 23:15:37
clause/on_conflict.go,cc064f2,Jinzhu,Add on conflict support,42,47,,,0,2020-05-25 15:11:42,
clause/on_conflict.go,a13b7a6,Jinzhu,"Fix OnConflict where order for postgres, close #4073",48,49,Jinzhu,435bf70,1,2021-02-10 06:11:29,2021-01-05 13:31:51
clause/on_conflict.go,435bf70,Jinzhu,"Add OnConflict OnConstraint support, close #3882",19,22,Jinzhu,cc064f2,0,2021-01-05 13:31:51,2020-05-25 15:11:42
clause/on_conflict.go,a13b7a6,Jinzhu,"Fix OnConflict where order for postgres, close #4073",51,53,Jinzhu,1f38ec4,1,2021-02-10 06:11:29,2020-02-08 15:23:45
clause/on_conflict.go,f0d0bbb,Karolos Lykos,"Added missing white space (#4330)  * Added missing white space  * Added missing white space  * Added missing white space",50,50,Jinzhu,1f38ec4,0,2021-04-28 23:15:37,2020-02-08 15:23:45
clause/on_conflict.go,cc064f2,Jinzhu,Add on conflict support,54,59,,,0,2020-05-25 15:11:42,
clause/returning.go,1f38ec4,Jinzhu,Finish clauses tests,1,13,,,0,2020-02-08 15:23:45,
clause/returning.go,1f38ec4,Jinzhu,Finish clauses tests,24,28,,,0,2020-02-08 15:23:45,
clause/returning.go,1f38ec4,Jinzhu,Finish clauses tests,36,37,,,0,2020-02-08 15:23:45,
clause/returning.go,1f38ec4,Jinzhu,Finish clauses tests,35,35,,,0,2020-02-08 15:23:45,
clause/returning.go,835d7bd,Jinzhu,Add returning support to delete,14,18,Jinzhu,1f38ec4,0,2021-10-27 23:56:55,2020-02-08 15:23:45
clause/returning.go,1f38ec4,Jinzhu,Finish clauses tests,19,19,,,0,2020-02-08 15:23:45,
clause/returning.go,835d7bd,Jinzhu,Add returning support to delete,20,23,Jinzhu,1f38ec4,0,2021-10-27 23:56:55,2020-02-08 15:23:45
clause/returning.go,8503287,aviyam181199,Fixed Empty Returning Clause Merge Bug (#7339),29,34,Jinzhu,835d7bd,1,2025-01-12 10:18:04,2021-10-27 23:56:55
clause/returning_test.go,1f38ec4,Jinzhu,Finish clauses tests,1,6,,,0,2020-02-08 15:23:45,
clause/returning_test.go,1f38ec4,Jinzhu,Finish clauses tests,8,28,,,0,2020-02-08 15:23:45,
clause/returning_test.go,8503287,aviyam181199,Fixed Empty Returning Clause Merge Bug (#7339),29,44,Jinzhu,e986371,1,2025-01-12 10:18:04,2020-06-02 01:18:01
clause/returning_test.go,1f38ec4,Jinzhu,Finish clauses tests,45,52,,,0,2020-02-08 15:23:45,
clause/returning_test.go,e986371,Jinzhu,Rename package name,7,7,Jinzhu,1f38ec4,0,2020-06-02 01:18:01,2020-02-08 15:23:45
clause/select.go,d833efe,Jinzhu,Work on clauses,8,9,,,0,2020-02-02 11:11:17,
clause/select.go,46b1c85,Jinzhu,Add more clauses,10,11,Jinzhu,d833efe,0,2020-02-04 00:56:15,2020-02-02 11:11:17
clause/select.go,d833efe,Jinzhu,Work on clauses,12,13,,,0,2020-02-02 11:11:17,
clause/select.go,d833efe,Jinzhu,Work on clauses,1,4,,,0,2020-02-02 11:11:17,
clause/select.go,98ad29f,Jinzhu,"Add Selects, Omits for statement",6,7,Jinzhu,1f38ec4,0,2020-02-16 05:45:27,2020-02-08 15:23:45
clause/select.go,1f38ec4,Jinzhu,Finish clauses tests,15,15,Jinzhu,46b1c85,0,2020-02-08 15:23:45,2020-02-04 00:56:15
clause/select.go,eda2f02,Jinzhu,Add Distinct support,5,5,Jinzhu,98ad29f,0,2020-06-05 11:19:12,2020-02-16 05:45:27
clause/select.go,d833efe,Jinzhu,Work on clauses,14,14,,,0,2020-02-02 11:11:17,
clause/select.go,9a4941b,Jinzhu,Test Order/GroupBy,17,17,Jinzhu,eda2f02,0,2020-07-06 01:47:14,2020-06-05 11:19:12
clause/select.go,d833efe,Jinzhu,Work on clauses,21,30,,,0,2020-02-02 11:11:17,
clause/select.go,eda2f02,Jinzhu,Add Distinct support,18,19,Jinzhu,98ad29f,0,2020-06-05 11:19:12,2020-02-16 05:45:27
clause/select.go,eda2f02,Jinzhu,Add Distinct support,16,16,Jinzhu,98ad29f,0,2020-06-05 11:19:12,2020-02-16 05:45:27
clause/select.go,1f38ec4,Jinzhu,Finish clauses tests,31,31,Jinzhu,46b1c85,0,2020-02-08 15:23:45,2020-02-04 00:56:15
clause/select.go,3627795,Jinzhu,"Fix Select with specific symbol, close #3157",33,40,Jinzhu,9a4941b,1,2020-07-17 03:24:24,2020-07-06 01:47:14
clause/select.go,98ad29f,Jinzhu,"Add Selects, Omits for statement",32,32,Jinzhu,1f38ec4,0,2020-02-16 05:45:27,2020-02-08 15:23:45
clause/select.go,1f38ec4,Jinzhu,Finish clauses tests,20,20,,,0,2020-02-08 15:23:45,
clause/select.go,ac97aec,River,"New Comma Expression (#4524)  * Add new comma expression  * Add comma expression unit test",46,59,Jinzhu,3627795,0,2021-07-14 07:51:24,2020-07-17 03:24:24
clause/select.go,d833efe,Jinzhu,Work on clauses,44,45,,,0,2020-02-02 11:11:17,
clause/select.go,98ad29f,Jinzhu,"Add Selects, Omits for statement",41,43,,,0,2020-02-16 05:45:27,
clause/select_test.go,1f38ec4,Jinzhu,Finish clauses tests,1,6,,,0,2020-02-08 15:23:45,
clause/select_test.go,98ad29f,Jinzhu,"Add Selects, Omits for statement",32,32,Jinzhu,1f38ec4,0,2020-02-16 05:45:27,2020-02-08 15:23:45
clause/select_test.go,cec0d32,Jinzhu,Support use clause.Expression as argument,46,51,River,ac97aec,0,2022-01-28 10:48:32,2021-07-14 07:51:24
clause/select_test.go,e986371,Jinzhu,Rename package name,7,7,Jinzhu,98ad29f,0,2020-06-02 01:18:01,2020-02-16 05:45:27
clause/select_test.go,1f38ec4,Jinzhu,Finish clauses tests,33,33,,,0,2020-02-08 15:23:45,
clause/select_test.go,1f38ec4,Jinzhu,Finish clauses tests,8,31,,,0,2020-02-08 15:23:45,
clause/select_test.go,ac97aec,River,"New Comma Expression (#4524)  * Add new comma expression  * Add comma expression unit test",34,45,Jinzhu,e986371,0,2021-07-14 07:51:24,2020-06-02 01:18:01
clause/select_test.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",52,56,Jinzhu,cec0d32,1,2023-02-18 01:06:43,2022-01-28 10:48:32
clause/select_test.go,cec0d32,Jinzhu,Support use clause.Expression as argument,57,61,River,ac97aec,0,2022-01-28 10:48:32,2021-07-14 07:51:24
clause/select_test.go,1f38ec4,Jinzhu,Finish clauses tests,65,72,,,0,2020-02-08 15:23:45,
clause/select_test.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",62,63,Jinzhu,cec0d32,1,2023-02-18 01:06:43,2022-01-28 10:48:32
clause/select_test.go,cec0d32,Jinzhu,Support use clause.Expression as argument,64,64,River,ac97aec,0,2022-01-28 10:48:32,2021-07-14 07:51:24
clause/set_test.go,e986371,Jinzhu,Rename package name,9,9,Jinzhu,7b6b9c4,0,2020-06-02 01:18:01,2020-05-30 16:42:52
clause/set_test.go,1f38ec4,Jinzhu,Finish clauses tests,7,8,,,0,2020-02-08 15:23:45,
clause/set_test.go,1f38ec4,Jinzhu,Finish clauses tests,1,4,,,0,2020-02-08 15:23:45,
clause/set_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),32,33,Jinzhu,52b763a,0,2022-01-06 07:02:53,2020-06-06 09:47:30
clause/set_test.go,1f38ec4,Jinzhu,Finish clauses tests,10,22,,,0,2020-02-08 15:23:45,
clause/set_test.go,52b763a,Jinzhu,Add convert map Assignments helper,5,6,Jinzhu,e986371,0,2020-06-06 09:47:30,2020-06-02 01:18:01
clause/set_test.go,1f38ec4,Jinzhu,Finish clauses tests,25,31,,,0,2020-02-08 15:23:45,
clause/set_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),23,24,Jinzhu,52b763a,0,2022-01-06 07:02:53,2020-06-06 09:47:30
clause/set_test.go,52b763a,Jinzhu,Add convert map Assignments helper,43,59,Jinzhu,e986371,0,2020-06-06 09:47:30,2020-06-02 01:18:01
clause/set_test.go,1f38ec4,Jinzhu,Finish clauses tests,34,42,,,0,2020-02-08 15:23:45,
clause/set.go,1f38ec4,Jinzhu,Finish clauses tests,25,26,,,0,2020-02-08 15:23:45,
clause/set.go,504f427,Jinzhu,Refactor clause Writer,24,24,Jinzhu,1f38ec4,0,2020-03-09 09:07:00,2020-02-08 15:23:45
clause/set.go,1f38ec4,Jinzhu,Finish clauses tests,5,23,,,0,2020-02-08 15:23:45,
clause/set.go,e1b4c06,Jinzhu,"Fix FullSaveAssociations, close #4874",27,27,Jinzhu,649d02f,1,2021-11-29 03:02:44,2020-06-09 01:04:32
clause/set.go,1f38ec4,Jinzhu,Finish clauses tests,28,28,,,0,2020-02-08 15:23:45,
clause/set.go,1f38ec4,Jinzhu,Finish clauses tests,1,2,,,0,2020-02-08 15:23:45,
clause/set.go,e1b4c06,Jinzhu,"Fix FullSaveAssociations, close #4874",29,29,Jinzhu,649d02f,1,2021-11-29 03:02:44,2020-06-09 01:04:32
clause/set.go,52b763a,Jinzhu,Add convert map Assignments helper,3,4,Jinzhu,7b6b9c4,0,2020-06-06 09:47:30,2020-05-30 16:42:52
clause/set.go,1f38ec4,Jinzhu,Finish clauses tests,30,34,,,0,2020-02-08 15:23:45,
clause/set.go,1f38ec4,Jinzhu,Finish clauses tests,38,38,,,0,2020-02-08 15:23:45,
clause/set.go,52b763a,Jinzhu,Add convert map Assignments helper,45,46,Jinzhu,7b6b9c4,0,2020-06-06 09:47:30,2020-05-30 16:42:52
clause/set.go,72d0fa6,Douglas Danger Manley,"Fix Statement Where clone array corruption in v2  Method-chaining in gorm is predicated on a `Clause`'s `MergeClause` method ensuring that the two clauses are disconnected in terms of pointers (at least in the Wherec case).  However, the original Where implementation used `append`, which only returns a new instance if the backing array needs to be resized. In some cases, this is true.  Practically, go doubles the size of the slice once it gets full, so the following slice `append` calls would result in a new slice:  * 0 -> 1 * 1 -> 2 * 2 -> 4 * 4 -> 8 * and so on.  So, when the number of ""where"" conditions was 0, 1, 2, or 4, method-chaining would work as expected.  However, when it was 3, 5, 6, or 7, modifying the copy would modify the original.  This also updates the ""order by"", ""group by"" and ""set"" clauses.",35,37,Jinzhu,82d55b1,1,2020-06-07 20:54:01,2020-06-07 04:50:00
clause/set.go,aaf0725,Jinzhu,Refactor for performance,47,49,Douglas Danger Manley,72d0fa6,0,2020-06-08 09:21:26,2020-06-07 20:54:01
clause/set.go,aaf0725,Jinzhu,Refactor for performance,41,41,Douglas Danger Manley,72d0fa6,0,2020-06-08 09:21:26,2020-06-07 20:54:01
clause/set.go,52b763a,Jinzhu,Add convert map Assignments helper,39,40,Jinzhu,7b6b9c4,0,2020-06-06 09:47:30,2020-05-30 16:42:52
clause/set.go,52b763a,Jinzhu,Add convert map Assignments helper,42,44,Jinzhu,7b6b9c4,0,2020-06-06 09:47:30,2020-05-30 16:42:52
clause/set.go,52b763a,Jinzhu,Add convert map Assignments helper,50,52,Jinzhu,7b6b9c4,0,2020-06-06 09:47:30,2020-05-30 16:42:52
clause/set.go,649d02f,Jinzhu,Add batch upsert tests,53,60,Jinzhu,aaf0725,0,2020-06-09 01:04:32,2020-06-08 09:21:26
clause/update.go,504f427,Jinzhu,Refactor clause Writer,16,16,Jinzhu,1f38ec4,0,2020-03-09 09:07:00,2020-02-08 15:23:45
clause/update.go,1f38ec4,Jinzhu,Finish clauses tests,17,38,,,0,2020-02-08 15:23:45,
clause/update.go,1f38ec4,Jinzhu,Finish clauses tests,1,15,,,0,2020-02-08 15:23:45,
clause/update_test.go,1f38ec4,Jinzhu,Finish clauses tests,1,6,,,0,2020-02-08 15:23:45,
clause/update_test.go,1f38ec4,Jinzhu,Finish clauses tests,8,35,,,0,2020-02-08 15:23:45,
clause/update_test.go,e986371,Jinzhu,Rename package name,7,7,Jinzhu,1f38ec4,0,2020-06-02 01:18:01,2020-02-08 15:23:45
clause/values_test.go,1f38ec4,Jinzhu,Finish clauses tests,26,34,,,0,2020-02-08 15:23:45,
clause/values_test.go,1f38ec4,Jinzhu,Finish clauses tests,1,6,,,0,2020-02-08 15:23:45,
clause/values_test.go,1f38ec4,Jinzhu,Finish clauses tests,8,23,,,0,2020-02-08 15:23:45,
clause/values_test.go,e986371,Jinzhu,Rename package name,7,7,Jinzhu,1f38ec4,0,2020-06-02 01:18:01,2020-02-08 15:23:45
clause/values_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),24,25,Jinzhu,e986371,0,2022-01-06 07:02:53,2020-06-02 01:18:01
clause/values.go,15ce5b3,Jinzhu,Add create value converter,10,10,Jinzhu,1f38ec4,0,2020-02-20 02:12:10,2020-02-08 15:23:45
clause/values.go,d52ee0a,Jinzhu,Work on create callbacks,26,27,,,0,2020-02-03 02:40:03,
clause/values.go,d52ee0a,Jinzhu,Work on create callbacks,28,31,,,0,2020-02-03 02:40:03,
clause/values.go,d52ee0a,Jinzhu,Work on create callbacks,11,24,,,0,2020-02-03 02:40:03,
clause/values.go,504f427,Jinzhu,Refactor clause Writer,25,25,Jinzhu,15ce5b3,0,2020-03-09 09:07:00,2020-02-20 02:12:10
clause/values.go,504f427,Jinzhu,Refactor clause Writer,33,33,Jinzhu,15ce5b3,0,2020-03-09 09:07:00,2020-02-20 02:12:10
clause/values.go,1f38ec4,Jinzhu,Finish clauses tests,32,32,Jinzhu,d52ee0a,0,2020-02-08 15:23:45,2020-02-03 02:40:03
clause/values.go,d52ee0a,Jinzhu,Work on create callbacks,1,9,,,0,2020-02-03 02:40:03,
clause/values.go,d52ee0a,Jinzhu,Work on create callbacks,34,36,,,0,2020-02-03 02:40:03,
clause/values.go,504f427,Jinzhu,Refactor clause Writer,37,37,Jinzhu,15ce5b3,0,2020-03-09 09:07:00,2020-02-20 02:12:10
clause/values.go,15ce5b3,Jinzhu,Add create value converter,43,43,Jinzhu,1f38ec4,0,2020-02-20 02:12:10,2020-02-08 15:23:45
clause/values.go,d52ee0a,Jinzhu,Work on create callbacks,38,39,,,0,2020-02-03 02:40:03,
clause/values.go,1f38ec4,Jinzhu,Finish clauses tests,40,42,Jinzhu,d52ee0a,0,2020-02-08 15:23:45,2020-02-03 02:40:03
clause/values.go,1f38ec4,Jinzhu,Finish clauses tests,44,45,Jinzhu,d52ee0a,0,2020-02-08 15:23:45,2020-02-03 02:40:03
clause/where_test.go,1f38ec4,Jinzhu,Finish clauses tests,8,19,,,0,2020-02-08 15:23:45,
clause/where_test.go,e986371,Jinzhu,Rename package name,7,7,Jinzhu,1f38ec4,0,2020-06-02 01:18:01,2020-02-08 15:23:45
clause/where_test.go,1f38ec4,Jinzhu,Finish clauses tests,29,31,,,0,2020-02-08 15:23:45,
clause/where_test.go,1f38ec4,Jinzhu,Finish clauses tests,1,6,,,0,2020-02-08 15:23:45,
clause/where_test.go,1f38ec4,Jinzhu,Finish clauses tests,22,26,,,0,2020-02-08 15:23:45,
clause/where_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),27,28,Jinzhu,3d8f6f9,0,2022-01-06 07:02:53,2020-06-19 17:55:30
clause/where_test.go,6937d71,Jinzhu,Refactor clauses,32,32,Jinzhu,e986371,0,2020-06-06 14:52:08,2020-06-02 01:18:01
clause/where_test.go,1f38ec4,Jinzhu,Finish clauses tests,33,33,,,0,2020-02-08 15:23:45,
clause/where_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),20,21,Jinzhu,3d8f6f9,0,2022-01-06 07:02:53,2020-06-19 17:55:30
clause/where_test.go,1f38ec4,Jinzhu,Finish clauses tests,36,40,,,0,2020-02-08 15:23:45,
clause/where_test.go,1f38ec4,Jinzhu,Finish clauses tests,52,58,,,0,2020-02-08 15:23:45,
clause/where_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),34,35,Jinzhu,3d8f6f9,0,2022-01-06 07:02:53,2020-06-19 17:55:30
clause/where_test.go,1f38ec4,Jinzhu,Finish clauses tests,61,61,,,0,2020-02-08 15:23:45,
clause/where_test.go,1f38ec4,Jinzhu,Finish clauses tests,43,49,,,0,2020-02-08 15:23:45,
clause/where_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),59,60,Jinzhu,3d8f6f9,0,2022-01-06 07:02:53,2020-06-19 17:55:30
clause/where_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),50,51,Jinzhu,3d8f6f9,0,2022-01-06 07:02:53,2020-06-19 17:55:30
clause/where_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),41,42,Jinzhu,3d8f6f9,0,2022-01-06 07:02:53,2020-06-19 17:55:30
clause/where_test.go,3d8f6f9,Jinzhu,Test GroupConditions,62,65,Jinzhu,6937d71,0,2020-06-19 17:55:30,2020-06-06 14:52:08
clause/where_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),67,67,Jinzhu,3d8f6f9,0,2022-01-06 07:02:53,2020-06-19 17:55:30
clause/where_test.go,3e2c4fc,tsuba3,"Fix regression in db.Not introduced in v1.25.6. (#6844)  * Fix regression in db.Not introduced in 940358e.  * Fix",108,115,Jinzhu,940358e,1,2024-03-05 02:23:51,2024-01-12 08:42:21
clause/where_test.go,5edc781,sammyrnycreal,"Fixed the use of ""or"" to be "" OR "", to account for words that contain ""or"" or ""and"" (e.g., 'score', 'band') in a sql statement as the name of a field.",69,96,kinggo,b47cf57,1,2022-02-20 00:22:21,2022-01-06 07:02:53
clause/where_test.go,5edc781,sammyrnycreal,"Fixed the use of ""or"" to be "" OR "", to account for words that contain ""or"" or ""and"" (e.g., 'score', 'band') in a sql statement as the name of a field.",98,107,kinggo,b47cf57,1,2022-02-20 00:22:21,2022-01-06 07:02:53
clause/where_test.go,1f38ec4,Jinzhu,Finish clauses tests,132,139,,,0,2020-02-08 15:23:45,
clause/where_test.go,207f1ac,Cr,fix: not clause with or condition (#6984),116,131,tsuba3,3e2c4fc,1,2024-04-25 12:22:53,2024-03-05 02:23:51
clause/where_test.go,940358e,Jinzhu,Fix tests doesn't follow https://gorm.io/docs/method_chaining.html convention,97,97,sammyrnycreal,5edc781,1,2024-01-12 08:42:21,2022-02-20 00:22:21
clause/where_test.go,940358e,Jinzhu,Fix tests doesn't follow https://gorm.io/docs/method_chaining.html convention,66,66,sammyrnycreal,5edc781,1,2024-01-12 08:42:21,2022-02-20 00:22:21
clause/where_test.go,3d8f6f9,Jinzhu,Test GroupConditions,68,68,,,0,2020-06-19 17:55:30,
clause/with.go,d833efe,Jinzhu,Work on clauses,1,2,,,0,2020-02-02 11:11:17,
clause/with.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),3,3,Jinzhu,d833efe,0,2022-01-06 07:02:53,2020-02-02 11:11:17
clause/expression.go,d002c70,Jinzhu,Support named argument for struct,6,6,Jinzhu,e7188c0,0,2020-09-17 13:52:41,2020-09-09 02:42:13
clause/expression.go,9d5b983,Jinzhu,Refactor builder,1,2,,,0,2020-01-30 11:47:00,
clause/expression.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",3,3,Jinzhu,c422d75,0,2020-05-30 13:05:27,2020-05-30 11:43:29
clause/expression.go,9d5b983,Jinzhu,Refactor builder,10,19,,,0,2020-01-30 11:47:00,
clause/expression.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",5,5,Jinzhu,c422d75,0,2020-05-30 13:05:27,2020-05-30 11:43:29
clause/expression.go,bba569a,Jinzhu,Add NamedArg support,4,4,Jinzhu,c291c2f,0,2020-07-10 04:28:24,2020-05-30 13:05:27
clause/expression.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",7,8,Jinzhu,c422d75,0,2020-05-30 13:05:27,2020-05-30 11:43:29
clause/expression.go,c422d75,Jinzhu,Add Scopes tests,29,33,Jinzhu,ac8708b,0,2020-05-30 11:43:29,2020-05-28 05:12:56
clause/expression.go,9d5b983,Jinzhu,Refactor builder,20,21,,,0,2020-01-30 11:47:00,
clause/expression.go,c915471,Jinzhu,Support Expression for OrderBy clause,36,36,Jinzhu,08ecef8,0,2020-11-03 02:30:05,2020-10-13 07:32:29
clause/expression.go,9d5b983,Jinzhu,Refactor builder,25,28,,,0,2020-01-30 11:47:00,
clause/expression.go,c915471,Jinzhu,Support Expression for OrderBy clause,22,24,Jinzhu,08ecef8,0,2020-11-03 02:30:05,2020-10-13 07:32:29
clause/expression.go,c9165fe,Jinzhu,"Don't panic when using unmatched vars in query, close #3488",35,35,Jinzhu,d002c70,0,2020-09-18 13:42:27,2020-09-17 13:52:41
clause/expression.go,2242ac6,Jinzhu,Fix tests & refactor for PR #3429,44,49,caelansar,aceb3da,1,2020-09-09 02:31:48,2020-09-08 13:28:04
clause/expression.go,aceb3da,caelansar,correct generated sql,42,43,Jinzhu,496db1f,1,2020-09-08 13:28:04,2020-08-31 07:45:56
clause/expression.go,504f427,Jinzhu,Refactor clause Writer,34,34,Jinzhu,0160bab,0,2020-03-09 09:07:00,2020-02-05 10:28:58
clause/expression.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",37,41,Jinzhu,c422d75,0,2020-05-30 13:05:27,2020-05-30 11:43:29
clause/expression.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",50,50,Jinzhu,c422d75,0,2020-05-30 13:05:27,2020-05-30 11:43:29
clause/expression.go,c422d75,Jinzhu,Add Scopes tests,51,51,Jinzhu,ac8708b,0,2020-05-30 11:43:29,2020-05-28 05:12:56
clause/expression.go,504f427,Jinzhu,Refactor clause Writer,60,61,Jinzhu,6d58b62,0,2020-03-09 09:07:00,2020-02-22 12:57:29
clause/expression.go,c422d75,Jinzhu,Add Scopes tests,55,59,Jinzhu,ac8708b,0,2020-05-30 11:43:29,2020-05-28 05:12:56
clause/expression.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",52,53,Jinzhu,ac8708b,0,2020-05-30 13:05:27,2020-05-28 05:12:56
clause/expression.go,c422d75,Jinzhu,Add Scopes tests,9,9,,,0,2020-05-30 11:43:29,
clause/expression.go,c422d75,Jinzhu,Add Scopes tests,54,54,Jinzhu,ac8708b,0,2020-05-30 11:43:29,2020-05-28 05:12:56
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,69,69,Jinzhu,0160bab,0,2020-02-08 15:23:45,2020-02-05 10:28:58
clause/expression.go,bba569a,Jinzhu,Add NamedArg support,78,86,Jinzhu,c291c2f,0,2020-07-10 04:28:24,2020-05-30 13:05:27
clause/expression.go,b8f33a4,Jinzhu,Add unused argument (#4871)  * Append unused argument to gorm statement,70,75,Jim,5202529,0,2021-11-23 09:11:52,2021-09-20 13:40:48
clause/expression.go,90476fe,Jinzhu,"Fix Join with slice IN, close #4133",87,90,Jinzhu,6c0ee27,1,2021-03-04 10:40:47,2020-12-30 02:42:13
clause/expression.go,c422d75,Jinzhu,Add Scopes tests,62,66,Jinzhu,6d58b62,0,2020-05-30 11:43:29,2020-02-22 12:57:29
clause/expression.go,bba569a,Jinzhu,Add NamedArg support,91,100,Jinzhu,c291c2f,0,2020-07-10 04:28:24,2020-05-30 13:05:27
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,76,77,Jinzhu,0160bab,0,2020-02-08 15:23:45,2020-02-05 10:28:58
clause/expression.go,d002c70,Jinzhu,Support named argument for struct,101,101,Jinzhu,e7188c0,0,2020-09-17 13:52:41,2020-09-09 02:42:13
clause/expression.go,504f427,Jinzhu,Refactor clause Writer,67,68,Jinzhu,0160bab,0,2020-03-09 09:07:00,2020-02-05 10:28:58
clause/expression.go,9d8a5bb,hjwblog.com,feat: reuse name (#6626),129,129,weih,bae684b,0,2023-10-10 06:45:48,2023-08-10 05:34:33
clause/expression.go,bba569a,Jinzhu,Add NamedArg support,121,128,Jinzhu,c291c2f,0,2020-07-10 04:28:24,2020-05-30 13:05:27
clause/expression.go,540fb49,Clark McCauley,"Fixed #5355 - Named variables don't work when followed by Windows CRLF line endings (#5356)  * Fixed #5355.  * Fixed unit test to test both CRLF and CR line endings",130,130,Jinzhu,45e804d,1,2022-05-22 07:16:01,2021-11-29 08:19:11
clause/expression.go,90476fe,Jinzhu,"Fix Join with slice IN, close #4133",141,141,Jinzhu,6c0ee27,1,2021-03-04 10:40:47,2020-12-30 02:42:13
clause/expression.go,08ecef8,Jinzhu,"Fix NamedArguments with nested struct, close #3596",102,115,Jinzhu,c9165fe,1,2020-10-13 07:32:29,2020-09-18 13:42:27
clause/expression.go,d002c70,Jinzhu,Support named argument for struct,116,118,Jinzhu,bba569a,0,2020-09-17 13:52:41,2020-07-10 04:28:24
clause/expression.go,08ecef8,Jinzhu,"Fix NamedArguments with nested struct, close #3596",119,120,Jinzhu,bba569a,1,2020-10-13 07:32:29,2020-07-10 04:28:24
clause/expression.go,90476fe,Jinzhu,"Fix Join with slice IN, close #4133",144,167,Jinzhu,6c0ee27,1,2021-03-04 10:40:47,2020-12-30 02:42:13
clause/expression.go,90476fe,Jinzhu,"Fix Join with slice IN, close #4133",172,176,Jinzhu,6c0ee27,1,2021-03-04 10:40:47,2020-12-30 02:42:13
clause/expression.go,bba569a,Jinzhu,Add NamedArg support,142,142,Jinzhu,6d58b62,0,2020-07-10 04:28:24,2020-02-22 12:57:29
clause/expression.go,76cd73c,Jinzhu,"Fix wipes out MySQL global variables from the query, close #4515",182,187,Jinzhu,9abac96,1,2021-07-13 10:48:43,2021-05-31 09:21:27
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,191,201,,,0,2020-02-08 15:23:45,
clause/expression.go,bba569a,Jinzhu,Add NamedArg support,131,140,Jinzhu,6d58b62,0,2020-07-10 04:28:24,2020-02-22 12:57:29
clause/expression.go,504f427,Jinzhu,Refactor clause Writer,202,202,,,0,2020-03-09 09:07:00,
clause/expression.go,bba569a,Jinzhu,Add NamedArg support,168,171,Jinzhu,6d58b62,0,2020-07-10 04:28:24,2020-02-22 12:57:29
clause/expression.go,c9165fe,Jinzhu,"Don't panic when using unmatched vars in query, close #3488",143,143,Jinzhu,0160bab,0,2020-09-18 13:42:27,2020-02-05 10:28:58
clause/expression.go,bba569a,Jinzhu,Add NamedArg support,177,181,Jinzhu,6d58b62,0,2020-07-10 04:28:24,2020-02-22 12:57:29
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,211,211,,,0,2020-02-08 15:23:45,
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,203,203,,,0,2020-02-08 15:23:45,
clause/expression.go,093694f,Sec Cake,Fix extra 'AND' when len(values) == 0 ON IN.NegationBuild() (#4618),219,219,Jinzhu,76cd73c,1,2021-08-20 10:06:48,2021-07-13 10:48:43
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,215,218,,,0,2020-02-08 15:23:45,
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,220,221,,,0,2020-02-08 15:23:45,
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,223,223,,,0,2020-02-08 15:23:45,
clause/expression.go,694e42d,Jinzhu,Fix clause.IN with only one value of multiple rows,225,230,Jinzhu,c915471,1,2020-11-17 11:11:24,2020-11-03 02:30:05
clause/expression.go,504f427,Jinzhu,Refactor clause Writer,212,214,,,0,2020-03-09 09:07:00,
clause/expression.go,bba569a,Jinzhu,Add NamedArg support,188,190,Jinzhu,6d58b62,0,2020-07-10 04:28:24,2020-02-22 12:57:29
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,235,246,,,0,2020-02-08 15:23:45,
clause/expression.go,14e9608,Jinzhu,"Eq, Neq support slice of data",247,248,Jinzhu,90476fe,0,2021-05-31 07:25:38,2021-03-04 10:40:47
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,231,231,,,0,2020-02-08 15:23:45,
clause/expression.go,694e42d,Jinzhu,Fix clause.IN with only one value of multiple rows,204,210,Jinzhu,6d58b62,1,2020-11-17 11:11:24,2020-02-22 12:57:29
clause/expression.go,504f427,Jinzhu,Refactor clause Writer,232,234,,,0,2020-03-09 09:07:00,
clause/expression.go,093694f,Sec Cake,Fix extra 'AND' when len(values) == 0 ON IN.NegationBuild() (#4618),222,222,LeoZhan,832abda,1,2021-08-20 10:06:48,2020-11-08 01:41:43
clause/expression.go,bae684b,weih,"fix(clause): when the value of clause.Eq is an empty array, the SQL should be IN (NULL) (#6503)",260,260,Clark McCauley,540fb49,1,2023-08-10 05:34:33,2022-05-22 07:16:01
clause/expression.go,14e9608,Jinzhu,"Eq, Neq support slice of data",249,249,Jinzhu,90476fe,0,2021-05-31 07:25:38,2021-03-04 10:40:47
clause/expression.go,bae684b,weih,"fix(clause): when the value of clause.Eq is an empty array, the SQL should be IN (NULL) (#6503)",250,258,Clark McCauley,540fb49,1,2023-08-10 05:34:33,2022-05-22 07:16:01
clause/expression.go,14e9608,Jinzhu,"Eq, Neq support slice of data",262,268,Jinzhu,90476fe,0,2021-05-31 07:25:38,2021-03-04 10:40:47
clause/expression.go,832abda,LeoZhan,refactor: simplify the writing instead of using struct literal (#3728),273,273,Jinzhu,c915471,0,2020-11-08 01:41:43,2020-11-03 02:30:05
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,274,281,,,0,2020-02-08 15:23:45,
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,269,272,,,0,2020-02-08 15:23:45,
clause/expression.go,14e9608,Jinzhu,"Eq, Neq support slice of data",282,289,Jinzhu,90476fe,0,2021-05-31 07:25:38,2021-03-04 10:40:47
clause/expression.go,14e9608,Jinzhu,"Eq, Neq support slice of data",261,261,Jinzhu,c915471,0,2021-05-31 07:25:38,2020-11-03 02:30:05
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,300,303,,,0,2020-02-08 15:23:45,
clause/expression.go,694e42d,Jinzhu,Fix clause.IN with only one value of multiple rows,224,224,Jinzhu,6d58b62,1,2020-11-17 11:11:24,2020-02-22 12:57:29
clause/expression.go,14e9608,Jinzhu,"Eq, Neq support slice of data",259,259,Jinzhu,c915471,0,2021-05-31 07:25:38,2020-11-03 02:30:05
clause/expression.go,9abac96,Jinzhu,"Fix Eq, Neq support slice of data",290,290,Jinzhu,c915471,1,2021-05-31 09:21:27,2020-11-03 02:30:05
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,318,324,,,0,2020-02-08 15:23:45,
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,314,316,,,0,2020-02-08 15:23:45,
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,305,311,,,0,2020-02-08 15:23:45,
clause/expression.go,14e9608,Jinzhu,"Eq, Neq support slice of data",291,299,Jinzhu,c915471,0,2021-05-31 07:25:38,2020-11-03 02:30:05
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,327,329,,,0,2020-02-08 15:23:45,
clause/expression.go,504f427,Jinzhu,Refactor clause Writer,312,313,,,0,2020-03-09 09:07:00,
clause/expression.go,504f427,Jinzhu,Refactor clause Writer,325,326,,,0,2020-03-09 09:07:00,
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,331,337,,,0,2020-02-08 15:23:45,
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,340,342,,,0,2020-02-08 15:23:45,
clause/expression.go,504f427,Jinzhu,Refactor clause Writer,338,339,,,0,2020-03-09 09:07:00,
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,344,350,,,0,2020-02-08 15:23:45,
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,353,355,,,0,2020-02-08 15:23:45,
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,357,363,,,0,2020-02-08 15:23:45,
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,366,369,,,0,2020-02-08 15:23:45,
clause/expression.go,504f427,Jinzhu,Refactor clause Writer,364,365,,,0,2020-03-09 09:07:00,
clause/expression.go,832abda,LeoZhan,refactor: simplify the writing instead of using struct literal (#3728),317,317,,,0,2020-11-08 01:41:43,
clause/expression.go,504f427,Jinzhu,Refactor clause Writer,370,371,,,0,2020-03-09 09:07:00,
clause/expression.go,504f427,Jinzhu,Refactor clause Writer,351,352,,,0,2020-03-09 09:07:00,
clause/expression.go,832abda,LeoZhan,refactor: simplify the writing instead of using struct literal (#3728),330,330,,,0,2020-11-08 01:41:43,
clause/expression.go,1f38ec4,Jinzhu,Finish clauses tests,372,372,,,0,2020-02-08 15:23:45,
clause/expression.go,45e804d,Jinzhu,Fix call valuer interface when using nil value,375,375,vellotis,51b5208,1,2021-11-29 08:19:11,2020-12-11 06:07:23
clause/expression.go,832abda,LeoZhan,refactor: simplify the writing instead of using struct literal (#3728),343,343,,,0,2020-11-08 01:41:43,
clause/expression.go,832abda,LeoZhan,refactor: simplify the writing instead of using struct literal (#3728),356,356,,,0,2020-11-08 01:41:43,
clause/expression.go,832abda,LeoZhan,refactor: simplify the writing instead of using struct literal (#3728),304,304,,,0,2020-11-08 01:41:43,
clause/expression.go,51b5208,vellotis,"Fix building of `clause.Eq` and `clause.Neq` expressions that fail to handle `(*T)(nil)` use cases correctly (#3848)  * Update tests to cover building `clause.Eq` and `clause.Neq` when value could be a nil pointer of a primitive  * Fix use cases for `clause.Eq` and `clause.Neq` when value is nil pointer of a primitive type",373,374,,,1,2020-12-11 06:07:23,
clause/expression.go,51b5208,vellotis,"Fix building of `clause.Eq` and `clause.Neq` expressions that fail to handle `(*T)(nil)` use cases correctly (#3848)  * Update tests to cover building `clause.Eq` and `clause.Neq` when value could be a nil pointer of a primitive  * Fix use cases for `clause.Eq` and `clause.Neq` when value is nil pointer of a primitive type",379,385,,,1,2020-12-11 06:07:23,
clause/expression.go,6c0ee27,Jinzhu,"Allow to use Valuer with Eq expression, #3899",376,378,,,0,2020-12-30 02:42:13,
clause/expression_test.go,6d58b62,Jinzhu,Add sqlite migration tests,1,3,,,0,2020-02-22 12:57:29,
clause/expression_test.go,8bb05a5,Jinzhu,Refactor tests files,13,13,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
clause/expression_test.go,e986371,Jinzhu,Rename package name,10,12,Jinzhu,9fcc546,0,2020-06-02 01:18:01,2020-02-26 11:06:42
clause/expression_test.go,6d58b62,Jinzhu,Add sqlite migration tests,14,28,,,0,2020-02-22 12:57:29,
clause/expression_test.go,6d58b62,Jinzhu,Add sqlite migration tests,5,5,,,0,2020-02-22 12:57:29,
clause/expression_test.go,6d58b62,Jinzhu,Add sqlite migration tests,7,9,,,0,2020-02-22 12:57:29,
clause/expression_test.go,bba569a,Jinzhu,Add NamedArg support,6,6,Jinzhu,8bb05a5,0,2020-07-10 04:28:24,2020-06-02 02:50:38
clause/expression_test.go,bba569a,Jinzhu,Add NamedArg support,4,4,Jinzhu,8bb05a5,0,2020-07-10 04:28:24,2020-06-02 02:50:38
clause/expression_test.go,9fcc546,Jinzhu,Fix tests,29,29,Jinzhu,e2a360b,1,2020-02-26 11:06:42,2020-02-23 13:22:35
clause/expression_test.go,bba569a,Jinzhu,Add NamedArg support,38,39,Jinzhu,8bb05a5,0,2020-07-10 04:28:24,2020-06-02 02:50:38
clause/expression_test.go,08ecef8,Jinzhu,"Fix NamedArguments with nested struct, close #3596",46,46,Jinzhu,c9165fe,1,2020-10-13 07:32:29,2020-09-18 13:42:27
clause/expression_test.go,6d58b62,Jinzhu,Add sqlite migration tests,30,37,,,0,2020-02-22 12:57:29,
clause/expression_test.go,d002c70,Jinzhu,Support named argument for struct,44,45,Jinzhu,bba569a,0,2020-09-17 13:52:41,2020-07-10 04:28:24
clause/expression_test.go,d002c70,Jinzhu,Support named argument for struct,47,48,Jinzhu,bba569a,0,2020-09-17 13:52:41,2020-07-10 04:28:24
clause/expression_test.go,76cd73c,Jinzhu,"Fix wipes out MySQL global variables from the query, close #4515",64,68,Jinzhu,9abac96,1,2021-07-13 10:48:43,2021-05-31 09:21:27
clause/expression_test.go,08ecef8,Jinzhu,"Fix NamedArguments with nested struct, close #3596",40,43,Jinzhu,c9165fe,1,2020-10-13 07:32:29,2020-09-18 13:42:27
clause/expression_test.go,bba569a,Jinzhu,Add NamedArg support,49,63,Jinzhu,8bb05a5,0,2020-07-10 04:28:24,2020-06-02 02:50:38
clause/expression_test.go,76cd73c,Jinzhu,"Fix wipes out MySQL global variables from the query, close #4515",81,82,Jinzhu,9abac96,1,2021-07-13 10:48:43,2021-05-31 09:21:27
clause/expression_test.go,76cd73c,Jinzhu,"Fix wipes out MySQL global variables from the query, close #4515",84,84,Jinzhu,9abac96,1,2021-07-13 10:48:43,2021-05-31 09:21:27
clause/expression_test.go,5202529,Jim,"fix (clause/expression): Allow sql stmt terminator (#4693)  Allow the sql stmt terminator "";"" at the end of a named parameter.  Example: select * from table_name where name == @name;",92,96,River,25f561a,1,2021-09-20 13:40:48,2021-08-19 06:33:18
clause/expression_test.go,76cd73c,Jinzhu,"Fix wipes out MySQL global variables from the query, close #4515",86,87,Jinzhu,9abac96,1,2021-07-13 10:48:43,2021-05-31 09:21:27
clause/expression_test.go,bba569a,Jinzhu,Add NamedArg support,69,80,Jinzhu,8bb05a5,0,2020-07-10 04:28:24,2020-06-02 02:50:38
clause/expression_test.go,08ecef8,Jinzhu,"Fix NamedArguments with nested struct, close #3596",85,85,Jinzhu,d002c70,1,2020-10-13 07:32:29,2020-09-17 13:52:41
clause/expression_test.go,851fea0,River,"fix: QuoteTo not fully support raw mode (#4735)  * fix: QuoteTo not fully support raw mode  * fix: table alias without AS  * test: clause.Column/Table quote test  * fix: revert table alias quote",108,134,Jim,5202529,1,2021-09-29 06:02:35,2021-09-20 13:40:48
clause/expression_test.go,851fea0,River,"fix: QuoteTo not fully support raw mode (#4735)  * fix: QuoteTo not fully support raw mode  * fix: table alias without AS  * test: clause.Column/Table quote test  * fix: revert table alias quote",97,97,Jim,5202529,1,2021-09-29 06:02:35,2021-09-20 13:40:48
clause/expression_test.go,540fb49,Clark McCauley,"Fixed #5355 - Named variables don't work when followed by Windows CRLF line endings (#5356)  * Fixed #5355.  * Fixed unit test to test both CRLF and CR line endings",98,107,River,851fea0,1,2022-05-22 07:16:01,2021-09-29 06:02:35
clause/expression_test.go,d002c70,Jinzhu,Support named argument for struct,83,83,Jinzhu,8bb05a5,0,2020-09-17 13:52:41,2020-06-02 02:50:38
clause/expression_test.go,c9165fe,Jinzhu,"Don't panic when using unmatched vars in query, close #3488",88,91,Jinzhu,8bb05a5,0,2020-09-18 13:42:27,2020-06-02 02:50:38
clause/expression_test.go,9abac96,Jinzhu,"Fix Eq, Neq support slice of data",156,158,Jinzhu,14e9608,1,2021-05-31 09:21:27,2021-05-31 07:25:38
clause/expression_test.go,51b5208,vellotis,"Fix building of `clause.Eq` and `clause.Neq` expressions that fail to handle `(*T)(nil)` use cases correctly (#3848)  * Update tests to cover building `clause.Eq` and `clause.Neq` when value could be a nil pointer of a primitive  * Fix use cases for `clause.Eq` and `clause.Neq` when value is nil pointer of a primitive type",152,155,Jinzhu,08ecef8,1,2020-12-11 06:07:23,2020-10-13 07:32:29
clause/expression_test.go,9abac96,Jinzhu,"Fix Eq, Neq support slice of data",163,164,Jinzhu,14e9608,1,2021-05-31 09:21:27,2021-05-31 07:25:38
clause/expression_test.go,bba569a,Jinzhu,Add NamedArg support,135,151,,,0,2020-07-10 04:28:24,
clause/expression_test.go,51b5208,vellotis,"Fix building of `clause.Eq` and `clause.Neq` expressions that fail to handle `(*T)(nil)` use cases correctly (#3848)  * Update tests to cover building `clause.Eq` and `clause.Neq` when value could be a nil pointer of a primitive  * Fix use cases for `clause.Eq` and `clause.Neq` when value is nil pointer of a primitive type",173,174,,,1,2020-12-11 06:07:23,
clause/expression_test.go,51b5208,vellotis,"Fix building of `clause.Eq` and `clause.Neq` expressions that fail to handle `(*T)(nil)` use cases correctly (#3848)  * Update tests to cover building `clause.Eq` and `clause.Neq` when value could be a nil pointer of a primitive  * Fix use cases for `clause.Eq` and `clause.Neq` when value is nil pointer of a primitive type",159,162,,,1,2020-12-11 06:07:23,
clause/expression_test.go,6c0ee27,Jinzhu,"Allow to use Valuer with Eq expression, #3899",165,165,,,0,2020-12-30 02:42:13,
clause/expression_test.go,51b5208,vellotis,"Fix building of `clause.Eq` and `clause.Neq` expressions that fail to handle `(*T)(nil)` use cases correctly (#3848)  * Update tests to cover building `clause.Eq` and `clause.Neq` when value could be a nil pointer of a primitive  * Fix use cases for `clause.Eq` and `clause.Neq` when value is nil pointer of a primitive type",176,178,,,1,2020-12-11 06:07:23,
clause/expression_test.go,6c0ee27,Jinzhu,"Allow to use Valuer with Eq expression, #3899",172,172,,,0,2020-12-30 02:42:13,
clause/expression_test.go,9abac96,Jinzhu,"Fix Eq, Neq support slice of data",179,180,,,1,2021-05-31 09:21:27,
clause/expression_test.go,6c0ee27,Jinzhu,"Allow to use Valuer with Eq expression, #3899",181,181,,,0,2020-12-30 02:42:13,
clause/expression_test.go,9abac96,Jinzhu,"Fix Eq, Neq support slice of data",194,195,,,1,2021-05-31 09:21:27,
clause/expression_test.go,14e9608,Jinzhu,"Eq, Neq support slice of data",190,193,,,0,2021-05-31 07:25:38,
clause/expression_test.go,bae684b,weih,"fix(clause): when the value of clause.Eq is an empty array, the SQL should be IN (NULL) (#6503)",204,208,Clark McCauley,540fb49,1,2023-08-10 05:34:33,2022-05-22 07:16:01
clause/expression_test.go,51b5208,vellotis,"Fix building of `clause.Eq` and `clause.Neq` expressions that fail to handle `(*T)(nil)` use cases correctly (#3848)  * Update tests to cover building `clause.Eq` and `clause.Neq` when value could be a nil pointer of a primitive  * Fix use cases for `clause.Eq` and `clause.Neq` when value is nil pointer of a primitive type",182,189,,,1,2020-12-11 06:07:23,
clause/expression_test.go,51b5208,vellotis,"Fix building of `clause.Eq` and `clause.Neq` expressions that fail to handle `(*T)(nil)` use cases correctly (#3848)  * Update tests to cover building `clause.Eq` and `clause.Neq` when value could be a nil pointer of a primitive  * Fix use cases for `clause.Eq` and `clause.Neq` when value is nil pointer of a primitive type",166,171,,,1,2020-12-11 06:07:23,
clause/expression_test.go,14e9608,Jinzhu,"Eq, Neq support slice of data",196,199,,,0,2021-05-31 07:25:38,
clause/expression_test.go,25f561a,River,"feat: QuoteTo accept clause.Expr (#4621)  * feat: QuoteTo accept clause.Expr  * test: update Expr build test",202,203,,,0,2021-08-19 06:33:18,
clause/expression_test.go,51b5208,vellotis,"Fix building of `clause.Eq` and `clause.Neq` expressions that fail to handle `(*T)(nil)` use cases correctly (#3848)  * Update tests to cover building `clause.Eq` and `clause.Neq` when value could be a nil pointer of a primitive  * Fix use cases for `clause.Eq` and `clause.Neq` when value is nil pointer of a primitive type",219,229,,,1,2020-12-11 06:07:23,
clause/expression_test.go,9abac96,Jinzhu,"Fix Eq, Neq support slice of data",200,201,,,1,2021-05-31 09:21:27,
clause/expression_test.go,6c0ee27,Jinzhu,"Allow to use Valuer with Eq expression, #3899",175,175,,,0,2020-12-30 02:42:13,
clause/expression_test.go,25f561a,River,"feat: QuoteTo accept clause.Expr (#4621)  * feat: QuoteTo accept clause.Expr  * test: update Expr build test",209,218,,,0,2021-08-19 06:33:18,
clause/expression_test.go,9abac96,Jinzhu,"Fix Eq, Neq support slice of data",230,233,,,1,2021-05-31 09:21:27,
clause/expression_test.go,51b5208,vellotis,"Fix building of `clause.Eq` and `clause.Neq` expressions that fail to handle `(*T)(nil)` use cases correctly (#3848)  * Update tests to cover building `clause.Eq` and `clause.Neq` when value could be a nil pointer of a primitive  * Fix use cases for `clause.Eq` and `clause.Neq` when value is nil pointer of a primitive type",234,237,,,1,2020-12-11 06:07:23,
go.mod,d52ee0a,Jinzhu,Work on create callbacks,5,5,Jinzhu,728c0d4,0,2020-02-03 02:40:03,2020-02-02 12:05:10
go.mod,e57e5d8,Jinzhu,Update go.mod,3,3,Jinzhu,f387433,0,2023-08-27 07:40:54,2023-03-02 09:22:51
go.mod,bc68fde,Jinzhu,Implement naming strategy,4,4,Jinzhu,8eae7e4,0,2020-01-31 06:17:02,2020-01-28 15:01:35
go.mod,8eae7e4,Jinzhu,Add migrator,2,2,Jinzhu,f0d514e,0,2020-01-28 15:01:35,2020-01-28 08:22:07
go.mod,5790ba9,Jinzhu,Fix package path,6,6,Jinzhu,e986371,1,2020-06-02 01:25:55,2020-06-02 01:18:01
go.mod,f387433,Jinzhu,Fix Save with stress tests,7,7,Shunsuke Otani,8c3018b,1,2023-03-02 09:22:51,2022-08-15 02:50:06
go.mod,6bfccf8,Jinzhu,Refactor all tests script,8,8,Ryuji Kokubu,0f105ec,0,2024-11-21 09:03:31,2024-06-12 03:46:59
go.mod,e986371,Jinzhu,Rename package name,1,1,Jinzhu,2b56fa0,0,2020-06-02 01:18:01,2020-05-30 17:21:16
go.mod,d52ee0a,Jinzhu,Work on create callbacks,9,9,Jinzhu,728c0d4,0,2020-02-03 02:40:03,2020-02-02 12:05:10
go.sum,ebb8511,Jinzhu,Add go.sum,1,2,Jinzhu,728c0d4,0,2020-06-06 06:28:59,2020-02-02 12:05:10
go.sum,f387433,Jinzhu,Fix Save with stress tests,3,4,Jinzhu,adf8f70,1,2023-03-02 09:22:51,2021-12-10 09:50:19
go.sum,6bfccf8,Jinzhu,Refactor all tests script,5,6,Ryuji Kokubu,0f105ec,0,2024-11-21 09:03:31,2024-06-12 03:46:59
clause/where.go,5edc781,sammyrnycreal,"Fixed the use of ""or"" to be "" OR "", to account for words that contain ""or"" or ""and"" (e.g., 'score', 'band') in a sql statement as the name of a field.",7,11,kinggo,8dde09e,1,2022-02-20 00:22:21,2021-12-30 03:47:14
clause/where.go,d833efe,Jinzhu,Work on clauses,12,13,,,0,2020-02-02 11:11:17,
clause/where.go,d833efe,Jinzhu,Work on clauses,1,2,,,0,2020-02-02 11:11:17,
clause/where.go,680dda2,Jinzhu,"Fix combine conditions when using string conditions, close #3358",3,6,Jinzhu,4456df7,1,2020-09-02 12:09:51,2020-07-16 03:27:12
clause/where.go,3e2c4fc,tsuba3,"Fix regression in db.Not introduced in v1.25.6. (#6844)  * Fix regression in db.Not introduced in 940358e.  * Fix",24,28,Jinzhu,940358e,1,2024-03-05 02:23:51,2024-01-12 08:42:21
clause/where.go,1f38ec4,Jinzhu,Finish clauses tests,14,14,Jinzhu,0160bab,0,2020-02-08 15:23:45,2020-02-05 10:28:58
clause/where.go,940358e,Jinzhu,Fix tests doesn't follow https://gorm.io/docs/method_chaining.html convention,29,29,Mikhail Faraponov,2990790,1,2024-01-12 08:42:21,2022-03-17 14:54:30
clause/where.go,d833efe,Jinzhu,Work on clauses,15,23,,,0,2020-02-02 11:11:17,
clause/where.go,1f38ec4,Jinzhu,Finish clauses tests,33,34,Jinzhu,0160bab,0,2020-02-08 15:23:45,2020-02-05 10:28:58
clause/where.go,d833efe,Jinzhu,Work on clauses,35,35,,,0,2020-02-02 11:11:17,
clause/where.go,1f38ec4,Jinzhu,Finish clauses tests,30,31,Jinzhu,0160bab,0,2020-02-08 15:23:45,2020-02-05 10:28:58
clause/where.go,6937d71,Jinzhu,Refactor clauses,32,32,Jinzhu,504f427,0,2020-06-06 14:52:08,2020-03-09 09:07:00
clause/where.go,9b21811,Jinzhu,"Fix soft delete with OrCondition, close #3627",41,43,Jinzhu,680dda2,1,2020-10-19 06:50:11,2020-09-02 12:09:51
clause/where.go,d833efe,Jinzhu,Work on clauses,37,39,,,0,2020-02-02 11:11:17,
clause/where.go,5edc781,sammyrnycreal,"Fixed the use of ""or"" to be "" OR "", to account for words that contain ""or"" or ""and"" (e.g., 'score', 'band') in a sql statement as the name of a field.",40,40,kinggo,8dde09e,1,2022-02-20 00:22:21,2021-12-30 03:47:14
clause/where.go,1f38ec4,Jinzhu,Finish clauses tests,36,36,Jinzhu,0160bab,0,2020-02-08 15:23:45,2020-02-05 10:28:58
clause/where.go,9b21811,Jinzhu,"Fix soft delete with OrCondition, close #3627",45,46,Jinzhu,680dda2,1,2020-10-19 06:50:11,2020-09-02 12:09:51
clause/where.go,d833efe,Jinzhu,Work on clauses,52,52,,,0,2020-02-02 11:11:17,
clause/where.go,d833efe,Jinzhu,Work on clauses,53,53,,,0,2020-02-02 11:11:17,
clause/where.go,680dda2,Jinzhu,"Fix combine conditions when using string conditions, close #3358",44,44,Jinzhu,4456df7,1,2020-09-02 12:09:51,2020-07-16 03:27:12
clause/where.go,9b21811,Jinzhu,"Fix soft delete with OrCondition, close #3627",51,51,Jinzhu,4456df7,1,2020-10-19 06:50:11,2020-07-16 03:27:12
clause/where.go,5edc781,sammyrnycreal,"Fixed the use of ""or"" to be "" OR "", to account for words that contain ""or"" or ""and"" (e.g., 'score', 'band') in a sql statement as the name of a field.",49,49,Jinzhu,680dda2,1,2022-02-20 00:22:21,2020-09-02 12:09:51
clause/where.go,680dda2,Jinzhu,"Fix combine conditions when using string conditions, close #3358",62,66,Jinzhu,4456df7,1,2020-09-02 12:09:51,2020-07-16 03:27:12
clause/where.go,6937d71,Jinzhu,Refactor clauses,50,50,Jinzhu,0160bab,0,2020-06-06 14:52:08,2020-02-05 10:28:58
clause/where.go,5edc781,sammyrnycreal,"Fixed the use of ""or"" to be "" OR "", to account for words that contain ""or"" or ""and"" (e.g., 'score', 'band') in a sql statement as the name of a field.",60,61,kinggo,8dde09e,1,2022-02-20 00:22:21,2021-12-30 03:47:14
clause/where.go,680dda2,Jinzhu,"Fix combine conditions when using string conditions, close #3358",56,59,Jinzhu,4456df7,1,2020-09-02 12:09:51,2020-07-16 03:27:12
clause/where.go,9b21811,Jinzhu,"Fix soft delete with OrCondition, close #3627",55,55,Jinzhu,4456df7,1,2020-10-19 06:50:11,2020-07-16 03:27:12
clause/where.go,5edc781,sammyrnycreal,"Fixed the use of ""or"" to be "" OR "", to account for words that contain ""or"" or ""and"" (e.g., 'score', 'band') in a sql statement as the name of a field.",67,68,kinggo,8dde09e,1,2022-02-20 00:22:21,2021-12-30 03:47:14
clause/where.go,5edc781,sammyrnycreal,"Fixed the use of ""or"" to be "" OR "", to account for words that contain ""or"" or ""and"" (e.g., 'score', 'band') in a sql statement as the name of a field.",72,73,kinggo,8dde09e,1,2022-02-20 00:22:21,2021-12-30 03:47:14
clause/where.go,6937d71,Jinzhu,Refactor clauses,54,54,Jinzhu,0160bab,0,2020-06-06 14:52:08,2020-02-05 10:28:58
clause/where.go,6937d71,Jinzhu,Refactor clauses,47,48,Jinzhu,0160bab,0,2020-06-06 14:52:08,2020-02-05 10:28:58
clause/where.go,680dda2,Jinzhu,"Fix combine conditions when using string conditions, close #3358",69,71,Jinzhu,4456df7,1,2020-09-02 12:09:51,2020-07-16 03:27:12
clause/where.go,d833efe,Jinzhu,Work on clauses,88,88,,,0,2020-02-02 11:11:17,
clause/where.go,680dda2,Jinzhu,"Fix combine conditions when using string conditions, close #3358",84,87,Jinzhu,4456df7,1,2020-09-02 12:09:51,2020-07-16 03:27:12
clause/where.go,1f38ec4,Jinzhu,Finish clauses tests,89,93,Jinzhu,0160bab,0,2020-02-08 15:23:45,2020-02-05 10:28:58
clause/where.go,2c3fc2d,Emre Güllü,Fix: Where clauses with named arguments may cause generation of unintended queries (#4937),74,74,Jinzhu,4456df7,1,2021-12-21 11:50:00,2020-07-16 03:27:12
clause/where.go,680dda2,Jinzhu,"Fix combine conditions when using string conditions, close #3358",77,80,Douglas Danger Manley,72d0fa6,1,2020-09-02 12:09:51,2020-06-07 20:54:01
clause/where.go,5edc781,sammyrnycreal,"Fixed the use of ""or"" to be "" OR "", to account for words that contain ""or"" or ""and"" (e.g., 'score', 'band') in a sql statement as the name of a field.",75,76,Jinzhu,4456df7,1,2022-02-20 00:22:21,2020-07-16 03:27:12
clause/where.go,2990790,Mikhail Faraponov,Use WriteByte for single byte operations (#5167)  Co-authored-by: Mikhail Faraponov <mikefaraponov@Mikhails-MacBook-Pro.local>,83,83,Jinzhu,4456df7,0,2022-03-17 14:54:30,2020-07-16 03:27:12
clause/where.go,8f8d549,Jinzhu,Refactor merge where exprs,94,97,Jinzhu,c1afe19,0,2020-06-08 01:13:34,2020-02-13 16:09:44
clause/where.go,1f38ec4,Jinzhu,Finish clauses tests,98,106,Jinzhu,0160bab,0,2020-02-08 15:23:45,2020-02-05 10:28:58
clause/where.go,1f38ec4,Jinzhu,Finish clauses tests,114,122,Jinzhu,0160bab,0,2020-02-08 15:23:45,2020-02-05 10:28:58
clause/where.go,5edc781,sammyrnycreal,"Fixed the use of ""or"" to be "" OR "", to account for words that contain ""or"" or ""and"" (e.g., 'score', 'band') in a sql statement as the name of a field.",124,124,kinggo,8dde09e,1,2022-02-20 00:22:21,2021-12-30 03:47:14
clause/where.go,2990790,Mikhail Faraponov,Use WriteByte for single byte operations (#5167)  Co-authored-by: Mikhail Faraponov <mikefaraponov@Mikhails-MacBook-Pro.local>,81,81,Jinzhu,4456df7,0,2022-03-17 14:54:30,2020-07-16 03:27:12
clause/where.go,c1afe19,Jinzhu,Add benchmark tests for clause,123,123,Jinzhu,0160bab,0,2020-02-13 16:09:44,2020-02-05 10:28:58
clause/where.go,9b21811,Jinzhu,"Fix soft delete with OrCondition, close #3627",126,126,Jinzhu,680dda2,1,2020-10-19 06:50:11,2020-09-02 12:09:51
clause/where.go,8dde09e,kinggo,fix: generate sql incorrect when use soft_delete and only one OR (#4969)  * fix: generate sql incorrect when use soft_delete and only one OR,107,113,Jinzhu,680dda2,1,2021-12-30 03:47:14,2020-09-02 12:09:51
clause/where.go,c1afe19,Jinzhu,Add benchmark tests for clause,125,125,Jinzhu,0160bab,0,2020-02-13 16:09:44,2020-02-05 10:28:58
clause/where.go,1f38ec4,Jinzhu,Finish clauses tests,128,129,Jinzhu,0160bab,0,2020-02-08 15:23:45,2020-02-05 10:28:58
clause/where.go,d833efe,Jinzhu,Work on clauses,137,137,,,0,2020-02-02 11:11:17,
clause/where.go,680dda2,Jinzhu,"Fix combine conditions when using string conditions, close #3358",82,82,Jinzhu,0160bab,1,2020-09-02 12:09:51,2020-02-05 10:28:58
clause/where.go,1f38ec4,Jinzhu,Finish clauses tests,131,133,Jinzhu,0160bab,0,2020-02-08 15:23:45,2020-02-05 10:28:58
clause/where.go,d833efe,Jinzhu,Work on clauses,130,130,,,0,2020-02-02 11:11:17,
clause/where.go,1f38ec4,Jinzhu,Finish clauses tests,135,136,,,0,2020-02-08 15:23:45,
clause/where.go,d833efe,Jinzhu,Work on clauses,134,134,,,0,2020-02-02 11:11:17,
clause/where.go,5edc781,sammyrnycreal,"Fixed the use of ""or"" to be "" OR "", to account for words that contain ""or"" or ""and"" (e.g., 'score', 'band') in a sql statement as the name of a field.",145,145,kinggo,8dde09e,1,2022-02-20 00:22:21,2021-12-30 03:47:14
clause/where.go,c1afe19,Jinzhu,Add benchmark tests for clause,144,144,,,0,2020-02-13 16:09:44,
clause/where.go,9b21811,Jinzhu,"Fix soft delete with OrCondition, close #3627",147,147,Jinzhu,4456df7,1,2020-10-19 06:50:11,2020-07-16 03:27:12
clause/where.go,1f38ec4,Jinzhu,Finish clauses tests,149,155,,,0,2020-02-08 15:23:45,
clause/where.go,1f38ec4,Jinzhu,Finish clauses tests,138,143,,,0,2020-02-08 15:23:45,
clause/where.go,c1afe19,Jinzhu,Add benchmark tests for clause,146,146,,,0,2020-02-13 16:09:44,
clause/where.go,3e2c4fc,tsuba3,"Fix regression in db.Not introduced in v1.25.6. (#6844)  * Fix regression in db.Not introduced in 940358e.  * Fix",169,174,Jinzhu,940358e,1,2024-03-05 02:23:51,2024-01-12 08:42:21
clause/where.go,d833efe,Jinzhu,Work on clauses,166,167,,,0,2020-02-02 11:11:17,
clause/where.go,1f38ec4,Jinzhu,Finish clauses tests,161,165,,,0,2020-02-08 15:23:45,
clause/where.go,940358e,Jinzhu,Fix tests doesn't follow https://gorm.io/docs/method_chaining.html convention,156,160,Mikhail Faraponov,2990790,1,2024-01-12 08:42:21,2022-03-17 14:54:30
clause/where.go,1f38ec4,Jinzhu,Finish clauses tests,168,168,,,0,2020-02-08 15:23:45,
clause/where.go,680dda2,Jinzhu,"Fix combine conditions when using string conditions, close #3358",176,176,Jinzhu,4456df7,1,2020-09-02 12:09:51,2020-07-16 03:27:12
clause/where.go,1f38ec4,Jinzhu,Finish clauses tests,175,175,,,0,2020-02-08 15:23:45,
clause/where.go,3e2c4fc,tsuba3,"Fix regression in db.Not introduced in v1.25.6. (#6844)  * Fix regression in db.Not introduced in 940358e.  * Fix",177,179,Jinzhu,940358e,1,2024-03-05 02:23:51,2024-01-12 08:42:21
clause/where.go,207f1ac,Cr,fix: not clause with or condition (#6984),218,223,tsuba3,3e2c4fc,1,2024-04-25 12:22:53,2024-03-05 02:23:51
clause/where.go,3e2c4fc,tsuba3,"Fix regression in db.Not introduced in v1.25.6. (#6844)  * Fix regression in db.Not introduced in 940358e.  * Fix",182,217,Jinzhu,940358e,1,2024-03-05 02:23:51,2024-01-12 08:42:21
clause/where.go,1f38ec4,Jinzhu,Finish clauses tests,180,181,,,0,2020-02-08 15:23:45,
clause/where.go,3e2c4fc,tsuba3,"Fix regression in db.Not introduced in v1.25.6. (#6844)  * Fix regression in db.Not introduced in 940358e.  * Fix",224,225,kinggo,8dde09e,1,2024-03-05 02:23:51,2021-12-30 03:47:14
clause/where.go,1f38ec4,Jinzhu,Finish clauses tests,234,234,,,0,2020-02-08 15:23:45,
clause/where.go,1f38ec4,Jinzhu,Finish clauses tests,239,239,,,0,2020-02-08 15:23:45,
clause/where.go,5edc781,sammyrnycreal,"Fixed the use of ""or"" to be "" OR "", to account for words that contain ""or"" or ""and"" (e.g., 'score', 'band') in a sql statement as the name of a field.",127,127,Jinzhu,0160bab,1,2022-02-20 00:22:21,2020-02-05 10:28:58
clause/where.go,680dda2,Jinzhu,"Fix combine conditions when using string conditions, close #3358",226,227,,,1,2020-09-02 12:09:51,
clause/where.go,680dda2,Jinzhu,"Fix combine conditions when using string conditions, close #3358",240,240,,,1,2020-09-02 12:09:51,
clause/where.go,5edc781,sammyrnycreal,"Fixed the use of ""or"" to be "" OR "", to account for words that contain ""or"" or ""and"" (e.g., 'score', 'band') in a sql statement as the name of a field.",148,148,Jinzhu,0160bab,1,2022-02-20 00:22:21,2020-02-05 10:28:58
clause/where.go,680dda2,Jinzhu,"Fix combine conditions when using string conditions, close #3358",230,233,,,1,2020-09-02 12:09:51,
clause/where.go,5edc781,sammyrnycreal,"Fixed the use of ""or"" to be "" OR "", to account for words that contain ""or"" or ""and"" (e.g., 'score', 'band') in a sql statement as the name of a field.",228,229,,,1,2022-02-20 00:22:21,
clause/where.go,d833efe,Jinzhu,Work on clauses,244,245,,,0,2020-02-02 11:11:17,
clause/where.go,680dda2,Jinzhu,"Fix combine conditions when using string conditions, close #3358",235,238,,,1,2020-09-02 12:09:51,
clause/where.go,3e2c4fc,tsuba3,"Fix regression in db.Not introduced in v1.25.6. (#6844)  * Fix regression in db.Not introduced in 940358e.  * Fix",241,243,,,1,2024-03-05 02:23:51,
interfaces.go,e986371,Jinzhu,Rename package name,7,8,Jinzhu,76b8e78,0,2020-06-02 01:18:01,2020-06-01 00:13:16
interfaces.go,d833efe,Jinzhu,Work on clauses,1,5,,,0,2020-02-02 11:11:17,
interfaces.go,76b8e78,Jinzhu,Add multi primary keys test,13,13,Jinzhu,befef0c,0,2020-06-01 00:13:16,2020-05-31 16:12:20
interfaces.go,d833efe,Jinzhu,Work on clauses,9,12,,,0,2020-02-02 11:11:17,
interfaces.go,d833efe,Jinzhu,Work on clauses,14,14,,,0,2020-02-02 11:11:17,
interfaces.go,a1e35bd,Jinzhu,Support merge batch data some having primary values,17,17,Jinzhu,7dc255a,0,2020-06-20 08:52:15,2020-06-19 10:30:04
interfaces.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,6,6,Jinzhu,0160bab,0,2020-02-22 09:53:57,2020-02-05 10:28:58
interfaces.go,2a0c3e3,Jinzhu,AddVar accept writer,18,18,Jinzhu,504f427,0,2020-03-09 09:59:54,2020-03-09 09:07:00
interfaces.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,15,16,Jinzhu,0160bab,0,2020-02-22 09:53:57,2020-02-05 10:28:58
interfaces.go,bc5ceff,Jinzhu,Explain SQL for dialects,20,20,Jinzhu,fab7d96,0,2020-02-23 04:41:13,2020-02-22 09:53:57
interfaces.go,ddd3cc2,Jinzhu,"Add ParameterizedQueries option support for logger, close #5288",29,32,Jinzhu,9dd6ed9,0,2022-12-25 03:37:23,2022-03-29 10:14:37
interfaces.go,f4bfc43,Jinzhu,Add register plugin API,23,28,Jinzhu,a1e35bd,0,2020-06-23 01:38:51,2020-06-20 08:52:15
interfaces.go,d833efe,Jinzhu,Work on clauses,21,22,,,0,2020-02-02 11:11:17,
interfaces.go,504f427,Jinzhu,Refactor clause Writer,19,19,Jinzhu,a145d7e,0,2020-03-09 09:07:00,2020-03-09 06:25:50
interfaces.go,c8e7878,Jinzhu,Add PrepareStmt support,36,36,Jinzhu,e986371,0,2020-06-05 03:40:24,2020-06-02 01:18:01
interfaces.go,d833efe,Jinzhu,Work on clauses,35,35,,,0,2020-02-02 11:11:17,
interfaces.go,d833efe,Jinzhu,Work on clauses,37,39,,,0,2020-02-02 11:11:17,
interfaces.go,a145d7e,Jinzhu,Refactor structure,33,34,Jinzhu,e2a360b,0,2020-03-09 06:25:50,2020-02-23 13:22:35
interfaces.go,5ccd76f,Jinzhu,Setup Transaction,48,51,Jinzhu,bc5ceff,0,2020-02-23 15:28:59,2020-02-23 04:41:13
interfaces.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",47,47,Jinzhu,a9fe025,1,2022-02-19 09:02:53,2021-03-19 07:55:38
interfaces.go,e2a360b,Jinzhu,Add Before/After callbacks,40,40,Jinzhu,bc5ceff,0,2020-02-23 13:22:35,2020-02-23 04:41:13
interfaces.go,f4bfc43,Jinzhu,Add register plugin API,41,41,Jinzhu,c8e7878,0,2020-06-23 01:38:51,2020-06-05 03:40:24
interfaces.go,7dc255a,Jinzhu,Add SavePoint/RollbackTo/NestedTransaction,42,46,Jinzhu,e986371,0,2020-06-19 10:30:04,2020-06-02 01:18:01
interfaces.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",52,52,Jinzhu,a9fe025,1,2022-02-19 09:02:53,2021-03-19 07:55:38
interfaces.go,996b96e,lianghuan,Add TxConnPoolBeginner and Tx interface,67,69,Qt,7837fb6,0,2022-03-01 08:59:50,2022-02-20 13:19:15
interfaces.go,996b96e,lianghuan,Add TxConnPoolBeginner and Tx interface,63,65,Qt,7837fb6,0,2022-03-01 08:59:50,2022-02-20 13:19:15
interfaces.go,5ccd76f,Jinzhu,Setup Transaction,59,62,Jinzhu,bc5ceff,0,2020-02-23 15:28:59,2020-02-23 04:41:13
interfaces.go,4e52349,Jinzhu,Refactor Tx interface,66,66,Qt,7837fb6,0,2022-03-01 08:59:50,2022-02-20 13:19:15
interfaces.go,c8e7878,Jinzhu,Add PrepareStmt support,58,58,Jinzhu,2a0c3e3,0,2020-06-05 03:40:24,2020-03-09 09:59:54
interfaces.go,c8e7878,Jinzhu,Add PrepareStmt support,53,56,Jinzhu,2a0c3e3,0,2020-06-05 03:40:24,2020-03-09 09:59:54
interfaces.go,9dd6ed9,Jinzhu,Scan with Rows interface,79,88,Jinzhu,4e52349,0,2022-03-29 10:14:37,2022-03-01 08:59:50
interfaces.go,e2a360b,Jinzhu,Add Before/After callbacks,73,73,,,0,2020-02-23 13:22:35,
interfaces.go,7837fb6,Qt,"fix typo in TxCommitter interface comment & improve CheckTruth, chek val empty first (#5094)  * fix typo in TxCommitter interface comment  * improve CheckTruth, chek val empty first",57,57,Jinzhu,f4bfc43,1,2022-02-20 13:19:15,2020-06-23 01:38:51
interfaces.go,85eaf9e,Saeid Kanishka,"feat: Unique Constraint Violation error translator for different drivers (#6004)  * feat: duplicated key error translator for different drivers  * test: removed the dependency  * test: fixed broken tests  * refactor: added ErrorTransltor interface  * style: applied styler  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",89,92,Jinzhu,ddd3cc2,1,2023-03-06 06:03:31,2022-12-25 03:37:23
interfaces.go,a9fe025,Jinzhu,Add GetDBConnector interface,74,74,,,0,2021-03-19 07:55:38,
interfaces.go,ce8853e,Jinzhu,Add GormValuer interface support,70,72,,,0,2020-08-27 07:03:57,
interfaces.go,a9fe025,Jinzhu,Add GetDBConnector interface,76,78,,,0,2021-03-19 07:55:38,
interfaces.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",75,75,,,1,2022-02-19 09:02:53,
internal/lru/lru.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,1,493,,,0,2025-04-25 08:22:26,
internal/stmt_store/stmt_store.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,1,5,,,0,2025-04-25 08:22:26,
internal/stmt_store/stmt_store.go,8c4e8e2,iTanken,fix: int type variable defaultMaxSize overflows in 32-bit environment (#7439)  Refs: #7435,6,6,Zhaodong Xie,a827495,1,2025-04-27 06:05:16,2025-04-25 08:22:26
internal/stmt_store/stmt_store.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,7,76,,,0,2025-04-25 08:22:26,
internal/stmt_store/stmt_store.go,8c4e8e2,iTanken,fix: int type variable defaultMaxSize overflows in 32-bit environment (#7439)  Refs: #7435,77,77,Zhaodong Xie,a827495,1,2025-04-27 06:05:16,2025-04-25 08:22:26
internal/stmt_store/stmt_store.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,78,183,,,0,2025-04-25 08:22:26,
LICENSE,1b4490f,Jinzhu,Add MIT License file,4,21,,,0,2015-01-05 00:59:18,
LICENSE,1b4490f,Jinzhu,Add MIT License file,1,2,,,0,2015-01-05 00:59:18,
LICENSE,86b1d22,Max Katz,chore: update copyright year (#7332),3,3,Avinaba Bhattacharjee,6698ba7,0,2025-01-12 10:32:39,2023-05-21 13:24:00
errors.go,f3bdfa8,Jinzhu,Add IgnoreRecordNotFoundError option for logger,11,11,heige,495ec4b,0,2021-04-09 02:21:01,2021-03-07 02:56:32
errors.go,9d5b983,Jinzhu,Refactor builder,1,2,Jinzhu,f0d514e,0,2020-01-30 11:47:00,2020-01-28 08:22:07
errors.go,f3bdfa8,Jinzhu,Add IgnoreRecordNotFoundError option for logger,5,6,heige,495ec4b,0,2021-04-09 02:21:01,2021-03-07 02:56:32
errors.go,cf93b16,Atreya,Fix ErrInvalidTransaction error message (#4380),13,13,Jinzhu,d327926,1,2021-05-17 07:53:48,2021-04-19 13:37:38
errors.go,f4cfa94,Qt,define err with the same code style (#3199),20,23,Jinzhu,69d8111,0,2020-07-26 02:03:58,2020-07-24 00:32:50
errors.go,41697d5,Jinzhu,Handle preload,18,19,Jinzhu,a145d7e,0,2020-05-07 02:03:48,2020-03-09 06:25:50
errors.go,befef0c,Jinzhu,Improve Hooks,17,17,Jinzhu,dea48a8,0,2020-05-31 16:12:20,2020-05-25 16:16:44
errors.go,878ac51,Cr,"fix:throw model value required error (#6031)  * fix:throw model value required error  * chore:ingore typecheck  * chore:ingore errcheck  * refactor: use other error  * chore: gofumpt style",24,25,Ning,8c36732,1,2023-02-08 05:40:41,2022-01-30 10:17:06
errors.go,a80707d,black-06,"Create and drop view (#6097)  * create view  * add comment  * fix test  * check param and add comment",26,27,Cr,878ac51,1,2023-02-27 07:43:10,2023-02-08 05:40:41
errors.go,5082674,Jinzhu,Add error gorm.ErrInvalidData,28,29,Jinzhu,f4bfc43,1,2020-08-18 10:00:36,2020-06-23 01:38:51
errors.go,7dc255a,Jinzhu,Add SavePoint/RollbackTo/NestedTransaction,30,31,Jinzhu,eda2f02,0,2020-06-19 10:30:04,2020-06-05 11:19:12
errors.go,f556628,Jinzhu,"Add SetColumn, Changed method",34,35,Jinzhu,f4bfc43,0,2020-06-30 08:53:54,2020-06-23 01:38:51
errors.go,e509b31,Jinzhu,Implement callbacks,12,12,,,0,2020-01-30 22:35:25,
errors.go,f4bfc43,Jinzhu,Add register plugin API,32,33,Jinzhu,7dc255a,0,2020-06-23 01:38:51,2020-06-19 10:30:04
errors.go,15a46bc,Chris Faulkner,Fix some typos (#4294),40,41,Jinzhu,f3bdfa8,1,2021-04-19 13:03:39,2021-04-09 02:21:01
errors.go,e509b31,Jinzhu,Implement callbacks,7,10,,,0,2020-01-30 22:35:25,
errors.go,e509b31,Jinzhu,Implement callbacks,3,4,,,0,2020-01-30 22:35:25,
errors.go,62dcd78,Jinzhu,Add Migrator,14,15,,,0,2020-02-20 15:04:03,
errors.go,85eaf9e,Saeid Kanishka,"feat: Unique Constraint Violation error translator for different drivers (#6004)  * feat: duplicated key error translator for different drivers  * test: removed the dependency  * test: fixed broken tests  * refactor: added ErrorTransltor interface  * style: applied styler  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",48,49,black-06,a80707d,1,2023-03-06 06:03:31,2023-02-27 07:43:10
errors.go,001738b,Muhammad Amir Ejaz,"Added support of ""Violates Foreign Key Constraint"" (#6329)  * Added support of ""Violates Foreign Key Constraint""  Updated the translator and added the support of ""foreign key constraint violation"". For this, this error type is needed here.  * changed the description of ErrForeignKeyViolated",50,51,Saeid Kanishka,85eaf9e,1,2023-05-21 13:27:22,2023-03-06 06:03:31
errors.go,ac59252,Anıl Şenay,"Add new error for ""Violation Check Constraint"" (#6992)",52,53,Muhammad Amir Ejaz,001738b,1,2024-04-26 02:53:17,2023-05-21 13:27:22
errors.go,e509b31,Jinzhu,Implement callbacks,54,54,,,0,2020-01-30 22:35:25,
errors.go,072f1de,Jinzhu,Add DryRunModeUnsupported Error for Row/Rows,38,39,,,1,2020-09-18 13:35:46,
errors.go,ce0e6f9,Jinzhu,Add Delete test,16,16,,,0,2020-03-08 06:51:52,
errors.go,48b395b,Jinzhu,returns ErrEmptySlice when creating with zero length slice,36,37,,,0,2020-09-03 03:32:30,
errors.go,d327926,Jinzhu,Check ReflectValue.CanAddr before set field value,43,43,,,0,2021-04-19 13:37:38,
errors.go,495ec4b,heige,invalid db error and value and invalid value length error (#4151),44,45,,,1,2021-03-07 02:56:32,
errors.go,8c36732,Ning,preoload not allowd before count (#5023)  Co-authored-by: ningfei <accelerator314@outlook.com>,46,47,,,0,2022-01-30 10:17:06,
errors.go,495ec4b,heige,invalid db error and value and invalid value length error (#4151),42,42,,,1,2021-03-07 02:56:32,
callbacks/associations.go,fcb666c,Jinzhu,"Fix associations using composite primary keys without ID field, close #3365",9,9,Jinzhu,9fcc337,1,2020-09-03 02:58:48,2020-08-17 09:41:36
callbacks/associations.go,e986371,Jinzhu,Rename package name,7,8,Jinzhu,1559fe2,0,2020-06-02 01:18:01,2020-06-01 11:41:33
callbacks/associations.go,54b80b1,Jinzhu,"Allow to omit fields in associations, close #3752",5,5,Jinzhu,50df9da,0,2020-11-17 13:49:40,2020-11-17 12:24:08
callbacks/associations.go,56ca9a8,Jinzhu,Add permission check when create associations,6,6,,,0,2020-04-16 02:29:18,
callbacks/associations.go,56ca9a8,Jinzhu,Add permission check when create associations,1,4,,,0,2020-04-16 02:29:18,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",13,22,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,27e2753,Jinzhu,"Fix create duplicated value when updating nested has many relationship, close #4796",10,10,heige,9d5f315,1,2021-11-29 10:43:39,2021-11-29 01:33:20
callbacks/associations.go,56ca9a8,Jinzhu,Add permission check when create associations,11,12,,,0,2020-04-16 02:29:18,
callbacks/associations.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",27,28,Jinzhu,8627634,1,2022-02-19 09:02:53,2021-12-02 02:20:16
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",29,34,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,43a814a,Jinzhu,Add bulk create associations tests,37,38,,,0,2020-04-20 03:47:29,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",24,26,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",40,42,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,1559fe2,Jinzhu,Add more updates test,35,36,Jinzhu,befef0c,0,2020-06-01 11:41:33,2020-05-31 16:12:20
callbacks/associations.go,43a814a,Jinzhu,Add bulk create associations tests,39,39,,,0,2020-04-20 03:47:29,
callbacks/associations.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",43,44,Jinzhu,3a8c250,0,2021-11-29 01:33:20,2021-08-26 05:37:49
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",45,47,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,9f27377,Aman,"fix deprecated reflect.PtrTo reflect.PointerTo usage (#7366)  * fix deprecated reflect.PtrTo reflect.PointerTo usage  * replace all deprecated reflect.PtrTo reflect.PointerTo usage",50,50,bsmith-auth0,ccc3cb7,1,2025-02-13 06:16:26,2023-04-11 03:06:13
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",49,49,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",51,51,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,56ca9a8,Jinzhu,Add permission check when create associations,48,48,,,0,2020-04-16 02:29:18,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",53,53,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,9fcc337,Jinzhu,Fix create from map,52,52,Jinzhu,4456df7,1,2020-08-17 09:41:36,2020-07-16 03:27:12
callbacks/associations.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",56,56,Jinzhu,3a8c250,0,2021-11-29 01:33:20,2021-08-26 05:37:49
callbacks/associations.go,1559fe2,Jinzhu,Add more updates test,23,23,,,0,2020-06-01 11:41:33,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",57,57,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,ccc3cb7,bsmith-auth0,fix: many2many association with duplicate belongs to elem (#6206),54,55,Cr,186e8a9,1,2023-04-11 03:06:13,2022-10-18 03:58:42
callbacks/associations.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",58,60,Jinzhu,3a8c250,0,2021-11-29 01:33:20,2021-08-26 05:37:49
callbacks/associations.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",66,66,Jinzhu,3a8c250,0,2021-11-29 01:33:20,2021-08-26 05:37:49
callbacks/associations.go,ccc3cb7,bsmith-auth0,fix: many2many association with duplicate belongs to elem (#6206),63,65,Cr,186e8a9,1,2023-04-11 03:06:13,2022-10-18 03:58:42
callbacks/associations.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",61,62,Jinzhu,8627634,1,2022-02-19 09:02:53,2021-12-02 02:20:16
callbacks/associations.go,56ca9a8,Jinzhu,Add permission check when create associations,83,83,,,0,2020-04-16 02:29:18,
callbacks/associations.go,ccc3cb7,bsmith-auth0,fix: many2many association with duplicate belongs to elem (#6206),67,81,Cr,186e8a9,1,2023-04-11 03:06:13,2022-10-18 03:58:42
callbacks/associations.go,7bcd95d,Jinzhu,Add save associations for bulk create,84,84,,,0,2020-04-19 15:11:56,
callbacks/associations.go,7bcd95d,Jinzhu,Add save associations for bulk create,85,85,,,0,2020-04-19 15:11:56,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",86,86,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,ccc3cb7,bsmith-auth0,fix: many2many association with duplicate belongs to elem (#6206),87,87,Cr,186e8a9,1,2023-04-11 03:06:13,2022-10-18 03:58:42
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",88,90,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,56ca9a8,Jinzhu,Add permission check when create associations,91,91,,,0,2020-04-16 02:29:18,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",93,93,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,56ca9a8,Jinzhu,Add permission check when create associations,92,92,,,0,2020-04-16 02:29:18,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",96,98,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",101,102,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,56ca9a8,Jinzhu,Add permission check when create associations,103,109,,,0,2020-04-16 02:29:18,
callbacks/associations.go,56ca9a8,Jinzhu,Add permission check when create associations,99,99,,,0,2020-04-16 02:29:18,
callbacks/associations.go,7bcd95d,Jinzhu,Add save associations for bulk create,114,114,,,0,2020-04-19 15:11:56,
callbacks/associations.go,9fcc337,Jinzhu,Fix create from map,82,82,Jinzhu,e986371,1,2020-08-17 09:41:36,2020-06-02 01:18:01
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",110,113,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",115,119,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,7bcd95d,Jinzhu,Add save associations for bulk create,127,127,,,0,2020-04-19 15:11:56,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",128,128,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,9f27377,Aman,"fix deprecated reflect.PtrTo reflect.PointerTo usage (#7366)  * fix deprecated reflect.PtrTo reflect.PointerTo usage  * replace all deprecated reflect.PtrTo reflect.PointerTo usage",129,129,bsmith-auth0,ccc3cb7,1,2025-02-13 06:16:26,2023-04-11 03:06:13
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",121,126,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,7bcd95d,Jinzhu,Add save associations for bulk create,120,120,,,0,2020-04-19 15:11:56,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",132,132,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,7bcd95d,Jinzhu,Add save associations for bulk create,133,133,,,0,2020-04-19 15:11:56,
callbacks/associations.go,43a814a,Jinzhu,Add bulk create associations tests,136,136,,,0,2020-04-20 03:47:29,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",134,135,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,fb44625,Jinzhu,Save HasOne association,131,131,,,0,2020-04-17 00:23:47,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",130,130,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",137,137,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",140,142,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",144,145,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,43a814a,Jinzhu,Add bulk create associations tests,143,143,,,0,2020-04-20 03:47:29,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",148,148,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",150,150,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",153,154,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",149,149,Jinzhu,8627634,1,2022-02-19 09:02:53,2021-12-02 02:20:16
callbacks/associations.go,7bcd95d,Jinzhu,Add save associations for bulk create,152,152,,,0,2020-04-19 15:11:56,
callbacks/associations.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",138,139,Jinzhu,6d260a8,1,2022-02-19 09:02:53,2021-01-05 13:12:31
callbacks/associations.go,7bcd95d,Jinzhu,Add save associations for bulk create,156,156,,,0,2020-04-19 15:11:56,
callbacks/associations.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",94,95,Jinzhu,6d260a8,1,2022-02-19 09:02:53,2021-01-05 13:12:31
callbacks/associations.go,adf85d5,Sivchari,"change the method of initializing slice (#4097)  * change the method of initializing slice and fixed the length to be specified as 0  * keep the association.go code in the var group  * keep the association.go code in the var group  * change to initializing in var group",159,159,Jinzhu,eb9a704,1,2021-03-04 11:44:15,2021-02-26 09:11:25
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",158,158,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,9fcc337,Jinzhu,Fix create from map,151,151,Jinzhu,66dcd7e,1,2020-08-17 09:41:36,2020-07-01 11:49:04
callbacks/associations.go,a1e35bd,Jinzhu,Support merge batch data some having primary values,163,163,Jinzhu,e986371,0,2020-06-20 08:52:15,2020-06-02 01:18:01
callbacks/associations.go,7bcd95d,Jinzhu,Add save associations for bulk create,157,157,,,0,2020-04-19 15:11:56,
callbacks/associations.go,9b9ae32,chenrui,"fix: circular reference save, close #5140  commit 2ac099a37ac7bd74f0a98a6fdc42cc8527404144 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 23:49:21 2022 +0800      Refactor #5140  commit 6e3ca2d1aa09943dcfb5d9a4b93bea28212f71be Author: a631807682 <631807682@qq.com> Date:   Sun Mar 13 12:52:08 2022 +0800      test: add test for LoadOrStoreVisitMap  commit 9d5c68e41000fd15dea124797dd5f2656bf6b304 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:33:47 2022 +0800      chore: add more comment  commit bfffefb179c883389b72bef8f04469c0a8418043 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:28:48 2022 +0800      fix: should check values has been saved instead of rel.Name  commit e55cdfa4b3fbcf8b80baf009e8ddb2e40d471494 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:48:01 2022 +0800      chore: go lint  commit fe4715c5bd4ac28950c97dded9848710d8becb88 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:27:24 2022 +0800      chore: add test comment  commit 326862f3f8980482a09d7d1a7f4d1011bb8a7c59 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:22:33 2022 +0800      fix: circular reference save",164,164,Jinzhu,8627634,1,2022-03-17 15:53:31,2021-12-02 02:20:16
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",166,166,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",160,162,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",167,168,Jinzhu,8627634,1,2022-02-19 09:02:53,2021-12-02 02:20:16
callbacks/associations.go,43a814a,Jinzhu,Add bulk create associations tests,165,165,,,0,2020-04-20 03:47:29,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",169,171,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,9b9ae32,chenrui,"fix: circular reference save, close #5140  commit 2ac099a37ac7bd74f0a98a6fdc42cc8527404144 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 23:49:21 2022 +0800      Refactor #5140  commit 6e3ca2d1aa09943dcfb5d9a4b93bea28212f71be Author: a631807682 <631807682@qq.com> Date:   Sun Mar 13 12:52:08 2022 +0800      test: add test for LoadOrStoreVisitMap  commit 9d5c68e41000fd15dea124797dd5f2656bf6b304 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:33:47 2022 +0800      chore: add more comment  commit bfffefb179c883389b72bef8f04469c0a8418043 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:28:48 2022 +0800      fix: should check values has been saved instead of rel.Name  commit e55cdfa4b3fbcf8b80baf009e8ddb2e40d471494 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:48:01 2022 +0800      chore: go lint  commit fe4715c5bd4ac28950c97dded9848710d8becb88 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:27:24 2022 +0800      chore: add test comment  commit 326862f3f8980482a09d7d1a7f4d1011bb8a7c59 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:22:33 2022 +0800      fix: circular reference save",100,100,Jinzhu,6d260a8,1,2022-03-17 15:53:31,2021-01-05 13:12:31
callbacks/associations.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",146,147,Jinzhu,eb9a704,1,2022-02-19 09:02:53,2021-02-26 09:11:25
callbacks/associations.go,fb44625,Jinzhu,Save HasOne association,172,172,,,0,2020-04-17 00:23:47,
callbacks/associations.go,adf85d5,Sivchari,"change the method of initializing slice (#4097)  * change the method of initializing slice and fixed the length to be specified as 0  * keep the association.go code in the var group  * keep the association.go code in the var group  * change to initializing in var group",173,173,Jinzhu,6d260a8,1,2021-03-04 11:44:15,2021-01-05 13:12:31
callbacks/associations.go,9fcc337,Jinzhu,Fix create from map,155,155,,,1,2020-08-17 09:41:36,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",174,175,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,fb44625,Jinzhu,Save HasOne association,182,182,,,0,2020-04-17 00:23:47,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",178,178,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,7bcd95d,Jinzhu,Add save associations for bulk create,183,183,,,0,2020-04-19 15:11:56,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",185,185,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,fb44625,Jinzhu,Save HasOne association,186,186,,,0,2020-04-17 00:23:47,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",180,181,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,7bcd95d,Jinzhu,Add save associations for bulk create,187,187,,,0,2020-04-19 15:11:56,
callbacks/associations.go,fb44625,Jinzhu,Save HasOne association,194,194,,,0,2020-04-17 00:23:47,
callbacks/associations.go,fb44625,Jinzhu,Save HasOne association,188,188,,,0,2020-04-17 00:23:47,
callbacks/associations.go,9b9ae32,chenrui,"fix: circular reference save, close #5140  commit 2ac099a37ac7bd74f0a98a6fdc42cc8527404144 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 23:49:21 2022 +0800      Refactor #5140  commit 6e3ca2d1aa09943dcfb5d9a4b93bea28212f71be Author: a631807682 <631807682@qq.com> Date:   Sun Mar 13 12:52:08 2022 +0800      test: add test for LoadOrStoreVisitMap  commit 9d5c68e41000fd15dea124797dd5f2656bf6b304 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:33:47 2022 +0800      chore: add more comment  commit bfffefb179c883389b72bef8f04469c0a8418043 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:28:48 2022 +0800      fix: should check values has been saved instead of rel.Name  commit e55cdfa4b3fbcf8b80baf009e8ddb2e40d471494 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:48:01 2022 +0800      chore: go lint  commit fe4715c5bd4ac28950c97dded9848710d8becb88 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:27:24 2022 +0800      chore: add test comment  commit 326862f3f8980482a09d7d1a7f4d1011bb8a7c59 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:22:33 2022 +0800      fix: circular reference save",184,184,heige,9d5f315,1,2022-03-17 15:53:31,2021-11-29 01:33:20
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",189,193,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",195,197,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,9f27377,Aman,"fix deprecated reflect.PtrTo reflect.PointerTo usage (#7366)  * fix deprecated reflect.PtrTo reflect.PointerTo usage  * replace all deprecated reflect.PtrTo reflect.PointerTo usage",198,198,bsmith-auth0,ccc3cb7,1,2025-02-13 06:16:26,2023-04-11 03:06:13
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",199,200,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,27e2753,Jinzhu,"Fix create duplicated value when updating nested has many relationship, close #4796",201,201,heige,9d5f315,1,2021-11-29 10:43:39,2021-11-29 01:33:20
callbacks/associations.go,7bcd95d,Jinzhu,Add save associations for bulk create,205,205,,,0,2020-04-19 15:11:56,
callbacks/associations.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",203,204,Jinzhu,8627634,1,2022-02-19 09:02:53,2021-12-02 02:20:16
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",202,202,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",206,209,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",212,212,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,f92e674,Jinzhu,Handle field set value error,177,177,Jinzhu,6d260a8,1,2022-03-23 09:24:25,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",214,216,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",210,210,Jinzhu,27e2753,1,2022-02-19 09:02:53,2021-11-29 10:43:39
callbacks/associations.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",176,176,Jinzhu,6d260a8,1,2022-02-19 09:02:53,2021-01-05 13:12:31
callbacks/associations.go,f92e674,Jinzhu,Handle field set value error,211,211,Jinzhu,27e2753,1,2022-03-23 09:24:25,2021-11-29 10:43:39
callbacks/associations.go,f92e674,Jinzhu,Handle field set value error,213,213,Jinzhu,27e2753,1,2022-03-23 09:24:25,2021-11-29 10:43:39
callbacks/associations.go,27e2753,Jinzhu,"Fix create duplicated value when updating nested has many relationship, close #4796",217,218,heige,9d5f315,1,2021-11-29 10:43:39,2021-11-29 01:33:20
callbacks/associations.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",219,219,heige,9d5f315,1,2022-02-19 09:02:53,2021-11-29 01:33:20
callbacks/associations.go,7bcd95d,Jinzhu,Add save associations for bulk create,235,236,,,0,2020-04-19 15:11:56,
callbacks/associations.go,7bcd95d,Jinzhu,Add save associations for bulk create,239,239,,,0,2020-04-19 15:11:56,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",237,238,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,f92e674,Jinzhu,Handle field set value error,179,179,Jinzhu,6d260a8,1,2022-03-23 09:24:25,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",240,245,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,7bcd95d,Jinzhu,Add save associations for bulk create,246,246,,,0,2020-04-19 15:11:56,
callbacks/associations.go,27e2753,Jinzhu,"Fix create duplicated value when updating nested has many relationship, close #4796",230,234,Jinzhu,eb9a704,1,2021-11-29 10:43:39,2021-02-26 09:11:25
callbacks/associations.go,fb44625,Jinzhu,Save HasOne association,247,247,,,0,2020-04-17 00:23:47,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",248,249,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,158bace,Jinzhu,Add save has many relations,251,251,,,0,2020-04-19 06:29:31,
callbacks/associations.go,fb44625,Jinzhu,Save HasOne association,250,250,,,0,2020-04-17 00:23:47,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",254,255,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,27e2753,Jinzhu,"Fix create duplicated value when updating nested has many relationship, close #4796",220,223,Jinzhu,6d260a8,1,2021-11-29 10:43:39,2021-01-05 13:12:31
callbacks/associations.go,adf85d5,Sivchari,"change the method of initializing slice (#4097)  * change the method of initializing slice and fixed the length to be specified as 0  * keep the association.go code in the var group  * keep the association.go code in the var group  * change to initializing in var group",253,253,Jinzhu,6d260a8,1,2021-03-04 11:44:15,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",252,252,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,8627634,Jinzhu,"Fix create associations with zero primary key, close #4890",225,225,Jinzhu,6d260a8,1,2021-12-02 02:20:16,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",257,257,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,7bcd95d,Jinzhu,Add save associations for bulk create,259,259,,,0,2020-04-19 15:11:56,
callbacks/associations.go,7bcd95d,Jinzhu,Add save associations for bulk create,260,260,,,0,2020-04-19 15:11:56,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",262,265,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,a1e35bd,Jinzhu,Support merge batch data some having primary values,266,267,Jinzhu,e986371,0,2020-06-20 08:52:15,2020-06-02 01:18:01
callbacks/associations.go,158bace,Jinzhu,Add save has many relations,261,261,,,0,2020-04-19 06:29:31,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",268,270,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,9f27377,Aman,"fix deprecated reflect.PtrTo reflect.PointerTo usage (#7366)  * fix deprecated reflect.PtrTo reflect.PointerTo usage  * replace all deprecated reflect.PtrTo reflect.PointerTo usage",271,271,bsmith-auth0,ccc3cb7,1,2025-02-13 06:16:26,2023-04-11 03:06:13
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",272,273,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",276,276,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,158bace,Jinzhu,Add save has many relations,277,277,,,0,2020-04-19 06:29:31,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",278,281,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,099813b,alingse,"Adjust ToStringKey use unpack params, fix  pass []any as any in variadic function (#5500)  * fix pass []any as any in variadic function  * add .vscode to gitignore",224,224,Jinzhu,6d260a8,1,2022-07-14 12:05:22,2021-01-05 13:12:31
callbacks/associations.go,c74bc57,Cr,"fix: association many2many duplicate elem (#5473)  * fix: association many2many duplicate elem  * chore: gofumpt style",274,274,Jinzhu,f92e674,1,2022-07-01 07:12:15,2022-03-23 09:24:25
callbacks/associations.go,9f27377,Aman,"fix deprecated reflect.PtrTo reflect.PointerTo usage (#7366)  * fix deprecated reflect.PtrTo reflect.PointerTo usage  * replace all deprecated reflect.PtrTo reflect.PointerTo usage",275,275,bsmith-auth0,ccc3cb7,1,2025-02-13 06:16:26,2023-04-11 03:06:13
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",286,286,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",284,284,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,186e8a9,Cr,fix: association without pks (#5779),226,229,Jinzhu,6d260a8,1,2022-10-18 03:58:42,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",289,289,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,9fcc337,Jinzhu,Fix create from map,256,256,,,1,2020-08-17 09:41:36,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",291,291,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,43a814a,Jinzhu,Add bulk create associations tests,290,290,,,0,2020-04-20 03:47:29,
callbacks/associations.go,7bcd95d,Jinzhu,Add save associations for bulk create,292,292,,,0,2020-04-19 15:11:56,
callbacks/associations.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",282,282,Jinzhu,6d260a8,1,2022-02-19 09:02:53,2021-01-05 13:12:31
callbacks/associations.go,c74bc57,Cr,"fix: association many2many duplicate elem (#5473)  * fix: association many2many duplicate elem  * chore: gofumpt style",294,294,Jinzhu,f92e674,1,2022-07-01 07:12:15,2022-03-23 09:24:25
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",295,295,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,f92e674,Jinzhu,Handle field set value error,283,283,Jinzhu,6d260a8,1,2022-03-23 09:24:25,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",298,299,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,43a814a,Jinzhu,Add bulk create associations tests,293,293,,,0,2020-04-20 03:47:29,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",303,303,Jinzhu,6d260a8,0,2021-02-07 06:24:11,2021-01-05 13:12:31
callbacks/associations.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",287,287,Jinzhu,6d260a8,1,2022-02-19 09:02:53,2021-01-05 13:12:31
callbacks/associations.go,c74bc57,Cr,"fix: association many2many duplicate elem (#5473)  * fix: association many2many duplicate elem  * chore: gofumpt style",300,302,Jinzhu,f92e674,1,2022-07-01 07:12:15,2022-03-23 09:24:25
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",311,311,Jinzhu,54b80b1,0,2021-02-07 06:24:11,2020-11-17 13:49:40
callbacks/associations.go,f92e674,Jinzhu,Handle field set value error,288,288,Jinzhu,6d260a8,1,2022-03-23 09:24:25,2021-01-05 13:12:31
callbacks/associations.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",296,297,Jinzhu,6d260a8,1,2022-02-19 09:02:53,2021-01-05 13:12:31
callbacks/associations.go,c74bc57,Cr,"fix: association many2many duplicate elem (#5473)  * fix: association many2many duplicate elem  * chore: gofumpt style",319,321,Jinzhu,f92e674,1,2022-07-01 07:12:15,2022-03-23 09:24:25
callbacks/associations.go,158bace,Jinzhu,Add save has many relations,322,324,,,0,2020-04-19 06:29:31,
callbacks/associations.go,9b9ae32,chenrui,"fix: circular reference save, close #5140  commit 2ac099a37ac7bd74f0a98a6fdc42cc8527404144 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 23:49:21 2022 +0800      Refactor #5140  commit 6e3ca2d1aa09943dcfb5d9a4b93bea28212f71be Author: a631807682 <631807682@qq.com> Date:   Sun Mar 13 12:52:08 2022 +0800      test: add test for LoadOrStoreVisitMap  commit 9d5c68e41000fd15dea124797dd5f2656bf6b304 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:33:47 2022 +0800      chore: add more comment  commit bfffefb179c883389b72bef8f04469c0a8418043 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:28:48 2022 +0800      fix: should check values has been saved instead of rel.Name  commit e55cdfa4b3fbcf8b80baf009e8ddb2e40d471494 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:48:01 2022 +0800      chore: go lint  commit fe4715c5bd4ac28950c97dded9848710d8becb88 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:27:24 2022 +0800      chore: add test comment  commit 326862f3f8980482a09d7d1a7f4d1011bb8a7c59 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:22:33 2022 +0800      fix: circular reference save",258,258,Jinzhu,6d260a8,1,2022-03-17 15:53:31,2021-01-05 13:12:31
callbacks/associations.go,158bace,Jinzhu,Add save has many relations,325,325,,,0,2020-04-19 06:29:31,
callbacks/associations.go,c74bc57,Cr,"fix: association many2many duplicate elem (#5473)  * fix: association many2many duplicate elem  * chore: gofumpt style",314,314,Jinzhu,220349c,1,2022-07-01 07:12:15,2021-03-19 07:15:26
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",326,332,Jinzhu,6186a4d,0,2021-02-07 06:24:11,2020-11-20 08:56:52
callbacks/associations.go,099813b,alingse,"Adjust ToStringKey use unpack params, fix  pass []any as any in variadic function (#5500)  * fix pass []any as any in variadic function  * add .vscode to gitignore",313,313,Jinzhu,6d260a8,1,2022-07-14 12:05:22,2021-01-05 13:12:31
callbacks/associations.go,43a814a,Jinzhu,Add bulk create associations tests,336,336,,,0,2020-04-20 03:47:29,
callbacks/associations.go,f92e674,Jinzhu,Handle field set value error,285,285,Jinzhu,6d260a8,1,2022-03-23 09:24:25,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",334,335,Jinzhu,fcb666c,0,2021-02-07 06:24:11,2020-09-03 02:58:48
callbacks/associations.go,43a814a,Jinzhu,Add bulk create associations tests,337,337,,,0,2020-04-20 03:47:29,
callbacks/associations.go,c74bc57,Cr,"fix: association many2many duplicate elem (#5473)  * fix: association many2many duplicate elem  * chore: gofumpt style",341,341,chenrui,9b9ae32,1,2022-07-01 07:12:15,2022-03-17 15:53:31
callbacks/associations.go,43a814a,Jinzhu,Add bulk create associations tests,343,343,,,0,2020-04-20 03:47:29,
callbacks/associations.go,c74bc57,Cr,"fix: association many2many duplicate elem (#5473)  * fix: association many2many duplicate elem  * chore: gofumpt style",312,312,Jinzhu,6d260a8,1,2022-07-01 07:12:15,2021-01-05 13:12:31
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",342,342,Jinzhu,54b80b1,0,2021-02-07 06:24:11,2020-11-17 13:49:40
callbacks/associations.go,9fcc337,Jinzhu,Fix create from map,333,333,,,1,2020-08-17 09:41:36,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",345,346,Jinzhu,54b80b1,0,2021-02-07 06:24:11,2020-11-17 13:49:40
callbacks/associations.go,43a814a,Jinzhu,Add bulk create associations tests,347,347,,,0,2020-04-20 03:47:29,
callbacks/associations.go,7bcd95d,Jinzhu,Add save associations for bulk create,355,355,,,0,2020-04-19 15:11:56,
callbacks/associations.go,c74bc57,Cr,"fix: association many2many duplicate elem (#5473)  * fix: association many2many duplicate elem  * chore: gofumpt style",304,310,Jinzhu,6d260a8,1,2022-07-01 07:12:15,2021-01-05 13:12:31
callbacks/associations.go,186e8a9,Cr,fix: association without pks (#5779),315,318,Jinzhu,6d260a8,1,2022-10-18 03:58:42,2021-01-05 13:12:31
callbacks/associations.go,43a814a,Jinzhu,Add bulk create associations tests,348,348,,,0,2020-04-20 03:47:29,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",340,340,Jinzhu,54b80b1,0,2021-02-07 06:24:11,2020-11-17 13:49:40
callbacks/associations.go,158bace,Jinzhu,Add save has many relations,356,357,,,0,2020-04-19 06:29:31,
callbacks/associations.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",349,354,Jinzhu,54b80b1,0,2021-02-07 06:24:11,2020-11-17 13:49:40
callbacks/associations.go,fb44625,Jinzhu,Save HasOne association,358,358,,,0,2020-04-17 00:23:47,
callbacks/associations.go,74e7a9c,heige,"Optimize reflect value length and method (#4280)  * Respect ignore migration when add column (#4276)  continue https://github.com/go-gorm/gorm/pull/4028  * feat: Optimal value type acquisition for v (#4278)  * feat: optimize relect value length and value  * feat: optimize ConvertSliceOfMapToValuesForCreate method  Co-authored-by: yrong1997 <yrong1997@gmail.com>",344,344,Jinzhu,54b80b1,0,2021-04-14 05:00:54,2020-11-17 13:49:40
callbacks/associations.go,3a8c250,Jinzhu,Refactor calc associations onConflictOption,364,364,heige,74e7a9c,0,2021-08-26 05:37:49,2021-04-14 05:00:54
callbacks/associations.go,f2321ca,Andrei Baibaratsky,Fixed creation of associated records with composite primary keys (go-gorm#3817) (#3818),363,363,Jinzhu,50df9da,1,2020-12-03 07:00:26,2020-11-17 12:24:08
callbacks/associations.go,3a8c250,Jinzhu,Refactor calc associations onConflictOption,361,362,heige,74e7a9c,0,2021-08-26 05:37:49,2021-04-14 05:00:54
callbacks/associations.go,74e7a9c,heige,"Optimize reflect value length and method (#4280)  * Respect ignore migration when add column (#4276)  continue https://github.com/go-gorm/gorm/pull/4028  * feat: Optimal value type acquisition for v (#4278)  * feat: optimize relect value length and value  * feat: optimize ConvertSliceOfMapToValuesForCreate method  Co-authored-by: yrong1997 <yrong1997@gmail.com>",338,339,Jinzhu,54b80b1,0,2021-04-14 05:00:54,2020-11-17 13:49:40
callbacks/associations.go,3a8c250,Jinzhu,Refactor calc associations onConflictOption,367,369,heige,74e7a9c,0,2021-08-26 05:37:49,2021-04-14 05:00:54
callbacks/associations.go,2d5cb99,Jin,style: fix linter check for NamingStrategy and onConflictOption (#5174),360,360,Jinzhu,deff059,1,2022-03-20 01:02:45,2021-02-07 06:24:11
callbacks/associations.go,3a8c250,Jinzhu,Refactor calc associations onConflictOption,371,372,Sivchari,adf85d5,0,2021-08-26 05:37:49,2021-03-04 11:44:15
callbacks/associations.go,3a8c250,Jinzhu,Refactor calc associations onConflictOption,375,375,Jinzhu,50df9da,0,2021-08-26 05:37:49,2020-11-17 12:24:08
callbacks/associations.go,fcb666c,Jinzhu,"Fix associations using composite primary keys without ID field, close #3365",359,359,,,1,2020-09-03 02:58:48,
callbacks/associations.go,9b9ae32,chenrui,"fix: circular reference save, close #5140  commit 2ac099a37ac7bd74f0a98a6fdc42cc8527404144 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 23:49:21 2022 +0800      Refactor #5140  commit 6e3ca2d1aa09943dcfb5d9a4b93bea28212f71be Author: a631807682 <631807682@qq.com> Date:   Sun Mar 13 12:52:08 2022 +0800      test: add test for LoadOrStoreVisitMap  commit 9d5c68e41000fd15dea124797dd5f2656bf6b304 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:33:47 2022 +0800      chore: add more comment  commit bfffefb179c883389b72bef8f04469c0a8418043 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:28:48 2022 +0800      fix: should check values has been saved instead of rel.Name  commit e55cdfa4b3fbcf8b80baf009e8ddb2e40d471494 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:48:01 2022 +0800      chore: go lint  commit fe4715c5bd4ac28950c97dded9848710d8becb88 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:27:24 2022 +0800      chore: add test comment  commit 326862f3f8980482a09d7d1a7f4d1011bb8a7c59 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:22:33 2022 +0800      fix: circular reference save",378,383,heige,74e7a9c,1,2022-03-17 15:53:31,2021-04-14 05:00:54
callbacks/associations.go,fcb666c,Jinzhu,"Fix associations using composite primary keys without ID field, close #3365",376,376,,,1,2020-09-03 02:58:48,
callbacks/associations.go,2d5cb99,Jin,style: fix linter check for NamingStrategy and onConflictOption (#5174),386,386,heige,74e7a9c,1,2022-03-20 01:02:45,2021-04-14 05:00:54
callbacks/associations.go,9b9ae32,chenrui,"fix: circular reference save, close #5140  commit 2ac099a37ac7bd74f0a98a6fdc42cc8527404144 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 23:49:21 2022 +0800      Refactor #5140  commit 6e3ca2d1aa09943dcfb5d9a4b93bea28212f71be Author: a631807682 <631807682@qq.com> Date:   Sun Mar 13 12:52:08 2022 +0800      test: add test for LoadOrStoreVisitMap  commit 9d5c68e41000fd15dea124797dd5f2656bf6b304 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:33:47 2022 +0800      chore: add more comment  commit bfffefb179c883389b72bef8f04469c0a8418043 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:28:48 2022 +0800      fix: should check values has been saved instead of rel.Name  commit e55cdfa4b3fbcf8b80baf009e8ddb2e40d471494 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:48:01 2022 +0800      chore: go lint  commit fe4715c5bd4ac28950c97dded9848710d8becb88 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:27:24 2022 +0800      chore: add test comment  commit 326862f3f8980482a09d7d1a7f4d1011bb8a7c59 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:22:33 2022 +0800      fix: circular reference save",388,388,Sivchari,adf85d5,1,2022-03-17 15:53:31,2021-03-04 11:44:15
callbacks/associations.go,a1a30c3,Jinzhu,"Allow to omit fields when upsert associations, close #3762",384,385,,,0,2020-11-18 11:06:49,
callbacks/associations.go,a1a30c3,Jinzhu,"Allow to omit fields when upsert associations, close #3762",387,387,,,0,2020-11-18 11:06:49,
callbacks/associations.go,a1a30c3,Jinzhu,"Allow to omit fields when upsert associations, close #3762",389,389,,,0,2020-11-18 11:06:49,
callbacks/associations.go,c0de3c5,Jinzhu,"Support FullSaveAssociations Mode, close #3487, #3506",365,366,,,0,2020-09-24 11:29:15,
callbacks/associations.go,c0de3c5,Jinzhu,"Support FullSaveAssociations Mode, close #3487, #3506",370,370,,,0,2020-09-24 11:29:15,
callbacks/associations.go,54b80b1,Jinzhu,"Allow to omit fields in associations, close #3752",390,394,,,0,2020-11-17 13:49:40,
callbacks/associations.go,54b80b1,Jinzhu,"Allow to omit fields in associations, close #3752",395,405,,,0,2020-11-17 13:49:40,
callbacks/associations.go,fcb666c,Jinzhu,"Fix associations using composite primary keys without ID field, close #3365",373,373,,,1,2020-09-03 02:58:48,
callbacks/associations.go,54b80b1,Jinzhu,"Allow to omit fields in associations, close #3752",377,377,,,0,2020-11-17 13:49:40,
callbacks/associations.go,c0de3c5,Jinzhu,"Support FullSaveAssociations Mode, close #3487, #3506",374,374,,,0,2020-09-24 11:29:15,
callbacks/associations.go,77bf4ae,Jinzhu,Create associations w/o nested transaction option,406,406,,,0,2020-12-18 05:25:52,
callbacks/associations.go,6d260a8,Jinzhu,"Fix Set/Get settings when saving associations, close #3908",412,416,,,1,2021-01-05 13:12:31,
callbacks/associations.go,54b80b1,Jinzhu,"Allow to omit fields in associations, close #3752",411,411,,,0,2020-11-17 13:49:40,
callbacks/associations.go,54b80b1,Jinzhu,"Allow to omit fields in associations, close #3752",421,422,,,0,2020-11-17 13:49:40,
callbacks/associations.go,220349c,Jinzhu,"Fix omit associations, close #4161",423,423,,,1,2021-03-19 07:15:26,
callbacks/associations.go,54b80b1,Jinzhu,"Allow to omit fields in associations, close #3752",425,432,,,0,2020-11-17 13:49:40,
callbacks/associations.go,940da05,Jinzhu,"Skip nested associations when create data with Select, close #4108",424,424,,,0,2021-02-23 11:35:24,
callbacks/associations.go,9b9ae32,chenrui,"fix: circular reference save, close #5140  commit 2ac099a37ac7bd74f0a98a6fdc42cc8527404144 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 23:49:21 2022 +0800      Refactor #5140  commit 6e3ca2d1aa09943dcfb5d9a4b93bea28212f71be Author: a631807682 <631807682@qq.com> Date:   Sun Mar 13 12:52:08 2022 +0800      test: add test for LoadOrStoreVisitMap  commit 9d5c68e41000fd15dea124797dd5f2656bf6b304 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:33:47 2022 +0800      chore: add more comment  commit bfffefb179c883389b72bef8f04469c0a8418043 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:28:48 2022 +0800      fix: should check values has been saved instead of rel.Name  commit e55cdfa4b3fbcf8b80baf009e8ddb2e40d471494 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:48:01 2022 +0800      chore: go lint  commit fe4715c5bd4ac28950c97dded9848710d8becb88 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:27:24 2022 +0800      chore: add test comment  commit 326862f3f8980482a09d7d1a7f4d1011bb8a7c59 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:22:33 2022 +0800      fix: circular reference save",433,453,,,1,2022-03-17 15:53:31,
callbacks/associations.go,77bf4ae,Jinzhu,Create associations w/o nested transaction option,408,410,,,0,2020-12-18 05:25:52,
callbacks/associations.go,eb9a704,Jinzhu,"Fix update UpdatedAt when full saving associations, close #4115",407,407,,,1,2021-02-26 09:11:25,
callbacks/associations.go,eb9a704,Jinzhu,"Fix update UpdatedAt when full saving associations, close #4115",417,417,,,1,2021-02-26 09:11:25,
callbacks/associations.go,eb9a704,Jinzhu,"Fix update UpdatedAt when full saving associations, close #4115",419,420,,,1,2021-02-26 09:11:25,
callbacks/associations.go,8e67a08,Jinzhu,"Fix Scopes with Row, close #4465",418,418,,,1,2021-06-18 07:38:20,
logger/sql_test.go,bc5ceff,Jinzhu,Explain SQL for dialects,9,10,,,0,2020-02-23 04:41:13,
logger/sql_test.go,bc5ceff,Jinzhu,Explain SQL for dialects,1,3,,,0,2020-02-23 04:41:13,
logger/sql_test.go,bc5ceff,Jinzhu,Explain SQL for dialects,7,7,,,0,2020-02-23 04:41:13,
logger/sql_test.go,bc5ceff,Jinzhu,Explain SQL for dialects,13,14,,,0,2020-02-23 04:41:13,
logger/sql_test.go,6892044,caelansar,Fix format sql log (#3492),4,6,Jinzhu,0ec10d4,1,2020-09-19 05:48:34,2020-09-14 04:37:16
logger/sql_test.go,6892044,caelansar,Fix format sql log (#3492),8,8,Jinzhu,0ec10d4,1,2020-09-19 05:48:34,2020-09-14 04:37:16
logger/sql_test.go,5790ba9,Jinzhu,Fix package path,11,11,Jinzhu,e986371,1,2020-06-02 01:25:55,2020-06-02 01:18:01
logger/sql_test.go,6892044,caelansar,Fix format sql log (#3492),15,33,Jinzhu,0ec10d4,1,2020-09-19 05:48:34,2020-09-14 04:37:16
logger/sql_test.go,87decce,iTanken,fix: ExplainSQL using consecutive pairs of escaper in SQL string represents an escaper (#6766)  Preventing it from being interpreted as the string terminator. This is a widely used escape mechanism in SQL standards and is applicable in most relational databases.,34,34,Heliner,2c20897,1,2023-12-28 11:53:36,2023-08-19 13:33:57
logger/sql_test.go,956f7ce,givemeafish,fix: 'type XXXX int' will print wrong sql to terminal (#6917)  Co-authored-by: 王泽平 <zeping.wang@yo-star.com>,40,41,iTanken,87decce,1,2024-03-21 08:00:02,2023-12-28 11:53:36
logger/sql_test.go,bc5ceff,Jinzhu,Explain SQL for dialects,37,37,,,0,2020-02-23 04:41:13,
logger/sql_test.go,6892044,caelansar,Fix format sql log (#3492),35,36,Jinzhu,0ec10d4,1,2020-09-19 05:48:34,2020-09-14 04:37:16
logger/sql_test.go,c3b798a,Jinzhu,Refactor SQL Explainer,38,39,Jinzhu,bc5ceff,0,2020-02-23 05:22:08,2020-02-23 04:41:13
logger/sql_test.go,c3b798a,Jinzhu,Refactor SQL Explainer,42,42,Jinzhu,bc5ceff,0,2020-02-23 05:22:08,2020-02-23 04:41:13
logger/sql_test.go,956f7ce,givemeafish,fix: 'type XXXX int' will print wrong sql to terminal (#6917)  Co-authored-by: 王泽平 <zeping.wang@yo-star.com>,43,51,iTanken,87decce,1,2024-03-21 08:00:02,2023-12-28 11:53:36
logger/sql_test.go,c3b798a,Jinzhu,Refactor SQL Explainer,52,52,,,0,2020-02-23 05:22:08,
logger/sql_test.go,bc5ceff,Jinzhu,Explain SQL for dialects,62,62,,,0,2020-02-23 04:41:13,
logger/sql_test.go,c3b798a,Jinzhu,Refactor SQL Explainer,61,61,,,0,2020-02-23 05:22:08,
logger/sql_test.go,bc5ceff,Jinzhu,Explain SQL for dialects,53,60,,,0,2020-02-23 04:41:13,
logger/sql_test.go,87decce,iTanken,fix: ExplainSQL using consecutive pairs of escaper in SQL string represents an escaper (#6766)  Preventing it from being interpreted as the string terminator. This is a widely used escape mechanism in SQL standards and is applicable in most relational databases.,64,64,Heliner,2c20897,1,2023-12-28 11:53:36,2023-08-19 13:33:57
logger/sql_test.go,e986371,Jinzhu,Rename package name,12,12,Jinzhu,bc5ceff,0,2020-06-02 01:18:01,2020-02-23 04:41:13
logger/sql_test.go,bc5ceff,Jinzhu,Explain SQL for dialects,65,66,,,0,2020-02-23 04:41:13,
logger/sql_test.go,868ae05,Jinzhu,Add escape sql params test,63,63,,,0,2020-02-23 07:16:40,
logger/sql_test.go,9fcc546,Jinzhu,Fix tests,73,73,,,1,2020-02-26 11:06:42,
logger/sql_test.go,c3b798a,Jinzhu,Refactor SQL Explainer,75,75,,,0,2020-02-23 05:22:08,
logger/sql_test.go,bc5ceff,Jinzhu,Explain SQL for dialects,77,78,,,0,2020-02-23 04:41:13,
logger/sql_test.go,193c454,San Ye,keep float precision in ExplainSQL (#6495),76,76,codingxh,664c5fb,0,2023-08-04 02:31:18,2022-02-20 11:55:04
logger/sql_test.go,87decce,iTanken,fix: ExplainSQL using consecutive pairs of escaper in SQL string represents an escaper (#6766)  Preventing it from being interpreted as the string terminator. This is a widely used escape mechanism in SQL standards and is applicable in most relational databases.,70,70,codingxh,664c5fb,1,2023-12-28 11:53:36,2022-02-20 11:55:04
logger/sql_test.go,c3b798a,Jinzhu,Refactor SQL Explainer,81,81,,,0,2020-02-23 05:22:08,
logger/sql_test.go,9fcc546,Jinzhu,Fix tests,79,79,,,1,2020-02-26 11:06:42,
logger/sql_test.go,193c454,San Ye,keep float precision in ExplainSQL (#6495),82,82,codingxh,664c5fb,0,2023-08-04 02:31:18,2022-02-20 11:55:04
logger/sql_test.go,c3b798a,Jinzhu,Refactor SQL Explainer,83,84,,,0,2020-02-23 05:22:08,
logger/sql_test.go,9fcc546,Jinzhu,Fix tests,85,85,,,1,2020-02-26 11:06:42,
logger/sql_test.go,0ec10d4,Jinzhu,"Fix format SQL log, close #3465",71,72,,,1,2020-09-14 04:37:16,
logger/sql_test.go,c3b798a,Jinzhu,Refactor SQL Explainer,87,87,,,0,2020-02-23 05:22:08,
logger/sql_test.go,4456df7,Jinzhu,Lint with golangci-lint,74,74,,,0,2020-07-16 03:27:12,
logger/sql_test.go,193c454,San Ye,keep float precision in ExplainSQL (#6495),88,88,codingxh,664c5fb,0,2023-08-04 02:31:18,2022-02-20 11:55:04
logger/sql_test.go,4456df7,Jinzhu,Lint with golangci-lint,80,80,,,0,2020-07-16 03:27:12,
logger/sql_test.go,6892044,caelansar,Fix format sql log (#3492),90,93,Jinzhu,0ec10d4,1,2020-09-19 05:48:34,2020-09-14 04:37:16
logger/sql_test.go,87decce,iTanken,fix: ExplainSQL using consecutive pairs of escaper in SQL string represents an escaper (#6766)  Preventing it from being interpreted as the string terminator. This is a widely used escape mechanism in SQL standards and is applicable in most relational databases.,94,94,Heliner,2c20897,1,2023-12-28 11:53:36,2023-08-19 13:33:57
logger/sql_test.go,6892044,caelansar,Fix format sql log (#3492),95,99,Jinzhu,0ec10d4,1,2020-09-19 05:48:34,2020-09-14 04:37:16
logger/sql_test.go,87decce,iTanken,fix: ExplainSQL using consecutive pairs of escaper in SQL string represents an escaper (#6766)  Preventing it from being interpreted as the string terminator. This is a widely used escape mechanism in SQL standards and is applicable in most relational databases.,100,100,Heliner,2c20897,1,2023-12-28 11:53:36,2023-08-19 13:33:57
logger/sql_test.go,bc5ceff,Jinzhu,Explain SQL for dialects,89,89,,,0,2020-02-23 04:41:13,
logger/sql_test.go,193c454,San Ye,keep float precision in ExplainSQL (#6495),102,105,codingxh,664c5fb,0,2023-08-04 02:31:18,2022-02-20 11:55:04
logger/sql_test.go,87decce,iTanken,fix: ExplainSQL using consecutive pairs of escaper in SQL string represents an escaper (#6766)  Preventing it from being interpreted as the string terminator. This is a widely used escape mechanism in SQL standards and is applicable in most relational databases.,106,106,Heliner,2c20897,1,2023-12-28 11:53:36,2023-08-19 13:33:57
logger/sql_test.go,2c20897,Heliner,add float32 test case (#6530),108,111,fayvori,3c34bc2,0,2023-08-19 13:33:57,2023-08-07 08:35:19
logger/sql_test.go,4456df7,Jinzhu,Lint with golangci-lint,86,86,,,0,2020-07-16 03:27:12,
logger/sql_test.go,bc5ceff,Jinzhu,Explain SQL for dialects,126,133,,,0,2020-02-23 04:41:13,
logger/sql_test.go,87decce,iTanken,fix: ExplainSQL using consecutive pairs of escaper in SQL string represents an escaper (#6766)  Preventing it from being interpreted as the string terminator. This is a widely used escape mechanism in SQL standards and is applicable in most relational databases.,112,112,San Ye,193c454,1,2023-12-28 11:53:36,2023-08-04 02:31:18
logger/sql_test.go,193c454,San Ye,keep float precision in ExplainSQL (#6495),107,107,codingxh,664c5fb,0,2023-08-04 02:31:18,2022-02-20 11:55:04
logger/sql_test.go,956f7ce,givemeafish,fix: 'type XXXX int' will print wrong sql to terminal (#6917)  Co-authored-by: 王泽平 <zeping.wang@yo-star.com>,114,125,iTanken,87decce,1,2024-03-21 08:00:02,2023-12-28 11:53:36
logger/sql_test.go,6892044,caelansar,Fix format sql log (#3492),101,101,,,1,2020-09-19 05:48:34,
logger/sql_test.go,0ec10d4,Jinzhu,"Fix format SQL log, close #3465",67,69,,,1,2020-09-14 04:37:16,
logger/sql_test.go,2c20897,Heliner,add float32 test case (#6530),113,113,,,0,2023-08-19 13:33:57,
migrator/column_type.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",48,53,,,1,2022-02-19 09:02:53,
migrator/column_type.go,9a4d10b,Jin,style: fix coding typo (#5184),47,47,Jinzhu,48ced75,1,2022-03-24 01:31:58,2022-02-19 15:42:20
migrator/column_type.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",15,46,,,1,2022-02-19 09:02:53,
migrator/column_type.go,48ced75,Jinzhu,Improve support for AutoMigrate,14,14,Jinzhu,0af95f5,0,2022-02-19 15:42:20,2022-02-19 09:02:53
migrator/column_type.go,48ced75,Jinzhu,Improve support for AutoMigrate,54,54,Jinzhu,0af95f5,0,2022-02-19 15:42:20,2022-02-19 09:02:53
migrator/column_type.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",1,13,,,1,2022-02-19 09:02:53,
migrator/column_type.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",55,107,,,1,2022-02-19 09:02:53,
migrator/index.go,05bb9d6,jessetang,refactor(migrator): non-standard codes (#6180),25,25,qqxhb,1305f63,0,2023-04-11 02:32:46,2022-06-17 03:00:57
migrator/index.go,1305f63,qqxhb,"feat: add method GetIndexes (#5436)  * feat: add method GetIndexes  * feat: add default impl for Index interface  * feat: fmt",21,24,,,0,2022-06-17 03:00:57,
migrator/index.go,1305f63,qqxhb,"feat: add method GetIndexes (#5436)  * feat: add method GetIndexes  * feat: add default impl for Index interface  * feat: fmt",26,39,,,0,2022-06-17 03:00:57,
migrator/index.go,1305f63,qqxhb,"feat: add method GetIndexes (#5436)  * feat: add method GetIndexes  * feat: add default impl for Index interface  * feat: fmt",41,43,,,0,2022-06-17 03:00:57,
migrator/index.go,1305f63,qqxhb,"feat: add method GetIndexes (#5436)  * feat: add method GetIndexes  * feat: add default impl for Index interface  * feat: fmt",1,19,,,0,2022-06-17 03:00:57,
migrator/index.go,05bb9d6,jessetang,refactor(migrator): non-standard codes (#6180),40,40,qqxhb,1305f63,0,2023-04-11 02:32:46,2022-06-17 03:00:57
migrator/index.go,05bb9d6,jessetang,refactor(migrator): non-standard codes (#6180),20,20,qqxhb,1305f63,0,2023-04-11 02:32:46,2022-06-17 03:00:57
logger/logger.go,8eae7e4,Jinzhu,Add migrator,1,2,,,0,2020-01-28 15:01:35,
logger/logger.go,e509b31,Jinzhu,Implement callbacks,8,9,Jinzhu,9d5b983,0,2020-01-30 22:35:25,2020-01-30 11:47:00
logger/logger.go,e509b31,Jinzhu,Implement callbacks,3,3,Jinzhu,9d5b983,0,2020-01-30 22:35:25,2020-01-30 11:47:00
logger/logger.go,27cb613,Jinzhu,Refactor logger,10,11,Jinzhu,bc5ceff,0,2020-02-23 07:07:47,2020-02-23 04:41:13
logger/logger.go,8c3018b,Shunsuke Otani,Replace `ioutil.Discard` with `io.Discard` (#5603),7,7,Jinzhu,4eeb839,0,2022-08-15 02:50:06,2022-02-09 07:17:25
logger/logger.go,f3bdfa8,Jinzhu,Add IgnoreRecordNotFoundError option for logger,5,5,Jinzhu,7302c8a,0,2021-04-09 02:21:01,2021-01-10 07:27:53
logger/logger.go,063b1ca,Jinzhu,Refactor SlowSQL log,6,6,Jinzhu,9eec6ae,0,2020-10-10 02:56:00,2020-09-27 04:25:38
logger/logger.go,8def7be,Jinzhu,Add context to logger,4,4,Jinzhu,477efab,0,2020-05-05 13:28:38,2020-03-14 11:00:41
logger/logger.go,e509b31,Jinzhu,Implement callbacks,13,14,Jinzhu,9d5b983,0,2020-01-30 22:35:25,2020-01-30 11:47:00
logger/logger.go,e986371,Jinzhu,Rename package name,12,12,Jinzhu,ae9e4f1,0,2020-06-02 01:18:01,2020-05-31 09:49:31
logger/logger.go,f3bdfa8,Jinzhu,Add IgnoreRecordNotFoundError option for logger,16,17,Jinzhu,7302c8a,0,2021-04-09 02:21:01,2021-01-10 07:27:53
logger/logger.go,27cb613,Jinzhu,Refactor logger,32,32,Jinzhu,bc5ceff,0,2020-02-23 07:07:47,2020-02-23 04:41:13
logger/logger.go,4eeb839,Jinzhu,Better support Stringer when explain SQL,15,15,Jinzhu,b23c3b2,0,2022-02-09 07:17:25,2021-11-08 10:49:59
logger/logger.go,477efab,Jinzhu,Refactor logger,20,27,Jinzhu,ce0e6f9,0,2020-03-14 11:00:41,2020-03-08 06:51:52
logger/logger.go,27cb613,Jinzhu,Refactor logger,18,19,Jinzhu,bc5ceff,0,2020-02-23 07:07:47,2020-02-23 04:41:13
logger/logger.go,9d5b983,Jinzhu,Refactor builder,37,37,,,0,2020-01-30 11:47:00,
logger/logger.go,e509b31,Jinzhu,Implement callbacks,36,36,Jinzhu,9d5b983,0,2020-01-30 22:35:25,2020-01-30 11:47:00
logger/logger.go,4eeb839,Jinzhu,Better support Stringer when explain SQL,34,34,Jinzhu,b23c3b2,0,2022-02-09 07:17:25,2021-11-08 10:49:59
logger/logger.go,27cb613,Jinzhu,Refactor logger,35,35,Jinzhu,bc5ceff,0,2020-02-23 07:07:47,2020-02-23 04:41:13
logger/logger.go,4eeb839,Jinzhu,Better support Stringer when explain SQL,38,38,Jinzhu,b23c3b2,0,2022-02-09 07:17:25,2021-11-08 10:49:59
logger/logger.go,9d5b983,Jinzhu,Refactor builder,33,33,,,0,2020-01-30 11:47:00,
logger/logger.go,4eeb839,Jinzhu,Better support Stringer when explain SQL,40,40,Jinzhu,b23c3b2,0,2022-02-09 07:17:25,2021-11-08 10:49:59
logger/logger.go,477efab,Jinzhu,Refactor logger,29,31,Jinzhu,bc5ceff,0,2020-03-14 11:00:41,2020-02-23 04:41:13
logger/logger.go,4eeb839,Jinzhu,Better support Stringer when explain SQL,42,42,Jinzhu,b23c3b2,0,2022-02-09 07:17:25,2021-11-08 10:49:59
logger/logger.go,bc5ceff,Jinzhu,Explain SQL for dialects,45,45,Jinzhu,a4a0895,0,2020-02-23 04:41:13,2020-02-01 14:26:17
logger/logger.go,9d5b983,Jinzhu,Refactor builder,43,43,,,0,2020-01-30 11:47:00,
logger/logger.go,9d5b983,Jinzhu,Refactor builder,46,47,,,0,2020-01-30 11:47:00,
logger/logger.go,27cb613,Jinzhu,Refactor logger,54,54,Jinzhu,bc5ceff,0,2020-02-23 07:07:47,2020-02-23 04:41:13
logger/logger.go,27cb613,Jinzhu,Refactor logger,48,52,Jinzhu,bc5ceff,0,2020-02-23 07:07:47,2020-02-23 04:41:13
logger/logger.go,4eeb839,Jinzhu,Better support Stringer when explain SQL,44,44,Jinzhu,b23c3b2,0,2022-02-09 07:17:25,2021-11-08 10:49:59
logger/logger.go,7b6b9c4,Jinzhu,Add tests for Columns,39,39,Jinzhu,bc5ceff,0,2020-05-30 16:42:52,2020-02-23 04:41:13
logger/logger.go,4eeb839,Jinzhu,Better support Stringer when explain SQL,53,53,Jinzhu,b23c3b2,0,2022-02-09 07:17:25,2021-11-08 10:49:59
logger/logger.go,7b6b9c4,Jinzhu,Add tests for Columns,41,41,Jinzhu,bc5ceff,0,2020-05-30 16:42:52,2020-02-23 04:41:13
logger/logger.go,ddd3cc2,Jinzhu,"Add ParameterizedQueries option support for logger, close #5288",58,58,Shunsuke Otani,8c3018b,0,2022-12-25 03:37:23,2022-08-15 02:50:06
logger/logger.go,8eae7e4,Jinzhu,Add migrator,62,63,,,0,2020-01-28 15:01:35,
logger/logger.go,27cb613,Jinzhu,Refactor logger,60,61,Jinzhu,bc5ceff,0,2020-02-23 07:07:47,2020-02-23 04:41:13
logger/logger.go,f3bdfa8,Jinzhu,Add IgnoreRecordNotFoundError option for logger,55,57,Jinzhu,7302c8a,0,2021-04-09 02:21:01,2021-01-10 07:27:53
logger/logger.go,9d5b983,Jinzhu,Refactor builder,64,64,,,0,2020-01-30 11:47:00,
logger/logger.go,c0de3c5,Jinzhu,"Support FullSaveAssociations Mode, close #3487, #3506",28,28,Jinzhu,ce0e6f9,0,2020-09-24 11:29:15,2020-03-08 06:51:52
logger/logger.go,e509b31,Jinzhu,Implement callbacks,69,70,,,0,2020-01-30 22:35:25,
logger/logger.go,d2fb7a9,Flc゛,"chore(logger): optimize (#6675)  * chore(logger): optimize  * chore(logger): optimize",72,72,Jinzhu,4b768c8,0,2023-11-07 02:19:41,2023-01-01 14:22:08
logger/logger.go,8def7be,Jinzhu,Add context to logger,65,67,Jinzhu,ce0e6f9,0,2020-05-05 13:28:38,2020-03-08 06:51:52
logger/logger.go,f6117b7,Jinzhu,"Should not diplay SubQuery SQL log, close #3437",75,75,Jinzhu,4456df7,0,2020-09-09 08:26:16,2020-07-16 03:27:12
logger/logger.go,4eeb839,Jinzhu,Better support Stringer when explain SQL,74,74,Jinzhu,b23c3b2,0,2022-02-09 07:17:25,2021-11-08 10:49:59
logger/logger.go,8c3018b,Shunsuke Otani,Replace `ioutil.Discard` with `io.Discard` (#5603),73,73,Jinzhu,4eeb839,0,2022-08-15 02:50:06,2022-02-09 07:17:25
logger/logger.go,f6117b7,Jinzhu,"Should not diplay SubQuery SQL log, close #3437",71,71,Jinzhu,4456df7,0,2020-09-09 08:26:16,2020-07-16 03:27:12
logger/logger.go,25b9f2e,kalle (jag),Added return names to logger.Interface.Trace (#4450),68,68,Jinzhu,063b1ca,0,2021-06-11 13:51:40,2020-10-10 02:56:00
logger/logger.go,d2fb7a9,Flc゛,"chore(logger): optimize (#6675)  * chore(logger): optimize  * chore(logger): optimize",81,81,Jinzhu,4b768c8,0,2023-11-07 02:19:41,2023-01-01 14:22:08
logger/logger.go,27cb613,Jinzhu,Refactor logger,89,89,Jinzhu,bc5ceff,0,2020-02-23 07:07:47,2020-02-23 04:41:13
logger/logger.go,6d90d09,qifengzhang007,Recorder追踪函数trace在finish_api文件358行scan函数所在的371行被调用时，BeginAt 没有赋值，默认值0001-0:0:0导致追踪日志显示的sql耗时无限大. (#3657)  Co-authored-by: 张奇峰 <10515935zwj>,82,82,Jinzhu,9eec6ae,0,2020-10-22 06:09:09,2020-09-27 04:25:38
logger/logger.go,fed4923,Evyatar Yaffe,Enhance db.Scan with ParamsFilter - Issue 7336 - Suggestion (#7337),83,87,Flc゛,d2fb7a9,1,2025-01-12 10:19:28,2023-11-07 02:19:41
logger/logger.go,27cb613,Jinzhu,Refactor logger,91,92,Jinzhu,bc5ceff,0,2020-02-23 07:07:47,2020-02-23 04:41:13
logger/logger.go,f3bdfa8,Jinzhu,Add IgnoreRecordNotFoundError option for logger,59,59,Jinzhu,477efab,0,2021-04-09 02:21:01,2020-03-14 11:00:41
logger/logger.go,a83d25e,Sungyun Hur,chore(logger): explicitly set config of Default Logger (#4605),76,79,Jinzhu,9eec6ae,0,2021-08-11 03:49:46,2020-09-27 04:25:38
logger/logger.go,f6117b7,Jinzhu,"Should not diplay SubQuery SQL log, close #3437",80,80,Jinzhu,ce0e6f9,0,2020-09-09 08:26:16,2020-03-08 06:51:52
logger/logger.go,477efab,Jinzhu,Refactor logger,93,95,Jinzhu,ce0e6f9,0,2020-03-14 11:00:41,2020-03-08 06:51:52
logger/logger.go,27cb613,Jinzhu,Refactor logger,99,101,Jinzhu,bc5ceff,0,2020-02-23 07:07:47,2020-02-23 04:41:13
logger/logger.go,4eeb839,Jinzhu,Better support Stringer when explain SQL,90,90,Jinzhu,9eec6ae,0,2022-02-09 07:17:25,2020-09-27 04:25:38
logger/logger.go,477efab,Jinzhu,Refactor logger,102,102,Jinzhu,27cb613,0,2020-03-14 11:00:41,2020-02-23 07:07:47
logger/logger.go,477efab,Jinzhu,Refactor logger,104,104,Jinzhu,27cb613,0,2020-03-14 11:00:41,2020-02-23 07:07:47
logger/logger.go,c0de3c5,Jinzhu,"Support FullSaveAssociations Mode, close #3487, #3506",103,103,Jinzhu,ce0e6f9,0,2020-09-24 11:29:15,2020-03-08 06:51:52
logger/logger.go,063b1ca,Jinzhu,Refactor SlowSQL log,97,97,Jinzhu,ce0e6f9,0,2020-10-10 02:56:00,2020-03-08 06:51:52
logger/logger.go,6f4602a,Jinzhu,Fix mysql tests,110,110,Jinzhu,477efab,1,2020-05-29 15:38:03,2020-03-14 11:00:41
logger/logger.go,9eec6ae,Jinzhu,"Fix affected rows for Scan, change affected rows count for row/rows to '-', close #3532",98,98,Jinzhu,ce0e6f9,1,2020-09-27 04:25:38,2020-03-08 06:51:52
logger/logger.go,27cb613,Jinzhu,Refactor logger,108,109,Jinzhu,bc5ceff,0,2020-02-23 07:07:47,2020-02-23 04:41:13
logger/logger.go,f6117b7,Jinzhu,"Should not diplay SubQuery SQL log, close #3437",88,88,Jinzhu,8def7be,0,2020-09-09 08:26:16,2020-05-05 13:28:38
logger/logger.go,27cb613,Jinzhu,Refactor logger,119,119,Jinzhu,bc5ceff,0,2020-02-23 07:07:47,2020-02-23 04:41:13
logger/logger.go,477efab,Jinzhu,Refactor logger,111,118,Jinzhu,ce0e6f9,0,2020-03-14 11:00:41,2020-03-08 06:51:52
logger/logger.go,9eec6ae,Jinzhu,"Fix affected rows for Scan, change affected rows count for row/rows to '-', close #3532",105,105,Jinzhu,8def7be,1,2020-09-27 04:25:38,2020-05-05 13:28:38
logger/logger.go,e509b31,Jinzhu,Implement callbacks,120,121,,,0,2020-01-30 22:35:25,
logger/logger.go,e509b31,Jinzhu,Implement callbacks,123,123,,,0,2020-01-30 22:35:25,
logger/logger.go,27cb613,Jinzhu,Refactor logger,124,124,Jinzhu,bc5ceff,0,2020-02-23 07:07:47,2020-02-23 04:41:13
logger/logger.go,9eec6ae,Jinzhu,"Fix affected rows for Scan, change affected rows count for row/rows to '-', close #3532",107,107,Jinzhu,7b6b9c4,1,2020-09-27 04:25:38,2020-05-30 16:42:52
logger/logger.go,e509b31,Jinzhu,Implement callbacks,127,128,,,0,2020-01-30 22:35:25,
logger/logger.go,063b1ca,Jinzhu,Refactor SlowSQL log,106,106,Jinzhu,8def7be,0,2020-10-10 02:56:00,2020-05-05 13:28:38
logger/logger.go,27cb613,Jinzhu,Refactor logger,129,129,Jinzhu,bc5ceff,0,2020-02-23 07:07:47,2020-02-23 04:41:13
logger/logger.go,27cb613,Jinzhu,Refactor logger,122,122,Jinzhu,bc5ceff,0,2020-02-23 07:07:47,2020-02-23 04:41:13
logger/logger.go,477efab,Jinzhu,Refactor logger,125,126,Jinzhu,ce0e6f9,0,2020-03-14 11:00:41,2020-03-08 06:51:52
logger/logger.go,e509b31,Jinzhu,Implement callbacks,134,136,,,0,2020-01-30 22:35:25,
logger/logger.go,d2fb7a9,Flc゛,"chore(logger): optimize (#6675)  * chore(logger): optimize  * chore(logger): optimize",137,137,Jinzhu,4b768c8,0,2023-11-07 02:19:41,2023-01-01 14:22:08
logger/logger.go,ae9e4f1,Jinzhu,Fix change log level,131,133,Jinzhu,6f4602a,1,2020-05-31 09:49:31,2020-05-29 15:38:03
logger/logger.go,e509b31,Jinzhu,Implement callbacks,140,143,,,0,2020-01-30 22:35:25,
logger/logger.go,6f4602a,Jinzhu,Fix mysql tests,130,130,Jinzhu,477efab,1,2020-05-29 15:38:03,2020-03-14 11:00:41
logger/logger.go,477efab,Jinzhu,Refactor logger,139,139,Jinzhu,ce0e6f9,0,2020-03-14 11:00:41,2020-03-08 06:51:52
logger/logger.go,d2fb7a9,Flc゛,"chore(logger): optimize (#6675)  * chore(logger): optimize  * chore(logger): optimize",144,144,Jinzhu,4b768c8,0,2023-11-07 02:19:41,2023-01-01 14:22:08
logger/logger.go,e509b31,Jinzhu,Implement callbacks,147,150,,,0,2020-01-30 22:35:25,
logger/logger.go,9eec6ae,Jinzhu,"Fix affected rows for Scan, change affected rows count for row/rows to '-', close #3532",96,96,Jinzhu,ce0e6f9,1,2020-09-27 04:25:38,2020-03-08 06:51:52
logger/logger.go,d2fb7a9,Flc゛,"chore(logger): optimize (#6675)  * chore(logger): optimize  * chore(logger): optimize",151,151,Jinzhu,4b768c8,0,2023-11-07 02:19:41,2023-01-01 14:22:08
logger/logger.go,27cb613,Jinzhu,Refactor logger,138,138,,,0,2020-02-23 07:07:47,
logger/logger.go,27cb613,Jinzhu,Refactor logger,145,145,,,0,2020-02-23 07:07:47,
logger/logger.go,8eae7e4,Jinzhu,Add migrator,155,155,,,0,2020-01-28 15:01:35,
logger/logger.go,e509b31,Jinzhu,Implement callbacks,154,154,,,0,2020-01-30 22:35:25,
logger/logger.go,d2fb7a9,Flc゛,"chore(logger): optimize (#6675)  * chore(logger): optimize  * chore(logger): optimize",158,160,Jinzhu,4b768c8,0,2023-11-07 02:19:41,2023-01-01 14:22:08
logger/logger.go,bc5ceff,Jinzhu,Explain SQL for dialects,156,156,,,0,2020-02-23 04:41:13,
logger/logger.go,27cb613,Jinzhu,Refactor logger,157,157,,,0,2020-02-23 07:07:47,
logger/logger.go,477efab,Jinzhu,Refactor logger,153,153,,,0,2020-03-14 11:00:41,
logger/logger.go,477efab,Jinzhu,Refactor logger,146,146,,,0,2020-03-14 11:00:41,
logger/logger.go,3f359ea,我的我的,slim trace if depth (#4346)  Co-authored-by: gogs <guzzsek@gmail.com>,161,187,Jinzhu,f3bdfa8,0,2021-05-05 00:14:40,2021-04-09 02:21:01
logger/logger.go,fa22807,Jinzhu,Make inesrt into db works,188,188,,,0,2020-02-23 11:41:29,
logger/logger.go,bc5ceff,Jinzhu,Explain SQL for dialects,189,190,,,0,2020-02-23 04:41:13,
logger/logger.go,ddd3cc2,Jinzhu,"Add ParameterizedQueries option support for logger, close #5288",194,199,Shunsuke Otani,8c3018b,0,2022-12-25 03:37:23,2022-08-15 02:50:06
logger/logger.go,d2fb7a9,Flc゛,"chore(logger): optimize (#6675)  * chore(logger): optimize  * chore(logger): optimize",192,193,Shunsuke Otani,8c3018b,0,2023-11-07 02:19:41,2022-08-15 02:50:06
logger/logger.go,27cb613,Jinzhu,Refactor logger,152,152,,,0,2020-02-23 07:07:47,
logger/logger.go,fed4923,Evyatar Yaffe,Enhance db.Scan with ParamsFilter - Issue 7336 - Suggestion (#7337),219,225,Flc゛,d2fb7a9,1,2025-01-12 10:19:28,2023-11-07 02:19:41
logger/logger.go,d2fb7a9,Flc゛,"chore(logger): optimize (#6675)  * chore(logger): optimize  * chore(logger): optimize",208,209,Jinzhu,b23c3b2,0,2023-11-07 02:19:41,2021-11-08 10:49:59
logger/logger.go,9eec6ae,Jinzhu,"Fix affected rows for Scan, change affected rows count for row/rows to '-', close #3532",214,218,,,1,2020-09-27 04:25:38,
logger/logger.go,9eec6ae,Jinzhu,"Fix affected rows for Scan, change affected rows count for row/rows to '-', close #3532",191,191,,,1,2020-09-27 04:25:38,
logger/logger.go,6d90d09,qifengzhang007,Recorder追踪函数trace在finish_api文件358行scan函数所在的371行被调用时，BeginAt 没有赋值，默认值0001-0:0:0导致追踪日志显示的sql耗时无限大. (#3657)  Co-authored-by: 张奇峰 <10515935zwj>,210,210,,,0,2020-10-22 06:09:09,
logger/logger.go,9eec6ae,Jinzhu,"Fix affected rows for Scan, change affected rows count for row/rows to '-', close #3532",211,212,,,1,2020-09-27 04:25:38,
logger/logger.go,9eec6ae,Jinzhu,"Fix affected rows for Scan, change affected rows count for row/rows to '-', close #3532",200,207,,,1,2020-09-27 04:25:38,
logger/logger.go,4eeb839,Jinzhu,Better support Stringer when explain SQL,213,213,,,0,2022-02-09 07:17:25,
migrator/table_type.go,e61b98d,John Mai,"feat: migrator support table comment (#6225)  * feat: migrator support table comment  * feat: migrator support tableType.It like ColumnTypes  * Avoid updating the go.mod file.  * Update tests_all.sh  * Update migrator.go  * remove Catalog() & Engine() methods.  * remove CatalogValue & EngineValue.  ---------  Co-authored-by: Jinzhu <wosmvp@gmail.com>",1,33,,,0,2023-05-05 07:58:27,
logger/sql.go,bc5ceff,Jinzhu,Explain SQL for dialects,1,5,,,0,2020-02-23 04:41:13,
logger/sql.go,c3b798a,Jinzhu,Refactor SQL Explainer,6,6,Jinzhu,bc5ceff,0,2020-02-23 05:22:08,2020-02-23 04:41:13
logger/sql.go,bc5ceff,Jinzhu,Explain SQL for dialects,14,15,,,0,2020-02-23 04:41:13,
logger/sql.go,bc5ceff,Jinzhu,Explain SQL for dialects,23,23,,,0,2020-02-23 04:41:13,
logger/sql.go,bc5ceff,Jinzhu,Explain SQL for dialects,7,11,,,0,2020-02-23 04:41:13,
logger/sql.go,dbaa6b0,Jinzhu,"Fix Scan struct with primary key, close #3357",12,13,aimuz,9a101c8,1,2020-09-02 08:14:26,2020-09-01 13:03:37
logger/sql.go,ef5ef18,heige,recommended to use magic const strings (#4059),16,21,Jinzhu,a1ea171,0,2021-02-07 02:09:32,2020-10-19 03:04:18
logger/sql.go,19ac396,li-jin-gou,"fix: isPrintable incorrect (#5076)  * fix: isPrintable incorrect  * fix: isPrintable incorrect  * style: use ReplaceAll instead of Replace",22,22,Jinzhu,4eeb839,1,2022-02-15 12:32:03,2022-02-09 07:17:25
logger/sql.go,19ac396,li-jin-gou,"fix: isPrintable incorrect (#5076)  * fix: isPrintable incorrect  * fix: isPrintable incorrect  * style: use ReplaceAll instead of Replace",24,24,Jinzhu,4eeb839,1,2022-02-15 12:32:03,2022-02-09 07:17:25
logger/sql.go,15a46bc,Chris Faulkner,Fix some typos (#4294),32,32,Jinzhu,bb15338,1,2021-04-19 13:03:39,2021-02-07 03:18:42
logger/sql.go,c3b798a,Jinzhu,Refactor SQL Explainer,33,33,Jinzhu,bc5ceff,0,2020-02-23 05:22:08,2020-02-23 04:41:13
logger/sql.go,3c34bc2,fayvori,"refactor: Regex description (#6507)  * Mirror cleanup  * Regex description  ---------  Co-authored-by: Ignat Belousov <ignatbelousov@Ignats-MacBook-Pro.local>",31,31,San Ye,193c454,0,2023-08-07 08:35:19,2023-08-04 02:31:18
logger/sql.go,bc5ceff,Jinzhu,Explain SQL for dialects,25,30,,,0,2020-02-23 04:41:13,
logger/sql.go,956f7ce,givemeafish,fix: 'type XXXX int' will print wrong sql to terminal (#6917)  Co-authored-by: 王泽平 <zeping.wang@yo-star.com>,37,49,iTanken,87decce,1,2024-03-21 08:00:02,2023-12-28 11:53:36
logger/sql.go,bab3cd1,Xudong Zhang,fix bad logging performance of bulk create (#5520) (#5521),35,36,codingxh,664c5fb,1,2022-07-18 12:47:00,2022-02-20 11:55:04
logger/sql.go,3c34bc2,fayvori,"refactor: Regex description (#6507)  * Mirror cleanup  * Regex description  ---------  Co-authored-by: Ignat Belousov <ignatbelousov@Ignats-MacBook-Pro.local>",34,34,San Ye,193c454,0,2023-08-07 08:35:19,2023-08-04 02:31:18
logger/sql.go,bc5ceff,Jinzhu,Explain SQL for dialects,61,61,,,0,2020-02-23 04:41:13,
logger/sql.go,c3b798a,Jinzhu,Refactor SQL Explainer,57,57,Jinzhu,bc5ceff,0,2020-02-23 05:22:08,2020-02-23 04:41:13
logger/sql.go,bc5ceff,Jinzhu,Explain SQL for dialects,58,59,,,0,2020-02-23 04:41:13,
logger/sql.go,bc5ceff,Jinzhu,Explain SQL for dialects,56,56,,,0,2020-02-23 04:41:13,
logger/sql.go,fa22807,Jinzhu,Make inesrt into db works,62,62,Jinzhu,c3b798a,0,2020-02-23 11:41:29,2020-02-23 05:22:08
logger/sql.go,ef5ef18,heige,recommended to use magic const strings (#4059),63,63,Jinzhu,a1ea171,0,2021-02-07 02:09:32,2020-10-19 03:04:18
logger/sql.go,fa22807,Jinzhu,Make inesrt into db works,64,64,Jinzhu,bc5ceff,0,2020-02-23 11:41:29,2020-02-23 04:41:13
logger/sql.go,9a101c8,aimuz,fmt.Sprint() to strconv.Format (#3354),60,60,Jinzhu,4e147e1,0,2020-09-01 13:03:37,2020-06-01 13:26:23
logger/sql.go,ef5ef18,heige,recommended to use magic const strings (#4059),65,65,Jinzhu,a1ea171,0,2021-02-07 02:09:32,2020-10-19 03:04:18
logger/sql.go,ef5ef18,heige,recommended to use magic const strings (#4059),70,70,Jinzhu,a1ea171,0,2021-02-07 02:09:32,2020-10-19 03:04:18
logger/sql.go,4e147e1,Jinzhu,Test SubQuery,51,51,,,0,2020-06-01 13:26:23,
logger/sql.go,c70c097,Jinzhu,Refactor format SQL for driver.Valuer,71,71,Qt,a140908,0,2020-09-08 11:11:29,2020-07-28 09:25:03
logger/sql.go,ef5ef18,heige,recommended to use magic const strings (#4059),72,72,Jinzhu,a1ea171,0,2021-02-07 02:09:32,2020-10-19 03:04:18
logger/sql.go,fa22807,Jinzhu,Make inesrt into db works,66,66,Jinzhu,bc5ceff,0,2020-02-23 11:41:29,2020-02-23 04:41:13
logger/sql.go,4eeb839,Jinzhu,Better support Stringer when explain SQL,50,50,Jinzhu,a1ea171,0,2022-02-09 07:17:25,2020-10-19 03:04:18
logger/sql.go,c70c097,Jinzhu,Refactor format SQL for driver.Valuer,73,74,Jinzhu,4e147e1,0,2020-09-08 11:11:29,2020-06-01 13:26:23
logger/sql.go,c70c097,Jinzhu,Refactor format SQL for driver.Valuer,67,69,Qt,a140908,0,2020-09-08 11:11:29,2020-07-28 09:25:03
logger/sql.go,4eeb839,Jinzhu,Better support Stringer when explain SQL,52,55,Jinzhu,a1ea171,0,2022-02-09 07:17:25,2020-10-19 03:04:18
logger/sql.go,a1ea171,Jinzhu,Fix log Stringer,82,82,Jinzhu,4e147e1,1,2020-10-19 03:04:18,2020-06-01 13:26:23
logger/sql.go,c70c097,Jinzhu,Refactor format SQL for driver.Valuer,76,76,Jinzhu,4e147e1,0,2020-09-08 11:11:29,2020-06-01 13:26:23
logger/sql.go,bb15338,Jinzhu,"Switch driver.Valuer, fmt.Stringer order when format SQL",85,85,Jinzhu,a1ea171,0,2021-02-07 03:18:42,2020-10-19 03:04:18
logger/sql.go,a1ea171,Jinzhu,Fix log Stringer,84,84,Jinzhu,4e147e1,1,2020-10-19 03:04:18,2020-06-01 13:26:23
logger/sql.go,c70c097,Jinzhu,Refactor format SQL for driver.Valuer,86,86,Jinzhu,4e147e1,0,2020-09-08 11:11:29,2020-06-01 13:26:23
logger/sql.go,ef5ef18,heige,recommended to use magic const strings (#4059),75,75,,,0,2021-02-07 02:09:32,
logger/sql.go,4eeb839,Jinzhu,Better support Stringer when explain SQL,87,94,kinggo,b47cf57,0,2022-02-09 07:17:25,2022-01-06 07:02:53
logger/sql.go,87decce,iTanken,fix: ExplainSQL using consecutive pairs of escaper in SQL string represents an escaper (#6766)  Preventing it from being interpreted as the string terminator. This is a widely used escape mechanism in SQL standards and is applicable in most relational databases.,95,95,fayvori,3c34bc2,1,2023-12-28 11:53:36,2023-08-07 08:35:19
logger/sql.go,a1ea171,Jinzhu,Fix log Stringer,78,79,Jinzhu,4e147e1,1,2020-10-19 03:04:18,2020-06-01 13:26:23
logger/sql.go,bc5ceff,Jinzhu,Explain SQL for dialects,103,103,,,0,2020-02-23 04:41:13,
logger/sql.go,87decce,iTanken,fix: ExplainSQL using consecutive pairs of escaper in SQL string represents an escaper (#6766)  Preventing it from being interpreted as the string terminator. This is a widely used escape mechanism in SQL standards and is applicable in most relational databases.,98,98,Xudong Zhang,bab3cd1,1,2023-12-28 11:53:36,2022-07-18 12:47:00
logger/sql.go,87decce,iTanken,fix: ExplainSQL using consecutive pairs of escaper in SQL string represents an escaper (#6766)  Preventing it from being interpreted as the string terminator. This is a widely used escape mechanism in SQL standards and is applicable in most relational databases.,105,105,fayvori,3c34bc2,1,2023-12-28 11:53:36,2023-08-07 08:35:19
logger/sql.go,bb15338,Jinzhu,"Switch driver.Valuer, fmt.Stringer order when format SQL",77,77,Qt,a140908,0,2021-02-07 03:18:42,2020-07-28 09:25:03
logger/sql.go,c70c097,Jinzhu,Refactor format SQL for driver.Valuer,102,102,Qt,a140908,0,2020-09-08 11:11:29,2020-07-28 09:25:03
logger/sql.go,ef5ef18,heige,recommended to use magic const strings (#4059),83,83,Jinzhu,4e147e1,0,2021-02-07 02:09:32,2020-06-01 13:26:23
logger/sql.go,bc5ceff,Jinzhu,Explain SQL for dialects,106,109,,,0,2020-02-23 04:41:13,
logger/sql.go,bb15338,Jinzhu,"Switch driver.Valuer, fmt.Stringer order when format SQL",80,81,Qt,a140908,0,2021-02-07 03:18:42,2020-07-28 09:25:03
logger/sql.go,4eeb839,Jinzhu,Better support Stringer when explain SQL,99,101,Jinzhu,a1ea171,0,2022-02-09 07:17:25,2020-10-19 03:04:18
logger/sql.go,bc5ceff,Jinzhu,Explain SQL for dialects,115,115,,,0,2020-02-23 04:41:13,
logger/sql.go,87decce,iTanken,fix: ExplainSQL using consecutive pairs of escaper in SQL string represents an escaper (#6766)  Preventing it from being interpreted as the string terminator. This is a widely used escape mechanism in SQL standards and is applicable in most relational databases.,116,116,Jinzhu,bb15338,1,2023-12-28 11:53:36,2021-02-07 03:18:42
logger/sql.go,bc5ceff,Jinzhu,Explain SQL for dialects,117,117,,,0,2020-02-23 04:41:13,
logger/sql.go,19ac396,li-jin-gou,"fix: isPrintable incorrect (#5076)  * fix: isPrintable incorrect  * fix: isPrintable incorrect  * style: use ReplaceAll instead of Replace",104,104,Jinzhu,a1ea171,1,2022-02-15 12:32:03,2020-10-19 03:04:18
logger/sql.go,bc5ceff,Jinzhu,Explain SQL for dialects,132,132,,,0,2020-02-23 04:41:13,
logger/sql.go,a140908,Qt,refactor function convertParams's default case (#3208),118,119,,,0,2020-07-28 09:25:03,
logger/sql.go,956f7ce,givemeafish,fix: 'type XXXX int' will print wrong sql to terminal (#6917)  Co-authored-by: 王泽平 <zeping.wang@yo-star.com>,126,131,iTanken,87decce,1,2024-03-21 08:00:02,2023-12-28 11:53:36
logger/sql.go,ef5ef18,heige,recommended to use magic const strings (#4059),120,120,Jinzhu,c70c097,0,2021-02-07 02:09:32,2020-09-08 11:11:29
logger/sql.go,193c454,San Ye,keep float precision in ExplainSQL (#6495),111,114,Jinzhu,bb15338,0,2023-08-04 02:31:18,2021-02-07 03:18:42
logger/sql.go,c3b798a,Jinzhu,Refactor SQL Explainer,137,137,,,0,2020-02-23 05:22:08,
logger/sql.go,a140908,Qt,refactor function convertParams's default case (#3208),121,125,,,0,2020-07-28 09:25:03,
logger/sql.go,345ff75,Jinzhu,Save before associations,138,138,,,0,2020-04-15 15:58:26,
logger/sql.go,a140908,Qt,refactor function convertParams's default case (#3208),134,136,,,0,2020-07-28 09:25:03,
logger/sql.go,bc5ceff,Jinzhu,Explain SQL for dialects,140,143,,,0,2020-02-23 04:41:13,
logger/sql.go,4eeb839,Jinzhu,Better support Stringer when explain SQL,96,97,Qt,a140908,0,2022-02-09 07:17:25,2020-07-28 09:25:03
logger/sql.go,c3b798a,Jinzhu,Refactor SQL Explainer,145,147,,,0,2020-02-23 05:22:08,
logger/sql.go,bc5ceff,Jinzhu,Explain SQL for dialects,148,148,,,0,2020-02-23 04:41:13,
logger/sql.go,bc5ceff,Jinzhu,Explain SQL for dialects,161,161,,,0,2020-02-23 04:41:13,
logger/sql.go,bc5ceff,Jinzhu,Explain SQL for dialects,164,164,,,0,2020-02-23 04:41:13,
logger/sql.go,c3b798a,Jinzhu,Refactor SQL Explainer,165,165,,,0,2020-02-23 05:22:08,
logger/sql.go,9a101c8,aimuz,fmt.Sprint() to strconv.Format (#3354),144,144,,,0,2020-09-01 13:03:37,
logger/sql.go,9a101c8,aimuz,fmt.Sprint() to strconv.Format (#3354),110,110,,,0,2020-09-01 13:03:37,
logger/sql.go,bc5ceff,Jinzhu,Explain SQL for dialects,178,181,,,0,2020-02-23 04:41:13,
logger/sql.go,15a46bc,Chris Faulkner,Fix some typos (#4294),133,133,,,1,2021-04-19 13:03:39,
logger/sql.go,0ec10d4,Jinzhu,"Fix format SQL log, close #3465",162,163,,,1,2020-09-14 04:37:16,
logger/sql.go,87decce,iTanken,fix: ExplainSQL using consecutive pairs of escaper in SQL string represents an escaper (#6766)  Preventing it from being interpreted as the string terminator. This is a widely used escape mechanism in SQL standards and is applicable in most relational databases.,139,139,Jinzhu,c70c097,1,2023-12-28 11:53:36,2020-09-08 11:11:29
logger/sql.go,0ec10d4,Jinzhu,"Fix format SQL log, close #3465",149,160,,,1,2020-09-14 04:37:16,
logger/sql.go,bab3cd1,Xudong Zhang,fix bad logging performance of bulk create (#5520) (#5521),166,177,,,1,2022-07-18 12:47:00,
chainable_api.go,d4b462a,Jinzhu,"Fix alias keyword with Table, close #3104",5,5,Jinzhu,bba569a,1,2020-07-10 13:11:28,2020-07-10 04:28:24
chainable_api.go,98ad29f,Jinzhu,"Add Selects, Omits for statement",6,6,,,0,2020-02-16 05:45:27,
chainable_api.go,46b1c85,Jinzhu,Add more clauses,7,7,,,0,2020-02-04 00:56:15,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",1,2,,,0,2020-01-29 11:22:44,
chainable_api.go,46b1c85,Jinzhu,Add more clauses,3,4,,,0,2020-02-04 00:56:15,
chainable_api.go,46b1c85,Jinzhu,Add more clauses,10,10,,,0,2020-02-04 00:56:15,
chainable_api.go,9d5b983,Jinzhu,Refactor builder,11,11,,,0,2020-01-30 11:47:00,
chainable_api.go,e986371,Jinzhu,Rename package name,8,9,Jinzhu,dffc271,0,2020-06-02 01:18:01,2020-06-01 02:54:32
chainable_api.go,b2f4252,Cr,"fix(Joins): args with select and omit (#5790)  * fix(Joins): args with select and omit  * chore: gofumpt style",13,15,robhafner,e8f48b5,1,2022-11-02 02:28:00,2022-10-07 12:14:14
chainable_api.go,f3c6fc2,Nate Armstrong,"Update func comments in chainable_api and FirstOr_ (#5935)  Add comments to functions in chainable_api. Depending on the method, these comments add some additional context or details that are relevant when reading the function, link to the actual docs at gorm.io/docs, or provide examples of use. These comments should make GORM much more pleasant to use with an IDE that provides hoverable comments, and are minimal examples.  Also add in-code documentation to FirstOrInit and FirstOrCreate.  Almost all examples are directly pulled from the docs, with short comments explaining the code. Most examples omit the `db.Model(&User{})` for brevity, and would not actually work.  Co-authored-by: Nate Armstrong <nate.armstrong@eluv.io>",16,16,Cr,b2f4252,0,2022-12-23 08:51:01,2022-11-02 02:28:00
chainable_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,18,18,,,0,2020-03-10 00:39:33,
chainable_api.go,b2f4252,Cr,"fix(Joins): args with select and omit (#5790)  * fix(Joins): args with select and omit  * chore: gofumpt style",17,17,robhafner,e8f48b5,1,2022-11-02 02:28:00,2022-10-07 12:14:14
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",12,12,,,0,2020-01-29 11:22:44,
chainable_api.go,85bfd17,Jinzhu,Implement build conditions,20,20,,,0,2020-01-29 19:03:06,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",19,19,,,0,2020-01-29 11:22:44,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",21,23,,,0,2020-01-29 11:22:44,
chainable_api.go,9d5b983,Jinzhu,Refactor builder,24,24,,,0,2020-01-30 11:47:00,
chainable_api.go,f3c6fc2,Nate Armstrong,"Update func comments in chainable_api and FirstOr_ (#5935)  Add comments to functions in chainable_api. Depending on the method, these comments add some additional context or details that are relevant when reading the function, link to the actual docs at gorm.io/docs, or provide examples of use. These comments should make GORM much more pleasant to use with an IDE that provides hoverable comments, and are minimal examples.  Also add in-code documentation to FirstOrInit and FirstOrCreate.  Almost all examples are directly pulled from the docs, with short comments explaining the code. Most examples omit the `db.Model(&User{})` for brevity, and would not actually work.  Co-authored-by: Nate Armstrong <nate.armstrong@eluv.io>",25,37,Cr,b2f4252,0,2022-12-23 08:51:01,2022-11-02 02:28:00
chainable_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,38,38,,,0,2020-03-10 00:39:33,
chainable_api.go,9d5b983,Jinzhu,Refactor builder,39,44,,,0,2020-01-30 11:47:00,
chainable_api.go,9d5b983,Jinzhu,Refactor builder,47,52,,,0,2020-01-30 11:47:00,
chainable_api.go,9d5b983,Jinzhu,Refactor builder,54,57,,,0,2020-01-30 11:47:00,
chainable_api.go,d4b462a,Jinzhu,"Fix alias keyword with Table, close #3104",59,59,Jinzhu,bba569a,1,2020-07-10 13:11:28,2020-07-10 04:28:24
chainable_api.go,13f96f7,Douglas Danger Manley,"Spelling fix for ""condtion"" -> ""condition"" (#3042)  This fixes a spelling error in the word ""condition""; in particular, the `BuildCondtion` function should be named `BuildCondition`.",53,53,Jinzhu,e986371,1,2020-06-08 03:38:51,2020-06-02 01:18:01
chainable_api.go,2bc9137,Jinzhu,"support implicit table alias, close #5840 #5940",58,58,Cr,1935eb0,0,2023-01-02 13:46:27,2022-12-24 04:27:38
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",60,60,,,0,2020-01-29 11:22:44,
chainable_api.go,f3c6fc2,Nate Armstrong,"Update func comments in chainable_api and FirstOr_ (#5935)  Add comments to functions in chainable_api. Depending on the method, these comments add some additional context or details that are relevant when reading the function, link to the actual docs at gorm.io/docs, or provide examples of use. These comments should make GORM much more pleasant to use with an IDE that provides hoverable comments, and are minimal examples.  Also add in-code documentation to FirstOrInit and FirstOrCreate.  Almost all examples are directly pulled from the docs, with short comments explaining the code. Most examples omit the `db.Model(&User{})` for brevity, and would not actually work.  Co-authored-by: Nate Armstrong <nate.armstrong@eluv.io>",61,62,Cr,b2f4252,0,2022-12-23 08:51:01,2022-11-02 02:28:00
chainable_api.go,2bc9137,Jinzhu,"support implicit table alias, close #5840 #5940",68,73,Cr,1935eb0,0,2023-01-02 13:46:27,2022-12-24 04:27:38
chainable_api.go,90183fa,Jinzhu,Allow advanced table with args,66,67,Jinzhu,4456df7,0,2020-07-19 13:30:24,2020-07-16 03:27:12
chainable_api.go,1f763c8,yikakia,fix typo chainable_api.go (#6266),63,63,black-06,4b0da0e,1,2023-04-26 14:19:06,2023-04-11 04:01:23
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",65,65,,,0,2020-01-29 11:22:44,
chainable_api.go,90183fa,Jinzhu,Allow advanced table with args,64,64,Jinzhu,4456df7,0,2020-07-19 13:30:24,2020-07-16 03:27:12
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",85,87,,,0,2020-01-29 11:22:44,
chainable_api.go,56bdded,Jinzhu,Fix statement modifier support,45,46,,,1,2020-06-14 04:18:46,
chainable_api.go,eda2f02,Jinzhu,Add Distinct support,88,88,,,0,2020-06-05 11:19:12,
chainable_api.go,f3c6fc2,Nate Armstrong,"Update func comments in chainable_api and FirstOr_ (#5935)  Add comments to functions in chainable_api. Depending on the method, these comments add some additional context or details that are relevant when reading the function, link to the actual docs at gorm.io/docs, or provide examples of use. These comments should make GORM much more pleasant to use with an IDE that provides hoverable comments, and are minimal examples.  Also add in-code documentation to FirstOrInit and FirstOrCreate.  Almost all examples are directly pulled from the docs, with short comments explaining the code. Most examples omit the `db.Model(&User{})` for brevity, and would not actually work.  Co-authored-by: Nate Armstrong <nate.armstrong@eluv.io>",89,93,Cr,b2f4252,0,2022-12-23 08:51:01,2022-11-02 02:28:00
chainable_api.go,90183fa,Jinzhu,Allow advanced table with args,75,77,Jinzhu,e986371,0,2020-07-19 13:30:24,2020-06-02 01:18:01
chainable_api.go,d4b462a,Jinzhu,"Fix alias keyword with Table, close #3104",74,74,,,1,2020-07-10 13:11:28,
chainable_api.go,d4b462a,Jinzhu,"Fix alias keyword with Table, close #3104",84,84,,,1,2020-07-10 13:11:28,
chainable_api.go,eda2f02,Jinzhu,Add Distinct support,94,94,,,0,2020-06-05 11:19:12,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",103,103,,,0,2020-01-29 11:22:44,
chainable_api.go,eda2f02,Jinzhu,Add Distinct support,97,99,,,0,2020-06-05 11:19:12,
chainable_api.go,eda2f02,Jinzhu,Add Distinct support,101,102,,,0,2020-06-05 11:19:12,
chainable_api.go,f3c6fc2,Nate Armstrong,"Update func comments in chainable_api and FirstOr_ (#5935)  Add comments to functions in chainable_api. Depending on the method, these comments add some additional context or details that are relevant when reading the function, link to the actual docs at gorm.io/docs, or provide examples of use. These comments should make GORM much more pleasant to use with an IDE that provides hoverable comments, and are minimal examples.  Also add in-code documentation to FirstOrInit and FirstOrCreate.  Almost all examples are directly pulled from the docs, with short comments explaining the code. Most examples omit the `db.Model(&User{})` for brevity, and would not actually work.  Co-authored-by: Nate Armstrong <nate.armstrong@eluv.io>",104,111,Cr,b2f4252,0,2022-12-23 08:51:01,2022-11-02 02:28:00
chainable_api.go,3627795,Jinzhu,"Fix Select with specific symbol, close #3157",95,96,,,1,2020-07-17 03:24:24,
chainable_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,112,112,,,0,2020-03-10 00:39:33,
chainable_api.go,540b475,Jinzhu,"Fix update select clause with before/after expressions, close #5164",130,134,chenrui,5431da8,1,2022-03-18 12:57:33,2022-03-18 05:38:46
chainable_api.go,98ad29f,Jinzhu,"Add Selects, Omits for statement",114,129,,,0,2020-02-16 05:45:27,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",113,113,,,0,2020-01-29 11:22:44,
chainable_api.go,98ad29f,Jinzhu,"Add Selects, Omits for statement",135,135,,,0,2020-02-16 05:45:27,
chainable_api.go,ade0bd6,Jinzhu,"Fix SELECT with sql expression in some cases, close #3889",136,136,Jinzhu,3a97639,1,2020-12-28 02:40:30,2020-08-23 02:45:10
chainable_api.go,3411425,deepoli,fix return value and delete unused default (#3280),100,100,,,1,2020-08-18 11:03:09,
chainable_api.go,98ad29f,Jinzhu,"Add Selects, Omits for statement",148,156,,,0,2020-02-16 05:45:27,
chainable_api.go,a3abb5f,Ratan Phayade,"support named params in Select API  (#4142)  * adds support for named arguments in select  * changes clause identifies and adds test",141,145,Jinzhu,3a97639,0,2021-03-07 02:59:00,2020-08-23 02:45:10
chainable_api.go,7faf1ca,Jinzhu,"Fix Select with AS, close #3581, #3567",147,147,Jinzhu,eda2f02,1,2020-10-09 03:52:12,2020-06-05 11:19:12
chainable_api.go,98ad29f,Jinzhu,"Add Selects, Omits for statement",158,162,,,0,2020-02-16 05:45:27,
chainable_api.go,3627795,Jinzhu,"Fix Select with specific symbol, close #3157",157,157,Jinzhu,7aaac3a,1,2020-07-17 03:24:24,2020-07-01 11:49:04
chainable_api.go,b5de8ae,Jinzhu,Fix overrite SELECT clause,163,163,Jinzhu,7aaac3a,1,2020-08-18 10:58:53,2020-07-01 11:49:04
chainable_api.go,98ad29f,Jinzhu,"Add Selects, Omits for statement",168,172,,,0,2020-02-16 05:45:27,
chainable_api.go,82fe815,SmallTianTian,fix: table couln't be reentrant (#4556),79,80,,,1,2021-08-09 05:20:22,
chainable_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,177,177,,,0,2020-03-10 00:39:33,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",173,176,,,0,2020-01-29 11:22:44,
chainable_api.go,15ce5b3,Jinzhu,Add create value converter,180,180,,,0,2020-02-20 02:12:10,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",178,178,,,0,2020-01-29 11:22:44,
chainable_api.go,704e53a,Jinzhu,"Call scopes before parse model value, close #4209",146,146,Jinzhu,eda2f02,0,2021-03-24 08:35:39,2020-06-05 11:19:12
chainable_api.go,98ad29f,Jinzhu,"Add Selects, Omits for statement",179,179,,,0,2020-02-16 05:45:27,
chainable_api.go,d50dbb0,Jinzhu,"Fix check valid db name, close #3315",181,181,Jinzhu,3a97639,1,2020-08-27 11:15:40,2020-08-23 02:45:10
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",185,187,,,0,2020-01-29 11:22:44,
chainable_api.go,11c4331,molon,"feat: add MapColumns method (#6901)  * add MapColumns method  * fix MapColumns desc  * add TestMapColumns",188,194,supergem3000,49d524a,1,2024-06-24 09:42:59,2024-06-12 09:47:34
chainable_api.go,98ad29f,Jinzhu,"Add Selects, Omits for statement",182,184,,,0,2020-02-16 05:45:27,
chainable_api.go,af080e6,Jinzhu,Fix primary key tag,195,195,,,1,2020-03-12 00:39:42,
chainable_api.go,f3c6fc2,Nate Armstrong,"Update func comments in chainable_api and FirstOr_ (#5935)  Add comments to functions in chainable_api. Depending on the method, these comments add some additional context or details that are relevant when reading the function, link to the actual docs at gorm.io/docs, or provide examples of use. These comments should make GORM much more pleasant to use with an IDE that provides hoverable comments, and are minimal examples.  Also add in-code documentation to FirstOrInit and FirstOrCreate.  Almost all examples are directly pulled from the docs, with short comments explaining the code. Most examples omit the `db.Model(&User{})` for brevity, and would not actually work.  Co-authored-by: Nate Armstrong <nate.armstrong@eluv.io>",196,206,Cr,b2f4252,0,2022-12-23 08:51:01,2022-11-02 02:28:00
chainable_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,207,207,,,0,2020-03-10 00:39:33,
chainable_api.go,5431da8,chenrui,fix: preload panic when model and dest different close #5130  commit e8307b5ef5273519a32cd8e4fd29250d1c277f6e Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 13:37:22 2022 +0800      Refactor #5130  commit 40cbba49f374c9bae54f80daee16697ae45e905b Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:36:56 2022 +0800      test: fix test fail  commit 66d3f078291102a30532b6a9d97c757228a9b543 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:29:09 2022 +0800      test: drop table and auto migrate  commit 7cbf019a930019476a97ac7ac0f5fc186e8d5b42 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 15:27:45 2022 +0800      fix: preload panic when model and dest different,78,78,,,1,2022-03-18 05:38:46,
chainable_api.go,1ef1f0b,Jinzhu,"Fix Count with complicated Select, close #3826",137,140,Jinzhu,eda2f02,1,2020-12-06 06:30:42,2020-06-05 11:19:12
chainable_api.go,dffc271,Jinzhu,Add mores tests for query,210,211,,,0,2020-06-01 02:54:32,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",208,208,,,0,2020-01-29 11:22:44,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",212,214,,,0,2020-01-29 11:22:44,
chainable_api.go,f3c6fc2,Nate Armstrong,"Update func comments in chainable_api and FirstOr_ (#5935)  Add comments to functions in chainable_api. Depending on the method, these comments add some additional context or details that are relevant when reading the function, link to the actual docs at gorm.io/docs, or provide examples of use. These comments should make GORM much more pleasant to use with an IDE that provides hoverable comments, and are minimal examples.  Also add in-code documentation to FirstOrInit and FirstOrCreate.  Almost all examples are directly pulled from the docs, with short comments explaining the code. Most examples omit the `db.Model(&User{})` for brevity, and would not actually work.  Co-authored-by: Nate Armstrong <nate.armstrong@eluv.io>",216,220,Cr,b2f4252,0,2022-12-23 08:51:01,2022-11-02 02:28:00
chainable_api.go,af080e6,Jinzhu,Fix primary key tag,215,215,,,1,2020-03-12 00:39:42,
chainable_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,221,221,,,0,2020-03-10 00:39:33,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",222,222,,,0,2020-01-29 11:22:44,
chainable_api.go,5431da8,chenrui,fix: preload panic when model and dest different close #5130  commit e8307b5ef5273519a32cd8e4fd29250d1c277f6e Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 13:37:22 2022 +0800      Refactor #5130  commit 40cbba49f374c9bae54f80daee16697ae45e905b Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:36:56 2022 +0800      test: fix test fail  commit 66d3f078291102a30532b6a9d97c757228a9b543 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:29:09 2022 +0800      test: drop table and auto migrate  commit 7cbf019a930019476a97ac7ac0f5fc186e8d5b42 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 15:27:45 2022 +0800      fix: preload panic when model and dest different,81,83,,,1,2022-03-18 05:38:46,
chainable_api.go,f3c6fc2,Nate Armstrong,"Update func comments in chainable_api and FirstOr_ (#5935)  Add comments to functions in chainable_api. Depending on the method, these comments add some additional context or details that are relevant when reading the function, link to the actual docs at gorm.io/docs, or provide examples of use. These comments should make GORM much more pleasant to use with an IDE that provides hoverable comments, and are minimal examples.  Also add in-code documentation to FirstOrInit and FirstOrCreate.  Almost all examples are directly pulled from the docs, with short comments explaining the code. Most examples omit the `db.Model(&User{})` for brevity, and would not actually work.  Co-authored-by: Nate Armstrong <nate.armstrong@eluv.io>",230,234,robhafner,e8f48b5,0,2022-12-23 08:51:01,2022-10-07 12:14:14
chainable_api.go,13f96f7,Douglas Danger Manley,"Spelling fix for ""condtion"" -> ""condition"" (#3042)  This fixes a spelling error in the word ""condition""; in particular, the `BuildCondtion` function should be named `BuildCondition`.",209,209,,,1,2020-06-08 03:38:51,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",226,229,,,0,2020-01-29 11:22:44,
chainable_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,235,235,,,0,2020-03-10 00:39:33,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",236,236,,,0,2020-01-29 11:22:44,
chainable_api.go,dffc271,Jinzhu,Add mores tests for query,224,225,,,0,2020-06-01 02:54:32,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",240,243,,,0,2020-01-29 11:22:44,
chainable_api.go,13f96f7,Douglas Danger Manley,"Spelling fix for ""condtion"" -> ""condition"" (#3042)  This fixes a spelling error in the word ""condition""; in particular, the `BuildCondtion` function should be named `BuildCondition`.",237,237,,,1,2020-06-08 03:38:51,
chainable_api.go,13f96f7,Douglas Danger Manley,"Spelling fix for ""condtion"" -> ""condition"" (#3042)  This fixes a spelling error in the word ""condition""; in particular, the `BuildCondtion` function should be named `BuildCondition`.",223,223,,,1,2020-06-08 03:38:51,
chainable_api.go,dffc271,Jinzhu,Add mores tests for query,239,239,Jinzhu,50aa9be,0,2020-06-01 02:54:32,2020-04-15 01:45:43
chainable_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,248,248,,,0,2020-03-10 00:39:33,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",259,259,,,0,2020-01-29 11:22:44,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",260,260,,,0,2020-01-29 11:22:44,
chainable_api.go,1935eb0,Cr,"feat: support inner join (#5583)  * feat: support inner join  * test: mixed inner join and left join  * chore: code comment  * Update statement.go  Co-authored-by: Jinzhu <wosmvp@gmail.com>",249,258,Nate Armstrong,f3c6fc2,0,2022-12-24 04:27:38,2022-12-23 08:51:01
chainable_api.go,4e066c9,Jinzhu,Test Or,238,238,,,0,2020-07-05 04:23:45,
chainable_api.go,aa89736,Cr,fix: miss join type (#6056),263,266,Nate Armstrong,f3c6fc2,1,2023-02-18 01:13:36,2022-12-23 08:51:01
chainable_api.go,b2f4252,Cr,"fix(Joins): args with select and omit (#5790)  * fix(Joins): args with select and omit  * chore: gofumpt style",268,268,robhafner,e8f48b5,1,2022-11-02 02:28:00,2022-10-07 12:14:14
chainable_api.go,b2f4252,Cr,"fix(Joins): args with select and omit (#5790)  * fix(Joins): args with select and omit  * chore: gofumpt style",270,271,robhafner,e8f48b5,1,2022-11-02 02:28:00,2022-10-07 12:14:14
chainable_api.go,d047f85,Adrien Carreira,PR Comments,262,262,Jinzhu,ade0bd6,0,2021-09-06 12:13:20,2020-12-28 02:40:30
chainable_api.go,c4a2e89,Jinzhu,Fix Join condition with DB,261,261,Jinzhu,ade0bd6,1,2021-09-28 14:37:15,2020-12-28 02:40:30
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",279,279,,,0,2020-01-29 11:22:44,
chainable_api.go,f3c6fc2,Nate Armstrong,"Update func comments in chainable_api and FirstOr_ (#5935)  Add comments to functions in chainable_api. Depending on the method, these comments add some additional context or details that are relevant when reading the function, link to the actual docs at gorm.io/docs, or provide examples of use. These comments should make GORM much more pleasant to use with an IDE that provides hoverable comments, and are minimal examples.  Also add in-code documentation to FirstOrInit and FirstOrCreate.  Almost all examples are directly pulled from the docs, with short comments explaining the code. Most examples omit the `db.Model(&User{})` for brevity, and would not actually work.  Co-authored-by: Nate Armstrong <nate.armstrong@eluv.io>",280,282,Cr,b2f4252,0,2022-12-23 08:51:01,2022-11-02 02:28:00
chainable_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,283,283,,,0,2020-03-10 00:39:33,
chainable_api.go,b2f4252,Cr,"fix(Joins): args with select and omit (#5790)  * fix(Joins): args with select and omit  * chore: gofumpt style",244,247,Jinzhu,704e53a,1,2022-11-02 02:28:00,2021-03-24 08:35:39
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",284,284,,,0,2020-01-29 11:22:44,
chainable_api.go,540b475,Jinzhu,"Fix update select clause with before/after expressions, close #5164",164,167,Jinzhu,eda2f02,1,2022-03-18 12:57:33,2020-06-05 11:19:12
chainable_api.go,ee1f46e,Jinzhu,"Allow to use sql function in Group, Pluck",285,285,,,0,2020-06-30 15:06:48,
chainable_api.go,a158d1a,Jinzhu,Add GroupBy test,287,287,,,0,2020-03-08 10:05:22,
chainable_api.go,d50dbb0,Jinzhu,"Fix check valid db name, close #3315",286,286,Jinzhu,4e066c9,1,2020-08-27 11:15:40,2020-07-05 04:23:45
chainable_api.go,a158d1a,Jinzhu,Add GroupBy test,289,289,,,0,2020-03-08 10:05:22,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",290,293,,,0,2020-01-29 11:22:44,
chainable_api.go,895c117,Adrien Carreira,"Proposal, Add Specific on for Joins queries",276,278,Jinzhu,50aa9be,0,2021-09-06 12:13:20,2020-04-15 01:45:43
chainable_api.go,1935eb0,Cr,"feat: support inner join (#5583)  * feat: support inner join  * test: mixed inner join and left join  * chore: code comment  * Update statement.go  Co-authored-by: Jinzhu <wosmvp@gmail.com>",275,275,Jinzhu,3a97639,0,2022-12-24 04:27:38,2020-08-23 02:45:10
chainable_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,297,297,,,0,2020-03-10 00:39:33,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",298,298,,,0,2020-01-29 11:22:44,
chainable_api.go,a158d1a,Jinzhu,Add GroupBy test,299,299,,,0,2020-03-08 10:05:22,
chainable_api.go,ee1f46e,Jinzhu,"Allow to use sql function in Group, Pluck",288,288,,,0,2020-06-30 15:06:48,
chainable_api.go,a158d1a,Jinzhu,Add GroupBy test,301,301,,,0,2020-03-08 10:05:22,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",302,304,,,0,2020-01-29 11:22:44,
chainable_api.go,a16db07,Jinzhu,Refactor Join ON,269,269,,,0,2021-09-07 13:21:44,
chainable_api.go,f3c6fc2,Nate Armstrong,"Update func comments in chainable_api and FirstOr_ (#5935)  Add comments to functions in chainable_api. Depending on the method, these comments add some additional context or details that are relevant when reading the function, link to the actual docs at gorm.io/docs, or provide examples of use. These comments should make GORM much more pleasant to use with an IDE that provides hoverable comments, and are minimal examples.  Also add in-code documentation to FirstOrInit and FirstOrCreate.  Almost all examples are directly pulled from the docs, with short comments explaining the code. Most examples omit the `db.Model(&User{})` for brevity, and would not actually work.  Co-authored-by: Nate Armstrong <nate.armstrong@eluv.io>",305,305,Cr,b2f4252,0,2022-12-23 08:51:01,2022-11-02 02:28:00
chainable_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,313,313,,,0,2020-03-10 00:39:33,
chainable_api.go,a16db07,Jinzhu,Refactor Join ON,267,267,,,0,2021-09-07 13:21:44,
chainable_api.go,49d524a,supergem3000,"feat: chainable order support clause.OrderBy (#7054)  * feat: chainable order support clause.OrderBy  * indent",309,312,Ivan Chavez,d0b4ceb,0,2024-06-12 09:47:34,2024-04-17 03:38:55
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",314,314,,,0,2020-01-29 11:22:44,
chainable_api.go,13f96f7,Douglas Danger Manley,"Spelling fix for ""condtion"" -> ""condition"" (#3042)  This fixes a spelling error in the word ""condition""; in particular, the `BuildCondtion` function should be named `BuildCondition`.",300,300,,,1,2020-06-08 03:38:51,
chainable_api.go,46b1c85,Jinzhu,Add more clauses,315,316,,,0,2020-02-04 00:56:15,
chainable_api.go,1f38ec4,Jinzhu,Finish clauses tests,319,319,,,0,2020-02-08 15:23:45,
chainable_api.go,98ad29f,Jinzhu,"Add Selects, Omits for statement",320,320,,,0,2020-02-16 05:45:27,
chainable_api.go,46b1c85,Jinzhu,Add more clauses,322,322,,,0,2020-02-04 00:56:15,
chainable_api.go,1f38ec4,Jinzhu,Finish clauses tests,321,321,,,0,2020-02-08 15:23:45,
chainable_api.go,f3c6fc2,Nate Armstrong,"Update func comments in chainable_api and FirstOr_ (#5935)  Add comments to functions in chainable_api. Depending on the method, these comments add some additional context or details that are relevant when reading the function, link to the actual docs at gorm.io/docs, or provide examples of use. These comments should make GORM much more pleasant to use with an IDE that provides hoverable comments, and are minimal examples.  Also add in-code documentation to FirstOrInit and FirstOrCreate.  Almost all examples are directly pulled from the docs, with short comments explaining the code. Most examples omit the `db.Model(&User{})` for brevity, and would not actually work.  Co-authored-by: Nate Armstrong <nate.armstrong@eluv.io>",294,296,Jinzhu,704e53a,0,2022-12-23 08:51:01,2021-03-24 08:35:39
chainable_api.go,46b1c85,Jinzhu,Add more clauses,331,331,,,0,2020-02-04 00:56:15,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",332,335,,,0,2020-01-29 11:22:44,
chainable_api.go,f3c6fc2,Nate Armstrong,"Update func comments in chainable_api and FirstOr_ (#5935)  Add comments to functions in chainable_api. Depending on the method, these comments add some additional context or details that are relevant when reading the function, link to the actual docs at gorm.io/docs, or provide examples of use. These comments should make GORM much more pleasant to use with an IDE that provides hoverable comments, and are minimal examples.  Also add in-code documentation to FirstOrInit and FirstOrCreate.  Almost all examples are directly pulled from the docs, with short comments explaining the code. Most examples omit the `db.Model(&User{})` for brevity, and would not actually work.  Co-authored-by: Nate Armstrong <nate.armstrong@eluv.io>",336,342,robhafner,e8f48b5,0,2022-12-23 08:51:01,2022-10-07 12:14:14
chainable_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,343,343,,,0,2020-03-10 00:39:33,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",344,344,,,0,2020-01-29 11:22:44,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",346,349,,,0,2020-01-29 11:22:44,
chainable_api.go,f3c6fc2,Nate Armstrong,"Update func comments in chainable_api and FirstOr_ (#5935)  Add comments to functions in chainable_api. Depending on the method, these comments add some additional context or details that are relevant when reading the function, link to the actual docs at gorm.io/docs, or provide examples of use. These comments should make GORM much more pleasant to use with an IDE that provides hoverable comments, and are minimal examples.  Also add in-code documentation to FirstOrInit and FirstOrCreate.  Almost all examples are directly pulled from the docs, with short comments explaining the code. Most examples omit the `db.Model(&User{})` for brevity, and would not actually work.  Co-authored-by: Nate Armstrong <nate.armstrong@eluv.io>",350,356,Cr,b2f4252,0,2022-12-23 08:51:01,2022-11-02 02:28:00
chainable_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,357,357,,,0,2020-03-10 00:39:33,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",358,358,,,0,2020-01-29 11:22:44,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",360,362,,,0,2020-01-29 11:22:44,
chainable_api.go,0c34123,Jinzhu,"Add Limit, Offset",359,359,,,0,2020-03-04 15:56:42,
chainable_api.go,d047f85,Adrien Carreira,PR Comments,272,274,Jinzhu,50aa9be,0,2021-09-06 12:13:20,2020-04-15 01:45:43
chainable_api.go,3aa1891,Jinzhu,Add sync pool,363,363,,,0,2020-03-09 07:32:55,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",364,364,,,0,2020-01-29 11:22:44,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",374,374,,,0,2020-01-29 11:22:44,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",380,381,,,0,2020-01-29 11:22:44,
chainable_api.go,4b0da0e,black-06,"fix cond in scopes (#6152)  * fix cond in scopes  * replace quote  * fix execute scopes",382,382,Cr,aa89736,1,2023-04-11 04:01:23,2023-02-18 01:13:36
chainable_api.go,49d524a,supergem3000,"feat: chainable order support clause.OrderBy (#7054)  * feat: chainable order support clause.OrderBy  * indent",317,318,Jinzhu,704e53a,0,2024-06-12 09:47:34,2021-03-24 08:35:39
chainable_api.go,4b0da0e,black-06,"fix cond in scopes (#6152)  * fix cond in scopes  * replace quote  * fix execute scopes",383,383,Cr,aa89736,1,2023-04-11 04:01:23,2023-02-18 01:13:36
chainable_api.go,940358e,Jinzhu,Fix tests doesn't follow https://gorm.io/docs/method_chaining.html convention,384,384,robhafner,e8f48b5,1,2024-01-12 08:42:21,2022-10-07 12:14:14
chainable_api.go,a870486,Walter Scheper,"Do not emit ORDER BY for empty values (#4592)  This restores the behavior from gorm v1, where calling `DB.Order` with an empty string, nil, or any unexpected type is a no-op.",323,330,,,0,2021-08-09 05:14:23,
chainable_api.go,4b0da0e,black-06,"fix cond in scopes (#6152)  * fix cond in scopes  * replace quote  * fix execute scopes",387,387,Cr,aa89736,1,2023-04-11 04:01:23,2023-02-18 01:13:36
chainable_api.go,4b0da0e,black-06,"fix cond in scopes (#6152)  * fix cond in scopes  * replace quote  * fix execute scopes",385,385,Cr,aa89736,1,2023-04-11 04:01:23,2023-02-18 01:13:36
chainable_api.go,4b0da0e,black-06,"fix cond in scopes (#6152)  * fix cond in scopes  * replace quote  * fix execute scopes",389,390,Cr,aa89736,1,2023-04-11 04:01:23,2023-02-18 01:13:36
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",391,391,,,0,2020-01-29 11:22:44,
chainable_api.go,940358e,Jinzhu,Fix tests doesn't follow https://gorm.io/docs/method_chaining.html convention,388,388,Cr,b2f4252,1,2024-01-12 08:42:21,2022-11-02 02:28:00
chainable_api.go,e8f48b5,robhafner,fix: limit=0 results (#5735) (#5736),345,345,,,1,2022-10-07 12:14:14,
chainable_api.go,b2f4252,Cr,"fix(Joins): args with select and omit (#5790)  * fix(Joins): args with select and omit  * chore: gofumpt style",306,308,Jinzhu,ac8708b,1,2022-11-02 02:28:00,2020-05-28 05:12:56
chainable_api.go,50aa9be,Jinzhu,Add joins support,395,395,,,0,2020-04-15 01:45:43,
chainable_api.go,f3c6fc2,Nate Armstrong,"Update func comments in chainable_api and FirstOr_ (#5935)  Add comments to functions in chainable_api. Depending on the method, these comments add some additional context or details that are relevant when reading the function, link to the actual docs at gorm.io/docs, or provide examples of use. These comments should make GORM much more pleasant to use with an IDE that provides hoverable comments, and are minimal examples.  Also add in-code documentation to FirstOrInit and FirstOrCreate.  Almost all examples are directly pulled from the docs, with short comments explaining the code. Most examples omit the `db.Model(&User{})` for brevity, and would not actually work.  Co-authored-by: Nate Armstrong <nate.armstrong@eluv.io>",393,393,Cr,b2f4252,0,2022-12-23 08:51:01,2022-11-02 02:28:00
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",396,396,,,0,2020-01-29 11:22:44,
chainable_api.go,b2f4252,Cr,"fix(Joins): args with select and omit (#5790)  * fix(Joins): args with select and omit  * chore: gofumpt style",375,375,,,1,2022-11-02 02:28:00,
chainable_api.go,50aa9be,Jinzhu,Add joins support,397,400,,,0,2020-04-15 01:45:43,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",401,403,,,0,2020-01-29 11:22:44,
chainable_api.go,ac8708b,Jinzhu,Add FirstOrInit support,418,418,,,0,2020-05-28 05:12:56,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",419,419,,,0,2020-01-29 11:22:44,
chainable_api.go,ac8708b,Jinzhu,Add FirstOrInit support,420,420,,,0,2020-05-28 05:12:56,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",421,423,,,0,2020-01-29 11:22:44,
chainable_api.go,b2f4252,Cr,"fix(Joins): args with select and omit (#5790)  * fix(Joins): args with select and omit  * chore: gofumpt style",365,373,,,1,2022-11-02 02:28:00,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",440,440,,,0,2020-01-29 11:22:44,
chainable_api.go,ac8708b,Jinzhu,Add FirstOrInit support,439,439,,,0,2020-05-28 05:12:56,
chainable_api.go,ac8708b,Jinzhu,Add FirstOrInit support,441,441,,,0,2020-05-28 05:12:56,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",442,444,,,0,2020-01-29 11:22:44,
chainable_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,454,454,,,0,2020-03-10 00:39:33,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",455,455,,,0,2020-01-29 11:22:44,
chainable_api.go,5507421,Jinzhu,Add SoftDelete support,456,456,,,0,2020-05-28 23:35:45,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",457,459,,,0,2020-01-29 11:22:44,
chainable_api.go,6b7d186,Jinzhu,Lazy call registered scopes,376,379,,,0,2021-02-25 12:06:26,
chainable_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,460,460,,,0,2020-03-10 00:39:33,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",461,461,,,0,2020-01-29 11:22:44,
chainable_api.go,6d58b62,Jinzhu,Add sqlite migration tests,462,462,,,0,2020-02-22 12:57:29,
chainable_api.go,b2f4252,Cr,"fix(Joins): args with select and omit (#5790)  * fix(Joins): args with select and omit  * chore: gofumpt style",394,394,,,1,2022-11-02 02:28:00,
chainable_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",469,470,,,0,2020-01-29 11:22:44,
chainable_api.go,f3c6fc2,Nate Armstrong,"Update func comments in chainable_api and FirstOr_ (#5935)  Add comments to functions in chainable_api. Depending on the method, these comments add some additional context or details that are relevant when reading the function, link to the actual docs at gorm.io/docs, or provide examples of use. These comments should make GORM much more pleasant to use with an IDE that provides hoverable comments, and are minimal examples.  Also add in-code documentation to FirstOrInit and FirstOrCreate.  Almost all examples are directly pulled from the docs, with short comments explaining the code. Most examples omit the `db.Model(&User{})` for brevity, and would not actually work.  Co-authored-by: Nate Armstrong <nate.armstrong@eluv.io>",404,417,Jinzhu,4e066c9,0,2022-12-23 08:51:01,2020-07-05 04:23:45
chainable_api.go,940358e,Jinzhu,Fix tests doesn't follow https://gorm.io/docs/method_chaining.html convention,386,386,,,1,2024-01-12 08:42:21,
chainable_api.go,f3c6fc2,Nate Armstrong,"Update func comments in chainable_api and FirstOr_ (#5935)  Add comments to functions in chainable_api. Depending on the method, these comments add some additional context or details that are relevant when reading the function, link to the actual docs at gorm.io/docs, or provide examples of use. These comments should make GORM much more pleasant to use with an IDE that provides hoverable comments, and are minimal examples.  Also add in-code documentation to FirstOrInit and FirstOrCreate.  Almost all examples are directly pulled from the docs, with short comments explaining the code. Most examples omit the `db.Model(&User{})` for brevity, and would not actually work.  Co-authored-by: Nate Armstrong <nate.armstrong@eluv.io>",424,438,,,0,2022-12-23 08:51:01,
chainable_api.go,d0b4ceb,Ivan Chavez,Added comment describing Unscoped() method (#6969),445,453,Jinzhu,4e066c9,0,2024-04-17 03:38:55,2020-07-05 04:23:45
chainable_api.go,bba569a,Jinzhu,Add NamedArg support,463,468,,,0,2020-07-10 04:28:24,
chainable_api.go,b2f4252,Cr,"fix(Joins): args with select and omit (#5790)  * fix(Joins): args with select and omit  * chore: gofumpt style",392,392,,,1,2022-11-02 02:28:00,
model.go,a145d7e,Jinzhu,Refactor structure,11,14,Jinzhu,e509b31,0,2020-03-09 06:25:50,2020-01-30 22:35:25
model.go,05e6a65,Jinzhu,Fix typo,6,6,Jinzhu,5507421,1,2020-06-09 04:00:43,2020-05-28 23:35:45
model.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",7,10,Jinzhu,05e6a65,1,2023-02-18 01:06:43,2020-06-09 04:00:43
model.go,5507421,Jinzhu,Add SoftDelete support,15,15,Jinzhu,a145d7e,0,2020-05-28 23:35:45,2020-03-09 06:25:50
model.go,a145d7e,Jinzhu,Refactor structure,1,5,Jinzhu,e509b31,0,2020-03-09 06:25:50,2020-01-30 22:35:25
model.go,a145d7e,Jinzhu,Refactor structure,16,16,,,0,2020-03-09 06:25:50,
finisher_api.go,7dc255a,Jinzhu,Add SavePoint/RollbackTo/NestedTransaction,6,6,,,0,2020-06-19 10:30:04,
finisher_api.go,6d58b62,Jinzhu,Add sqlite migration tests,9,9,,,0,2020-02-22 12:57:29,
finisher_api.go,46b1c85,Jinzhu,Add more clauses,10,10,,,0,2020-02-04 00:56:15,
finisher_api.go,2da0ad5,Jinzhu,Add more tests for Update,8,8,,,0,2020-03-08 05:24:08,
finisher_api.go,e986371,Jinzhu,Rename package name,11,11,,,0,2020-06-02 01:18:01,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",1,4,,,0,2020-01-29 11:22:44,
finisher_api.go,7f75b12,Leo Sjöberg,"Generate unique savepoint names for nested transactions (#7174)  * Generate unique savepoint names  * Add a test for deeply nested wrapped transactions",7,7,Jinzhu,940358e,0,2024-09-14 12:58:29,2024-01-12 08:42:21
finisher_api.go,ac8708b,Jinzhu,Add FirstOrInit support,5,5,,,0,2020-05-28 05:12:56,
finisher_api.go,2faff25,Jinzhu,Fix FirstOr(Init/Create) when assigning with association,13,13,,,1,2020-08-13 10:38:39,
finisher_api.go,9eec6ae,Jinzhu,"Fix affected rows for Scan, change affected rows count for row/rows to '-', close #3532",12,12,,,1,2020-09-27 04:25:38,
finisher_api.go,ee1f46e,Jinzhu,"Allow to use sql function in Group, Pluck",14,14,,,0,2020-06-30 15:06:48,
finisher_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,18,18,,,0,2020-03-10 00:39:33,
finisher_api.go,0c12a4c,Jinzhu,Add CreateBatchSize option,19,22,,,0,2020-12-02 06:59:50,
finisher_api.go,d52ee0a,Jinzhu,Work on create callbacks,23,24,,,0,2020-02-03 02:40:03,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",15,16,,,0,2020-01-29 11:22:44,
finisher_api.go,f29afdd,Bruce MacKenzie,Rewrite of finisher_api Godocs (#5618),17,17,Bruce MacKenzie,a358835,0,2022-09-09 03:16:41,2022-08-11 03:38:04
finisher_api.go,d52ee0a,Jinzhu,Work on create callbacks,26,27,,,0,2020-02-03 02:40:03,
finisher_api.go,f29afdd,Bruce MacKenzie,Rewrite of finisher_api Godocs (#5618),28,28,Bruce MacKenzie,a358835,0,2022-09-09 03:16:41,2022-08-11 03:38:04
finisher_api.go,92c3ba9,Jinzhu,Fix create new db sessions in scopes,25,25,,,1,2021-05-17 07:36:07,
finisher_api.go,0c12a4c,Jinzhu,Add CreateBatchSize option,34,34,,,0,2020-12-02 06:59:50,
finisher_api.go,a8db54a,Jinzhu,Add CreateInBatches supports,35,35,,,0,2020-11-16 13:42:30,
finisher_api.go,a8db54a,Jinzhu,Add CreateInBatches supports,29,33,,,0,2020-11-16 13:42:30,
finisher_api.go,5d1cdfe,cyhone,avoid starting a transaction when performing only one insert operation in CreateInBatches function (#6174),37,39,black-06,1a7ea98,0,2023-03-23 06:02:35,2023-03-23 03:19:53
finisher_api.go,4a15540,Jinzhu,SkipDefaultTransaction skip CreateInBatches transaction,36,36,,,0,2021-01-18 03:43:42,
finisher_api.go,4a15540,Jinzhu,SkipDefaultTransaction skip CreateInBatches transaction,40,40,,,0,2021-01-18 03:43:42,
finisher_api.go,a8db54a,Jinzhu,Add CreateInBatches supports,42,42,,,0,2020-11-16 13:42:30,
finisher_api.go,221d0a0,heige,optimize value of reflection length (#4152),41,41,,,0,2021-03-08 02:20:04,
finisher_api.go,221d0a0,heige,optimize value of reflection length (#4152),43,44,,,0,2021-03-08 02:20:04,
finisher_api.go,0c12a4c,Jinzhu,Add CreateBatchSize option,47,55,,,0,2020-12-02 06:59:50,
finisher_api.go,a8db54a,Jinzhu,Add CreateInBatches supports,45,46,,,0,2020-11-16 13:42:30,
finisher_api.go,4a15540,Jinzhu,SkipDefaultTransaction skip CreateInBatches transaction,56,57,,,0,2021-01-18 03:43:42,
finisher_api.go,5d1cdfe,cyhone,avoid starting a transaction when performing only one insert operation in CreateInBatches function (#6174),58,58,black-06,1a7ea98,0,2023-03-23 06:02:35,2023-03-23 03:19:53
finisher_api.go,4a15540,Jinzhu,SkipDefaultTransaction skip CreateInBatches transaction,59,63,,,0,2021-01-18 03:43:42,
finisher_api.go,0c12a4c,Jinzhu,Add CreateBatchSize option,64,64,,,0,2020-12-02 06:59:50,
finisher_api.go,0c12a4c,Jinzhu,Add CreateBatchSize option,66,67,,,0,2020-12-02 06:59:50,
finisher_api.go,a8db54a,Jinzhu,Add CreateInBatches supports,65,65,,,0,2020-11-16 13:42:30,
finisher_api.go,92c3ba9,Jinzhu,Fix create new db sessions in scopes,68,68,,,1,2021-05-17 07:36:07,
finisher_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,74,74,,,0,2020-03-10 00:39:33,
finisher_api.go,f29afdd,Bruce MacKenzie,Rewrite of finisher_api Godocs (#5618),73,73,Bruce MacKenzie,a358835,0,2022-09-09 03:16:41,2022-08-11 03:38:04
finisher_api.go,a8db54a,Jinzhu,Add CreateInBatches supports,69,72,,,0,2020-11-16 13:42:30,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",75,75,,,0,2020-01-29 11:22:44,
finisher_api.go,2da0ad5,Jinzhu,Add more tests for Update,76,77,,,0,2020-03-08 05:24:08,
finisher_api.go,f3424c6,Jinzhu,Support save slice of data,78,78,,,0,2020-06-09 16:02:14,
finisher_api.go,f3424c6,Jinzhu,Support save slice of data,83,84,,,0,2020-06-09 16:02:14,
finisher_api.go,0729261,Jinzhu,Support double ptr for Save,79,82,ZhangShenao,f7b52bb,0,2022-04-08 06:23:25,2022-04-01 00:35:16
finisher_api.go,62be27d,Jinzhu,Add OnConflict UpdateAll support,85,87,,,0,2020-11-16 12:22:08,
finisher_api.go,8e67a08,Jinzhu,"Fix Scopes with Row, close #4465",88,88,,,1,2021-06-18 07:38:20,
finisher_api.go,f3424c6,Jinzhu,Support save slice of data,89,90,,,0,2020-06-09 16:02:14,
finisher_api.go,59586dc,Jinzhu,"Fix unnecessary duplicated primary condition when using Save, close #3330",91,91,,,1,2020-08-29 15:02:19,
finisher_api.go,6937d71,Jinzhu,Refactor clauses,96,96,,,0,2020-06-06 14:52:08,
finisher_api.go,2da0ad5,Jinzhu,Add more tests for Update,97,97,,,0,2020-03-08 05:24:08,
finisher_api.go,f3424c6,Jinzhu,Support save slice of data,98,99,,,0,2020-06-09 16:02:14,
finisher_api.go,2db3373,Jinzhu,Add Slice Association for BelongsTo,94,94,,,0,2020-05-24 12:53:20,
finisher_api.go,b4166d9,Jinzhu,"Fix V2 Save compatibility, close #3332",100,102,,,1,2020-08-30 02:21:11,
finisher_api.go,92c3ba9,Jinzhu,Fix create new db sessions in scopes,93,93,,,1,2021-05-17 07:36:07,
finisher_api.go,2da0ad5,Jinzhu,Add more tests for Update,95,95,,,0,2020-03-08 05:24:08,
finisher_api.go,11fdf46,black-06,fix: save with hook (#6285) (#6294),109,109,wangliuyang,812bb20,1,2023-05-26 02:28:02,2023-05-26 02:24:28
finisher_api.go,f387433,Jinzhu,Fix Save with stress tests,108,108,Nate Armstrong,f3c6fc2,1,2023-03-02 09:22:51,2022-12-23 08:51:01
finisher_api.go,f387433,Jinzhu,Fix Save with stress tests,106,106,Nate Armstrong,f3c6fc2,1,2023-03-02 09:22:51,2022-12-23 08:51:01
finisher_api.go,f387433,Jinzhu,Fix Save with stress tests,111,112,Nate Armstrong,f3c6fc2,1,2023-03-02 09:22:51,2022-12-23 08:51:01
finisher_api.go,f3424c6,Jinzhu,Support save slice of data,103,105,,,0,2020-06-09 16:02:14,
finisher_api.go,b4166d9,Jinzhu,"Fix V2 Save compatibility, close #3332",110,110,,,1,2020-08-30 02:21:11,
finisher_api.go,b4166d9,Jinzhu,"Fix V2 Save compatibility, close #3332",107,107,,,1,2020-08-30 02:21:11,
finisher_api.go,51c5be0,Jinzhu,Finish Scan support,119,119,,,0,2020-05-26 13:30:17,
finisher_api.go,4555796,Jinzhu,Refactor Execute callbacks,120,120,,,0,2020-06-08 14:32:35,
finisher_api.go,f3424c6,Jinzhu,Support save slice of data,114,114,,,0,2020-06-09 16:02:14,
finisher_api.go,f0a442a,Jinzhu,Refactor tests,113,113,,,0,2020-05-23 15:50:48,
finisher_api.go,46b1c85,Jinzhu,Add more clauses,121,121,,,0,2020-02-04 00:56:15,
finisher_api.go,f29afdd,Bruce MacKenzie,Rewrite of finisher_api Godocs (#5618),118,118,Bruce MacKenzie,a358835,0,2022-09-09 03:16:41,2022-08-11 03:38:04
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",115,117,,,0,2020-01-29 11:22:44,
finisher_api.go,9790103,Jinzhu,"Fix Where with empty struct, close #3966",124,126,,,1,2021-01-19 08:37:49,
finisher_api.go,cbd55db,Jinzhu,Add Update test,123,123,,,0,2020-03-07 07:20:09,
finisher_api.go,46b1c85,Jinzhu,Add more clauses,122,122,,,0,2020-02-04 00:56:15,
finisher_api.go,1403ee7,Jinzhu,Make Query works,128,128,,,0,2020-03-03 06:18:12,
finisher_api.go,cbd55db,Jinzhu,Add Update test,127,127,,,0,2020-03-07 07:20:09,
finisher_api.go,92c3ba9,Jinzhu,Fix create new db sessions in scopes,130,130,,,1,2021-05-17 07:36:07,
finisher_api.go,51c5be0,Jinzhu,Finish Scan support,129,129,,,0,2020-05-26 13:30:17,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",131,132,,,0,2020-01-29 11:22:44,
finisher_api.go,cbd55db,Jinzhu,Add Update test,136,136,,,0,2020-03-07 07:20:09,
finisher_api.go,f29afdd,Bruce MacKenzie,Rewrite of finisher_api Godocs (#5618),133,133,Bruce MacKenzie,a358835,0,2022-09-09 03:16:41,2022-08-11 03:38:04
finisher_api.go,4555796,Jinzhu,Refactor Execute callbacks,135,135,,,0,2020-06-08 14:32:35,
finisher_api.go,51c5be0,Jinzhu,Finish Scan support,134,134,,,0,2020-05-26 13:30:17,
finisher_api.go,9790103,Jinzhu,"Fix Where with empty struct, close #3966",137,139,,,1,2021-01-19 08:37:49,
finisher_api.go,cbd55db,Jinzhu,Add Update test,140,140,,,0,2020-03-07 07:20:09,
finisher_api.go,51c5be0,Jinzhu,Finish Scan support,142,142,,,0,2020-05-26 13:30:17,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",144,145,,,0,2020-01-29 11:22:44,
finisher_api.go,1403ee7,Jinzhu,Make Query works,141,141,,,0,2020-03-03 06:18:12,
finisher_api.go,4555796,Jinzhu,Refactor Execute callbacks,148,148,,,0,2020-06-08 14:32:35,
finisher_api.go,92c3ba9,Jinzhu,Fix create new db sessions in scopes,143,143,,,1,2021-05-17 07:36:07,
finisher_api.go,f29afdd,Bruce MacKenzie,Rewrite of finisher_api Godocs (#5618),146,146,Bruce MacKenzie,a358835,0,2022-09-09 03:16:41,2022-08-11 03:38:04
finisher_api.go,51c5be0,Jinzhu,Finish Scan support,147,147,,,0,2020-05-26 13:30:17,
finisher_api.go,5ccd76f,Jinzhu,Setup Transaction,149,149,,,0,2020-02-23 15:28:59,
finisher_api.go,5ccd76f,Jinzhu,Setup Transaction,151,151,,,0,2020-02-23 15:28:59,
finisher_api.go,cbd55db,Jinzhu,Add Update test,156,156,,,0,2020-03-07 07:20:09,
finisher_api.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",150,150,,,0,2020-03-04 03:33:50,
finisher_api.go,cbd55db,Jinzhu,Add Update test,152,152,,,0,2020-03-07 07:20:09,
finisher_api.go,9790103,Jinzhu,"Fix Where with empty struct, close #3966",153,155,,,1,2021-01-19 08:37:49,
finisher_api.go,1403ee7,Jinzhu,Make Query works,157,157,,,0,2020-03-03 06:18:12,
finisher_api.go,51c5be0,Jinzhu,Finish Scan support,158,158,,,0,2020-05-26 13:30:17,
finisher_api.go,92c3ba9,Jinzhu,Fix create new db sessions in scopes,159,159,,,1,2021-05-17 07:36:07,
finisher_api.go,cbd55db,Jinzhu,Add Update test,169,169,,,0,2020-03-07 07:20:09,
finisher_api.go,f29afdd,Bruce MacKenzie,Rewrite of finisher_api Godocs (#5618),162,162,Bruce MacKenzie,a358835,0,2022-09-09 03:16:41,2022-08-11 03:38:04
finisher_api.go,51c5be0,Jinzhu,Finish Scan support,163,163,,,0,2020-05-26 13:30:17,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",160,161,,,0,2020-01-29 11:22:44,
finisher_api.go,cbd55db,Jinzhu,Add Update test,165,165,,,0,2020-03-07 07:20:09,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",164,164,,,0,2020-01-29 11:22:44,
finisher_api.go,9790103,Jinzhu,"Fix Where with empty struct, close #3966",166,168,,,1,2021-01-19 08:37:49,
finisher_api.go,f29afdd,Bruce MacKenzie,Rewrite of finisher_api Godocs (#5618),174,174,Bruce MacKenzie,a358835,0,2022-09-09 03:16:41,2022-08-11 03:38:04
finisher_api.go,51c5be0,Jinzhu,Finish Scan support,170,170,,,0,2020-05-26 13:30:17,
finisher_api.go,26504f5,Jinzhu,Use NewDB to replace WithConditions for Session,179,179,,,0,2020-11-17 08:28:37,
finisher_api.go,320f330,Jinzhu,"Fix FindInBatches to modify the query conditions, close #3734",175,178,,,1,2020-11-17 03:19:04,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",172,173,,,0,2020-01-29 11:22:44,
finisher_api.go,92c3ba9,Jinzhu,Fix create new db sessions in scopes,171,171,,,1,2021-05-17 07:36:07,
finisher_api.go,45cb6b4,Jinzhu,Add FindInBatches support,184,184,,,0,2020-06-10 07:36:34,
finisher_api.go,320f330,Jinzhu,"Fix FindInBatches to modify the query conditions, close #3734",180,183,,,1,2020-11-17 03:19:04,
finisher_api.go,45cb6b4,Jinzhu,Add FindInBatches support,202,202,,,0,2020-06-10 07:36:34,
finisher_api.go,e8f48b5,robhafner,fix: limit=0 results (#5735) (#5736),189,191,Bruce MacKenzie,f29afdd,1,2022-10-07 12:14:14,2022-09-09 03:16:41
finisher_api.go,b49ae84,Cr,"fix: FindInBatches with offset limit (#5255)  * fix: FindInBatches with offset limit  * fix: break first  * fix: FindInBatches Limit zero",185,188,Jinzhu,d421c67,1,2022-04-17 01:58:33,2022-04-14 02:51:39
finisher_api.go,b49ae84,Cr,"fix: FindInBatches with offset limit (#5255)  * fix: FindInBatches with offset limit  * fix: break first  * fix: FindInBatches Limit zero",192,201,Jinzhu,d421c67,1,2022-04-17 01:58:33,2022-04-14 02:51:39
finisher_api.go,320f330,Jinzhu,"Fix FindInBatches to modify the query conditions, close #3734",203,203,,,1,2020-11-17 03:19:04,
finisher_api.go,26dd4c9,Genta Kamitani,Fix: FindInBatches ignores errors (#4203),211,212,,,1,2021-03-22 06:11:07,
finisher_api.go,45cb6b4,Jinzhu,Add FindInBatches support,204,207,,,0,2020-06-10 07:36:34,
finisher_api.go,7572009,Jinzhu,Create a new db in FindInBatches,208,210,Jinzhu,9fd73ae,0,2022-07-18 10:07:05,2022-07-07 07:06:48
finisher_api.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",218,218,,,1,2021-06-10 02:21:28,
finisher_api.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",92,92,,,1,2022-02-19 09:02:53,
finisher_api.go,b49ae84,Cr,"fix: FindInBatches with offset limit (#5255)  * fix: FindInBatches with offset limit  * fix: break first  * fix: FindInBatches Limit zero",219,227,Jinzhu,d421c67,1,2022-04-17 01:58:33,2022-04-14 02:51:39
finisher_api.go,45cb6b4,Jinzhu,Add FindInBatches support,213,217,,,0,2020-06-10 07:36:34,
finisher_api.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",228,234,,,1,2021-06-10 02:21:28,
finisher_api.go,320f330,Jinzhu,"Fix FindInBatches to modify the query conditions, close #3734",244,244,,,1,2020-11-17 03:19:04,
finisher_api.go,342310f,Cr,fix(FindInBatches): throw err if pk not exists (#5868),235,239,robhafner,e8f48b5,1,2022-11-21 02:49:27,2022-10-07 12:14:14
finisher_api.go,45cb6b4,Jinzhu,Add FindInBatches support,245,246,,,0,2020-06-10 07:36:34,
finisher_api.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",240,240,,,1,2021-06-10 02:21:28,
finisher_api.go,f7b52bb,ZhangShenao,unify db receiver name (#5215)  Co-authored-by: Shenao Zhang <shenao.zhang@shopee.com>,247,247,Jinzhu,6befa0c,0,2022-04-01 00:35:16,2022-03-17 03:22:25
finisher_api.go,45cb6b4,Jinzhu,Add FindInBatches support,241,243,,,0,2020-06-10 07:36:34,
finisher_api.go,2faff25,Jinzhu,Fix FirstOr(Init/Create) when assigning with association,248,254,,,1,2020-08-13 10:38:39,
finisher_api.go,2faff25,Jinzhu,Fix FirstOr(Init/Create) when assigning with association,257,258,,,1,2020-08-13 10:38:39,
finisher_api.go,ac8708b,Jinzhu,Add FirstOrInit support,265,265,,,0,2020-05-28 05:12:56,
finisher_api.go,9b21811,Jinzhu,"Fix soft delete with OrCondition, close #3627",263,263,,,1,2020-10-19 06:50:11,
finisher_api.go,2faff25,Jinzhu,Fix FirstOr(Init/Create) when assigning with association,262,262,,,1,2020-08-13 10:38:39,
finisher_api.go,2faff25,Jinzhu,Fix FirstOr(Init/Create) when assigning with association,261,261,,,1,2020-08-13 10:38:39,
finisher_api.go,f7b52bb,ZhangShenao,unify db receiver name (#5215)  Co-authored-by: Shenao Zhang <shenao.zhang@shopee.com>,255,256,Gilad Weiss,f3547e0,0,2022-04-01 00:35:16,2022-02-20 00:33:12
finisher_api.go,2faff25,Jinzhu,Fix FirstOr(Init/Create) when assigning with association,266,267,,,1,2020-08-13 10:38:39,
finisher_api.go,2faff25,Jinzhu,Fix FirstOr(Init/Create) when assigning with association,273,277,,,1,2020-08-13 10:38:39,
finisher_api.go,f7b52bb,ZhangShenao,unify db receiver name (#5215)  Co-authored-by: Shenao Zhang <shenao.zhang@shopee.com>,259,260,Gilad Weiss,f3547e0,0,2022-04-01 00:35:16,2022-02-20 00:33:12
finisher_api.go,9790103,Jinzhu,"Fix Where with empty struct, close #3966",270,270,,,1,2021-01-19 08:37:49,
finisher_api.go,2faff25,Jinzhu,Fix FirstOr(Init/Create) when assigning with association,271,271,,,1,2020-08-13 10:38:39,
finisher_api.go,2faff25,Jinzhu,Fix FirstOr(Init/Create) when assigning with association,281,284,,,1,2020-08-13 10:38:39,
finisher_api.go,ac8708b,Jinzhu,Add FirstOrInit support,285,285,,,0,2020-05-28 05:12:56,
finisher_api.go,9790103,Jinzhu,"Fix Where with empty struct, close #3966",289,289,,,1,2021-01-19 08:37:49,
finisher_api.go,2faff25,Jinzhu,Fix FirstOr(Init/Create) when assigning with association,286,286,,,1,2020-08-13 10:38:39,
finisher_api.go,ac8708b,Jinzhu,Add FirstOrInit support,291,294,,,0,2020-05-28 05:12:56,
finisher_api.go,2faff25,Jinzhu,Fix FirstOr(Init/Create) when assigning with association,290,290,,,1,2020-08-13 10:38:39,
finisher_api.go,f29afdd,Bruce MacKenzie,Rewrite of finisher_api Godocs (#5618),296,297,Cr,b49ae84,0,2022-09-09 03:16:41,2022-04-17 01:58:33
finisher_api.go,f7b52bb,ZhangShenao,unify db receiver name (#5215)  Co-authored-by: Shenao Zhang <shenao.zhang@shopee.com>,287,288,Ning,8c36732,0,2022-04-01 00:35:16,2022-01-30 10:17:06
finisher_api.go,f7b52bb,ZhangShenao,unify db receiver name (#5215)  Co-authored-by: Shenao Zhang <shenao.zhang@shopee.com>,268,269,,,0,2022-04-01 00:35:16,
finisher_api.go,f7b52bb,ZhangShenao,unify db receiver name (#5215)  Co-authored-by: Shenao Zhang <shenao.zhang@shopee.com>,264,264,,,0,2022-04-01 00:35:16,
finisher_api.go,f3c6fc2,Nate Armstrong,"Update func comments in chainable_api and FirstOr_ (#5935)  Add comments to functions in chainable_api. Depending on the method, these comments add some additional context or details that are relevant when reading the function, link to the actual docs at gorm.io/docs, or provide examples of use. These comments should make GORM much more pleasant to use with an IDE that provides hoverable comments, and are minimal examples.  Also add in-code documentation to FirstOrInit and FirstOrCreate.  Almost all examples are directly pulled from the docs, with short comments explaining the code. Most examples omit the `db.Model(&User{})` for brevity, and would not actually work.  Co-authored-by: Nate Armstrong <nate.armstrong@eluv.io>",298,307,wjw1758548031,f931def,0,2022-12-23 08:51:01,2022-12-01 12:25:53
finisher_api.go,ac8708b,Jinzhu,Add FirstOrInit support,308,308,,,0,2020-05-28 05:12:56,
finisher_api.go,ac8708b,Jinzhu,Add FirstOrInit support,314,315,,,0,2020-05-28 05:12:56,
finisher_api.go,6a6dfda,Jinzhu,"Refactor FirstOrCreate, FirstOrInit",313,313,Cr,b49ae84,0,2022-04-26 09:16:48,2022-04-17 01:58:33
finisher_api.go,c1bb8e4,Jinzhu,"Should not display the record not found error when using FirstOrXXX, close #3748",309,312,,,1,2020-11-16 03:20:13,
finisher_api.go,2faff25,Jinzhu,Fix FirstOr(Init/Create) when assigning with association,316,316,,,1,2020-08-13 10:38:39,
finisher_api.go,ac8708b,Jinzhu,Add FirstOrInit support,317,321,,,0,2020-05-28 05:12:56,
finisher_api.go,2faff25,Jinzhu,Fix FirstOr(Init/Create) when assigning with association,322,322,,,1,2020-08-13 10:38:39,
finisher_api.go,f7b52bb,ZhangShenao,unify db receiver name (#5215)  Co-authored-by: Shenao Zhang <shenao.zhang@shopee.com>,278,280,,,0,2022-04-01 00:35:16,
finisher_api.go,ac8708b,Jinzhu,Add FirstOrInit support,329,329,,,0,2020-05-28 05:12:56,
finisher_api.go,ac8708b,Jinzhu,Add FirstOrInit support,323,323,,,0,2020-05-28 05:12:56,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",330,332,,,0,2020-01-29 11:22:44,
finisher_api.go,dca5244,Jinzhu,Add FirstOrCreate support,347,347,,,0,2020-05-28 08:21:10,
finisher_api.go,ac8708b,Jinzhu,Add FirstOrInit support,324,327,,,0,2020-05-28 05:12:56,
finisher_api.go,f3c6fc2,Nate Armstrong,"Update func comments in chainable_api and FirstOr_ (#5935)  Add comments to functions in chainable_api. Depending on the method, these comments add some additional context or details that are relevant when reading the function, link to the actual docs at gorm.io/docs, or provide examples of use. These comments should make GORM much more pleasant to use with an IDE that provides hoverable comments, and are minimal examples.  Also add in-code documentation to FirstOrInit and FirstOrCreate.  Almost all examples are directly pulled from the docs, with short comments explaining the code. Most examples omit the `db.Model(&User{})` for brevity, and would not actually work.  Co-authored-by: Nate Armstrong <nate.armstrong@eluv.io>",335,346,wjw1758548031,f931def,0,2022-12-23 08:51:01,2022-12-01 12:25:53
finisher_api.go,c1bb8e4,Jinzhu,"Should not display the record not found error when using FirstOrXXX, close #3748",350,351,,,1,2020-11-16 03:20:13,
finisher_api.go,f29afdd,Bruce MacKenzie,Rewrite of finisher_api Godocs (#5618),333,334,Cr,b49ae84,0,2022-09-09 03:16:41,2022-04-17 01:58:33
finisher_api.go,f931def,wjw1758548031,"clear code syntax (#5889)  * clear code syntax  * clear code syntax",353,357,Jinzhu,f913134,0,2022-12-01 12:25:53,2022-11-21 03:10:56
finisher_api.go,2faff25,Jinzhu,Fix FirstOr(Init/Create) when assigning with association,328,328,,,1,2020-08-13 10:38:39,
finisher_api.go,dca5244,Jinzhu,Add FirstOrCreate support,352,352,,,0,2020-05-28 08:21:10,
finisher_api.go,dca5244,Jinzhu,Add FirstOrCreate support,358,358,,,0,2020-05-28 08:21:10,
finisher_api.go,f931def,wjw1758548031,"clear code syntax (#5889)  * clear code syntax  * clear code syntax",359,362,Jinzhu,f913134,0,2022-12-01 12:25:53,2022-11-21 03:10:56
finisher_api.go,f931def,wjw1758548031,"clear code syntax (#5889)  * clear code syntax  * clear code syntax",364,364,Jinzhu,f913134,0,2022-12-01 12:25:53,2022-11-21 03:10:56
finisher_api.go,940358e,Jinzhu,Fix tests doesn't follow https://gorm.io/docs/method_chaining.html convention,380,385,black-06,11fdf46,1,2024-01-12 08:42:21,2023-05-26 02:28:02
finisher_api.go,c170af1,kinggo,"fix connections leak (#4826)  * fix connections leak  * fix connections leak  * fix connections leak  * fix connections leak  Co-authored-by: 李龙 <lilong.21@bytedance.com>",363,363,,,1,2021-11-03 05:39:52,
finisher_api.go,f931def,wjw1758548031,"clear code syntax (#5889)  * clear code syntax  * clear code syntax",366,379,Jinzhu,f913134,0,2022-12-01 12:25:53,2022-11-21 03:10:56
finisher_api.go,dca5244,Jinzhu,Add FirstOrCreate support,365,365,,,0,2020-05-28 08:21:10,
finisher_api.go,dca5244,Jinzhu,Add FirstOrCreate support,391,392,,,0,2020-05-28 08:21:10,
finisher_api.go,996b96e,lianghuan,Add TxConnPoolBeginner and Tx interface,295,295,Jinzhu,af3fbdc,0,2022-03-01 08:59:50,2021-10-26 14:40:14
finisher_api.go,dca5244,Jinzhu,Add FirstOrCreate support,396,396,,,0,2020-05-28 08:21:10,
finisher_api.go,c170af1,kinggo,"fix connections leak (#4826)  * fix connections leak  * fix connections leak  * fix connections leak  * fix connections leak  Co-authored-by: 李龙 <lilong.21@bytedance.com>",393,393,Jinzhu,83530ec,1,2021-11-03 05:39:52,2021-07-13 13:17:43
finisher_api.go,6a6dfda,Jinzhu,"Refactor FirstOrCreate, FirstOrInit",348,349,Jinzhu,af3fbdc,0,2022-04-26 09:16:48,2021-10-26 14:40:14
finisher_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,402,402,,,0,2020-03-10 00:39:33,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",399,400,,,0,2020-01-29 11:22:44,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",403,403,,,0,2020-01-29 11:22:44,
finisher_api.go,92c3ba9,Jinzhu,Fix create new db sessions in scopes,405,405,,,1,2021-05-17 07:36:07,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",406,407,,,0,2020-01-29 11:22:44,
finisher_api.go,c170af1,kinggo,"fix connections leak (#4826)  * fix connections leak  * fix connections leak  * fix connections leak  * fix connections leak  Co-authored-by: 李龙 <lilong.21@bytedance.com>",398,398,,,1,2021-11-03 05:39:52,
finisher_api.go,cbd55db,Jinzhu,Add Update test,404,404,,,0,2020-03-07 07:20:09,
finisher_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,409,409,,,0,2020-03-10 00:39:33,
finisher_api.go,cbd55db,Jinzhu,Add Update test,411,411,,,0,2020-03-07 07:20:09,
finisher_api.go,f7b52bb,ZhangShenao,unify db receiver name (#5215)  Co-authored-by: Shenao Zhang <shenao.zhang@shopee.com>,272,272,,,0,2022-04-01 00:35:16,
finisher_api.go,f29afdd,Bruce MacKenzie,Rewrite of finisher_api Godocs (#5618),408,408,Jinzhu,4e52349,0,2022-09-09 03:16:41,2022-03-01 08:59:50
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",413,414,,,0,2020-01-29 11:22:44,
finisher_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,415,415,,,0,2020-03-10 00:39:33,
finisher_api.go,92c3ba9,Jinzhu,Fix create new db sessions in scopes,412,412,,,1,2021-05-17 07:36:07,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",410,410,,,0,2020-01-29 11:22:44,
finisher_api.go,f29afdd,Bruce MacKenzie,Rewrite of finisher_api Godocs (#5618),401,401,,,0,2022-09-09 03:16:41,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",416,416,,,0,2020-01-29 11:22:44,
finisher_api.go,f931def,wjw1758548031,"clear code syntax (#5889)  * clear code syntax  * clear code syntax",394,395,,,0,2022-12-01 12:25:53,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",420,421,,,0,2020-01-29 11:22:44,
finisher_api.go,cbd55db,Jinzhu,Add Update test,417,417,,,0,2020-03-07 07:20:09,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",423,423,,,0,2020-01-29 11:22:44,
finisher_api.go,cbd55db,Jinzhu,Add Update test,424,424,,,0,2020-03-07 07:20:09,
finisher_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,422,422,,,0,2020-03-10 00:39:33,
finisher_api.go,92c3ba9,Jinzhu,Fix create new db sessions in scopes,419,419,,,1,2021-05-17 07:36:07,
finisher_api.go,9df9f76,Jinzhu,Change UpdatingColumn to SkipHooks,425,425,,,0,2020-11-17 09:49:43,
finisher_api.go,92c3ba9,Jinzhu,Fix create new db sessions in scopes,426,426,,,1,2021-05-17 07:36:07,
finisher_api.go,9df9f76,Jinzhu,Change UpdatingColumn to SkipHooks,418,418,,,0,2020-11-17 09:49:43,
finisher_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,432,432,,,0,2020-03-10 00:39:33,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",427,428,,,0,2020-01-29 11:22:44,
finisher_api.go,f931def,wjw1758548031,"clear code syntax (#5889)  * clear code syntax  * clear code syntax",397,397,,,0,2022-12-01 12:25:53,
finisher_api.go,9790103,Jinzhu,"Fix Where with empty struct, close #3966",435,437,,,1,2021-01-19 08:37:49,
finisher_api.go,92c3ba9,Jinzhu,Fix create new db sessions in scopes,440,440,,,1,2021-05-17 07:36:07,
finisher_api.go,ce0e6f9,Jinzhu,Add Delete test,438,439,,,0,2020-03-08 06:51:52,
finisher_api.go,ce0e6f9,Jinzhu,Add Delete test,434,434,,,0,2020-03-08 06:51:52,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",433,433,,,0,2020-01-29 11:22:44,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",441,442,,,0,2020-01-29 11:22:44,
finisher_api.go,cbc4a81,Jinzhu,Add Count tests,443,443,,,0,2020-05-24 03:35:19,
finisher_api.go,cbc4a81,Jinzhu,Add Count tests,445,446,,,0,2020-05-24 03:35:19,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",444,444,,,0,2020-01-29 11:22:44,
finisher_api.go,cbc4a81,Jinzhu,Add Count tests,450,450,,,0,2020-05-24 03:35:19,
finisher_api.go,528e5ba,Jinzhu,Cleanup Model after Count,447,449,,,0,2020-08-19 12:30:39,
finisher_api.go,eda2f02,Jinzhu,Add Distinct support,451,451,,,0,2020-06-05 11:19:12,
finisher_api.go,1ef1f0b,Jinzhu,"Fix Count with complicated Select, close #3826",455,459,,,1,2020-12-06 06:30:42,
finisher_api.go,83530ec,Jinzhu,"Fix delete order by clause when counting, close #4478",454,454,,,1,2021-07-13 13:17:43,
finisher_api.go,1ef1f0b,Jinzhu,"Fix Count with complicated Select, close #3826",452,453,,,1,2020-12-06 06:30:42,
finisher_api.go,a0bddcc,Tony,Use count(*) instead of count(1) include NULL and non-NULL rows(SQL-92). (#4453),461,461,,,0,2021-06-11 13:51:18,
finisher_api.go,eda2f02,Jinzhu,Add Distinct support,460,460,,,0,2020-06-05 11:19:12,
finisher_api.go,a0bddcc,Tony,Use count(*) instead of count(1) include NULL and non-NULL rows(SQL-92). (#4453),463,463,,,0,2021-06-11 13:51:18,
finisher_api.go,3d87575,Jinzhu,"make Count compatible with Select with Count func, close #3962",462,462,,,0,2021-01-18 11:43:04,
finisher_api.go,1ef1f0b,Jinzhu,"Fix Count with complicated Select, close #3826",467,467,,,1,2020-12-06 06:30:42,
finisher_api.go,32bd6b3,Jinzhu,Fix Count with Select,464,465,,,1,2020-06-23 00:51:01,
finisher_api.go,f83b00d,Jinzhu,"Fix Count with Select when Model not specfied, close #3220",466,466,,,1,2020-08-03 02:30:25,
finisher_api.go,1ef1f0b,Jinzhu,"Fix Count with complicated Select, close #3826",469,472,,,1,2020-12-06 06:30:42,
finisher_api.go,32bd6b3,Jinzhu,Fix Count with Select,473,473,,,1,2020-06-23 00:51:01,
finisher_api.go,1bb0d87,River,"feat: count accpet `db`.`table` (#4626)  * feat: count accpet `db`.`table`  * fix: logic fix",468,468,,,1,2021-08-20 09:37:21,
finisher_api.go,1ef1f0b,Jinzhu,"Fix Count with complicated Select, close #3826",475,476,,,1,2020-12-06 06:30:42,
finisher_api.go,1ef1f0b,Jinzhu,"Fix Count with complicated Select, close #3826",478,479,,,1,2020-12-06 06:30:42,
finisher_api.go,f83b00d,Jinzhu,"Fix Count with Select when Model not specfied, close #3220",480,480,,,1,2020-08-03 02:30:25,
finisher_api.go,61b018c,Jinzhu,Fix count with selected *,477,477,Jinzhu,8e67a08,1,2021-09-16 03:17:54,2021-06-18 07:38:20
finisher_api.go,eda2f02,Jinzhu,Add Distinct support,481,481,,,0,2020-06-05 11:19:12,
finisher_api.go,32bd6b3,Jinzhu,Fix Count with Select,482,483,,,1,2020-06-23 00:51:01,
finisher_api.go,f83b00d,Jinzhu,"Fix Count with Select when Model not specfied, close #3220",474,474,,,1,2020-08-03 02:30:25,
finisher_api.go,231aba5,Jinzhu,Fix count with order by,489,489,,,1,2020-10-22 03:28:43,
finisher_api.go,eda2f02,Jinzhu,Add Distinct support,484,485,,,0,2020-06-05 11:19:12,
finisher_api.go,83530ec,Jinzhu,"Fix delete order by clause when counting, close #4478",488,488,,,1,2021-07-13 13:17:43,
finisher_api.go,231aba5,Jinzhu,Fix count with order by,486,487,,,1,2020-10-22 03:28:43,
finisher_api.go,83530ec,Jinzhu,"Fix delete order by clause when counting, close #4478",490,490,,,1,2021-07-13 13:17:43,
finisher_api.go,231aba5,Jinzhu,Fix count with order by,491,494,,,1,2020-10-22 03:28:43,
finisher_api.go,cbc4a81,Jinzhu,Add Count tests,495,495,,,0,2020-05-24 03:35:19,
finisher_api.go,92c3ba9,Jinzhu,Fix create new db sessions in scopes,496,496,,,1,2021-05-17 07:36:07,
finisher_api.go,7e1fa4a,Jinzhu,Fix Count after Session,499,499,,,1,2020-06-23 14:41:41,
finisher_api.go,cbc4a81,Jinzhu,Add Count tests,500,500,,,0,2020-05-24 03:35:19,
finisher_api.go,d8a710c,kinggo,fix: count() when use group by and only find one record (#4885)  Co-authored-by: 李龙 <lilong.21@bytedance.com>,497,497,,,1,2021-11-29 12:14:23,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",502,504,,,0,2020-01-29 11:22:44,
finisher_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,505,505,,,0,2020-03-10 00:39:33,
finisher_api.go,92c3ba9,Jinzhu,Fix create new db sessions in scopes,507,507,,,1,2021-05-17 07:36:07,
finisher_api.go,8e67a08,Jinzhu,"Fix Scopes with Row, close #4465",506,506,,,1,2021-06-18 07:38:20,
finisher_api.go,072f1de,Jinzhu,Add DryRunModeUnsupported Error for Row/Rows,508,512,,,1,2020-09-18 13:35:46,
finisher_api.go,d8a710c,kinggo,fix: count() when use group by and only find one record (#4885)  Co-authored-by: 李龙 <lilong.21@bytedance.com>,501,501,,,1,2021-11-29 12:14:23,
finisher_api.go,8e67a08,Jinzhu,"Fix Scopes with Row, close #4465",516,516,,,1,2021-06-18 07:38:20,
finisher_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,515,515,,,0,2020-03-10 00:39:33,
finisher_api.go,d52ee0a,Jinzhu,Work on create callbacks,513,514,,,0,2020-02-03 02:40:03,
finisher_api.go,92c3ba9,Jinzhu,Fix create new db sessions in scopes,517,517,,,1,2021-05-17 07:36:07,
finisher_api.go,d52ee0a,Jinzhu,Work on create callbacks,523,524,,,0,2020-02-03 02:40:03,
finisher_api.go,072f1de,Jinzhu,Add DryRunModeUnsupported Error for Row/Rows,518,522,,,1,2020-09-18 13:35:46,
finisher_api.go,db2630c,Jinzhu,"Fix data race problem when using Scan, close #3662",527,530,,,1,2020-10-22 09:32:39,
finisher_api.go,9d5b983,Jinzhu,Refactor builder,531,531,,,0,2020-01-30 11:47:00,
finisher_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,526,526,,,0,2020-03-10 00:39:33,
finisher_api.go,dbaa6b0,Jinzhu,"Fix Scan struct with primary key, close #3357",535,536,,,1,2020-09-02 08:14:26,
finisher_api.go,db2630c,Jinzhu,"Fix data race problem when using Scan, close #3662",532,533,,,1,2020-10-22 09:32:39,
finisher_api.go,79628be,Jinzhu,Fix wrong RowsAffected if not data found,537,538,,,1,2021-01-14 08:01:23,
finisher_api.go,f5837de,201430098137,fix:clickhouse error not capture(#6277) (#6321)  Co-authored-by: zhuangg <zhuangg@mingyuanyun.com>,539,539,cyhone,5d1cdfe,1,2023-05-17 02:15:41,2023-03-23 06:02:35
finisher_api.go,270e38c,Jinzhu,"Fix duplicated error when Scan, close #4525",534,534,,,1,2021-11-29 06:23:10,
finisher_api.go,dbaa6b0,Jinzhu,"Fix Scan struct with primary key, close #3357",540,540,,,1,2020-09-02 08:14:26,
finisher_api.go,9eec6ae,Jinzhu,"Fix affected rows for Scan, change affected rows count for row/rows to '-', close #3532",543,547,,,1,2020-09-27 04:25:38,
finisher_api.go,dbaa6b0,Jinzhu,"Fix Scan struct with primary key, close #3357",542,542,,,1,2020-09-02 08:14:26,
finisher_api.go,9d5b983,Jinzhu,Refactor builder,548,550,,,0,2020-01-30 11:47:00,
finisher_api.go,f29afdd,Bruce MacKenzie,Rewrite of finisher_api Godocs (#5618),525,525,Jinzhu,12bbde8,0,2022-09-09 03:16:41,2021-09-17 06:04:19
finisher_api.go,300a23f,Jinzhu,"Check rows.Close error, close #4891",541,541,,,1,2021-12-02 02:39:24,
finisher_api.go,5457fe8,Jinzhu,Test Transactions,555,556,,,0,2020-05-31 10:51:43,
finisher_api.go,eda2f02,Jinzhu,Add Distinct support,563,563,,,0,2020-06-05 11:19:12,
finisher_api.go,eda2f02,Jinzhu,Add Distinct support,557,562,,,0,2020-06-05 11:19:12,
finisher_api.go,22ff837,Jinzhu,Fix Pluck with Table only,564,564,,,1,2020-06-09 07:36:10,
finisher_api.go,22ff837,Jinzhu,Fix Pluck with Table only,572,572,,,1,2020-06-09 07:36:10,
finisher_api.go,1ef1f0b,Jinzhu,"Fix Count with complicated Select, close #3826",565,571,,,1,2020-12-06 06:30:42,
finisher_api.go,92c3ba9,Jinzhu,Fix create new db sessions in scopes,573,573,,,1,2021-05-17 07:36:07,
finisher_api.go,f931def,wjw1758548031,"clear code syntax (#5889)  * clear code syntax  * clear code syntax",386,390,,,0,2022-12-01 12:25:53,
finisher_api.go,5457fe8,Jinzhu,Test Transactions,574,575,,,0,2020-05-31 10:51:43,
finisher_api.go,5be642a,Jinzhu,Add ScanRows support,576,577,,,0,2020-05-26 15:13:05,
finisher_api.go,f29afdd,Bruce MacKenzie,Rewrite of finisher_api Godocs (#5618),551,551,kinggo,6864a24,0,2022-09-09 03:16:41,2021-09-27 14:11:29
finisher_api.go,5be642a,Jinzhu,Add ScanRows support,581,581,,,0,2020-05-26 15:13:05,
finisher_api.go,dbaa6b0,Jinzhu,"Fix Scan struct with primary key, close #3357",590,590,,,1,2020-09-02 08:14:26,
finisher_api.go,dbaa6b0,Jinzhu,"Fix Scan struct with primary key, close #3357",582,583,,,1,2020-09-02 08:14:26,
finisher_api.go,12bbde8,Jinzhu,Fix Scan with interface,584,589,,,1,2021-09-17 06:04:19,
finisher_api.go,02fb382,Jinzhu,"Support scan into int, string data types",578,580,,,0,2020-09-11 07:01:02,
finisher_api.go,5be642a,Jinzhu,Add ScanRows support,592,592,,,0,2020-05-26 15:13:05,
finisher_api.go,9d5b983,Jinzhu,Refactor builder,593,594,,,0,2020-01-30 11:47:00,
finisher_api.go,af3fbdc,Jinzhu,Improve returning support,591,591,,,0,2021-10-26 14:40:14,
finisher_api.go,342310f,Cr,fix(FindInBatches): throw err if pk not exists (#5868),552,554,Jinzhu,61b018c,1,2022-11-21 02:49:27,2021-09-16 03:17:54
finisher_api.go,a358835,Bruce MacKenzie,update Delete Godoc to describe soft delete behaviour (#5554),431,431,Jinzhu,83530ec,0,2022-08-11 03:38:04,2021-07-13 13:17:43
finisher_api.go,eae7362,Jinzhu,Fix return failed to begin transaction error when failed to start a transaction,615,615,,,1,2022-01-07 02:04:35,
finisher_api.go,0df42e9,kinggo,feat: add `Connection` to execute multiple commands in a single connection; (#4982),616,617,,,0,2022-01-07 01:49:56,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",622,622,,,0,2020-01-29 11:22:44,
finisher_api.go,0df42e9,kinggo,feat: add `Connection` to execute multiple commands in a single connection; (#4982),597,614,,,0,2022-01-07 01:49:56,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",623,623,,,0,2020-01-29 11:22:44,
finisher_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,621,621,,,0,2020-03-10 00:39:33,
finisher_api.go,468152d,Jinzhu,Add DisableNestedTransaction support,626,626,,,0,2020-12-16 11:33:35,
finisher_api.go,468152d,Jinzhu,Add DisableNestedTransaction support,632,634,,,0,2020-12-16 11:33:35,
finisher_api.go,7f75b12,Leo Sjöberg,"Generate unique savepoint names for nested transactions (#7174)  * Generate unique savepoint names  * Add a test for deeply nested wrapped transactions",627,628,Jinzhu,940358e,0,2024-09-14 12:58:29,2024-01-12 08:42:21
finisher_api.go,7dc255a,Jinzhu,Add SavePoint/RollbackTo/NestedTransaction,624,625,,,0,2020-06-19 10:30:04,
finisher_api.go,f29afdd,Bruce MacKenzie,Rewrite of finisher_api Godocs (#5618),429,430,Jinzhu,83530ec,0,2022-09-09 03:16:41,2021-07-13 13:17:43
finisher_api.go,7f75b12,Leo Sjöberg,"Generate unique savepoint names for nested transactions (#7174)  * Generate unique savepoint names  * Add a test for deeply nested wrapped transactions",635,635,Jinzhu,940358e,0,2024-09-14 12:58:29,2024-01-12 08:42:21
finisher_api.go,468152d,Jinzhu,Add DisableNestedTransaction support,636,638,,,0,2020-12-16 11:33:35,
finisher_api.go,f29afdd,Bruce MacKenzie,Rewrite of finisher_api Godocs (#5618),618,620,kinggo,0df42e9,0,2022-09-09 03:16:41,2022-01-07 01:49:56
finisher_api.go,7dc255a,Jinzhu,Add SavePoint/RollbackTo/NestedTransaction,645,652,,,0,2020-06-19 10:30:04,
finisher_api.go,7dc255a,Jinzhu,Add SavePoint/RollbackTo/NestedTransaction,656,656,,,0,2020-06-19 10:30:04,
finisher_api.go,7dc255a,Jinzhu,Add SavePoint/RollbackTo/NestedTransaction,640,641,,,0,2020-06-19 10:30:04,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",657,662,,,0,2020-01-29 11:22:44,
finisher_api.go,c8e7878,Jinzhu,Add PrepareStmt support,664,665,,,0,2020-06-05 03:40:24,
finisher_api.go,eae7362,Jinzhu,Fix return failed to begin transaction error when failed to start a transaction,642,644,,,1,2022-01-07 02:04:35,
finisher_api.go,2c1b04a,Jinzhu,"Fix failed to create second record in same transaction, close #3060",666,666,,,1,2020-06-19 04:38:03,
finisher_api.go,1a7ea98,black-06,"fix: count with group (#6157) (#6160)  * fix: count with group (#6157)  * add an easy-to-understand ut",498,498,Jinzhu,270e38c,1,2023-03-23 03:19:53,2021-11-29 06:23:10
finisher_api.go,f29afdd,Bruce MacKenzie,Rewrite of finisher_api Godocs (#5618),663,663,Bruce MacKenzie,a358835,0,2022-09-09 03:16:41,2022-08-11 03:38:04
finisher_api.go,c8e7878,Jinzhu,Add PrepareStmt support,668,668,,,0,2020-06-05 03:40:24,
finisher_api.go,5ccd76f,Jinzhu,Setup Transaction,675,675,,,0,2020-02-23 15:28:59,
finisher_api.go,c8e7878,Jinzhu,Add PrepareStmt support,670,674,,,0,2020-06-05 03:40:24,
finisher_api.go,eae7362,Jinzhu,Fix return failed to begin transaction error when failed to start a transaction,653,655,,,1,2022-01-07 02:04:35,
finisher_api.go,7496c3a,Cr,"fix: trx in hooks clone stmt (#5338)  * fix: trx in hooks  * chore: format by gofumpt",639,639,,,1,2022-05-17 06:13:41,
finisher_api.go,f29afdd,Bruce MacKenzie,Rewrite of finisher_api Godocs (#5618),692,692,Bruce MacKenzie,a358835,0,2022-09-09 03:16:41,2022-08-11 03:38:04
finisher_api.go,f29afdd,Bruce MacKenzie,Rewrite of finisher_api Godocs (#5618),595,596,kinggo,0df42e9,0,2022-09-09 03:16:41,2022-01-07 01:49:56
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",690,691,,,0,2020-01-29 11:22:44,
finisher_api.go,2a716e0,Jinzhu,"Avoid panic for invalid transaction, close #3271",694,694,,,0,2020-08-17 04:16:42,
finisher_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,693,693,,,0,2020-03-10 00:39:33,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",700,701,,,0,2020-01-29 11:22:44,
finisher_api.go,c8e7878,Jinzhu,Add PrepareStmt support,695,695,,,0,2020-06-05 03:40:24,
finisher_api.go,5ccd76f,Jinzhu,Setup Transaction,696,699,,,0,2020-02-23 15:28:59,
finisher_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,703,703,,,0,2020-03-10 00:39:33,
finisher_api.go,f3547e0,Gilad Weiss,"Inherit clone flag (NewDB) on transaction creation (#5012)  * Inherit clone flag (NewDB) on transaction creation  I find it very reassuring to know that after a finisher API, I get a clean db object for my next queries. If you look at the example in https://gorm.io/docs i’d see many queries running one after the other.. but in reality they wouldn’t work as the they are portrayed and that’s because in default mode NewDB is false and will make all the clauses stay even after a finisher API.  My solution is just to have the value of the clone flag in the “parent” db object, be injected to its children transactions.  * Fix typo",667,667,,,1,2022-02-20 00:33:12,
finisher_api.go,5ccd76f,Jinzhu,Setup Transaction,708,711,,,0,2020-02-23 15:28:59,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",712,713,,,0,2020-01-29 11:22:44,
finisher_api.go,eae7362,Jinzhu,Fix return failed to begin transaction error when failed to start a transaction,629,631,,,1,2022-01-07 02:04:35,
finisher_api.go,c8e7878,Jinzhu,Add PrepareStmt support,704,704,,,0,2020-06-05 03:40:24,
finisher_api.go,812bb20,wangliuyang,"fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements (#6220)  * test: add nested transaction and prepareStmt coexist test case  note: please test in the MySQL environment  Change-Id: I0db32adc5f74b0d443e98943d3b182236583b959 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements  1. SavetPoint SQL Statement not support in Prepared Statements  e.g. see mysql8.0 doc: https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html  Change-Id: I082012db9b140e8ec69764c633724665cc802692 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * revert(transaction_api): remove savepoint name pool,meaningless  Change-Id: I84aa9924fc54612005a81c83d66fdf8968ee56ad Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  ---------  Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: 王柳洋 <wangliuyang.520@bytedance.com>",716,725,201430098137,f5837de,1,2023-05-26 02:24:28,2023-05-17 02:15:41
finisher_api.go,7dc255a,Jinzhu,Add SavePoint/RollbackTo/NestedTransaction,714,715,,,0,2020-06-19 10:30:04,
finisher_api.go,4456df7,Jinzhu,Lint with golangci-lint,726,726,,,0,2020-07-16 03:27:12,
finisher_api.go,2a716e0,Jinzhu,"Avoid panic for invalid transaction, close #3271",705,707,,,0,2020-08-17 04:16:42,
finisher_api.go,7dc255a,Jinzhu,Add SavePoint/RollbackTo/NestedTransaction,731,738,,,0,2020-06-19 10:30:04,
finisher_api.go,7dc255a,Jinzhu,Add SavePoint/RollbackTo/NestedTransaction,754,759,,,0,2020-06-19 10:30:04,
finisher_api.go,812bb20,wangliuyang,"fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements (#6220)  * test: add nested transaction and prepareStmt coexist test case  note: please test in the MySQL environment  Change-Id: I0db32adc5f74b0d443e98943d3b182236583b959 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements  1. SavetPoint SQL Statement not support in Prepared Statements  e.g. see mysql8.0 doc: https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html  Change-Id: I082012db9b140e8ec69764c633724665cc802692 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * revert(transaction_api): remove savepoint name pool,meaningless  Change-Id: I84aa9924fc54612005a81c83d66fdf8968ee56ad Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  ---------  Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: 王柳洋 <wangliuyang.520@bytedance.com>",739,748,201430098137,f5837de,1,2023-05-26 02:24:28,2023-05-17 02:15:41
finisher_api.go,812bb20,wangliuyang,"fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements (#6220)  * test: add nested transaction and prepareStmt coexist test case  note: please test in the MySQL environment  Change-Id: I0db32adc5f74b0d443e98943d3b182236583b959 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements  1. SavetPoint SQL Statement not support in Prepared Statements  e.g. see mysql8.0 doc: https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html  Change-Id: I082012db9b140e8ec69764c633724665cc802692 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * revert(transaction_api): remove savepoint name pool,meaningless  Change-Id: I84aa9924fc54612005a81c83d66fdf8968ee56ad Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  ---------  Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: 王柳洋 <wangliuyang.520@bytedance.com>",750,753,201430098137,f5837de,1,2023-05-26 02:24:28,2023-05-17 02:15:41
finisher_api.go,812bb20,wangliuyang,"fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements (#6220)  * test: add nested transaction and prepareStmt coexist test case  note: please test in the MySQL environment  Change-Id: I0db32adc5f74b0d443e98943d3b182236583b959 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements  1. SavetPoint SQL Statement not support in Prepared Statements  e.g. see mysql8.0 doc: https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html  Change-Id: I082012db9b140e8ec69764c633724665cc802692 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * revert(transaction_api): remove savepoint name pool,meaningless  Change-Id: I84aa9924fc54612005a81c83d66fdf8968ee56ad Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  ---------  Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: 王柳洋 <wangliuyang.520@bytedance.com>",727,730,201430098137,f5837de,1,2023-05-26 02:24:28,2023-05-17 02:15:41
finisher_api.go,4456df7,Jinzhu,Lint with golangci-lint,749,749,,,0,2020-07-16 03:27:12,
finisher_api.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,761,761,,,0,2020-03-10 00:39:33,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",762,762,,,0,2020-01-29 11:22:44,
finisher_api.go,92c3ba9,Jinzhu,Fix create new db sessions in scopes,771,771,,,1,2021-05-17 07:36:07,
finisher_api.go,9fd73ae,Jinzhu,"Revert ""use callback to handle transaction""  This reverts commit 93f28bc116526ba4decdd969a7b2b0b245ad70f1.",676,689,,,0,2022-07-07 07:06:48,
finisher_api.go,f29afdd,Bruce MacKenzie,Rewrite of finisher_api Godocs (#5618),702,702,,,0,2022-09-09 03:16:41,
finisher_api.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",772,772,,,0,2020-01-29 11:22:44,
finisher_api.go,bba569a,Jinzhu,Add NamedArg support,764,770,,,0,2020-07-10 04:28:24,
finisher_api.go,6d58b62,Jinzhu,Add sqlite migration tests,763,763,,,0,2020-02-22 12:57:29,
finisher_api.go,9fd73ae,Jinzhu,"Revert ""use callback to handle transaction""  This reverts commit 93f28bc116526ba4decdd969a7b2b0b245ad70f1.",669,669,,,0,2022-07-07 07:06:48,
finisher_api.go,f29afdd,Bruce MacKenzie,Rewrite of finisher_api Godocs (#5618),760,760,,,0,2022-09-09 03:16:41,
schema/callbacks_test.go,e2a360b,Jinzhu,Add Before/After callbacks,13,13,,,0,2020-02-23 13:22:35,
schema/callbacks_test.go,e2a360b,Jinzhu,Add Before/After callbacks,1,7,,,0,2020-02-23 13:22:35,
schema/callbacks_test.go,e2a360b,Jinzhu,Add Before/After callbacks,10,11,,,0,2020-02-23 13:22:35,
schema/callbacks_test.go,e2a360b,Jinzhu,Add Before/After callbacks,16,17,,,0,2020-02-23 13:22:35,
schema/callbacks_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),12,12,Jinzhu,e986371,0,2022-01-06 07:02:53,2020-06-02 01:18:01
schema/callbacks_test.go,befef0c,Jinzhu,Improve Hooks,18,19,Jinzhu,04adbaf,0,2020-05-31 16:12:20,2020-02-24 00:51:35
schema/callbacks_test.go,befef0c,Jinzhu,Improve Hooks,14,15,Jinzhu,04adbaf,0,2020-05-31 16:12:20,2020-02-24 00:51:35
schema/callbacks_test.go,e986371,Jinzhu,Rename package name,8,9,Jinzhu,befef0c,0,2020-06-02 01:18:01,2020-05-31 16:12:20
schema/callbacks_test.go,e2a360b,Jinzhu,Add Before/After callbacks,20,22,,,0,2020-02-23 13:22:35,
schema/callbacks_test.go,e2a360b,Jinzhu,Add Before/After callbacks,24,39,,,0,2020-02-23 13:22:35,
schema/callbacks_test.go,04adbaf,Jinzhu,Fix parse stmt ReflectValue,23,23,Jinzhu,e2a360b,1,2020-02-24 00:51:35,2020-02-23 13:22:35
migrator.go,8c92d96,Jinzhu,Fix to call Scopes with using Migrator,12,13,Jinzhu,e85b73e,1,2021-03-19 08:34:51,2021-03-19 05:44:25
migrator.go,8eae7e4,Jinzhu,Add migrator,1,3,,,0,2020-01-28 15:01:35,
migrator.go,d0764be,Jinzhu,Test migrate with comment and check created constraints,6,7,Jinzhu,aaf0725,0,2020-06-21 05:59:43,2020-06-08 09:21:26
migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",4,5,dino.ma,5e64ac7,1,2022-02-19 09:02:53,2021-11-13 06:03:33
migrator.go,8c92d96,Jinzhu,Fix to call Scopes with using Migrator,15,15,Jinzhu,e85b73e,1,2021-03-19 08:34:51,2021-03-19 05:44:25
migrator.go,8eae7e4,Jinzhu,Add migrator,8,9,,,0,2020-01-28 15:01:35,
migrator.go,9123600,Jinzhu,"Fix Scopes with Migrator, close #4145",14,14,Jinzhu,26504f5,1,2021-03-11 02:36:14,2020-11-17 08:28:37
migrator.go,62dcd78,Jinzhu,Add Migrator,10,11,Jinzhu,8eae7e4,0,2020-02-20 15:04:03,2020-01-28 15:01:35
migrator.go,9123600,Jinzhu,"Fix Scopes with Migrator, close #4145",17,18,Jinzhu,26504f5,1,2021-03-11 02:36:14,2020-11-17 08:28:37
migrator.go,4b0da0e,black-06,"fix cond in scopes (#6152)  * fix cond in scopes  * replace quote  * fix execute scopes",16,16,black-06,a80707d,1,2023-04-11 04:01:23,2023-02-27 07:43:10
migrator.go,62dcd78,Jinzhu,Add Migrator,20,21,Jinzhu,8eae7e4,0,2020-02-20 15:04:03,2020-01-28 15:01:35
migrator.go,8c92d96,Jinzhu,Fix to call Scopes with using Migrator,19,19,Jinzhu,e85b73e,1,2021-03-19 08:34:51,2021-03-19 05:44:25
migrator.go,a80707d,black-06,"Create and drop view (#6097)  * create view  * add comment  * fix test  * check param and add comment",29,31,Cr,73bc53f,1,2023-02-27 07:43:10,2022-09-22 07:56:32
migrator.go,635dcc9,Michelle,"add gorm ColumnType interface, remove sql one (#3647)",35,36,Jinzhu,dbaa6b0,0,2020-10-21 10:35:33,2020-09-02 08:14:26
migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",37,40,dino.ma,5e64ac7,1,2022-02-19 09:02:53,2021-11-13 06:03:33
migrator.go,8eae7e4,Jinzhu,Add migrator,32,33,,,0,2020-01-28 15:01:35,
migrator.go,8eae7e4,Jinzhu,Add migrator,27,28,,,0,2020-01-28 15:01:35,
migrator.go,1305f63,qqxhb,"feat: add method GetIndexes (#5436)  * feat: add method GetIndexes  * feat: add default impl for Index interface  * feat: fmt",50,58,Jinzhu,0af95f5,0,2022-06-17 03:00:57,2022-02-19 09:02:53
migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",44,47,dino.ma,5e64ac7,1,2022-02-19 09:02:53,2021-11-13 06:03:33
migrator.go,e61b98d,John Mai,"feat: migrator support table comment (#6225)  * feat: migrator support table comment  * feat: migrator support tableType.It like ColumnTypes  * Avoid updating the go.mod file.  * Update tests_all.sh  * Update migrator.go  * remove Catalog() & Engine() methods.  * remove CatalogValue & EngineValue.  ---------  Co-authored-by: Jinzhu <wosmvp@gmail.com>",59,66,black-06,4b0da0e,0,2023-05-05 07:58:27,2023-04-11 04:01:23
migrator.go,8eae7e4,Jinzhu,Add migrator,68,71,,,0,2020-01-28 15:01:35,
migrator.go,635dcc9,Michelle,"add gorm ColumnType interface, remove sql one (#3647)",48,49,Jinzhu,dbaa6b0,0,2020-10-21 10:35:33,2020-09-02 08:14:26
migrator.go,62dcd78,Jinzhu,Add Migrator,72,73,,,0,2020-02-20 15:04:03,
migrator.go,73bc53f,Cr,"feat: migrator support type aliases (#5627)  * feat: migrator support type aliases  * perf: check type",75,75,Jinzhu,8c92d96,0,2022-09-22 07:56:32,2021-03-19 08:34:51
migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",67,67,Jinzhu,8c92d96,1,2022-02-19 09:02:53,2021-03-19 08:34:51
migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,80,80,,,0,2020-02-22 09:53:57,
migrator.go,8eae7e4,Jinzhu,Add migrator,77,79,,,0,2020-01-28 15:01:35,
migrator.go,635dcc9,Michelle,"add gorm ColumnType interface, remove sql one (#3647)",41,43,Jinzhu,aaf0725,0,2020-10-21 10:35:33,2020-06-08 09:21:26
migrator.go,62dcd78,Jinzhu,Add Migrator,76,76,,,0,2020-02-20 15:04:03,
migrator.go,aaf0725,Jinzhu,Refactor for performance,22,26,Jinzhu,8eae7e4,0,2020-06-08 09:21:26,2020-01-28 15:01:35
migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",34,34,,,1,2022-02-19 09:02:53,
migrator.go,8eae7e4,Jinzhu,Add migrator,84,88,,,0,2020-01-28 15:01:35,
migrator.go,9fea15a,black-06,"feat: add MigrateColumnUnique (#6640)  * feat: add MigrateColumnUnique  * feat: define new methods  * delete debug in test",90,91,John Mai,e61b98d,0,2023-10-30 09:15:49,2023-05-05 07:58:27
migrator.go,0801cdf,Jinzhu,Almost finish Migrator,92,92,,,0,2020-02-22 05:11:54,
migrator.go,8eae7e4,Jinzhu,Add migrator,93,93,,,0,2020-01-28 15:01:35,
migrator.go,8eae7e4,Jinzhu,Add migrator,95,102,,,0,2020-01-28 15:01:35,
migrator.go,d811795,Jinzhu,Add tests for Tables,81,81,,,0,2020-05-31 02:24:49,
migrator.go,e61b98d,John Mai,"feat: migrator support table comment (#6225)  * feat: migrator support table comment  * feat: migrator support tableType.It like ColumnTypes  * Avoid updating the go.mod file.  * Update tests_all.sh  * Update migrator.go  * remove Catalog() & Engine() methods.  * remove CatalogValue & EngineValue.  ---------  Co-authored-by: Jinzhu <wosmvp@gmail.com>",83,83,black-06,4b0da0e,0,2023-05-05 07:58:27,2023-04-11 04:01:23
migrator.go,8eae7e4,Jinzhu,Add migrator,104,107,,,0,2020-01-28 15:01:35,
migrator.go,5e64ac7,dino.ma,"feat(migrator,migrator/migrator.go,tests/migrate_test.go) : Get multiple data tables for migrator. (#4841)  * feat(migrator,migrator/migrator.go,tests/migrate_test.go) : Get multiple data tables for migrator.  * feat(migrator.go and migrator/migrator.go) : remove Table Struct replace with []string  * fix(migrator)  : Return all data tables  * Update migrator.go  * fix(migrator/migrator.go):remove var sql  * feat(migrate_test.go/go.mod):update sqlserver,sqlite,postgres,pq version and add getTables test  * fix(migrate_test.go):change GetTables Method Test,use intersection  Co-authored-by: dino.ma <mashengjie03@baidu.com>",82,82,Jinzhu,8eae7e4,1,2021-11-13 06:03:33,2020-01-28 15:01:35
migrator.go,0801cdf,Jinzhu,Almost finish Migrator,103,103,,,0,2020-02-22 05:11:54,
migrator.go,8eae7e4,Jinzhu,Add migrator,111,111,,,0,2020-01-28 15:01:35,
migrator.go,62dcd78,Jinzhu,Add Migrator,108,108,,,0,2020-02-20 15:04:03,
migrator.go,d0764be,Jinzhu,Test migrate with comment and check created constraints,74,74,,,0,2020-06-21 05:59:43,
migrator.go,8eae7e4,Jinzhu,Add migrator,109,109,,,0,2020-01-28 15:01:35,
migrator.go,635dcc9,Michelle,"add gorm ColumnType interface, remove sql one (#3647)",89,89,,,0,2020-10-21 10:35:33,
migrator.go,635dcc9,Michelle,"add gorm ColumnType interface, remove sql one (#3647)",94,94,,,0,2020-10-21 10:35:33,
migrator.go,1305f63,qqxhb,"feat: add method GetIndexes (#5436)  * feat: add method GetIndexes  * feat: add default impl for Index interface  * feat: fmt",110,110,,,0,2022-06-17 03:00:57,
schema/constraint.go,0be4817,Jinzhu,Finish CreateConstraint,8,9,,,0,2020-02-22 03:15:51,
schema/constraint.go,0be4817,Jinzhu,Finish CreateConstraint,1,5,,,0,2020-02-22 03:15:51,
schema/constraint.go,e80853e,heige,optimization check for ParseCheckConstraints (#4063),12,12,,,0,2021-02-07 02:12:13,
schema/constraint.go,303de6e,jessetang,"chore: optimize `regEnLetterAndMidline` regular (#6908)  * chore: optimize regular  * fix",11,11,Jinzhu,281f3e3,1,2024-03-18 07:33:54,2024-03-18 03:32:30
schema/constraint.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),10,10,,,0,2022-01-06 07:02:53,
schema/constraint.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",13,13,,,1,2024-02-04 07:49:19,
schema/constraint.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",6,7,,,1,2024-02-04 07:49:19,
schema/constraint.go,0be4817,Jinzhu,Finish CreateConstraint,14,18,,,0,2020-02-22 03:15:51,
schema/constraint.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",26,27,,,1,2024-02-04 07:49:19,
schema/constraint.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",19,24,,,1,2024-02-04 07:49:19,
schema/constraint.go,02cb405,heige,"Optimize parse constraint (#4153)  * for Config.cacheStore store PreparedStmtDB key  * invalid db error and value and invalid value length error (#4151)  * support named params in Select API  (#4142)  * adds support for named arguments in select  * changes clause identifies and adds test  * optimize match english letters and midline  Co-authored-by: Ratan Phayade <ratanphayade@users.noreply.github.com>",31,31,,,1,2021-03-08 02:21:33,
schema/constraint.go,0be4817,Jinzhu,Finish CreateConstraint,25,25,,,0,2020-02-22 03:15:51,
schema/constraint.go,0be4817,Jinzhu,Finish CreateConstraint,28,30,,,0,2020-02-22 03:15:51,
schema/constraint.go,0be4817,Jinzhu,Finish CreateConstraint,33,33,,,0,2020-02-22 03:15:51,
schema/constraint.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",34,36,,,0,2020-02-22 11:41:01,
schema/constraint.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",32,32,,,1,2024-02-04 07:49:19,
schema/constraint.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",38,38,,,1,2024-02-04 07:49:19,
schema/constraint.go,0be4817,Jinzhu,Finish CreateConstraint,39,43,,,0,2020-02-22 03:15:51,
schema/constraint.go,0be4817,Jinzhu,Finish CreateConstraint,37,37,,,0,2020-02-22 03:15:51,
schema/constraint.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",44,66,,,1,2024-02-04 07:49:19,
schema/constraint_test.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",1,7,,,0,2020-02-22 11:41:01,
schema/constraint_test.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",20,23,,,0,2020-02-22 11:41:01,
schema/constraint_test.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",25,56,,,0,2020-02-22 11:41:01,
schema/constraint_test.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",10,18,,,0,2020-02-22 11:41:01,
schema/constraint_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",9,9,Jinzhu,e986371,1,2024-02-04 07:49:19,2020-06-02 01:18:01
schema/constraint_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",24,24,Jinzhu,e986371,1,2024-02-04 07:49:19,2020-06-02 01:18:01
schema/constraint_test.go,04adbaf,Jinzhu,Fix parse stmt ReflectValue,19,19,,,1,2020-02-24 00:51:35,
schema/constraint_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",57,84,Jinzhu,e986371,1,2024-02-04 07:49:19,2020-06-02 01:18:01
schema/constraint_test.go,e986371,Jinzhu,Rename package name,8,8,,,0,2020-06-02 01:18:01,
callbacks/preload.go,b549f9b,Jinzhu,Implement preload support,5,5,Jinzhu,41697d5,0,2020-05-14 04:19:12,2020-05-07 02:03:48
callbacks/preload.go,41697d5,Jinzhu,Handle preload,1,3,,,0,2020-05-07 02:03:48,
callbacks/preload.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",7,7,Jinzhu,f92e674,1,2023-04-11 05:10:38,2022-03-23 09:24:25
callbacks/preload.go,52b72d7,Jinzhu,"Add error explanations when preloading assocations w/o foreign fields, close #4356",4,4,Jinzhu,b13732c,1,2021-07-13 13:00:13,2021-07-13 12:23:05
callbacks/preload.go,b549f9b,Jinzhu,Implement preload support,8,8,Jinzhu,41697d5,0,2020-05-14 04:19:12,2020-05-07 02:03:48
callbacks/preload.go,418ee3f,black-06,"fix: preload shouldn't overwrite the value of join (#6771)  * fix: preload shouldn't overwrite the value of join  * fix lint  * fix: join may automatically add nested query",6,6,black-06,828e22b,1,2024-01-29 03:34:57,2023-04-11 05:10:38
callbacks/preload.go,e986371,Jinzhu,Rename package name,9,12,Jinzhu,b71171d,0,2020-06-02 01:18:01,2020-06-01 17:34:00
callbacks/preload.go,41697d5,Jinzhu,Handle preload,13,14,,,0,2020-05-07 02:03:48,
callbacks/preload.go,9a61ef2,yetone,fix: duplicated preload (#6948),78,78,black-06,e4e23d2,1,2024-04-15 03:20:20,2024-03-09 13:27:19
callbacks/preload.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",15,77,Jinzhu,f92e674,1,2023-04-11 05:10:38,2022-03-23 09:24:25
callbacks/preload.go,418ee3f,black-06,"fix: preload shouldn't overwrite the value of join (#6771)  * fix: preload shouldn't overwrite the value of join  * fix lint  * fix: join may automatically add nested query",86,114,black-06,828e22b,1,2024-01-29 03:34:57,2023-04-11 05:10:38
callbacks/preload.go,418ee3f,black-06,"fix: preload shouldn't overwrite the value of join (#6771)  * fix: preload shouldn't overwrite the value of join  * fix lint  * fix: join may automatically add nested query",123,123,black-06,828e22b,1,2024-01-29 03:34:57,2023-04-11 05:10:38
callbacks/preload.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",79,85,Jinzhu,f92e674,1,2023-04-11 05:10:38,2022-03-23 09:24:25
callbacks/preload.go,418ee3f,black-06,"fix: preload shouldn't overwrite the value of join (#6771)  * fix: preload shouldn't overwrite the value of join  * fix lint  * fix: join may automatically add nested query",116,119,black-06,828e22b,1,2024-01-29 03:34:57,2023-04-11 05:10:38
callbacks/preload.go,85299bf,Cr,"perf: merge nested preload query when using join (#6990)  * pref: merge nest preload query  * fix: preload test",126,127,yetone,9a61ef2,1,2024-04-25 12:21:03,2024-04-15 03:20:20
callbacks/preload.go,e4e23d2,black-06,fix: nested preload with join panic when find (#6877),124,125,black-06,418ee3f,1,2024-03-09 13:27:19,2024-01-29 03:34:57
callbacks/preload.go,85299bf,Cr,"perf: merge nested preload query when using join (#6990)  * pref: merge nest preload query  * fix: preload test",132,132,yetone,9a61ef2,1,2024-04-25 12:21:03,2024-04-15 03:20:20
callbacks/preload.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",115,115,Jinzhu,39d84cb,1,2023-04-11 05:10:38,2022-02-19 09:02:53
callbacks/preload.go,85299bf,Cr,"perf: merge nested preload query when using join (#6990)  * pref: merge nest preload query  * fix: preload test",128,130,yetone,9a61ef2,1,2024-04-25 12:21:03,2024-04-15 03:20:20
callbacks/preload.go,05167fd,Emilien,fix: use reflect.Append when preloading nested associations (#7014)  Co-authored-by: Emilien Kofman <emilien.kofman@miimosa.com>,133,136,Nico Schäfer,3fe7fcf,1,2024-06-12 10:52:33,2024-06-12 10:00:47
callbacks/preload.go,85299bf,Cr,"perf: merge nested preload query when using join (#6990)  * pref: merge nest preload query  * fix: preload test",137,139,yetone,9a61ef2,1,2024-04-25 12:21:03,2024-04-15 03:20:20
callbacks/preload.go,05167fd,Emilien,fix: use reflect.Append when preloading nested associations (#7014)  Co-authored-by: Emilien Kofman <emilien.kofman@miimosa.com>,131,131,Nico Schäfer,3fe7fcf,1,2024-06-12 10:52:33,2024-06-12 10:00:47
callbacks/preload.go,e4e23d2,black-06,fix: nested preload with join panic when find (#6877),140,144,black-06,418ee3f,1,2024-03-09 13:27:19,2024-01-29 03:34:57
callbacks/preload.go,418ee3f,black-06,"fix: preload shouldn't overwrite the value of join (#6771)  * fix: preload shouldn't overwrite the value of join  * fix lint  * fix: join may automatically add nested query",153,160,black-06,828e22b,1,2024-01-29 03:34:57,2023-04-11 05:10:38
callbacks/preload.go,3fe7fcf,Nico Schäfer,"fix: `unsupported data` on nested joins with preloads (#6957)  * fix: `unsupported data` on nested joins with preloads  * Add test case for pointer join with nested prelaods  * Fix tests",145,145,Cr,85299bf,1,2024-06-12 10:00:47,2024-04-25 12:21:03
callbacks/preload.go,e4e23d2,black-06,fix: nested preload with join panic when find (#6877),146,152,black-06,828e22b,1,2024-03-09 13:27:19,2023-04-11 05:10:38
callbacks/preload.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",161,162,Jinzhu,39d84cb,1,2023-04-11 05:10:38,2022-02-19 09:02:53
callbacks/preload.go,418ee3f,black-06,"fix: preload shouldn't overwrite the value of join (#6771)  * fix: preload shouldn't overwrite the value of join  * fix lint  * fix: join may automatically add nested query",169,184,Jinzhu,39d84cb,1,2024-01-29 03:34:57,2022-02-19 09:02:53
callbacks/preload.go,b549f9b,Jinzhu,Implement preload support,186,186,Jinzhu,41697d5,0,2020-05-14 04:19:12,2020-05-07 02:03:48
callbacks/preload.go,418ee3f,black-06,"fix: preload shouldn't overwrite the value of join (#6771)  * fix: preload shouldn't overwrite the value of join  * fix lint  * fix: join may automatically add nested query",163,163,Jinzhu,39d84cb,1,2024-01-29 03:34:57,2022-02-19 09:02:53
callbacks/preload.go,b549f9b,Jinzhu,Implement preload support,188,192,Jinzhu,41697d5,0,2020-05-14 04:19:12,2020-05-07 02:03:48
callbacks/preload.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",164,168,Jinzhu,39d84cb,1,2023-04-11 05:10:38,2022-02-19 09:02:53
callbacks/preload.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",120,122,Sivchari,adf85d5,1,2023-04-11 05:10:38,2021-03-04 11:44:15
callbacks/preload.go,b549f9b,Jinzhu,Implement preload support,194,195,Jinzhu,41697d5,0,2020-05-14 04:19:12,2020-05-07 02:03:48
callbacks/preload.go,b71171d,Jinzhu,Add more preload tests,193,193,,,0,2020-06-01 17:34:00,
callbacks/preload.go,b549f9b,Jinzhu,Implement preload support,196,196,Jinzhu,41697d5,0,2020-05-14 04:19:12,2020-05-07 02:03:48
callbacks/preload.go,b549f9b,Jinzhu,Implement preload support,203,208,,,0,2020-05-14 04:19:12,
callbacks/preload.go,aa959ec,Jinzhu,Test NamedPolymorphic,209,209,,,0,2020-05-31 06:41:45,
callbacks/preload.go,b549f9b,Jinzhu,Implement preload support,210,216,,,0,2020-05-14 04:19:12,
callbacks/preload.go,5ec4fee,Jinzhu,Don't preload if foreign keys zero,218,218,,,0,2020-05-23 13:09:03,
callbacks/preload.go,5ec4fee,Jinzhu,Don't preload if foreign keys zero,220,220,,,0,2020-05-23 13:09:03,
callbacks/preload.go,59365b7,Jinzhu,Refacotr Preload,221,222,,,0,2020-05-18 05:07:11,
callbacks/preload.go,b549f9b,Jinzhu,Implement preload support,227,228,,,0,2020-05-14 04:19:12,
callbacks/preload.go,5431da8,chenrui,fix: preload panic when model and dest different close #5130  commit e8307b5ef5273519a32cd8e4fd29250d1c277f6e Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 13:37:22 2022 +0800      Refactor #5130  commit 40cbba49f374c9bae54f80daee16697ae45e905b Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:36:56 2022 +0800      test: fix test fail  commit 66d3f078291102a30532b6a9d97c757228a9b543 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:29:09 2022 +0800      test: drop table and auto migrate  commit 7cbf019a930019476a97ac7ac0f5fc186e8d5b42 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 15:27:45 2022 +0800      fix: preload panic when model and dest different,185,185,,,1,2022-03-18 05:38:46,
callbacks/preload.go,76b8e78,Jinzhu,Add multi primary keys test,229,230,,,0,2020-06-01 00:13:16,
callbacks/preload.go,adf85d5,Sivchari,"change the method of initializing slice (#4097)  * change the method of initializing slice and fixed the length to be specified as 0  * keep the association.go code in the var group  * keep the association.go code in the var group  * change to initializing in var group",197,202,,,1,2021-03-04 11:44:15,
callbacks/preload.go,b549f9b,Jinzhu,Implement preload support,231,231,,,0,2020-05-14 04:19:12,
callbacks/preload.go,5ec4fee,Jinzhu,Don't preload if foreign keys zero,233,233,,,0,2020-05-23 13:09:03,
callbacks/preload.go,5431da8,chenrui,fix: preload panic when model and dest different close #5130  commit e8307b5ef5273519a32cd8e4fd29250d1c277f6e Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 13:37:22 2022 +0800      Refactor #5130  commit 40cbba49f374c9bae54f80daee16697ae45e905b Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:36:56 2022 +0800      test: fix test fail  commit 66d3f078291102a30532b6a9d97c757228a9b543 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:29:09 2022 +0800      test: drop table and auto migrate  commit 7cbf019a930019476a97ac7ac0f5fc186e8d5b42 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 15:27:45 2022 +0800      fix: preload panic when model and dest different,187,187,,,1,2022-03-18 05:38:46,
callbacks/preload.go,b549f9b,Jinzhu,Implement preload support,235,236,,,0,2020-05-14 04:19:12,
callbacks/preload.go,5ec4fee,Jinzhu,Don't preload if foreign keys zero,237,237,,,0,2020-05-23 13:09:03,
callbacks/preload.go,7ebb320,Jinzhu,Allow customize join table's table in callback,223,223,,,0,2021-01-10 06:58:54,
callbacks/preload.go,b549f9b,Jinzhu,Implement preload support,239,241,,,0,2020-05-14 04:19:12,
callbacks/preload.go,5431da8,chenrui,fix: preload panic when model and dest different close #5130  commit e8307b5ef5273519a32cd8e4fd29250d1c277f6e Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 13:37:22 2022 +0800      Refactor #5130  commit 40cbba49f374c9bae54f80daee16697ae45e905b Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:36:56 2022 +0800      test: fix test fail  commit 66d3f078291102a30532b6a9d97c757228a9b543 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:29:09 2022 +0800      test: drop table and auto migrate  commit 7cbf019a930019476a97ac7ac0f5fc186e8d5b42 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 15:27:45 2022 +0800      fix: preload panic when model and dest different,217,217,,,1,2022-03-18 05:38:46,
callbacks/preload.go,b549f9b,Jinzhu,Implement preload support,244,246,,,0,2020-05-14 04:19:12,
callbacks/preload.go,b549f9b,Jinzhu,Implement preload support,248,254,,,0,2020-05-14 04:19:12,
callbacks/preload.go,5431da8,chenrui,fix: preload panic when model and dest different close #5130  commit e8307b5ef5273519a32cd8e4fd29250d1c277f6e Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 13:37:22 2022 +0800      Refactor #5130  commit 40cbba49f374c9bae54f80daee16697ae45e905b Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:36:56 2022 +0800      test: fix test fail  commit 66d3f078291102a30532b6a9d97c757228a9b543 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:29:09 2022 +0800      test: drop table and auto migrate  commit 7cbf019a930019476a97ac7ac0f5fc186e8d5b42 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 15:27:45 2022 +0800      fix: preload panic when model and dest different,224,226,,,1,2022-03-18 05:38:46,
callbacks/preload.go,b549f9b,Jinzhu,Implement preload support,256,262,,,0,2020-05-14 04:19:12,
callbacks/preload.go,aa959ec,Jinzhu,Test NamedPolymorphic,255,255,,,0,2020-05-31 06:41:45,
callbacks/preload.go,b71171d,Jinzhu,Add more preload tests,242,243,,,0,2020-06-01 17:34:00,
callbacks/preload.go,5ec4fee,Jinzhu,Don't preload if foreign keys zero,264,264,,,0,2020-05-23 13:09:03,
callbacks/preload.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",232,232,,,0,2021-11-29 01:33:20,
callbacks/preload.go,5ec4fee,Jinzhu,Don't preload if foreign keys zero,266,266,,,0,2020-05-23 13:09:03,
callbacks/preload.go,b549f9b,Jinzhu,Implement preload support,267,268,,,0,2020-05-14 04:19:12,
callbacks/preload.go,5431da8,chenrui,fix: preload panic when model and dest different close #5130  commit e8307b5ef5273519a32cd8e4fd29250d1c277f6e Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 13:37:22 2022 +0800      Refactor #5130  commit 40cbba49f374c9bae54f80daee16697ae45e905b Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:36:56 2022 +0800      test: fix test fail  commit 66d3f078291102a30532b6a9d97c757228a9b543 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:29:09 2022 +0800      test: drop table and auto migrate  commit 7cbf019a930019476a97ac7ac0f5fc186e8d5b42 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 15:27:45 2022 +0800      fix: preload panic when model and dest different,234,234,,,1,2022-03-18 05:38:46,
callbacks/preload.go,59365b7,Jinzhu,Refacotr Preload,274,274,,,0,2020-05-18 05:07:11,
callbacks/preload.go,5431da8,chenrui,fix: preload panic when model and dest different close #5130  commit e8307b5ef5273519a32cd8e4fd29250d1c277f6e Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 13:37:22 2022 +0800      Refactor #5130  commit 40cbba49f374c9bae54f80daee16697ae45e905b Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:36:56 2022 +0800      test: fix test fail  commit 66d3f078291102a30532b6a9d97c757228a9b543 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:29:09 2022 +0800      test: drop table and auto migrate  commit 7cbf019a930019476a97ac7ac0f5fc186e8d5b42 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 15:27:45 2022 +0800      fix: preload panic when model and dest different,247,247,,,1,2022-03-18 05:38:46,
callbacks/preload.go,b71171d,Jinzhu,Add more preload tests,276,276,,,0,2020-06-01 17:34:00,
callbacks/preload.go,3195ae1,Jinzhu,Allow override alias table in preload conditions,275,275,,,0,2020-08-25 10:59:19,
callbacks/preload.go,b71171d,Jinzhu,Add more preload tests,284,284,,,0,2020-06-01 17:34:00,
callbacks/preload.go,5431da8,chenrui,fix: preload panic when model and dest different close #5130  commit e8307b5ef5273519a32cd8e4fd29250d1c277f6e Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 13:37:22 2022 +0800      Refactor #5130  commit 40cbba49f374c9bae54f80daee16697ae45e905b Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:36:56 2022 +0800      test: fix test fail  commit 66d3f078291102a30532b6a9d97c757228a9b543 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:29:09 2022 +0800      test: drop table and auto migrate  commit 7cbf019a930019476a97ac7ac0f5fc186e8d5b42 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 15:27:45 2022 +0800      fix: preload panic when model and dest different,263,263,,,1,2022-03-18 05:38:46,
callbacks/preload.go,7f198ea,Jinzhu,"Refactor nested preloading associations, close #3970",269,273,,,0,2021-01-26 08:33:19,
callbacks/preload.go,b71171d,Jinzhu,Add more preload tests,285,285,,,0,2020-06-01 17:34:00,
callbacks/preload.go,5431da8,chenrui,fix: preload panic when model and dest different close #5130  commit e8307b5ef5273519a32cd8e4fd29250d1c277f6e Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 13:37:22 2022 +0800      Refactor #5130  commit 40cbba49f374c9bae54f80daee16697ae45e905b Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:36:56 2022 +0800      test: fix test fail  commit 66d3f078291102a30532b6a9d97c757228a9b543 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:29:09 2022 +0800      test: drop table and auto migrate  commit 7cbf019a930019476a97ac7ac0f5fc186e8d5b42 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 15:27:45 2022 +0800      fix: preload panic when model and dest different,219,219,,,1,2022-03-18 05:38:46,
callbacks/preload.go,b549f9b,Jinzhu,Implement preload support,290,290,,,0,2020-05-14 04:19:12,
callbacks/preload.go,76b8e78,Jinzhu,Add multi primary keys test,291,291,,,0,2020-06-01 00:13:16,
callbacks/preload.go,b13732c,Jinzhu,"Fix invalid preload SQL when no data found, close #4443",277,283,,,1,2021-07-13 12:23:05,
callbacks/preload.go,308d22b,Jinzhu,"Clean up associations before Preload, close #3345",293,295,,,0,2020-09-01 05:48:37,
callbacks/preload.go,5431da8,chenrui,fix: preload panic when model and dest different close #5130  commit e8307b5ef5273519a32cd8e4fd29250d1c277f6e Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 13:37:22 2022 +0800      Refactor #5130  commit 40cbba49f374c9bae54f80daee16697ae45e905b Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:36:56 2022 +0800      test: fix test fail  commit 66d3f078291102a30532b6a9d97c757228a9b543 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:29:09 2022 +0800      test: drop table and auto migrate  commit 7cbf019a930019476a97ac7ac0f5fc186e8d5b42 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 15:27:45 2022 +0800      fix: preload panic when model and dest different,238,238,,,1,2022-03-18 05:38:46,
callbacks/preload.go,b71171d,Jinzhu,Add more preload tests,292,292,,,0,2020-06-01 17:34:00,
callbacks/preload.go,b13732c,Jinzhu,"Fix invalid preload SQL when no data found, close #4443",289,289,,,1,2021-07-13 12:23:05,
callbacks/preload.go,d8ddccf,Jinzhu,"Don't marshal to null for associations after preloading, close #3395",296,297,,,0,2020-09-04 11:09:51,
callbacks/preload.go,d8ddccf,Jinzhu,"Don't marshal to null for associations after preloading, close #3395",299,299,,,0,2020-09-04 11:09:51,
callbacks/preload.go,308d22b,Jinzhu,"Clean up associations before Preload, close #3345",302,303,,,0,2020-09-01 05:48:37,
callbacks/preload.go,d8ddccf,Jinzhu,"Don't marshal to null for associations after preloading, close #3395",304,305,,,0,2020-09-04 11:09:51,
callbacks/preload.go,f92e674,Jinzhu,Handle field set value error,298,298,,,1,2022-03-23 09:24:25,
callbacks/preload.go,5431da8,chenrui,fix: preload panic when model and dest different close #5130  commit e8307b5ef5273519a32cd8e4fd29250d1c277f6e Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 13:37:22 2022 +0800      Refactor #5130  commit 40cbba49f374c9bae54f80daee16697ae45e905b Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:36:56 2022 +0800      test: fix test fail  commit 66d3f078291102a30532b6a9d97c757228a9b543 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:29:09 2022 +0800      test: drop table and auto migrate  commit 7cbf019a930019476a97ac7ac0f5fc186e8d5b42 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 15:27:45 2022 +0800      fix: preload panic when model and dest different,286,288,,,1,2022-03-18 05:38:46,
callbacks/preload.go,d8ddccf,Jinzhu,"Don't marshal to null for associations after preloading, close #3395",307,307,,,0,2020-09-04 11:09:51,
callbacks/preload.go,d8ddccf,Jinzhu,"Don't marshal to null for associations after preloading, close #3395",309,309,,,0,2020-09-04 11:09:51,
callbacks/preload.go,f92e674,Jinzhu,Handle field set value error,306,306,,,1,2022-03-23 09:24:25,
callbacks/preload.go,b549f9b,Jinzhu,Implement preload support,313,313,,,0,2020-05-14 04:19:12,
callbacks/preload.go,d8ddccf,Jinzhu,"Don't marshal to null for associations after preloading, close #3395",301,301,,,0,2020-09-04 11:09:51,
callbacks/preload.go,42aae57,Jinzhu,Test Preload for BelongsTo/HasOne/HasMany,315,315,,,0,2020-05-14 06:41:33,
callbacks/preload.go,b71171d,Jinzhu,Add more preload tests,314,314,,,0,2020-06-01 17:34:00,
callbacks/preload.go,b549f9b,Jinzhu,Implement preload support,317,318,,,0,2020-05-14 04:19:12,
callbacks/preload.go,308d22b,Jinzhu,"Clean up associations before Preload, close #3345",310,312,,,0,2020-09-01 05:48:37,
callbacks/preload.go,f92e674,Jinzhu,Handle field set value error,308,308,,,1,2022-03-23 09:24:25,
callbacks/preload.go,5431da8,chenrui,fix: preload panic when model and dest different close #5130  commit e8307b5ef5273519a32cd8e4fd29250d1c277f6e Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 13:37:22 2022 +0800      Refactor #5130  commit 40cbba49f374c9bae54f80daee16697ae45e905b Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:36:56 2022 +0800      test: fix test fail  commit 66d3f078291102a30532b6a9d97c757228a9b543 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:29:09 2022 +0800      test: drop table and auto migrate  commit 7cbf019a930019476a97ac7ac0f5fc186e8d5b42 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 15:27:45 2022 +0800      fix: preload panic when model and dest different,265,265,,,1,2022-03-18 05:38:46,
callbacks/preload.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",319,320,,,0,2021-11-04 05:45:44,
callbacks/preload.go,5431da8,chenrui,fix: preload panic when model and dest different close #5130  commit e8307b5ef5273519a32cd8e4fd29250d1c277f6e Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 13:37:22 2022 +0800      Refactor #5130  commit 40cbba49f374c9bae54f80daee16697ae45e905b Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:36:56 2022 +0800      test: fix test fail  commit 66d3f078291102a30532b6a9d97c757228a9b543 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:29:09 2022 +0800      test: drop table and auto migrate  commit 7cbf019a930019476a97ac7ac0f5fc186e8d5b42 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 15:27:45 2022 +0800      fix: preload panic when model and dest different,316,316,,,1,2022-03-18 05:38:46,
callbacks/preload.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",326,328,,,0,2021-11-04 05:45:44,
callbacks/preload.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",330,332,,,0,2021-11-04 05:45:44,
callbacks/preload.go,5431da8,chenrui,fix: preload panic when model and dest different close #5130  commit e8307b5ef5273519a32cd8e4fd29250d1c277f6e Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 13:37:22 2022 +0800      Refactor #5130  commit 40cbba49f374c9bae54f80daee16697ae45e905b Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:36:56 2022 +0800      test: fix test fail  commit 66d3f078291102a30532b6a9d97c757228a9b543 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:29:09 2022 +0800      test: drop table and auto migrate  commit 7cbf019a930019476a97ac7ac0f5fc186e8d5b42 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 15:27:45 2022 +0800      fix: preload panic when model and dest different,321,321,,,1,2022-03-18 05:38:46,
callbacks/preload.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",334,335,,,0,2021-11-04 05:45:44,
callbacks/preload.go,f92e674,Jinzhu,Handle field set value error,333,333,,,1,2022-03-23 09:24:25,
callbacks/preload.go,b71171d,Jinzhu,Add more preload tests,329,329,,,0,2020-06-01 17:34:00,
callbacks/preload.go,42aae57,Jinzhu,Test Preload for BelongsTo/HasOne/HasMany,339,339,,,0,2020-05-14 06:41:33,
callbacks/preload.go,b549f9b,Jinzhu,Implement preload support,340,342,,,0,2020-05-14 04:19:12,
callbacks/preload.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",337,337,,,0,2021-11-04 05:45:44,
callbacks/preload.go,41697d5,Jinzhu,Handle preload,345,345,,,0,2020-05-07 02:03:48,
callbacks/preload.go,f92e674,Jinzhu,Handle field set value error,336,336,,,1,2022-03-23 09:24:25,
callbacks/preload.go,f92e674,Jinzhu,Handle field set value error,338,338,,,1,2022-03-23 09:24:25,
callbacks/preload.go,f92e674,Jinzhu,Handle field set value error,300,300,,,1,2022-03-23 09:24:25,
callbacks/preload.go,4c8810a,heige,"Refactor if logic (#4683)  * adjust code for preload  * adjust code for Create",322,324,,,0,2021-11-04 05:45:44,
callbacks/preload.go,5431da8,chenrui,fix: preload panic when model and dest different close #5130  commit e8307b5ef5273519a32cd8e4fd29250d1c277f6e Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 13:37:22 2022 +0800      Refactor #5130  commit 40cbba49f374c9bae54f80daee16697ae45e905b Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:36:56 2022 +0800      test: fix test fail  commit 66d3f078291102a30532b6a9d97c757228a9b543 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:29:09 2022 +0800      test: drop table and auto migrate  commit 7cbf019a930019476a97ac7ac0f5fc186e8d5b42 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 15:27:45 2022 +0800      fix: preload panic when model and dest different,343,344,,,1,2022-03-18 05:38:46,
callbacks/preload.go,5431da8,chenrui,fix: preload panic when model and dest different close #5130  commit e8307b5ef5273519a32cd8e4fd29250d1c277f6e Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 13:37:22 2022 +0800      Refactor #5130  commit 40cbba49f374c9bae54f80daee16697ae45e905b Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:36:56 2022 +0800      test: fix test fail  commit 66d3f078291102a30532b6a9d97c757228a9b543 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:29:09 2022 +0800      test: drop table and auto migrate  commit 7cbf019a930019476a97ac7ac0f5fc186e8d5b42 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 15:27:45 2022 +0800      fix: preload panic when model and dest different,325,325,,,1,2022-03-18 05:38:46,
schema/index.go,ad41985,Jinzhu,Parse Indexes,1,3,,,0,2020-02-21 15:51:38,
schema/index.go,ea0b13f,Jinzhu,Refactor ParseTagSetting,11,15,Jinzhu,ad41985,0,2020-02-21 23:59:09,2020-02-21 15:51:38
schema/index.go,619cd33,Jinzhu,Add index priority supports,5,5,Jinzhu,2416eab,0,2020-07-08 09:59:40,2020-07-03 16:36:27
schema/index.go,4ef3af1,nowindexman,feat:Capitalize the priority field of IndexOption so that other systems can access this field from outside the package. (#7342),26,26,Bennett Amodio,f482f25,0,2025-01-12 10:16:48,2024-12-06 02:27:44
schema/index.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",16,17,Haibo,baf1afa,1,2024-02-04 07:49:19,2023-01-11 06:05:39
schema/index.go,ad41985,Jinzhu,Parse Indexes,18,25,,,0,2020-02-21 15:51:38,
schema/index.go,ad41985,Jinzhu,Parse Indexes,6,10,,,0,2020-02-21 15:51:38,
schema/index.go,0211ac9,Chiung-Ming Huang,"index: add composite id (#5269)  * index: add composite id  * index: add test cases of composite id  * index: improve the comments for the test cases of composite id",4,4,labulakalia,61b4c31,0,2022-04-25 03:39:23,2022-03-14 13:47:59
schema/index.go,ad41985,Jinzhu,Parse Indexes,27,29,,,0,2020-02-21 15:51:38,
schema/index.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",30,32,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index.go,ad41985,Jinzhu,Parse Indexes,48,51,,,0,2020-02-21 15:51:38,
schema/index.go,ad41985,Jinzhu,Parse Indexes,33,33,,,0,2020-02-21 15:51:38,
schema/index.go,0211ac9,Chiung-Ming Huang,"index: add composite id (#5269)  * index: add composite id  * index: add test cases of composite id  * index: improve the comments for the test cases of composite id",36,41,labulakalia,61b4c31,0,2022-04-25 03:39:23,2022-03-14 13:47:59
schema/index.go,ea0b13f,Jinzhu,Refactor ParseTagSetting,52,60,Jinzhu,ad41985,0,2020-02-21 23:59:09,2020-02-21 15:51:38
schema/index.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",42,47,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index.go,ad41985,Jinzhu,Parse Indexes,65,65,,,0,2020-02-21 15:51:38,
schema/index.go,d39bdc3,Jinzhu,Fix create index,34,34,Jinzhu,ad41985,1,2020-04-02 23:57:52,2020-02-21 15:51:38
schema/index.go,4ef3af1,nowindexman,feat:Capitalize the priority field of IndexOption so that other systems can access this field from outside the package. (#7342),67,67,Bennett Amodio,f482f25,0,2025-01-12 10:16:48,2024-12-06 02:27:44
schema/index.go,619cd33,Jinzhu,Add index priority supports,64,64,Jinzhu,7c0de91,0,2020-07-08 09:59:40,2020-05-30 14:43:41
schema/index.go,ad41985,Jinzhu,Parse Indexes,69,71,,,0,2020-02-21 15:51:38,
schema/index.go,baf1afa,Haibo,fix(schema): field is only unique when there is one unique index (#5974),75,76,Jinzhu,3d91802,1,2023-01-11 06:05:39,2023-01-02 13:06:04
schema/index.go,619cd33,Jinzhu,Add index priority supports,68,68,Jinzhu,7c0de91,0,2020-07-08 09:59:40,2020-05-30 14:43:41
schema/index.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",74,74,Jinzhu,3d91802,1,2024-02-04 07:49:19,2023-01-02 13:06:04
schema/index.go,baf1afa,Haibo,fix(schema): field is only unique when there is one unique index (#5974),72,73,Jinzhu,3d91802,1,2023-01-11 06:05:39,2023-01-02 13:06:04
schema/index.go,2416eab,Jinzhu,Change unique_idnex to UniqueIndex,35,35,Jinzhu,ad41985,0,2020-07-03 16:36:27,2020-02-21 15:51:38
schema/index.go,619cd33,Jinzhu,Add index priority supports,66,66,Jinzhu,7c0de91,0,2020-07-08 09:59:40,2020-05-30 14:43:41
schema/index.go,ad41985,Jinzhu,Parse Indexes,77,79,,,0,2020-02-21 15:51:38,
schema/index.go,7c0de91,Jinzhu,Test Migrate Indexes,80,80,Jinzhu,ad41985,0,2020-05-30 14:43:41,2020-02-21 15:51:38
schema/index.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",84,87,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",90,90,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index.go,49bbaa6,Ivan Ryabov,use map look-up for indexes (#7242),83,83,black-06,46816ad,0,2024-11-14 09:41:43,2024-02-04 07:49:19
schema/index.go,7c0de91,Jinzhu,Test Migrate Indexes,93,98,Jinzhu,ad41985,0,2020-05-30 14:43:41,2020-02-21 15:51:38
schema/index.go,0211ac9,Chiung-Ming Huang,"index: add composite id (#5269)  * index: add composite id  * index: add test cases of composite id  * index: improve the comments for the test cases of composite id",99,99,kinggo,b47cf57,0,2022-04-25 03:39:23,2022-01-06 07:02:53
schema/index.go,ad41985,Jinzhu,Parse Indexes,100,103,,,0,2020-02-21 15:51:38,
schema/index.go,d0764be,Jinzhu,Test migrate with comment and check created constraints,91,92,Jinzhu,ea0b13f,0,2020-06-21 05:59:43,2020-02-21 23:59:09
schema/index.go,d0764be,Jinzhu,Test migrate with comment and check created constraints,88,89,Jinzhu,ea0b13f,0,2020-06-21 05:59:43,2020-02-21 23:59:09
schema/index.go,5fee5b1,Jinzhu,Add option tag support for index,61,63,Jinzhu,d39bdc3,0,2020-10-21 12:18:21,2020-04-02 23:57:52
schema/index.go,ad41985,Jinzhu,Parse Indexes,105,105,,,0,2020-02-21 15:51:38,
schema/index.go,ad41985,Jinzhu,Parse Indexes,112,113,,,0,2020-02-21 15:51:38,
schema/index.go,ad41985,Jinzhu,Parse Indexes,119,119,,,0,2020-02-21 15:51:38,
schema/index.go,0211ac9,Chiung-Ming Huang,"index: add composite id (#5269)  * index: add composite id  * index: add test cases of composite id  * index: improve the comments for the test cases of composite id",120,124,labulakalia,61b4c31,0,2022-04-25 03:39:23,2022-03-14 13:47:59
schema/index.go,d0764be,Jinzhu,Test migrate with comment and check created constraints,81,82,Jinzhu,ad41985,0,2020-06-21 05:59:43,2020-02-21 15:51:38
schema/index.go,42bd4f6,Jinzhu,use golangci replace reviewdog (#7426)  * use golangci replace reviewdog  * Update golangci config,125,125,nowindexman,4ef3af1,0,2025-04-17 03:55:13,2025-01-12 10:16:48
schema/index.go,d39bdc3,Jinzhu,Fix create index,114,117,,,1,2020-04-02 23:57:52,
schema/index.go,2416eab,Jinzhu,Change unique_idnex to UniqueIndex,104,104,Jinzhu,ad41985,0,2020-07-03 16:36:27,2020-02-21 15:51:38
schema/index.go,49bbaa6,Ivan Ryabov,use map look-up for indexes (#7242),118,118,black-06,46816ad,0,2024-11-14 09:41:43,2024-02-04 07:49:19
schema/index.go,ad41985,Jinzhu,Parse Indexes,134,135,,,0,2020-02-21 15:51:38,
schema/index.go,ad41985,Jinzhu,Parse Indexes,137,139,,,0,2020-02-21 15:51:38,
schema/index.go,ad41985,Jinzhu,Parse Indexes,145,145,,,0,2020-02-21 15:51:38,
schema/index.go,0211ac9,Chiung-Ming Huang,"index: add composite id (#5269)  * index: add composite id  * index: add test cases of composite id  * index: improve the comments for the test cases of composite id",126,133,labulakalia,61b4c31,0,2022-04-25 03:39:23,2022-03-14 13:47:59
schema/index.go,ea0b13f,Jinzhu,Refactor ParseTagSetting,146,150,,,0,2020-02-21 23:59:09,
schema/index.go,ad41985,Jinzhu,Parse Indexes,157,157,,,0,2020-02-21 15:51:38,
schema/index.go,ad41985,Jinzhu,Parse Indexes,159,164,,,0,2020-02-21 15:51:38,
schema/index.go,ad41985,Jinzhu,Parse Indexes,152,156,,,0,2020-02-21 15:51:38,
schema/index.go,ad41985,Jinzhu,Parse Indexes,166,167,,,0,2020-02-21 15:51:38,
schema/index.go,5fee5b1,Jinzhu,Add option tag support for index,151,151,,,0,2020-10-21 12:18:21,
schema/index.go,4ef3af1,nowindexman,feat:Capitalize the priority field of IndexOption so that other systems can access this field from outside the package. (#7342),158,158,Bennett Amodio,f482f25,0,2025-01-12 10:16:48,2024-12-06 02:27:44
schema/index.go,61b4c31,labulakalia,"fix when index name is ""type"", parseFieldIndexes will set index TYPE is ""TYPE"" (#5155)  * fix index name is type, parseFieldIndexes will set index TYPE is ""TYPE""  * check TYPE empty",106,111,Jinzhu,d0764be,1,2022-03-14 13:47:59,2020-06-21 05:59:43
schema/index.go,2416eab,Jinzhu,Change unique_idnex to UniqueIndex,136,136,,,0,2020-07-03 16:36:27,
schema/index.go,619cd33,Jinzhu,Add index priority supports,140,144,,,0,2020-07-08 09:59:40,
schema/index.go,0211ac9,Chiung-Ming Huang,"index: add composite id (#5269)  * index: add composite id  * index: add test cases of composite id  * index: improve the comments for the test cases of composite id",165,165,,,0,2022-04-25 03:39:23,
schema/field_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",5,5,Jinzhu,faee069,0,2020-02-15 16:37:59,2020-02-15 12:28:03
schema/field_test.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",6,10,,,0,2020-02-15 10:24:37,
schema/field_test.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",1,3,,,0,2020-02-15 10:24:37,
schema/field_test.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",14,17,,,0,2020-02-15 10:24:37,
schema/field_test.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",4,4,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field_test.go,04adbaf,Jinzhu,Fix parse stmt ReflectValue,18,19,Jinzhu,e2a360b,1,2020-02-24 00:51:35,2020-02-23 13:22:35
schema/field_test.go,e986371,Jinzhu,Rename package name,11,12,Jinzhu,028c9d6,0,2020-06-02 01:18:01,2020-05-30 09:01:28
schema/field_test.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",20,22,,,0,2020-02-15 10:24:37,
schema/field_test.go,8bb05a5,Jinzhu,Refactor tests files,13,13,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
schema/field_test.go,6b98ced,Jinzhu,"Fix set time field from null, close #3108",23,23,Jinzhu,a1e35bd,1,2020-07-03 23:45:07,2020-06-20 08:52:15
schema/field_test.go,028c9d6,Jinzhu,Test Updates,24,24,Jinzhu,a46d48c,0,2020-05-30 09:01:28,2020-04-08 00:32:28
schema/field_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",29,29,Jinzhu,2cb88dc,0,2020-02-15 12:28:03,2020-02-15 10:24:37
schema/field_test.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",30,30,,,0,2020-02-15 10:24:37,
schema/field_test.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",25,28,,,0,2020-02-15 10:24:37,
schema/field_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",34,34,Jinzhu,2cb88dc,0,2020-02-15 12:28:03,2020-02-15 10:24:37
schema/field_test.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",32,33,,,0,2020-02-15 10:24:37,
schema/field_test.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",35,38,,,0,2020-02-15 10:24:37,
schema/field_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",31,31,Jinzhu,2cb88dc,0,2020-02-15 12:28:03,2020-02-15 10:24:37
schema/field_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",45,45,Jinzhu,2cb88dc,0,2020-02-15 12:28:03,2020-02-15 10:24:37
schema/field_test.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",44,44,,,0,2020-02-15 10:24:37,
schema/field_test.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",46,46,,,0,2020-02-15 10:24:37,
schema/field_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",43,43,Jinzhu,2cb88dc,0,2020-02-15 12:28:03,2020-02-15 10:24:37
schema/field_test.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",40,42,,,0,2020-02-15 10:24:37,
schema/field_test.go,90a4036,Jinzhu,Fix set bool field from null,47,47,Jinzhu,6b98ced,1,2020-07-04 00:21:23,2020-07-03 23:45:07
schema/field_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",48,48,Jinzhu,2cb88dc,0,2020-02-15 12:28:03,2020-02-15 10:24:37
schema/field_test.go,6b98ced,Jinzhu,"Fix set time field from null, close #3108",39,39,Jinzhu,a1e35bd,1,2020-07-03 23:45:07,2020-06-20 08:52:15
schema/field_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",51,51,Jinzhu,2cb88dc,0,2020-02-15 12:28:03,2020-02-15 10:24:37
schema/field_test.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",49,50,,,0,2020-02-15 10:24:37,
schema/field_test.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",52,52,,,0,2020-02-15 10:24:37,
schema/field_test.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",55,56,,,0,2020-02-15 10:24:37,
schema/field_test.go,6b98ced,Jinzhu,"Fix set time field from null, close #3108",53,53,Jinzhu,a1e35bd,1,2020-07-03 23:45:07,2020-06-20 08:52:15
schema/field_test.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",58,60,,,0,2020-02-15 10:24:37,
schema/field_test.go,90a4036,Jinzhu,Fix set bool field from null,57,57,Jinzhu,6b98ced,1,2020-07-04 00:21:23,2020-07-03 23:45:07
schema/field_test.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",63,63,,,0,2020-02-15 10:24:37,
schema/field_test.go,6b98ced,Jinzhu,"Fix set time field from null, close #3108",65,65,Jinzhu,a1e35bd,1,2020-07-03 23:45:07,2020-06-20 08:52:15
schema/field_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",64,64,Jinzhu,2cb88dc,0,2020-02-15 12:28:03,2020-02-15 10:24:37
schema/field_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",62,62,Jinzhu,faee069,0,2020-02-15 16:37:59,2020-02-15 12:28:03
schema/field_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",67,67,Jinzhu,2cb88dc,0,2020-02-15 12:28:03,2020-02-15 10:24:37
schema/field_test.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",61,61,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field_test.go,90a4036,Jinzhu,Fix set bool field from null,66,66,Jinzhu,6b98ced,1,2020-07-04 00:21:23,2020-07-03 23:45:07
schema/field_test.go,6b98ced,Jinzhu,"Fix set time field from null, close #3108",71,71,Jinzhu,a1e35bd,1,2020-07-03 23:45:07,2020-06-20 08:52:15
schema/field_test.go,6b98ced,Jinzhu,"Fix set time field from null, close #3108",76,76,Jinzhu,a1e35bd,1,2020-07-03 23:45:07,2020-06-20 08:52:15
schema/field_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",72,75,Jinzhu,faee069,0,2020-02-15 16:37:59,2020-02-15 12:28:03
schema/field_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",68,70,Jinzhu,faee069,0,2020-02-15 16:37:59,2020-02-15 12:28:03
schema/field_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",77,83,Jinzhu,faee069,0,2020-02-15 16:37:59,2020-02-15 12:28:03
schema/field_test.go,028c9d6,Jinzhu,Test Updates,54,54,Jinzhu,faee069,0,2020-05-30 09:01:28,2020-02-15 12:28:03
schema/field_test.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",84,84,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",85,87,Jinzhu,faee069,0,2020-02-15 16:37:59,2020-02-15 12:28:03
schema/field_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",89,89,Jinzhu,faee069,0,2020-02-15 16:37:59,2020-02-15 12:28:03
schema/field_test.go,6b98ced,Jinzhu,"Fix set time field from null, close #3108",88,88,Jinzhu,a1e35bd,1,2020-07-03 23:45:07,2020-06-20 08:52:15
schema/field_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",90,93,Jinzhu,2cb88dc,0,2020-02-15 12:28:03,2020-02-15 10:24:37
schema/field_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",99,101,Jinzhu,2cb88dc,0,2020-02-15 12:28:03,2020-02-15 10:24:37
schema/field_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",103,128,Jinzhu,2cb88dc,0,2020-02-15 12:28:03,2020-02-15 10:24:37
schema/field_test.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",134,134,,,0,2020-02-15 10:24:37,
schema/field_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",135,135,,,0,2020-02-15 12:28:03,
schema/field_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",130,133,Jinzhu,2cb88dc,0,2020-02-15 12:28:03,2020-02-15 10:24:37
schema/field_test.go,04adbaf,Jinzhu,Fix parse stmt ReflectValue,94,98,Jinzhu,2cb88dc,1,2020-02-24 00:51:35,2020-02-15 10:24:37
schema/field_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",137,137,,,0,2020-02-15 12:28:03,
schema/field_test.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",136,136,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field_test.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",138,139,,,0,2020-02-15 10:24:37,
schema/field_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",140,140,,,0,2020-02-15 12:28:03,
schema/field_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",141,154,Jinzhu,faee069,0,2020-02-15 16:37:59,2020-02-15 12:28:03
schema/field_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",162,163,Jinzhu,faee069,0,2020-02-15 16:37:59,2020-02-15 12:28:03
schema/field_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",160,161,,,0,2020-02-15 12:28:03,
schema/field_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",156,159,Jinzhu,faee069,0,2020-02-15 16:37:59,2020-02-15 12:28:03
schema/field_test.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",155,155,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field_test.go,04adbaf,Jinzhu,Fix parse stmt ReflectValue,164,168,Jinzhu,faee069,1,2020-02-24 00:51:35,2020-02-15 12:28:03
schema/field_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",169,205,Jinzhu,faee069,0,2020-02-15 16:37:59,2020-02-15 12:28:03
schema/field_test.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",206,206,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field_test.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",223,223,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field_test.go,028c9d6,Jinzhu,Test Updates,129,129,Jinzhu,faee069,0,2020-05-30 09:01:28,2020-02-15 12:28:03
schema/field_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",207,222,Jinzhu,faee069,0,2020-02-15 16:37:59,2020-02-15 12:28:03
schema/field_test.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",228,228,,,0,2020-02-15 10:24:37,
schema/field_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",224,227,,,0,2020-02-15 16:37:59,
schema/field_test.go,028c9d6,Jinzhu,Test Updates,102,102,Jinzhu,2cb88dc,0,2020-05-30 09:01:28,2020-02-15 10:24:37
schema/field_test.go,d50879c,Jinzhu,Add field permission test,238,238,Jinzhu,8bb05a5,0,2020-06-05 11:18:22,2020-06-02 02:50:38
schema/field_test.go,a46d48c,Jinzhu,Add tests for controlling field permission with tag,240,247,Jinzhu,04adbaf,0,2020-04-08 00:32:28,2020-02-24 00:51:35
schema/field_test.go,a46d48c,Jinzhu,Add tests for controlling field permission with tag,229,237,Jinzhu,04adbaf,0,2020-04-08 00:32:28,2020-02-24 00:51:35
schema/field_test.go,2aca96d,Jinzhu,"test ignore migration, close #4314, #4315",239,239,Jinzhu,90a4036,0,2021-05-05 00:26:48,2020-07-04 00:21:23
schema/field_test.go,380cc64,piyongcai,"fix type alias AutoMigrate bug（Add Test Case） (#4888)  * fix type alias AutoMigrate bug. eg  ```go package main  type IDer interface{ GetID() int64 }  // ID will add some method to implement some interface eg: GetID type ID int64 func (z ID) GetID() int64 { return int64(z) }  type Test struct { 	ID 	Code string `gorm:""size:50""` 	Name string `gorm:""size:50""` }  func main() { 	db, err := gorm.Open(postgres.New(postgres.Config{ 		DSN: `dsn`, 		PreferSimpleProtocol: false, 	}), &gorm.Config{ 		Logger:                 logger.Default.LogMode(logger.Info), 		SkipDefaultTransaction: true, 	}) 	if err != nil { 		log.Fatal(err) 	}  	if err = db.AutoMigrate(&Test{}); err != nil { 		// invalid embedded struct for Test's field ID, should be struct, but got main.ID 		log.Fatal(err) 	} } ```  * fix type alias AutoMigrate bug. eg  ```go package main  type IDer interface{ GetID() int64 }  // ID will add some method to implement some interface eg: GetID type ID int64 func (z ID) GetID() int64 { return int64(z) }  type Test struct { 	ID 	Code string `gorm:""size:50""` 	Name string `gorm:""size:50""` }  func main() { 	db, err := gorm.Open(postgres.New(postgres.Config{ 		DSN:                  `dsn`, 		PreferSimpleProtocol: false, 	}), &gorm.Config{ 		Logger:                 logger.Default.LogMode(logger.Info), 		SkipDefaultTransaction: true, 	}) 	if err != nil { 		log.Fatal(err) 	}  	if err = db.AutoMigrate(&Test{}); err != nil { 		// invalid embedded struct for Test's field ID, should be struct, but got main.ID 		log.Fatal(err) 	} } ```  * Add typealis test.  * try to fix golangci-lint",248,248,Jinzhu,6b7abc5,1,2021-12-10 09:45:36,2021-05-06 05:06:31
schema/field_test.go,d50879c,Jinzhu,Add field permission test,250,250,Jinzhu,04adbaf,0,2020-06-05 11:18:22,2020-02-24 00:51:35
schema/field_test.go,6b7abc5,Jinzhu,Fix tests,257,257,Jinzhu,2aca96d,1,2021-05-06 05:06:31,2021-05-05 00:26:48
schema/field_test.go,d50879c,Jinzhu,Add field permission test,252,256,,,0,2020-06-05 11:18:22,
schema/field_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),265,265,piyongcai,380cc64,0,2022-01-06 07:02:53,2021-12-10 09:45:36
schema/field_test.go,a0d6ff1,piyongcai,"time.Time, []byte type add alias support. (rebase master) (#4992)  * time.Time, []byte type add alias support  * reformat",266,283,kinggo,b47cf57,0,2022-01-12 05:11:40,2022-01-06 07:02:53
schema/field_test.go,a46d48c,Jinzhu,Add tests for controlling field permission with tag,251,251,,,0,2020-04-08 00:32:28,
schema/field_test.go,380cc64,piyongcai,"fix type alias AutoMigrate bug（Add Test Case） (#4888)  * fix type alias AutoMigrate bug. eg  ```go package main  type IDer interface{ GetID() int64 }  // ID will add some method to implement some interface eg: GetID type ID int64 func (z ID) GetID() int64 { return int64(z) }  type Test struct { 	ID 	Code string `gorm:""size:50""` 	Name string `gorm:""size:50""` }  func main() { 	db, err := gorm.Open(postgres.New(postgres.Config{ 		DSN: `dsn`, 		PreferSimpleProtocol: false, 	}), &gorm.Config{ 		Logger:                 logger.Default.LogMode(logger.Info), 		SkipDefaultTransaction: true, 	}) 	if err != nil { 		log.Fatal(err) 	}  	if err = db.AutoMigrate(&Test{}); err != nil { 		// invalid embedded struct for Test's field ID, should be struct, but got main.ID 		log.Fatal(err) 	} } ```  * fix type alias AutoMigrate bug. eg  ```go package main  type IDer interface{ GetID() int64 }  // ID will add some method to implement some interface eg: GetID type ID int64 func (z ID) GetID() int64 { return int64(z) }  type Test struct { 	ID 	Code string `gorm:""size:50""` 	Name string `gorm:""size:50""` }  func main() { 	db, err := gorm.Open(postgres.New(postgres.Config{ 		DSN:                  `dsn`, 		PreferSimpleProtocol: false, 	}), &gorm.Config{ 		Logger:                 logger.Default.LogMode(logger.Info), 		SkipDefaultTransaction: true, 	}) 	if err != nil { 		log.Fatal(err) 	}  	if err = db.AutoMigrate(&Test{}); err != nil { 		// invalid embedded struct for Test's field ID, should be struct, but got main.ID 		log.Fatal(err) 	} } ```  * Add typealis test.  * try to fix golangci-lint",261,261,Jinzhu,6b7abc5,1,2021-12-10 09:45:36,2021-05-06 05:06:31
schema/field_test.go,a0d6ff1,piyongcai,"time.Time, []byte type add alias support. (rebase master) (#4992)  * time.Time, []byte type add alias support  * reformat",300,301,kinggo,b47cf57,0,2022-01-12 05:11:40,2022-01-06 07:02:53
schema/field_test.go,380cc64,piyongcai,"fix type alias AutoMigrate bug（Add Test Case） (#4888)  * fix type alias AutoMigrate bug. eg  ```go package main  type IDer interface{ GetID() int64 }  // ID will add some method to implement some interface eg: GetID type ID int64 func (z ID) GetID() int64 { return int64(z) }  type Test struct { 	ID 	Code string `gorm:""size:50""` 	Name string `gorm:""size:50""` }  func main() { 	db, err := gorm.Open(postgres.New(postgres.Config{ 		DSN: `dsn`, 		PreferSimpleProtocol: false, 	}), &gorm.Config{ 		Logger:                 logger.Default.LogMode(logger.Info), 		SkipDefaultTransaction: true, 	}) 	if err != nil { 		log.Fatal(err) 	}  	if err = db.AutoMigrate(&Test{}); err != nil { 		// invalid embedded struct for Test's field ID, should be struct, but got main.ID 		log.Fatal(err) 	} } ```  * fix type alias AutoMigrate bug. eg  ```go package main  type IDer interface{ GetID() int64 }  // ID will add some method to implement some interface eg: GetID type ID int64 func (z ID) GetID() int64 { return int64(z) }  type Test struct { 	ID 	Code string `gorm:""size:50""` 	Name string `gorm:""size:50""` }  func main() { 	db, err := gorm.Open(postgres.New(postgres.Config{ 		DSN:                  `dsn`, 		PreferSimpleProtocol: false, 	}), &gorm.Config{ 		Logger:                 logger.Default.LogMode(logger.Info), 		SkipDefaultTransaction: true, 	}) 	if err != nil { 		log.Fatal(err) 	}  	if err = db.AutoMigrate(&Test{}); err != nil { 		// invalid embedded struct for Test's field ID, should be struct, but got main.ID 		log.Fatal(err) 	} } ```  * Add typealis test.  * try to fix golangci-lint",264,264,Jinzhu,6b7abc5,1,2021-12-10 09:45:36,2021-05-06 05:06:31
schema/field_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),284,299,piyongcai,380cc64,0,2022-01-06 07:02:53,2021-12-10 09:45:36
schema/field_test.go,a1e35bd,Jinzhu,Support merge batch data some having primary values,249,249,Jinzhu,04adbaf,0,2020-06-20 08:52:15,2020-02-24 00:51:35
schema/field_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),302,303,piyongcai,380cc64,0,2022-01-06 07:02:53,2021-12-10 09:45:36
schema/field_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),305,305,piyongcai,380cc64,0,2022-01-06 07:02:53,2021-12-10 09:45:36
schema/field_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),312,326,piyongcai,380cc64,0,2022-01-06 07:02:53,2021-12-10 09:45:36
schema/field_test.go,a46d48c,Jinzhu,Add tests for controlling field permission with tag,262,263,,,0,2020-04-08 00:32:28,
schema/field_test.go,380cc64,piyongcai,"fix type alias AutoMigrate bug（Add Test Case） (#4888)  * fix type alias AutoMigrate bug. eg  ```go package main  type IDer interface{ GetID() int64 }  // ID will add some method to implement some interface eg: GetID type ID int64 func (z ID) GetID() int64 { return int64(z) }  type Test struct { 	ID 	Code string `gorm:""size:50""` 	Name string `gorm:""size:50""` }  func main() { 	db, err := gorm.Open(postgres.New(postgres.Config{ 		DSN: `dsn`, 		PreferSimpleProtocol: false, 	}), &gorm.Config{ 		Logger:                 logger.Default.LogMode(logger.Info), 		SkipDefaultTransaction: true, 	}) 	if err != nil { 		log.Fatal(err) 	}  	if err = db.AutoMigrate(&Test{}); err != nil { 		// invalid embedded struct for Test's field ID, should be struct, but got main.ID 		log.Fatal(err) 	} } ```  * fix type alias AutoMigrate bug. eg  ```go package main  type IDer interface{ GetID() int64 }  // ID will add some method to implement some interface eg: GetID type ID int64 func (z ID) GetID() int64 { return int64(z) }  type Test struct { 	ID 	Code string `gorm:""size:50""` 	Name string `gorm:""size:50""` }  func main() { 	db, err := gorm.Open(postgres.New(postgres.Config{ 		DSN:                  `dsn`, 		PreferSimpleProtocol: false, 	}), &gorm.Config{ 		Logger:                 logger.Default.LogMode(logger.Info), 		SkipDefaultTransaction: true, 	}) 	if err != nil { 		log.Fatal(err) 	}  	if err = db.AutoMigrate(&Test{}); err != nil { 		// invalid embedded struct for Test's field ID, should be struct, but got main.ID 		log.Fatal(err) 	} } ```  * Add typealis test.  * try to fix golangci-lint",304,304,Jinzhu,6b7abc5,1,2021-12-10 09:45:36,2021-05-06 05:06:31
schema/field_test.go,a0d6ff1,piyongcai,"time.Time, []byte type add alias support. (rebase master) (#4992)  * time.Time, []byte type add alias support  * reformat",327,328,kinggo,b47cf57,0,2022-01-12 05:11:40,2022-01-06 07:02:53
schema/field_test.go,a46d48c,Jinzhu,Add tests for controlling field permission with tag,258,260,,,0,2020-04-08 00:32:28,
schema/field_test.go,380cc64,piyongcai,"fix type alias AutoMigrate bug（Add Test Case） (#4888)  * fix type alias AutoMigrate bug. eg  ```go package main  type IDer interface{ GetID() int64 }  // ID will add some method to implement some interface eg: GetID type ID int64 func (z ID) GetID() int64 { return int64(z) }  type Test struct { 	ID 	Code string `gorm:""size:50""` 	Name string `gorm:""size:50""` }  func main() { 	db, err := gorm.Open(postgres.New(postgres.Config{ 		DSN: `dsn`, 		PreferSimpleProtocol: false, 	}), &gorm.Config{ 		Logger:                 logger.Default.LogMode(logger.Info), 		SkipDefaultTransaction: true, 	}) 	if err != nil { 		log.Fatal(err) 	}  	if err = db.AutoMigrate(&Test{}); err != nil { 		// invalid embedded struct for Test's field ID, should be struct, but got main.ID 		log.Fatal(err) 	} } ```  * fix type alias AutoMigrate bug. eg  ```go package main  type IDer interface{ GetID() int64 }  // ID will add some method to implement some interface eg: GetID type ID int64 func (z ID) GetID() int64 { return int64(z) }  type Test struct { 	ID 	Code string `gorm:""size:50""` 	Name string `gorm:""size:50""` }  func main() { 	db, err := gorm.Open(postgres.New(postgres.Config{ 		DSN:                  `dsn`, 		PreferSimpleProtocol: false, 	}), &gorm.Config{ 		Logger:                 logger.Default.LogMode(logger.Info), 		SkipDefaultTransaction: true, 	}) 	if err != nil { 		log.Fatal(err) 	}  	if err = db.AutoMigrate(&Test{}); err != nil { 		// invalid embedded struct for Test's field ID, should be struct, but got main.ID 		log.Fatal(err) 	} } ```  * Add typealis test.  * try to fix golangci-lint",306,311,Jinzhu,6b7abc5,1,2021-12-10 09:45:36,2021-05-06 05:06:31
schema/field_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),334,334,,,0,2022-01-06 07:02:53,
schema/field_test.go,380cc64,piyongcai,"fix type alias AutoMigrate bug（Add Test Case） (#4888)  * fix type alias AutoMigrate bug. eg  ```go package main  type IDer interface{ GetID() int64 }  // ID will add some method to implement some interface eg: GetID type ID int64 func (z ID) GetID() int64 { return int64(z) }  type Test struct { 	ID 	Code string `gorm:""size:50""` 	Name string `gorm:""size:50""` }  func main() { 	db, err := gorm.Open(postgres.New(postgres.Config{ 		DSN: `dsn`, 		PreferSimpleProtocol: false, 	}), &gorm.Config{ 		Logger:                 logger.Default.LogMode(logger.Info), 		SkipDefaultTransaction: true, 	}) 	if err != nil { 		log.Fatal(err) 	}  	if err = db.AutoMigrate(&Test{}); err != nil { 		// invalid embedded struct for Test's field ID, should be struct, but got main.ID 		log.Fatal(err) 	} } ```  * fix type alias AutoMigrate bug. eg  ```go package main  type IDer interface{ GetID() int64 }  // ID will add some method to implement some interface eg: GetID type ID int64 func (z ID) GetID() int64 { return int64(z) }  type Test struct { 	ID 	Code string `gorm:""size:50""` 	Name string `gorm:""size:50""` }  func main() { 	db, err := gorm.Open(postgres.New(postgres.Config{ 		DSN:                  `dsn`, 		PreferSimpleProtocol: false, 	}), &gorm.Config{ 		Logger:                 logger.Default.LogMode(logger.Info), 		SkipDefaultTransaction: true, 	}) 	if err != nil { 		log.Fatal(err) 	}  	if err = db.AutoMigrate(&Test{}); err != nil { 		// invalid embedded struct for Test's field ID, should be struct, but got main.ID 		log.Fatal(err) 	} } ```  * Add typealis test.  * try to fix golangci-lint",329,333,,,1,2021-12-10 09:45:36,
schema/interfaces.go,a954d77,Jinzhu,Support customize gorm field type,1,2,,,0,2020-06-06 02:47:32,
schema/interfaces.go,a954d77,Jinzhu,Support customize gorm field type,14,17,,,0,2020-06-06 02:47:32,
schema/interfaces.go,a954d77,Jinzhu,Support customize gorm field type,25,25,,,0,2020-06-06 02:47:32,
schema/interfaces.go,a954d77,Jinzhu,Support customize gorm field type,6,6,,,0,2020-06-06 02:47:32,
schema/interfaces.go,ce8853e,Jinzhu,Add GormValuer interface support,3,5,Jinzhu,681268c,0,2020-08-27 07:03:57,2020-08-17 08:31:09
schema/interfaces.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",18,24,Jinzhu,ce8853e,1,2022-02-19 09:02:53,2020-08-27 07:03:57
schema/interfaces.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",7,12,Jinzhu,39d84cb,1,2024-02-04 07:49:19,2022-02-19 09:02:53
schema/interfaces.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",13,13,Jinzhu,ce8853e,1,2022-02-19 09:02:53,2020-08-27 07:03:57
schema/interfaces.go,a954d77,Jinzhu,Support customize gorm field type,35,35,,,0,2020-06-06 02:47:32,
schema/interfaces.go,a954d77,Jinzhu,Support customize gorm field type,27,28,,,0,2020-06-06 02:47:32,
schema/interfaces.go,a954d77,Jinzhu,Support customize gorm field type,32,33,,,0,2020-06-06 02:47:32,
schema/interfaces.go,a954d77,Jinzhu,Support customize gorm field type,30,30,,,0,2020-06-06 02:47:32,
schema/interfaces.go,681268c,Jinzhu,Refactor Create/Query/Update/DeleteClauses interface,26,26,,,0,2020-08-17 08:31:09,
schema/interfaces.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",29,29,Jinzhu,ce8853e,1,2022-02-19 09:02:53,2020-08-27 07:03:57
schema/interfaces.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",34,34,Jinzhu,ce8853e,1,2022-02-19 09:02:53,2020-08-27 07:03:57
schema/interfaces.go,681268c,Jinzhu,Refactor Create/Query/Update/DeleteClauses interface,31,31,,,0,2020-08-17 08:31:09,
schema/interfaces.go,a954d77,Jinzhu,Support customize gorm field type,37,38,,,0,2020-06-06 02:47:32,
schema/interfaces.go,a954d77,Jinzhu,Support customize gorm field type,42,42,,,0,2020-06-06 02:47:32,
schema/interfaces.go,a954d77,Jinzhu,Support customize gorm field type,40,40,,,0,2020-06-06 02:47:32,
schema/interfaces.go,681268c,Jinzhu,Refactor Create/Query/Update/DeleteClauses interface,41,41,,,0,2020-08-17 08:31:09,
schema/interfaces.go,681268c,Jinzhu,Refactor Create/Query/Update/DeleteClauses interface,36,36,,,0,2020-08-17 08:31:09,
schema/interfaces.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",39,39,,,1,2022-02-19 09:02:53,
schema/model_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",9,20,,,0,2020-02-15 16:37:59,
schema/model_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",1,6,,,0,2020-02-15 16:37:59,
schema/model_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",22,28,,,0,2020-02-15 16:37:59,
schema/model_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",34,43,,,0,2020-02-15 16:37:59,
schema/model_test.go,e986371,Jinzhu,Rename package name,7,7,Jinzhu,fe24c3f,0,2020-06-02 01:18:01,2020-02-23 01:38:51
schema/model_test.go,dc48e04,Jinzhu,"Fix nested embedded struct, close #3278",46,46,Jinzhu,6834c25,1,2020-08-18 03:21:40,2020-08-17 04:02:46
schema/model_test.go,8bb05a5,Jinzhu,Refactor tests files,8,8,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
schema/model_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),29,33,Jinzhu,dc48e04,0,2022-01-06 07:02:53,2020-08-18 03:21:40
schema/model_test.go,fe24c3f,Jinzhu,Setup tests script,21,21,Jinzhu,18236fa,0,2020-02-23 01:38:51,2020-02-15 16:37:59
schema/model_test.go,6834c25,Jinzhu,"Fix stack overflow for embedded self-referred associations, close #3269",44,45,Jinzhu,8bb05a5,1,2020-08-17 04:02:46,2020-06-02 02:50:38
schema/model_test.go,6834c25,Jinzhu,"Fix stack overflow for embedded self-referred associations, close #3269",47,55,Jinzhu,8bb05a5,1,2020-08-17 04:02:46,2020-06-02 02:50:38
schema/model_test.go,dc48e04,Jinzhu,"Fix nested embedded struct, close #3278",56,56,Jinzhu,6834c25,1,2020-08-18 03:21:40,2020-08-17 04:02:46
schema/model_test.go,6834c25,Jinzhu,"Fix stack overflow for embedded self-referred associations, close #3269",57,64,Jinzhu,8bb05a5,1,2020-08-17 04:02:46,2020-06-02 02:50:38
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,11,11,,,0,2020-06-05 03:40:24,
prepare_stmt.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,10,10,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,9,9,,,0,2020-06-05 03:40:24,
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,1,5,,,0,2020-06-05 03:40:24,
prepare_stmt.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,12,13,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
prepare_stmt.go,fe553a7,Jinzhu,"Fix prepared statement in transaction mode can't be shared in normal operations, close #3927",14,14,Jinzhu,21c3f05,1,2021-01-10 08:46:06,2020-12-14 10:31:18
prepare_stmt.go,740f2be,东方上人,"fix: begin transaction fail, rollback panic (#6365)",8,8,jessetang,cef3de6,1,2023-05-31 11:21:51,2022-11-13 03:12:09
prepare_stmt.go,5760388,Jinzhu,Only close bad conn prepared stmt,6,7,qqxhb,fef4294,0,2024-03-20 11:47:20,2023-08-19 13:33:31
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,15,15,,,0,2020-06-05 03:40:24,
prepare_stmt.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,16,16,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,18,20,,,0,2020-06-05 03:40:24,
prepare_stmt.go,7a76c04,Lev Zakharov,refactor: remove unnecessary prepared statement allocation (#6374),35,37,东方上人,740f2be,0,2023-06-05 08:23:17,2023-05-31 11:21:51
prepare_stmt.go,fef4294,qqxhb,"feat: rm GetDBConnWithContext method (#6535)  * feat: rm contextconnpool method  * feat: nil",39,39,Jinzhu,15162af,0,2023-08-19 13:33:31,2023-08-10 05:30:57
prepare_stmt.go,7a76c04,Lev Zakharov,refactor: remove unnecessary prepared statement allocation (#6374),31,31,东方上人,740f2be,0,2023-06-05 08:23:17,2023-05-31 11:21:51
prepare_stmt.go,0dbfda5,ivila,"fix memory leaks in PrepareStatementDB (#7142)  * fix memory leaks in PrepareStatementDB  * Fix CR: 1) Fix potential Segmentation Fault in Reset function 2) Setting db.Stmts to nil map when Close to avoid further using  * Add Test: 1) TestPreparedStmtConcurrentReset 2) TestPreparedStmtConcurrentClose  * Fix test, create new connection to keep away from other tests  ---------  Co-authored-by: Zehui Chen <zehui@ssc-hn.com>",17,17,hjwblog.com,1b48aa0,1,2024-08-22 11:02:05,2024-03-28 08:47:39
prepare_stmt.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,21,30,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
prepare_stmt.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,32,34,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
prepare_stmt.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,38,38,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
prepare_stmt.go,15162af,Jinzhu,Support GetDBConnWithContext PreparedStmtDB,44,47,Lev Zakharov,7a76c04,0,2023-08-10 05:30:57,2023-06-05 08:23:17
prepare_stmt.go,e3fc49a,heige,feat: ajust PreparedStmtDB unlock location and BuildCondition if logic (#4681),54,55,Jinzhu,7475201,0,2021-10-08 03:16:58,2021-07-14 10:35:10
prepare_stmt.go,7851faa,Jinzhu,"Allow close prepared statements, double check before prepare",52,52,,,0,2020-06-21 10:18:23,
prepare_stmt.go,a9fe025,Jinzhu,Add GetDBConnector interface,40,43,Jinzhu,21c3f05,0,2021-03-19 07:55:38,2020-12-14 10:31:18
prepare_stmt.go,15a46bc,Chris Faulkner,Fix some typos (#4294),48,48,Jinzhu,21c3f05,1,2021-04-19 13:03:39,2020-12-14 10:31:18
prepare_stmt.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,51,51,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
prepare_stmt.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,56,57,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
prepare_stmt.go,a9fe025,Jinzhu,Add GetDBConnector interface,49,50,Jinzhu,21c3f05,0,2021-03-19 07:55:38,2020-12-14 10:31:18
prepare_stmt.go,7851faa,Jinzhu,"Allow close prepared statements, double check before prepare",59,60,,,0,2020-06-21 10:18:23,
prepare_stmt.go,5dd2bb4,Cr,"feat(PreparedStmtDB): support reset (#5782)  * feat(PreparedStmtDB): support reset  * fix: close all stmt  * test: fix test  * fix: delete one by one",64,65,Jinzhu,4e52349,1,2022-10-19 06:46:59,2022-03-01 08:59:50
prepare_stmt.go,7851faa,Jinzhu,"Allow close prepared statements, double check before prepare",58,58,,,0,2020-06-21 10:18:23,
prepare_stmt.go,c11c939,Jinzhu,callbacks support sort with wildcard,53,53,,,0,2020-08-03 13:48:36,
prepare_stmt.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,66,66,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
prepare_stmt.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,61,63,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
prepare_stmt.go,c11c939,Jinzhu,callbacks support sort with wildcard,67,67,Jinzhu,c7667e9,0,2020-08-03 13:48:36,2020-07-28 06:46:48
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,75,75,,,0,2020-06-05 03:40:24,
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,73,73,,,0,2020-06-05 03:40:24,
prepare_stmt.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,68,71,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
prepare_stmt.go,c11c939,Jinzhu,callbacks support sort with wildcard,77,77,Jinzhu,c7667e9,0,2020-08-03 13:48:36,2020-07-28 06:46:48
prepare_stmt.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,76,76,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
prepare_stmt.go,0b7113b,Cr,"fix: prepare deadlock (#5568)  * fix: prepare deadlock  * chore[ci skip]: code style  * chore[ci skip]: test remove unnecessary params  * fix: prepare deadlock  * fix: double check prepare  * test: more goroutines  * chore[ci skip]: improve code comments  Co-authored-by: Jinzhu <wosmvp@gmail.com>",72,72,Jinzhu,4e52349,1,2022-09-30 10:13:36,2022-03-01 08:59:50
prepare_stmt.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,78,81,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
prepare_stmt.go,c11c939,Jinzhu,callbacks support sort with wildcard,74,74,Jinzhu,2d945a9,0,2020-08-03 13:48:36,2020-07-03 00:54:12
prepare_stmt.go,7851faa,Jinzhu,"Allow close prepared statements, double check before prepare",83,83,,,0,2020-06-21 10:18:23,
prepare_stmt.go,0b7113b,Cr,"fix: prepare deadlock (#5568)  * fix: prepare deadlock  * chore[ci skip]: code style  * chore[ci skip]: test remove unnecessary params  * fix: prepare deadlock  * fix: double check prepare  * test: more goroutines  * chore[ci skip]: improve code comments  Co-authored-by: Jinzhu <wosmvp@gmail.com>",82,82,Jinzhu,4e52349,1,2022-09-30 10:13:36,2022-03-01 08:59:50
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,106,108,,,0,2020-06-05 03:40:24,
prepare_stmt.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,85,85,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,86,92,,,0,2020-06-05 03:40:24,
prepare_stmt.go,f93345a,Jinzhu,Close cached prepared stmt when got error,109,109,Jinzhu,2d945a9,1,2020-07-03 02:26:18,2020-07-03 00:54:12
prepare_stmt.go,0b7113b,Cr,"fix: prepare deadlock (#5568)  * fix: prepare deadlock  * chore[ci skip]: code style  * chore[ci skip]: test remove unnecessary params  * fix: prepare deadlock  * fix: double check prepare  * test: more goroutines  * chore[ci skip]: improve code comments  Co-authored-by: Jinzhu <wosmvp@gmail.com>",84,84,Jinzhu,4e52349,1,2022-09-30 10:13:36,2022-03-01 08:59:50
prepare_stmt.go,fef4294,qqxhb,"feat: rm GetDBConnWithContext method (#6535)  * feat: rm contextconnpool method  * feat: nil",93,105,Cr,5dd2bb4,0,2023-08-19 13:33:31,2022-10-19 06:46:59
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,111,111,,,0,2020-06-05 03:40:24,
prepare_stmt.go,f93345a,Jinzhu,Close cached prepared stmt when got error,112,112,Jinzhu,2d945a9,1,2020-07-03 02:26:18,2020-07-03 00:54:12
prepare_stmt.go,f93345a,Jinzhu,Close cached prepared stmt when got error,115,115,Jinzhu,2d945a9,1,2020-07-03 02:26:18,2020-07-03 00:54:12
prepare_stmt.go,f93345a,Jinzhu,Close cached prepared stmt when got error,120,120,Jinzhu,2d945a9,1,2020-07-03 02:26:18,2020-07-03 00:54:12
prepare_stmt.go,f93345a,Jinzhu,Close cached prepared stmt when got error,117,117,Jinzhu,2d945a9,1,2020-07-03 02:26:18,2020-07-03 00:54:12
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,118,119,,,0,2020-06-05 03:40:24,
prepare_stmt.go,fe553a7,Jinzhu,"Fix prepared statement in transaction mode can't be shared in normal operations, close #3927",110,110,Jinzhu,496db1f,1,2021-01-10 08:46:06,2020-08-31 07:45:56
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,116,116,,,0,2020-06-05 03:40:24,
prepare_stmt.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,114,114,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,122,122,,,0,2020-06-05 03:40:24,
prepare_stmt.go,fe553a7,Jinzhu,"Fix prepared statement in transaction mode can't be shared in normal operations, close #3927",121,121,Jinzhu,21c3f05,1,2021-01-10 08:46:06,2020-12-14 10:31:18
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,127,127,,,0,2020-06-05 03:40:24,
prepare_stmt.go,f93345a,Jinzhu,Close cached prepared stmt when got error,123,123,Jinzhu,2d945a9,1,2020-07-03 02:26:18,2020-07-03 00:54:12
prepare_stmt.go,f93345a,Jinzhu,Close cached prepared stmt when got error,126,126,Jinzhu,2d945a9,1,2020-07-03 02:26:18,2020-07-03 00:54:12
prepare_stmt.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,125,125,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
prepare_stmt.go,f93345a,Jinzhu,Close cached prepared stmt when got error,128,128,Jinzhu,2d945a9,1,2020-07-03 02:26:18,2020-07-03 00:54:12
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,133,138,,,0,2020-06-05 03:40:24,
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,129,131,,,0,2020-06-05 03:40:24,
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,147,147,,,0,2020-06-05 03:40:24,
prepare_stmt.go,1b48aa0,hjwblog.com,"feat: prepare_stmt support ping (#6924)  * feat: prepare_stmt support ping  * feat: prepare_stmt tx support ping",139,146,Jinzhu,15162af,0,2024-03-28 08:47:39,2023-08-10 05:30:57
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,149,151,,,0,2020-06-05 03:40:24,
prepare_stmt.go,5760388,Jinzhu,Only close bad conn prepared stmt,124,124,Jinzhu,4e52349,0,2024-03-20 11:47:20,2022-03-01 08:59:50
prepare_stmt.go,fe553a7,Jinzhu,"Fix prepared statement in transaction mode can't be shared in normal operations, close #3927",132,132,Jinzhu,c7667e9,1,2021-01-10 08:46:06,2020-07-28 06:46:48
prepare_stmt.go,740f2be,东方上人,"fix: begin transaction fail, rollback panic (#6365)",164,164,jessetang,cef3de6,1,2023-05-31 11:21:51,2022-11-13 03:12:09
prepare_stmt.go,5760388,Jinzhu,Only close bad conn prepared stmt,113,113,Jinzhu,4e52349,0,2024-03-20 11:47:20,2022-03-01 08:59:50
prepare_stmt.go,996b96e,lianghuan,Add TxConnPoolBeginner and Tx interface,148,148,Jinzhu,7475201,0,2022-03-01 08:59:50,2021-07-14 10:35:10
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,172,172,,,0,2020-06-05 03:40:24,
prepare_stmt.go,f93345a,Jinzhu,Close cached prepared stmt when got error,170,170,,,1,2020-07-03 02:26:18,
prepare_stmt.go,fef4294,qqxhb,"feat: rm GetDBConnWithContext method (#6535)  * feat: rm contextconnpool method  * feat: nil",152,155,Jinzhu,7475201,0,2023-08-19 13:33:31,2021-07-14 10:35:10
prepare_stmt.go,dd0d74f,Jinzhu,"Fix transaction on closed conn when using prepared statement, close #3380",156,156,,,1,2020-09-03 11:16:55,
prepare_stmt.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,175,175,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
prepare_stmt.go,dd0d74f,Jinzhu,"Fix transaction on closed conn when using prepared statement, close #3380",158,163,,,1,2020-09-03 11:16:55,
prepare_stmt.go,dd0d74f,Jinzhu,"Fix transaction on closed conn when using prepared statement, close #3380",165,169,,,1,2020-09-03 11:16:55,
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,177,177,,,0,2020-06-05 03:40:24,
prepare_stmt.go,f93345a,Jinzhu,Close cached prepared stmt when got error,176,176,,,1,2020-07-03 02:26:18,
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,179,180,,,0,2020-06-05 03:40:24,
prepare_stmt.go,f93345a,Jinzhu,Close cached prepared stmt when got error,178,178,,,1,2020-07-03 02:26:18,
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,183,183,,,0,2020-06-05 03:40:24,
prepare_stmt.go,f93345a,Jinzhu,Close cached prepared stmt when got error,181,181,,,1,2020-07-03 02:26:18,
prepare_stmt.go,5760388,Jinzhu,Only close bad conn prepared stmt,174,174,Jinzhu,7475201,0,2024-03-20 11:47:20,2021-07-14 10:35:10
prepare_stmt.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,186,186,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
prepare_stmt.go,f93345a,Jinzhu,Close cached prepared stmt when got error,187,187,,,1,2020-07-03 02:26:18,
prepare_stmt.go,fe553a7,Jinzhu,"Fix prepared statement in transaction mode can't be shared in normal operations, close #3927",182,182,,,1,2021-01-10 08:46:06,
prepare_stmt.go,f93345a,Jinzhu,Close cached prepared stmt when got error,189,189,,,1,2020-07-03 02:26:18,
prepare_stmt.go,5760388,Jinzhu,Only close bad conn prepared stmt,185,185,heige,e3fc49a,0,2024-03-20 11:47:20,2021-10-08 03:16:58
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,188,188,,,0,2020-06-05 03:40:24,
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,190,192,,,0,2020-06-05 03:40:24,
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,194,194,,,0,2020-06-05 03:40:24,
prepare_stmt.go,fe553a7,Jinzhu,"Fix prepared statement in transaction mode can't be shared in normal operations, close #3927",171,171,,,1,2021-01-10 08:46:06,
prepare_stmt.go,c8e7878,Jinzhu,Add PrepareStmt support,196,198,,,0,2020-06-05 03:40:24,
prepare_stmt.go,1b48aa0,hjwblog.com,"feat: prepare_stmt support ping (#6924)  * feat: prepare_stmt support ping  * feat: prepare_stmt tx support ping",199,206,Jinzhu,15162af,0,2024-03-28 08:47:39,2023-08-10 05:30:57
prepare_stmt.go,740f2be,东方上人,"fix: begin transaction fail, rollback panic (#6365)",157,157,Jinzhu,21c3f05,1,2023-05-31 11:21:51,2020-12-14 10:31:18
prepare_stmt.go,fe553a7,Jinzhu,"Fix prepared statement in transaction mode can't be shared in normal operations, close #3927",173,173,,,1,2021-01-10 08:46:06,
prepare_stmt.go,996b96e,lianghuan,Add TxConnPoolBeginner and Tx interface,184,184,,,0,2022-03-01 08:59:50,
prepare_stmt.go,fe553a7,Jinzhu,"Fix prepared statement in transaction mode can't be shared in normal operations, close #3927",195,195,,,1,2021-01-10 08:46:06,
prepare_stmt.go,fe553a7,Jinzhu,"Fix prepared statement in transaction mode can't be shared in normal operations, close #3927",193,193,,,1,2021-01-10 08:46:06,
schema/naming_test.go,bc68fde,Jinzhu,Implement naming strategy,1,3,,,0,2020-01-31 06:17:02,
schema/naming_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),9,9,Jinzhu,2b2f6e7,0,2022-01-06 07:02:53,2021-08-11 08:20:29
schema/naming_test.go,bc68fde,Jinzhu,Implement naming strategy,10,29,,,0,2020-01-31 06:17:02,
schema/naming_test.go,bc68fde,Jinzhu,Implement naming strategy,31,31,,,0,2020-01-31 06:17:02,
schema/naming_test.go,66e8a72,Jinzhu,"Support NameReplace for NamingStrategy, close #3779",32,33,Jinzhu,a2faa41,0,2020-11-23 03:24:07,2020-09-28 02:55:27
schema/naming_test.go,66e8a72,Jinzhu,"Support NameReplace for NamingStrategy, close #3779",4,4,Jinzhu,a2faa41,0,2020-11-23 03:24:07,2020-09-28 02:55:27
schema/naming_test.go,bc68fde,Jinzhu,Implement naming strategy,5,8,,,0,2020-01-31 06:17:02,
schema/naming_test.go,bc68fde,Jinzhu,Implement naming strategy,34,35,,,0,2020-01-31 06:17:02,
schema/naming_test.go,66e8a72,Jinzhu,"Support NameReplace for NamingStrategy, close #3779",30,30,Jinzhu,a2faa41,0,2020-11-23 03:24:07,2020-09-28 02:55:27
schema/naming_test.go,bc68fde,Jinzhu,Implement naming strategy,56,56,,,0,2020-01-31 06:17:02,
schema/naming_test.go,2b2f6e7,Jinzhu,Add SchemaName to NamingStrategy,36,55,Sky34gl3,a855fe6,0,2021-08-11 08:20:29,2021-04-22 05:11:19
schema/naming_test.go,a2faa41,Jinzhu,"Refactor NamingStrategy, close #3540",58,58,Jinzhu,1a526e6,0,2020-09-28 02:55:27,2020-09-24 03:32:38
schema/naming_test.go,a2faa41,Jinzhu,"Refactor NamingStrategy, close #3540",60,61,Jinzhu,1a526e6,0,2020-09-28 02:55:27,2020-09-24 03:32:38
schema/naming_test.go,a2faa41,Jinzhu,"Refactor NamingStrategy, close #3540",63,68,Jinzhu,1a526e6,0,2020-09-28 02:55:27,2020-09-24 03:32:38
schema/naming_test.go,1a526e6,Jinzhu,"Fix NamingStrategy with embedded struct, close #3513",57,57,Jinzhu,bc68fde,1,2020-09-24 03:32:38,2020-01-31 06:17:02
schema/naming_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),59,59,Jinzhu,2b2f6e7,0,2022-01-06 07:02:53,2021-08-11 08:20:29
schema/naming_test.go,66e8a72,Jinzhu,"Support NameReplace for NamingStrategy, close #3779",62,62,Jinzhu,1a526e6,0,2020-11-23 03:24:07,2020-09-24 03:32:38
schema/naming_test.go,1a526e6,Jinzhu,"Fix NamingStrategy with embedded struct, close #3513",69,69,,,1,2020-09-24 03:32:38,
schema/naming_test.go,1a526e6,Jinzhu,"Fix NamingStrategy with embedded struct, close #3513",74,74,,,1,2020-09-24 03:32:38,
schema/naming_test.go,1a526e6,Jinzhu,"Fix NamingStrategy with embedded struct, close #3513",78,79,,,1,2020-09-24 03:32:38,
schema/naming_test.go,a2faa41,Jinzhu,"Refactor NamingStrategy, close #3540",75,77,,,0,2020-09-28 02:55:27,
schema/naming_test.go,a2faa41,Jinzhu,"Refactor NamingStrategy, close #3540",70,73,,,0,2020-09-28 02:55:27,
schema/naming_test.go,1a526e6,Jinzhu,"Fix NamingStrategy with embedded struct, close #3513",84,84,,,1,2020-09-24 03:32:38,
schema/naming_test.go,a2faa41,Jinzhu,"Refactor NamingStrategy, close #3540",85,87,,,0,2020-09-28 02:55:27,
schema/naming_test.go,a2faa41,Jinzhu,"Refactor NamingStrategy, close #3540",80,83,,,0,2020-09-28 02:55:27,
schema/naming_test.go,1a526e6,Jinzhu,"Fix NamingStrategy with embedded struct, close #3513",88,88,,,1,2020-09-24 03:32:38,
schema/naming_test.go,5744e29,Joel Nordell,"Replacer interface for more flexible NamingStrategy (#4042)  * Change NameReplacer to an interface, allowing custom Replacers.  * Add NoLowerCase option to skip the snake_casing of names.  * Move sync.Map from global variable into member of NamingStrategy.  This maintains backward compatibility by making the smap optional - the NamingStrategy still works if it is nil. gorm.Open activates it by calling Init() if the given Namer is a schema.NamingStrategy.  Also, this changes the key stored in the smap to be the original name, instead of the replaced name.  * Refactor NamingStrategy tests to add more assertions about how and when Replacers get called.  * Remove the name cache from NamingStrategy.",95,104,Jinzhu,66e8a72,0,2021-02-14 00:16:24,2020-11-23 03:24:07
schema/naming_test.go,1a526e6,Jinzhu,"Fix NamingStrategy with embedded struct, close #3513",94,94,,,1,2020-09-24 03:32:38,
schema/naming_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),105,105,Jinzhu,2b2f6e7,0,2022-01-06 07:02:53,2021-08-11 08:20:29
schema/naming_test.go,5744e29,Joel Nordell,"Replacer interface for more flexible NamingStrategy (#4042)  * Change NameReplacer to an interface, allowing custom Replacers.  * Add NoLowerCase option to skip the snake_casing of names.  * Move sync.Map from global variable into member of NamingStrategy.  This maintains backward compatibility by making the smap optional - the NamingStrategy still works if it is nil. gorm.Open activates it by calling Init() if the given Namer is a schema.NamingStrategy.  Also, this changes the key stored in the smap to be the original name, instead of the replaced name.  * Refactor NamingStrategy tests to add more assertions about how and when Replacers get called.  * Remove the name cache from NamingStrategy.",106,148,Jinzhu,66e8a72,0,2021-02-14 00:16:24,2020-11-23 03:24:07
schema/naming_test.go,5744e29,Joel Nordell,"Replacer interface for more flexible NamingStrategy (#4042)  * Change NameReplacer to an interface, allowing custom Replacers.  * Add NoLowerCase option to skip the snake_casing of names.  * Move sync.Map from global variable into member of NamingStrategy.  This maintains backward compatibility by making the smap optional - the NamingStrategy still works if it is nil. gorm.Open activates it by calling Init() if the given Namer is a schema.NamingStrategy.  Also, this changes the key stored in the smap to be the original name, instead of the replaced name.  * Refactor NamingStrategy tests to add more assertions about how and when Replacers get called.  * Remove the name cache from NamingStrategy.",150,190,Jinzhu,66e8a72,0,2021-02-14 00:16:24,2020-11-23 03:24:07
schema/naming_test.go,66e8a72,Jinzhu,"Support NameReplace for NamingStrategy, close #3779",89,93,,,0,2020-11-23 03:24:07,
schema/naming_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),149,149,Jinzhu,2b2f6e7,0,2022-01-06 07:02:53,2021-08-11 08:20:29
schema/naming_test.go,26663ab,mohammad ali,"max identifier length changed to 63 (#6337)  * max identifier length changed to 63  * default maxIdentifierLength is 64  * renamed License to LICENSE (#6336)  * Added support of ""Violates Foreign Key Constraint"" (#6329)  * Added support of ""Violates Foreign Key Constraint""  Updated the translator and added the support of ""foreign key constraint violation"". For this, this error type is needed here.  * changed the description of ErrForeignKeyViolated  * refactor: error translator test (#6350)  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>  * fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements (#6220)  * test: add nested transaction and prepareStmt coexist test case  note: please test in the MySQL environment  Change-Id: I0db32adc5f74b0d443e98943d3b182236583b959 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements  1. SavetPoint SQL Statement not support in Prepared Statements  e.g. see mysql8.0 doc: https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html  Change-Id: I082012db9b140e8ec69764c633724665cc802692 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * revert(transaction_api): remove savepoint name pool,meaningless  Change-Id: I84aa9924fc54612005a81c83d66fdf8968ee56ad Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  ---------  Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: 王柳洋 <wangliuyang.520@bytedance.com>  * fix: save with hook (#6285) (#6294)  ---------  Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: Avinaba Bhattacharjee <avinababhattacharjee2002@gmail.com> Co-authored-by: Muhammad Amir Ejaz <37077032+codingamir@users.noreply.github.com> Co-authored-by: Saeid <sk.saeidee@yahoo.com> Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com> Co-authored-by: wangliuyang <54885906+wangliuyang520@users.noreply.github.com> Co-authored-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: black-06 <hello.bug@foxmail.com>",192,200,Michael Nussbaum,45ef1da,1,2023-05-30 02:00:48,2022-02-24 02:10:20
schema/naming_test.go,d222151,li-jin-gou,"fix: replace empty table name result in panic (#5048)  * fix: replace empty name result in panic  * fix: replace empty table name result in panic",209,219,kinggo,b47cf57,1,2022-02-08 09:06:10,2022-01-06 07:02:53
schema/naming_test.go,45ef1da,Michael Nussbaum,"Fix naming longer then 64 chars with dots in table (#5045)  Ensures that foreign key relationships and indexes are given syntactically valid names when their name length exceeds 64 characters and they contained dot characters within the name. This is most often relevant when a Postgres table name is fully qualified by including its schema as part of its name",205,205,kinggo,b47cf57,1,2022-02-24 02:10:20,2022-01-06 07:02:53
schema/naming_test.go,26663ab,mohammad ali,"max identifier length changed to 63 (#6337)  * max identifier length changed to 63  * default maxIdentifierLength is 64  * renamed License to LICENSE (#6336)  * Added support of ""Violates Foreign Key Constraint"" (#6329)  * Added support of ""Violates Foreign Key Constraint""  Updated the translator and added the support of ""foreign key constraint violation"". For this, this error type is needed here.  * changed the description of ErrForeignKeyViolated  * refactor: error translator test (#6350)  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>  * fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements (#6220)  * test: add nested transaction and prepareStmt coexist test case  note: please test in the MySQL environment  Change-Id: I0db32adc5f74b0d443e98943d3b182236583b959 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements  1. SavetPoint SQL Statement not support in Prepared Statements  e.g. see mysql8.0 doc: https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html  Change-Id: I082012db9b140e8ec69764c633724665cc802692 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * revert(transaction_api): remove savepoint name pool,meaningless  Change-Id: I84aa9924fc54612005a81c83d66fdf8968ee56ad Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  ---------  Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: 王柳洋 <wangliuyang.520@bytedance.com>  * fix: save with hook (#6285) (#6294)  ---------  Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: Avinaba Bhattacharjee <avinababhattacharjee2002@gmail.com> Co-authored-by: Muhammad Amir Ejaz <37077032+codingamir@users.noreply.github.com> Co-authored-by: Saeid <sk.saeidee@yahoo.com> Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com> Co-authored-by: wangliuyang <54885906+wangliuyang520@users.noreply.github.com> Co-authored-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: black-06 <hello.bug@foxmail.com>",202,202,Michael Nussbaum,45ef1da,1,2023-05-30 02:00:48,2022-02-24 02:10:20
schema/naming_test.go,a855fe6,Sky34gl3,Fixed naming longer than 64 characters (#4310)  Co-authored-by: Mickael MAUGER <mickael.mauger@almerys.com>,191,191,,,1,2021-04-22 05:11:19,
schema/naming_test.go,a855fe6,Sky34gl3,Fixed naming longer than 64 characters (#4310)  Co-authored-by: Mickael MAUGER <mickael.mauger@almerys.com>,206,208,,,1,2021-04-22 05:11:19,
schema/naming_test.go,a855fe6,Sky34gl3,Fixed naming longer than 64 characters (#4310)  Co-authored-by: Mickael MAUGER <mickael.mauger@almerys.com>,201,201,,,1,2021-04-22 05:11:19,
schema/naming_test.go,a855fe6,Sky34gl3,Fixed naming longer than 64 characters (#4310)  Co-authored-by: Mickael MAUGER <mickael.mauger@almerys.com>,203,204,,,1,2021-04-22 05:11:19,
schema/pool.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",6,9,,,1,2022-02-19 09:02:53,
schema/pool.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",11,19,,,1,2022-02-19 09:02:53,
schema/pool.go,41bef26,Jinzhu,Remove shared sync pool for Scanner compatibility,10,10,Jinzhu,39d84cb,0,2022-04-11 13:37:44,2022-02-19 09:02:53
schema/pool.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",1,5,,,1,2022-02-19 09:02:53,
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,1,3,,,0,2020-02-21 15:51:38,
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,4,6,,,0,2020-02-21 15:51:38,
schema/index_test.go,d39bdc3,Jinzhu,Fix create index,12,14,Jinzhu,04adbaf,1,2020-04-02 23:57:52,2020-02-24 00:51:35
schema/index_test.go,e986371,Jinzhu,Rename package name,7,7,Jinzhu,d39bdc3,0,2020-06-02 01:18:01,2020-04-02 23:57:52
schema/index_test.go,2416eab,Jinzhu,Change unique_idnex to UniqueIndex,15,15,Jinzhu,65d6c19,0,2020-07-03 16:36:27,2020-07-01 11:49:04
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,9,11,,,0,2020-02-21 15:51:38,
schema/index_test.go,d39bdc3,Jinzhu,Fix create index,16,17,Jinzhu,04adbaf,1,2020-04-02 23:57:52,2020-02-24 00:51:35
schema/index_test.go,5fee5b1,Jinzhu,Add option tag support for index,18,18,Jinzhu,619cd33,0,2020-10-21 12:18:21,2020-07-08 09:59:40
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",8,8,Haibo,baf1afa,1,2024-02-04 07:49:19,2023-01-11 06:05:39
schema/index_test.go,fea181e,Jinzhu,Test multiple index tags,19,19,Jinzhu,e986371,0,2020-07-01 03:47:46,2020-06-02 01:18:01
schema/index_test.go,619cd33,Jinzhu,Add index priority supports,20,20,Jinzhu,2416eab,0,2020-07-08 09:59:40,2020-07-03 16:36:27
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",22,22,Haibo,baf1afa,1,2024-02-04 07:49:19,2023-01-11 06:05:39
schema/index_test.go,0211ac9,Chiung-Ming Huang,"index: add composite id (#5269)  * index: add composite id  * index: add test cases of composite id  * index: improve the comments for the test cases of composite id",27,55,labulakalia,61b4c31,0,2022-04-25 03:39:23,2022-03-14 13:47:59
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,60,60,,,0,2020-02-21 15:51:38,
schema/index_test.go,61b4c31,labulakalia,"fix when index name is ""type"", parseFieldIndexes will set index TYPE is ""TYPE"" (#5155)  * fix index name is type, parseFieldIndexes will set index TYPE is ""TYPE""  * check TYPE empty",21,21,Jinzhu,5fee5b1,1,2022-03-14 13:47:59,2020-10-21 12:18:21
schema/index_test.go,49bbaa6,Ivan Ryabov,use map look-up for indexes (#7242),24,26,black-06,46816ad,0,2024-11-14 09:41:43,2024-02-04 07:49:19
schema/index_test.go,0211ac9,Chiung-Ming Huang,"index: add composite id (#5269)  * index: add composite id  * index: add test cases of composite id  * index: improve the comments for the test cases of composite id",23,23,labulakalia,61b4c31,0,2022-04-25 03:39:23,2022-03-14 13:47:59
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,56,58,,,0,2020-02-21 15:51:38,
schema/index_test.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",61,61,Jinzhu,ea0b13f,0,2020-02-22 11:41:01,2020-02-21 23:59:09
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,68,68,,,0,2020-02-21 15:51:38,
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",64,65,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,62,63,,,0,2020-02-21 15:51:38,
schema/index_test.go,04adbaf,Jinzhu,Fix parse stmt ReflectValue,59,59,Jinzhu,ad41985,1,2020-02-24 00:51:35,2020-02-21 15:51:38
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,66,66,,,0,2020-02-21 15:51:38,
schema/index_test.go,619cd33,Jinzhu,Add index priority supports,67,67,Jinzhu,2416eab,0,2020-07-08 09:59:40,2020-07-03 16:36:27
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",69,69,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,70,71,,,0,2020-02-21 15:51:38,
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",74,74,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,619cd33,Jinzhu,Add index priority supports,79,79,Jinzhu,2416eab,0,2020-07-08 09:59:40,2020-07-03 16:36:27
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,78,78,,,0,2020-02-21 15:51:38,
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,83,84,,,0,2020-02-21 15:51:38,
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,73,73,,,0,2020-02-21 15:51:38,
schema/index_test.go,ea0b13f,Jinzhu,Refactor ParseTagSetting,75,77,Jinzhu,ad41985,0,2020-02-21 23:59:09,2020-02-21 15:51:38
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",72,72,Haibo,baf1afa,1,2024-02-04 07:49:19,2023-01-11 06:05:39
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,80,82,,,0,2020-02-21 15:51:38,
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",85,85,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,86,87,,,0,2020-02-21 15:51:38,
schema/index_test.go,ea0b13f,Jinzhu,Refactor ParseTagSetting,91,94,Jinzhu,ad41985,0,2020-02-21 23:59:09,2020-02-21 15:51:38
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",88,88,Haibo,baf1afa,1,2024-02-04 07:49:19,2023-01-11 06:05:39
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,96,96,,,0,2020-02-21 15:51:38,
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,89,89,,,0,2020-02-21 15:51:38,
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",90,90,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",97,97,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,ea0b13f,Jinzhu,Refactor ParseTagSetting,98,100,,,0,2020-02-21 23:59:09,
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",107,107,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,105,106,,,0,2020-02-21 15:51:38,
schema/index_test.go,619cd33,Jinzhu,Add index priority supports,102,103,Jinzhu,2416eab,0,2020-07-08 09:59:40,2020-07-03 16:36:27
schema/index_test.go,0be4817,Jinzhu,Finish CreateConstraint,104,104,,,0,2020-02-22 03:15:51,
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",109,109,Haibo,baf1afa,1,2024-02-04 07:49:19,2023-01-11 06:05:39
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",111,111,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,5fee5b1,Jinzhu,Add option tag support for index,101,101,Jinzhu,2416eab,0,2020-10-21 12:18:21,2020-07-03 16:36:27
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",114,114,Haibo,baf1afa,1,2024-02-04 07:49:19,2023-01-11 06:05:39
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",116,116,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,d39bdc3,Jinzhu,Fix create index,110,110,,,1,2020-04-02 23:57:52,
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",122,129,Haibo,baf1afa,1,2024-02-04 07:49:19,2023-01-11 06:05:39
schema/index_test.go,d39bdc3,Jinzhu,Fix create index,108,108,,,1,2020-04-02 23:57:52,
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",121,121,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,0211ac9,Chiung-Ming Huang,"index: add composite id (#5269)  * index: add composite id  * index: add test cases of composite id  * index: improve the comments for the test cases of composite id",140,147,labulakalia,61b4c31,0,2022-04-25 03:39:23,2022-03-14 13:47:59
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",130,139,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",148,148,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,fea181e,Jinzhu,Test multiple index tags,115,115,,,0,2020-07-01 03:47:46,
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",158,158,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,0211ac9,Chiung-Ming Huang,"index: add composite id (#5269)  * index: add composite id  * index: add test cases of composite id  * index: improve the comments for the test cases of composite id",149,157,labulakalia,61b4c31,0,2022-04-25 03:39:23,2022-03-14 13:47:59
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,169,170,,,0,2020-02-21 15:51:38,
schema/index_test.go,619cd33,Jinzhu,Add index priority supports,95,95,Jinzhu,ad41985,0,2020-07-08 09:59:40,2020-02-21 15:51:38
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,173,173,,,0,2020-02-21 15:51:38,
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",171,172,Haibo,baf1afa,1,2024-02-04 07:49:19,2023-01-11 06:05:39
schema/index_test.go,0211ac9,Chiung-Ming Huang,"index: add composite id (#5269)  * index: add composite id  * index: add test cases of composite id  * index: improve the comments for the test cases of composite id",159,168,Jinzhu,619cd33,0,2022-04-25 03:39:23,2020-07-08 09:59:40
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",174,177,Haibo,baf1afa,1,2024-02-04 07:49:19,2023-01-11 06:05:39
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,181,181,,,0,2020-02-21 15:51:38,
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,178,178,,,0,2020-02-21 15:51:38,
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",179,180,Haibo,baf1afa,1,2024-02-04 07:49:19,2023-01-11 06:05:39
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",198,199,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",208,208,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",182,197,Haibo,baf1afa,1,2024-02-04 07:49:19,2023-01-11 06:05:39
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",209,216,Haibo,baf1afa,1,2024-02-04 07:49:19,2023-01-11 06:05:39
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",203,203,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,fea181e,Jinzhu,Test multiple index tags,112,113,,,0,2020-07-01 03:47:46,
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",200,202,Haibo,baf1afa,1,2024-02-04 07:49:19,2023-01-11 06:05:39
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",204,207,Haibo,baf1afa,1,2024-02-04 07:49:19,2023-01-11 06:05:39
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",217,217,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",225,225,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",233,237,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",218,224,Haibo,baf1afa,1,2024-02-04 07:49:19,2023-01-11 06:05:39
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",242,242,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",238,241,Haibo,baf1afa,1,2024-02-04 07:49:19,2023-01-11 06:05:39
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",226,232,Haibo,baf1afa,1,2024-02-04 07:49:19,2023-01-11 06:05:39
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",243,249,Haibo,baf1afa,1,2024-02-04 07:49:19,2023-01-11 06:05:39
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",250,251,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",252,253,Haibo,baf1afa,1,2024-02-04 07:49:19,2023-01-11 06:05:39
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",254,262,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",263,263,Haibo,baf1afa,1,2024-02-04 07:49:19,2023-01-11 06:05:39
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",266,266,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,f482f25,Bennett Amodio,"fix: deterministic index ordering when migrating (#7208)  Issue: We observed that, when creating a database based on the same gORM schema multiple times, indexes could appear in different orders, hurting determinism for use-cases like schema comparison.  In order to fix this, it's simple to switch the ParseIndexes function to return a list of indices rather than a map, so the callers will iterate in deterministic order.",264,264,Ivan Ryabov,49bbaa6,1,2024-12-06 02:27:44,2024-11-14 09:41:43
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,272,272,,,0,2020-02-21 15:51:38,
schema/index_test.go,49bbaa6,Ivan Ryabov,use map look-up for indexes (#7242),271,271,black-06,46816ad,0,2024-11-14 09:41:43,2024-02-04 07:49:19
schema/index_test.go,ad41985,Jinzhu,Parse Indexes,274,275,,,0,2020-02-21 15:51:38,
schema/index_test.go,61b4c31,labulakalia,"fix when index name is ""type"", parseFieldIndexes will set index TYPE is ""TYPE"" (#5155)  * fix index name is type, parseFieldIndexes will set index TYPE is ""TYPE""  * check TYPE empty",117,120,Jinzhu,ad41985,1,2022-03-14 13:47:59,2020-02-21 15:51:38
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",267,267,,,1,2024-02-04 07:49:19,
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",269,270,,,1,2024-02-04 07:49:19,
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",265,265,,,1,2024-02-04 07:49:19,
schema/index_test.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",273,273,,,1,2024-02-04 07:49:19,
schema/index_test.go,baf1afa,Haibo,fix(schema): field is only unique when there is one unique index (#5974),268,268,,,1,2023-01-11 06:05:39,
gorm.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,6,6,,,0,2020-03-10 00:39:33,
gorm.go,8eae7e4,Jinzhu,Add migrator,1,3,,,0,2020-01-28 15:01:35,
gorm.go,c8e7878,Jinzhu,Add PrepareStmt support,5,5,,,0,2020-06-05 03:40:24,
gorm.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",4,4,,,0,2020-01-29 11:22:44,
gorm.go,d833efe,Jinzhu,Work on clauses,9,9,,,0,2020-02-02 11:11:17,
gorm.go,fef4294,qqxhb,"feat: rm GetDBConnWithContext method (#6535)  * feat: rm contextconnpool method  * feat: nil",7,7,Aayush Acharya,f473761,0,2023-08-19 13:33:31,2023-08-04 02:35:59
gorm.go,d278ca4,Jinzhu,sort GORM options before apply,8,8,Jinzhu,ad53074,0,2021-04-09 03:43:24,2021-04-09 03:07:14
gorm.go,8eae7e4,Jinzhu,Add migrator,10,11,,,0,2020-01-28 15:01:35,
gorm.go,8eae7e4,Jinzhu,Add migrator,15,16,,,0,2020-01-28 15:01:35,
gorm.go,e986371,Jinzhu,Rename package name,12,14,,,0,2020-06-02 01:18:01,
gorm.go,bc34775,heige,for Config.cacheStore store PreparedStmtDB key (#4149),17,19,heige,495ec4b,0,2021-03-07 02:57:22,2021-03-07 02:56:32
gorm.go,8eae7e4,Jinzhu,Add migrator,20,21,,,0,2020-01-28 15:01:35,
gorm.go,bc68fde,Jinzhu,Implement naming strategy,25,26,,,0,2020-01-31 06:17:02,
gorm.go,c0de3c5,Jinzhu,"Support FullSaveAssociations Mode, close #3487, #3506",27,28,,,0,2020-09-24 11:29:15,
gorm.go,8eae7e4,Jinzhu,Add migrator,22,22,,,0,2020-01-28 15:01:35,
gorm.go,d833efe,Jinzhu,Work on clauses,23,24,,,0,2020-02-02 11:11:17,
gorm.go,8eae7e4,Jinzhu,Add migrator,29,30,,,0,2020-01-28 15:01:35,
gorm.go,4e147e1,Jinzhu,Test SubQuery,33,34,,,0,2020-06-01 13:26:23,
gorm.go,c8e7878,Jinzhu,Add PrepareStmt support,35,36,,,0,2020-06-05 03:40:24,
gorm.go,8eae7e4,Jinzhu,Add migrator,31,32,,,0,2020-01-28 15:01:35,
gorm.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,37,41,Jinzhu,6bfccf8,0,2025-04-25 08:22:26,2024-11-21 09:03:31
gorm.go,5d04464,Jinzhu,Allow DisableForeignKeyConstraintWhenMigrating,44,45,,,0,2020-06-22 03:04:44,
gorm.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,42,43,,,0,2020-06-05 15:26:56,
gorm.go,47ffd0b,Luis Guillermo Gómez,"Select all fields in SQL queries avoiding the SELECT * FROM (#3731)  * Select all fields in SQL queries avoiding the SELECT * FROM  * Select table name with fields in SQL queries  * Use QueryFields to execute the SQL query with all fields of the table",52,53,,,0,2020-11-20 07:38:25,
gorm.go,468152d,Jinzhu,Add DisableNestedTransaction support,48,49,,,0,2020-12-16 11:33:35,
gorm.go,0c12a4c,Jinzhu,Add CreateBatchSize option,54,55,,,0,2020-12-02 06:59:50,
gorm.go,ebdb4ed,Jinzhu,Add AllowGlobalUpdate mode,50,51,,,0,2020-08-23 12:08:23,
gorm.go,c8e7878,Jinzhu,Add PrepareStmt support,60,60,,,0,2020-06-05 03:40:24,
gorm.go,f4bfc43,Jinzhu,Add register plugin API,67,68,,,0,2020-06-23 01:38:51,
gorm.go,a145d7e,Jinzhu,Refactor structure,61,66,,,0,2020-03-09 06:25:50,
gorm.go,b3b19a5,Jinzhu,Test Override NowFunc,70,71,,,0,2020-05-31 03:34:59,
gorm.go,0160bab,Jinzhu,Add clause tests,72,73,,,0,2020-02-05 10:28:58,
gorm.go,a145d7e,Jinzhu,Refactor structure,69,69,,,0,2020-03-09 06:25:50,
gorm.go,0157099,Jinzhu,Use functional options,75,75,Jinzhu,3d3208e,0,2021-03-04 09:40:25,2021-02-03 08:27:49
gorm.go,1476b2f,Jinzhu,Fix apply config,76,78,Jinzhu,3d3208e,1,2021-03-04 12:37:44,2021-02-03 08:27:49
gorm.go,0157099,Jinzhu,Use functional options,79,81,Jinzhu,3d3208e,0,2021-03-04 09:40:25,2021-02-03 08:27:49
gorm.go,a0aceeb,Jinzhu,Migrator AlterColumn with full data type,82,82,Jinzhu,98c4b78,0,2022-02-10 02:40:48,2022-01-28 11:26:10
gorm.go,0157099,Jinzhu,Use functional options,83,93,Jinzhu,0c12a4c,0,2021-03-04 09:40:25,2020-12-02 06:59:50
gorm.go,0157099,Jinzhu,Use functional options,95,99,Jinzhu,0c12a4c,0,2021-03-04 09:40:25,2020-12-02 06:59:50
gorm.go,befef0c,Jinzhu,Improve Hooks,106,106,,,0,2020-05-31 16:12:20,
gorm.go,8eae7e4,Jinzhu,Add migrator,100,102,,,0,2020-01-28 15:01:35,
gorm.go,a145d7e,Jinzhu,Refactor structure,103,105,,,0,2020-03-09 06:25:50,
gorm.go,9d5b983,Jinzhu,Refactor builder,107,108,,,0,2020-01-30 11:47:00,
gorm.go,d833efe,Jinzhu,Work on clauses,109,109,,,0,2020-02-02 11:11:17,
gorm.go,9d5b983,Jinzhu,Refactor builder,110,110,,,0,2020-01-30 11:47:00,
gorm.go,468152d,Jinzhu,Add DisableNestedTransaction support,111,112,,,0,2020-12-16 11:33:35,
gorm.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,113,114,Jinzhu,6bfccf8,0,2025-04-25 08:22:26,2024-11-21 09:03:31
gorm.go,468152d,Jinzhu,Add DisableNestedTransaction support,115,115,,,0,2020-12-16 11:33:35,
gorm.go,a0aceeb,Jinzhu,Migrator AlterColumn with full data type,74,74,Jinzhu,3d3208e,0,2022-02-10 02:40:48,2021-02-03 08:27:49
gorm.go,98c4b78,Jinzhu,Add Session Initialized option,116,116,Jinzhu,ad53074,0,2022-01-28 11:26:10,2021-04-09 03:07:14
gorm.go,468152d,Jinzhu,Add DisableNestedTransaction support,117,121,,,0,2020-12-16 11:33:35,
gorm.go,468152d,Jinzhu,Add DisableNestedTransaction support,123,127,,,0,2020-12-16 11:33:35,
gorm.go,9d5b983,Jinzhu,Refactor builder,128,130,,,0,2020-01-30 11:47:00,
gorm.go,d278ca4,Jinzhu,sort GORM options before apply,134,139,heige,bc34775,0,2021-04-09 03:43:24,2021-03-07 02:57:22
gorm.go,0157099,Jinzhu,Use functional options,131,133,Jinzhu,3d3208e,0,2021-03-04 09:40:25,2021-02-03 08:27:49
gorm.go,da2b286,Haibo,fix(migrator): ignore relationships when migrating #5913 (#5946),46,47,Jinzhu,0c12a4c,1,2023-01-01 11:54:28,2020-12-02 06:59:50
gorm.go,a0aceeb,Jinzhu,Migrator AlterColumn with full data type,94,94,,,0,2022-02-10 02:40:48,
gorm.go,0157099,Jinzhu,Use functional options,144,144,,,0,2021-03-04 09:40:25,
gorm.go,0157099,Jinzhu,Use functional options,140,141,,,0,2021-03-04 09:40:25,
gorm.go,0eba7a9,Jinzhu,Fix apply option,149,149,Jinzhu,3d3208e,1,2021-03-26 06:20:42,2021-02-03 08:27:49
gorm.go,73c6d3e,Jinzhu,Add AfterInitialize error,146,148,Jinzhu,3d3208e,1,2021-03-29 10:36:01,2021-02-03 08:27:49
gorm.go,0eba7a9,Jinzhu,Fix apply option,145,145,,,1,2021-03-26 06:20:42,
gorm.go,0157099,Jinzhu,Use functional options,150,150,,,0,2021-03-04 09:40:25,
gorm.go,8cb15ca,Jinzhu,Improve test structure,151,152,,,0,2020-02-02 00:35:01,
gorm.go,bc68fde,Jinzhu,Implement naming strategy,159,159,,,0,2020-01-31 06:17:02,
gorm.go,8333844,ZhangShenao,fix variable shadowing (#5212)  Co-authored-by: Shenao Zhang <shenao.zhang@shopee.com>,142,143,heige,bc34775,1,2022-03-31 12:57:20,2021-03-07 02:57:22
gorm.go,9123600,Jinzhu,"Fix Scopes with Migrator, close #4145",153,158,,,1,2021-03-11 02:36:14,
gorm.go,bc68fde,Jinzhu,Implement naming strategy,161,162,,,0,2020-01-31 06:17:02,
gorm.go,8cb15ca,Jinzhu,Improve test structure,163,167,,,0,2020-02-02 00:35:01,
gorm.go,8cb15ca,Jinzhu,Improve test structure,169,170,,,0,2020-02-02 00:35:01,
gorm.go,a145d7e,Jinzhu,Refactor structure,171,174,,,0,2020-03-09 06:25:50,
gorm.go,2428506,Jinzhu,"Fix RenameColumn for mssql, DropColumn for sqlite",168,168,,,1,2020-05-31 01:03:51,
gorm.go,a145d7e,Jinzhu,Refactor structure,179,182,,,0,2020-03-09 06:25:50,
gorm.go,1df7571,Jinzhu,initialize plugins map,175,178,,,0,2020-06-23 02:36:45,
gorm.go,befef0c,Jinzhu,Improve Hooks,183,183,,,0,2020-05-31 16:12:20,
gorm.go,8cb15ca,Jinzhu,Improve test structure,184,184,,,0,2020-02-02 00:35:01,
gorm.go,b444011,Saeid Kanishka,refactor: translatorError flag added for backward compatibility (#6178)  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>,56,57,,,0,2023-03-24 02:07:05,
gorm.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,185,185,,,0,2020-03-10 00:39:33,
gorm.go,728c0d4,Jinzhu,Add callbacks,186,186,,,0,2020-02-02 12:05:10,
gorm.go,d05128b,Jinzhu,OnConflict support for mysql,187,190,,,0,2020-05-29 14:34:35,
gorm.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,191,192,,,0,2020-06-05 15:26:56,
gorm.go,8020e8c,Hansu Park,refactor: improve logging for unimplemented ErrorTranslator in TranslateError config (#7225),198,203,Sérgio Prata Almeida,109f239,0,2024-10-09 11:29:48,2024-06-17 03:59:06
gorm.go,ac07543,Rataj,"Fixed error message when dialector fails to initialize (#6509)  Let's say we have a problem with DSN which leads to dialector initialize error. However DB connection is not created and for some reason line 184 error provides <nil> even though ""db"" doesn't exist.  Previously, this code leads to: panic: runtime error: invalid memory address or nil pointer dereference  This fix now doesn't attempt to close non-existant database connection and instead continues, so the proper error is shown. In my case: [error] failed to initialize database, got error default addr for network 'localhost' unknown",194,194,black,c1ea730,1,2023-08-20 11:46:56,2023-06-01 07:22:21
gorm.go,8cb15ca,Jinzhu,Improve test structure,204,204,,,0,2020-02-02 00:35:01,
gorm.go,32fc201,Zhiheng Lin,fix: avoid coroutine leaks when the dialecter initialization fails. (#6249)  Co-authored-by: Kevin Lin <kevin.lin@shopee.com>,193,193,Cr,0b7113b,1,2023-04-21 14:17:21,2022-09-30 10:13:36
gorm.go,64ed645,Jinzhu,Returns ping error,205,205,,,1,2020-06-02 03:09:17,
gorm.go,c8e7878,Jinzhu,Add PrepareStmt support,206,206,,,0,2020-06-05 03:40:24,
gorm.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,207,207,Jinzhu,6bfccf8,0,2025-04-25 08:22:26,2024-11-21 09:03:31
gorm.go,c8e7878,Jinzhu,Add PrepareStmt support,210,211,,,0,2020-06-05 03:40:24,
gorm.go,c7667e9,Jinzhu,Refactor Prepared Statement,209,209,,,0,2020-07-28 06:46:48,
gorm.go,32fc201,Zhiheng Lin,fix: avoid coroutine leaks when the dialecter initialization fails. (#6249)  Co-authored-by: Kevin Lin <kevin.lin@shopee.com>,195,197,Cr,0b7113b,1,2023-04-21 14:17:21,2022-09-30 10:13:36
gorm.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,212,216,,,0,2020-06-05 15:26:56,
gorm.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,219,219,,,0,2020-06-05 15:26:56,
gorm.go,c8e7878,Jinzhu,Add PrepareStmt support,217,218,,,0,2020-06-05 03:40:24,
gorm.go,64ed645,Jinzhu,Returns ping error,220,228,,,1,2020-06-02 03:09:17,
gorm.go,8cb15ca,Jinzhu,Improve test structure,229,229,,,0,2020-02-02 00:35:01,
gorm.go,9d5b983,Jinzhu,Refactor builder,230,232,,,0,2020-01-30 11:47:00,
gorm.go,befef0c,Jinzhu,Improve Hooks,235,238,,,0,2020-05-31 16:12:20,
gorm.go,9d5b983,Jinzhu,Refactor builder,234,234,,,0,2020-01-30 11:47:00,
gorm.go,befef0c,Jinzhu,Improve Hooks,240,241,,,0,2020-05-31 16:12:20,
gorm.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,233,233,,,0,2020-03-10 00:39:33,
gorm.go,9d5b983,Jinzhu,Refactor builder,242,242,,,0,2020-01-30 11:47:00,
gorm.go,a5bfe2f,Jinzhu,Keep Error for new Session,239,239,,,1,2021-01-07 03:45:40,
gorm.go,b8692c7,Jinzhu,Allow temporarily disable default transaction,247,250,,,0,2020-07-16 10:05:55,
gorm.go,ebdb4ed,Jinzhu,Add AllowGlobalUpdate mode,251,254,,,0,2020-08-23 12:08:23,
gorm.go,0c12a4c,Jinzhu,Add CreateBatchSize option,243,246,,,0,2020-12-02 06:59:50,
gorm.go,c0de3c5,Jinzhu,"Support FullSaveAssociations Mode, close #3487, #3506",255,258,,,0,2020-09-24 11:29:15,
gorm.go,f6e1786,Jinzhu,Add skip hooks support,263,263,,,0,2020-11-17 07:19:58,
gorm.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,264,265,,,0,2020-06-05 15:26:56,
gorm.go,109f239,Sérgio Prata Almeida,"add DB level propagation for the Unscoped flag (#7007)  * adds PropagateUnscoped to db Config  * adds PropagateUnscoped test  * adds PropagateUnscoped to Session and sets it accordingly",122,122,Jinzhu,3d3208e,0,2024-06-17 03:59:06,2021-02-03 08:27:49
gorm.go,c8e7878,Jinzhu,Add PrepareStmt support,272,272,,,0,2020-06-05 03:40:24,
gorm.go,befef0c,Jinzhu,Improve Hooks,269,271,,,0,2020-05-31 16:12:20,
gorm.go,f6e1786,Jinzhu,Add skip hooks support,266,268,,,0,2020-11-17 07:19:58,
gorm.go,7a76c04,Lev Zakharov,refactor: remove unnecessary prepared statement allocation (#6374),273,274,black,c1ea730,0,2023-06-05 08:23:17,2023-06-01 07:22:21
gorm.go,7a76c04,Lev Zakharov,refactor: remove unnecessary prepared statement allocation (#6374),276,277,black,c1ea730,0,2023-06-05 08:23:17,2023-06-01 07:22:21
gorm.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,278,278,Jinzhu,6bfccf8,0,2025-04-25 08:22:26,2024-11-21 09:03:31
gorm.go,7a76c04,Lev Zakharov,refactor: remove unnecessary prepared statement allocation (#6374),279,292,black,c1ea730,0,2023-06-05 08:23:17,2023-06-01 07:22:21
gorm.go,c8e7878,Jinzhu,Add PrepareStmt support,294,294,,,0,2020-06-05 03:40:24,
gorm.go,109f239,Sérgio Prata Almeida,"add DB level propagation for the Unscoped flag (#7007)  * adds PropagateUnscoped to db Config  * adds PropagateUnscoped test  * adds PropagateUnscoped to Session and sets it accordingly",259,262,black,c1ea730,0,2024-06-17 03:59:06,2023-06-01 07:22:21
gorm.go,c7667e9,Jinzhu,Refactor Prepared Statement,293,293,,,0,2020-07-28 06:46:48,
gorm.go,c8e7878,Jinzhu,Add PrepareStmt support,297,298,,,0,2020-06-05 03:40:24,
gorm.go,f6e1786,Jinzhu,Add skip hooks support,299,299,,,0,2020-11-17 07:19:58,
gorm.go,9df9f76,Jinzhu,Change UpdatingColumn to SkipHooks,300,300,,,0,2020-11-17 09:49:43,
gorm.go,bc34775,heige,for Config.cacheStore store PreparedStmtDB key (#4149),275,275,,,0,2021-03-07 02:57:22,
gorm.go,f6e1786,Jinzhu,Add skip hooks support,301,302,,,0,2020-11-17 07:19:58,
gorm.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,308,308,,,0,2020-06-05 15:26:56,
gorm.go,26504f5,Jinzhu,Use NewDB to replace WithConditions for Session,307,307,,,0,2020-11-17 08:28:37,
gorm.go,468152d,Jinzhu,Add DisableNestedTransaction support,303,306,,,0,2020-12-16 11:33:35,
gorm.go,47ffd0b,Luis Guillermo Gómez,"Select all fields in SQL queries avoiding the SELECT * FROM (#3731)  * Select all fields in SQL queries avoiding the SELECT * FROM  * Select table name with fields in SQL queries  * Use QueryFields to execute the SQL query with all fields of the table",315,318,,,0,2020-11-20 07:38:25,
gorm.go,4e147e1,Jinzhu,Test SubQuery,311,314,,,0,2020-06-01 13:26:23,
gorm.go,9d5b983,Jinzhu,Refactor builder,309,310,,,0,2020-01-30 11:47:00,
gorm.go,9d5b983,Jinzhu,Refactor builder,319,319,,,0,2020-01-30 11:47:00,
gorm.go,befef0c,Jinzhu,Improve Hooks,320,320,,,0,2020-05-31 16:12:20,
gorm.go,9d5b983,Jinzhu,Refactor builder,325,326,,,0,2020-01-30 11:47:00,
gorm.go,befef0c,Jinzhu,Improve Hooks,324,324,,,0,2020-05-31 16:12:20,
gorm.go,9d5b983,Jinzhu,Refactor builder,321,323,,,0,2020-01-30 11:47:00,
gorm.go,befef0c,Jinzhu,Improve Hooks,331,331,,,0,2020-05-31 16:12:20,
gorm.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,335,335,,,0,2020-03-10 00:39:33,
gorm.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",332,334,,,0,2020-01-29 11:22:44,
gorm.go,9d5b983,Jinzhu,Refactor builder,337,339,,,0,2020-01-30 11:47:00,
gorm.go,26504f5,Jinzhu,Use NewDB to replace WithConditions for Session,336,336,,,0,2020-11-17 08:28:37,
gorm.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,340,340,,,0,2020-03-10 00:39:33,
gorm.go,26504f5,Jinzhu,Use NewDB to replace WithConditions for Session,343,343,,,0,2020-11-17 08:28:37,
gorm.go,befef0c,Jinzhu,Improve Hooks,344,344,,,0,2020-05-31 16:12:20,
gorm.go,7a76c04,Lev Zakharov,refactor: remove unnecessary prepared statement allocation (#6374),208,208,,,0,2023-06-05 08:23:17,
gorm.go,9d5b983,Jinzhu,Refactor builder,345,346,,,0,2020-01-30 11:47:00,
gorm.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,348,348,,,0,2020-03-10 00:39:33,
gorm.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",347,347,,,0,2020-01-29 11:22:44,
gorm.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",349,354,,,0,2020-01-29 11:22:44,
gorm.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,355,355,,,0,2020-03-10 00:39:33,
gorm.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,356,356,,,0,2020-06-05 15:26:56,
gorm.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",357,358,,,0,2020-01-29 11:22:44,
gorm.go,befef0c,Jinzhu,Improve Hooks,359,367,,,0,2020-05-31 16:12:20,
gorm.go,befef0c,Jinzhu,Improve Hooks,369,370,,,0,2020-05-31 16:12:20,
gorm.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,368,368,,,0,2020-06-05 15:26:56,
gorm.go,98c4b78,Jinzhu,Add Session Initialized option,327,330,,,0,2022-01-28 11:26:10,
gorm.go,8cb15ca,Jinzhu,Improve test structure,371,371,,,0,2020-02-02 00:35:01,
gorm.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,372,372,,,0,2020-03-10 00:39:33,
gorm.go,8cb15ca,Jinzhu,Improve test structure,373,375,,,0,2020-02-02 00:35:01,
gorm.go,a145d7e,Jinzhu,Refactor structure,376,376,,,0,2020-03-09 06:25:50,
gorm.go,7bcd95d,Jinzhu,Add save associations for bulk create,377,377,,,0,2020-04-19 15:11:56,
gorm.go,7a76c04,Lev Zakharov,refactor: remove unnecessary prepared statement allocation (#6374),295,296,,,0,2023-06-05 08:23:17,
gorm.go,7572009,Jinzhu,Create a new db in FindInBatches,341,342,,,0,2022-07-18 10:07:05,
gorm.go,707d70a,Saeid Kanishka,"refactor: translate error only when it is not nil (#6133)  * refactor: translate error only when it is not nil  * refactor: fix the error flow  * refactor: update the error if checks  * Update gorm.go  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>",378,378,Jinzhu,d278ca4,1,2023-03-10 08:51:27,2021-04-09 03:43:24
gorm.go,26663ab,mohammad ali,"max identifier length changed to 63 (#6337)  * max identifier length changed to 63  * default maxIdentifierLength is 64  * renamed License to LICENSE (#6336)  * Added support of ""Violates Foreign Key Constraint"" (#6329)  * Added support of ""Violates Foreign Key Constraint""  Updated the translator and added the support of ""foreign key constraint violation"". For this, this error type is needed here.  * changed the description of ErrForeignKeyViolated  * refactor: error translator test (#6350)  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>  * fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements (#6220)  * test: add nested transaction and prepareStmt coexist test case  note: please test in the MySQL environment  Change-Id: I0db32adc5f74b0d443e98943d3b182236583b959 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements  1. SavetPoint SQL Statement not support in Prepared Statements  e.g. see mysql8.0 doc: https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html  Change-Id: I082012db9b140e8ec69764c633724665cc802692 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * revert(transaction_api): remove savepoint name pool,meaningless  Change-Id: I84aa9924fc54612005a81c83d66fdf8968ee56ad Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  ---------  Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: 王柳洋 <wangliuyang.520@bytedance.com>  * fix: save with hook (#6285) (#6294)  ---------  Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: Avinaba Bhattacharjee <avinababhattacharjee2002@gmail.com> Co-authored-by: Muhammad Amir Ejaz <37077032+codingamir@users.noreply.github.com> Co-authored-by: Saeid <sk.saeidee@yahoo.com> Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com> Co-authored-by: wangliuyang <54885906+wangliuyang520@users.noreply.github.com> Co-authored-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: black-06 <hello.bug@foxmail.com>",160,160,,,1,2023-05-30 02:00:48,
gorm.go,b444011,Saeid Kanishka,refactor: translatorError flag added for backward compatibility (#6178)  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>,379,382,Jinzhu,d278ca4,0,2023-03-24 02:07:05,2021-04-09 03:43:24
gorm.go,7bcd95d,Jinzhu,Add save associations for bulk create,391,391,,,0,2020-04-19 15:11:56,
gorm.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,390,390,,,0,2020-03-10 00:39:33,
gorm.go,a145d7e,Jinzhu,Refactor structure,392,393,,,0,2020-03-09 06:25:50,
gorm.go,e487f35,Jinzhu,Add DB method,394,396,,,0,2020-06-17 11:57:54,
gorm.go,707d70a,Saeid Kanishka,"refactor: translate error only when it is not nil (#6133)  * refactor: translate error only when it is not nil  * refactor: fix the error flow  * refactor: update the error if checks  * Update gorm.go  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>",383,383,Jinzhu,73c6d3e,1,2023-03-10 08:51:27,2021-03-29 10:36:01
gorm.go,e487f35,Jinzhu,Add DB method,408,409,,,0,2020-06-17 11:57:54,
gorm.go,109f239,Sérgio Prata Almeida,"add DB level propagation for the Unscoped flag (#7007)  * adds PropagateUnscoped to db Config  * adds PropagateUnscoped test  * adds PropagateUnscoped to Session and sets it accordingly",58,59,,,0,2024-06-17 03:59:06,
gorm.go,e487f35,Jinzhu,Add DB method,411,413,,,0,2020-06-17 11:57:54,
gorm.go,fef4294,qqxhb,"feat: rm GetDBConnWithContext method (#6535)  * feat: rm contextconnpool method  * feat: nil",397,401,Jinzhu,d278ca4,0,2023-08-19 13:33:31,2021-04-09 03:43:24
gorm.go,e487f35,Jinzhu,Add DB method,415,416,,,0,2020-06-17 11:57:54,
gorm.go,85eaf9e,Saeid Kanishka,"feat: Unique Constraint Violation error translator for different drivers (#6004)  * feat: duplicated key error translator for different drivers  * test: removed the dependency  * test: fixed broken tests  * refactor: added ErrorTransltor interface  * style: applied styler  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",384,384,,,1,2023-03-06 06:03:31,
gorm.go,a9fe025,Jinzhu,Add GetDBConnector interface,404,404,,,0,2021-03-19 07:55:38,
gorm.go,befef0c,Jinzhu,Improve Hooks,418,418,,,0,2020-05-31 16:12:20,
gorm.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,417,417,,,0,2020-03-10 00:39:33,
gorm.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,421,422,,,0,2020-06-05 15:26:56,
gorm.go,befef0c,Jinzhu,Improve Hooks,420,420,,,0,2020-05-31 16:12:20,
gorm.go,c8e7878,Jinzhu,Add PrepareStmt support,423,423,,,0,2020-06-05 03:40:24,
gorm.go,15a46bc,Chris Faulkner,Fix some typos (#4294),414,414,,,1,2021-04-19 13:03:39,
gorm.go,c8e7878,Jinzhu,Add PrepareStmt support,430,430,,,0,2020-06-05 03:40:24,
gorm.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,434,437,,,0,2020-06-05 15:26:56,
gorm.go,707d70a,Saeid Kanishka,"refactor: translate error only when it is not nil (#6133)  * refactor: translate error only when it is not nil  * refactor: fix the error flow  * refactor: update the error if checks  * Update gorm.go  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>",385,389,,,1,2023-03-10 08:51:27,
gorm.go,befef0c,Jinzhu,Improve Hooks,438,439,,,0,2020-05-31 16:12:20,
gorm.go,f473761,Aayush Acharya,fix: added `SkipHooks` in db `getInstance()` (#6484),424,429,Jinzhu,98c4b78,1,2023-08-04 02:35:59,2022-01-28 11:26:10
gorm.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",441,444,,,0,2020-01-29 11:22:44,
gorm.go,5eaccaa,KantaHasegawa,"reafactor: add nil detection when sqldb return (#6373)  * reafactor: add null detection when sqldb return  * refactor: Detecting nil in dbConnector.GetDBConn()  * refactor: Revert partial code from c1ea73036715018a1bb55cdb8690441044e13a76  * fix: fix if statement",405,407,,,1,2023-06-05 08:24:00,
gorm.go,befef0c,Jinzhu,Improve Hooks,440,440,,,0,2020-05-31 16:12:20,
gorm.go,a0aceeb,Jinzhu,Migrator AlterColumn with full data type,446,446,Jinzhu,98c4b78,0,2022-02-10 02:40:48,2022-01-28 11:26:10
gorm.go,ad53074,Jinzhu,Pass db error to new instance,419,419,,,1,2021-04-09 03:07:14,
gorm.go,028c9d6,Jinzhu,Test Updates,445,445,,,0,2020-05-30 09:01:28,
gorm.go,aaf0725,Jinzhu,Refactor for performance,450,450,,,0,2020-06-08 09:21:26,
gorm.go,028c9d6,Jinzhu,Test Updates,447,449,,,0,2020-05-30 09:01:28,
gorm.go,aaf0725,Jinzhu,Refactor for performance,452,458,,,0,2020-06-08 09:21:26,
gorm.go,aaf0725,Jinzhu,Refactor for performance,461,462,,,0,2020-06-08 09:21:26,
gorm.go,661781a,Lev Zakharov,"feat: add *sql.DB connector that uses database context (#6366)  * feat: add SQLConnector  * rename",402,403,,,0,2023-06-05 08:25:05,
gorm.go,aaf0725,Jinzhu,Refactor for performance,464,464,,,0,2020-06-08 09:21:26,
gorm.go,aaf0725,Jinzhu,Refactor for performance,467,468,,,0,2020-06-08 09:21:26,
gorm.go,5eaccaa,KantaHasegawa,"reafactor: add nil detection when sqldb return (#6373)  * reafactor: add null detection when sqldb return  * refactor: Detecting nil in dbConnector.GetDBConn()  * refactor: Revert partial code from c1ea73036715018a1bb55cdb8690441044e13a76  * fix: fix if statement",410,410,,,1,2023-06-05 08:24:00,
gorm.go,aaf0725,Jinzhu,Refactor for performance,470,470,,,0,2020-06-08 09:21:26,
gorm.go,c13f301,heige,feat: adjust SetupJoinTable func if..else code (#4680),465,466,,,0,2021-10-08 03:05:50,
gorm.go,c13f301,heige,feat: adjust SetupJoinTable func if..else code (#4680),459,460,,,0,2021-10-08 03:05:50,
gorm.go,c13f301,heige,feat: adjust SetupJoinTable func if..else code (#4680),463,463,,,0,2021-10-08 03:05:50,
gorm.go,aaf0725,Jinzhu,Refactor for performance,481,482,,,0,2020-06-08 09:21:26,
gorm.go,fee1e4a,Jinzhu,Fix create foreign keys for many2many relations,487,487,,,1,2020-06-21 02:48:23,
gorm.go,109f239,Sérgio Prata Almeida,"add DB level propagation for the Unscoped flag (#7007)  * adds PropagateUnscoped to db Config  * adds PropagateUnscoped test  * adds PropagateUnscoped to Session and sets it accordingly",431,433,Jinzhu,98c4b78,0,2024-06-17 03:59:06,2022-01-28 11:26:10
gorm.go,c13f301,heige,feat: adjust SetupJoinTable func if..else code (#4680),469,469,,,0,2021-10-08 03:05:50,
gorm.go,a0aceeb,Jinzhu,Migrator AlterColumn with full data type,451,451,Jinzhu,a5bfe2f,0,2022-02-10 02:40:48,2021-01-07 03:45:40
gorm.go,aaf0725,Jinzhu,Refactor for performance,496,496,,,0,2020-06-08 09:21:26,
gorm.go,fee1e4a,Jinzhu,Fix create foreign keys for many2many relations,490,490,,,1,2020-06-21 02:48:23,
gorm.go,c13f301,heige,feat: adjust SetupJoinTable func if..else code (#4680),471,473,,,0,2021-10-08 03:05:50,
gorm.go,aaf0725,Jinzhu,Refactor for performance,498,500,,,0,2020-06-08 09:21:26,
gorm.go,f4bfc43,Jinzhu,Add register plugin API,501,501,,,0,2020-06-23 01:38:51,
gorm.go,c13f301,heige,feat: adjust SetupJoinTable func if..else code (#4680),475,480,,,0,2021-10-08 03:05:50,
gorm.go,c13f301,heige,feat: adjust SetupJoinTable func if..else code (#4680),483,486,,,0,2021-10-08 03:05:50,
gorm.go,f9131e3,Qt,reduce DB's Use method complexity and make it easier to understand (#3930),503,503,,,0,2021-01-10 02:15:48,
gorm.go,f9131e3,Qt,reduce DB's Use method complexity and make it easier to understand (#3930),505,505,,,0,2021-01-10 02:15:48,
gorm.go,f4bfc43,Jinzhu,Add register plugin API,504,504,,,0,2020-06-23 01:38:51,
gorm.go,f4bfc43,Jinzhu,Add register plugin API,506,507,,,0,2020-06-23 01:38:51,
gorm.go,c13f301,heige,feat: adjust SetupJoinTable func if..else code (#4680),488,489,,,0,2021-10-08 03:05:50,
gorm.go,f4bfc43,Jinzhu,Add register plugin API,513,513,,,0,2020-06-23 01:38:51,
gorm.go,c13f301,heige,feat: adjust SetupJoinTable func if..else code (#4680),491,495,,,0,2021-10-08 03:05:50,
gorm.go,f9131e3,Qt,reduce DB's Use method complexity and make it easier to understand (#3930),508,512,,,0,2021-01-10 02:15:48,
gorm.go,c13f301,heige,feat: adjust SetupJoinTable func if..else code (#4680),497,497,,,0,2021-10-08 03:05:50,
gorm.go,573b9fa,enwawerueli,fix: correct grammar,474,474,,,1,2022-08-15 02:28:36,
gorm.go,8de266b,Jason Lee,"Add ToSQL support to generate SQL string. (#4787)  * Add db.ToSQL method for generate SQL string.  * Improve sql builder test for all dialects.  Improve assertEqualSQL test helper for ignore quotes in SQL.",514,516,,,0,2021-11-01 09:08:54,
gorm.go,8de266b,Jason Lee,"Add ToSQL support to generate SQL string. (#4787)  * Add db.ToSQL method for generate SQL string.  * Improve sql builder test for all dialects.  Improve assertEqualSQL test helper for ignore quotes in SQL.",523,523,,,0,2021-11-01 09:08:54,
gorm.go,8de266b,Jason Lee,"Add ToSQL support to generate SQL string. (#4787)  * Add db.ToSQL method for generate SQL string.  * Improve sql builder test for all dialects.  Improve assertEqualSQL test helper for ignore quotes in SQL.",525,528,,,0,2021-11-01 09:08:54,
gorm.go,29a8557,Cao Manh Dat,ToSQL should enable SkipDefaultTransaction by default,524,524,,,0,2022-03-03 02:18:01,
gorm.go,ddd3cc2,Jinzhu,"Add ParameterizedQueries option support for logger, close #5288",517,522,,,0,2022-12-25 03:37:23,
gorm.go,a0aceeb,Jinzhu,Migrator AlterColumn with full data type,502,502,,,0,2022-02-10 02:40:48,
schema/naming.go,bc68fde,Jinzhu,Implement naming strategy,7,7,,,0,2020-01-31 06:17:02,
schema/naming.go,bc68fde,Jinzhu,Implement naming strategy,1,3,,,0,2020-01-31 06:17:02,
schema/naming.go,2b2f6e7,Jinzhu,Add SchemaName to NamingStrategy,6,6,heige,50e85e1,0,2021-08-11 08:20:29,2021-06-10 02:21:28
schema/naming.go,a855fe6,Sky34gl3,Fixed naming longer than 64 characters (#4310)  Co-authored-by: Mickael MAUGER <mickael.mauger@almerys.com>,5,5,Chris Faulkner,15a46bc,1,2021-04-22 05:11:19,2021-04-19 13:03:39
schema/naming.go,ad41985,Jinzhu,Parse Indexes,8,8,Jinzhu,3cbd233,0,2020-02-21 15:51:38,2020-02-01 16:03:56
schema/naming.go,bc68fde,Jinzhu,Implement naming strategy,9,9,,,0,2020-01-31 06:17:02,
schema/naming.go,5790ba9,Jinzhu,Fix package path,10,10,Jinzhu,e986371,1,2020-06-02 01:25:55,2020-06-02 01:18:01
schema/naming.go,ad41985,Jinzhu,Parse Indexes,4,4,Jinzhu,3cbd233,0,2020-02-21 15:51:38,2020-02-01 16:03:56
schema/naming.go,eea78f3,Jinzhu,Implement parse relationship architecture,17,17,Jinzhu,bc68fde,0,2020-02-01 04:46:52,2020-01-31 06:17:02
schema/naming.go,bc68fde,Jinzhu,Implement naming strategy,13,16,,,0,2020-01-31 06:17:02,
schema/naming.go,3cbd233,Jinzhu,Add more tests for parse schema relations,19,19,,,0,2020-02-01 16:03:56,
schema/naming.go,0f105ec,Ryuji Kokubu,"fix: strings.Title -> cases.Title bcs strings.Title library is deprecated (#6999)  * add: add cases library  * fix: strings.Title -> cases.Title  * run goimports to solve the error",11,12,black-06,9fea15a,1,2024-06-12 03:46:59,2023-10-30 09:15:49
schema/naming.go,1a526e6,Jinzhu,"Fix NamingStrategy with embedded struct, close #3513",20,20,Jinzhu,6e38a2c,1,2020-09-24 03:32:38,2020-09-06 02:51:21
schema/naming.go,0be4817,Jinzhu,Finish CreateConstraint,21,23,Jinzhu,ad41985,0,2020-02-22 03:15:51,2020-02-21 15:51:38
schema/naming.go,9fea15a,black-06,"feat: add MigrateColumnUnique (#6640)  * feat: add MigrateColumnUnique  * feat: define new methods  * delete debug in test",24,24,mohammad ali,26663ab,0,2023-10-30 09:15:49,2023-05-30 02:00:48
schema/naming.go,2b2f6e7,Jinzhu,Add SchemaName to NamingStrategy,18,18,heige,50e85e1,0,2021-08-11 08:20:29,2021-06-10 02:21:28
schema/naming.go,bc68fde,Jinzhu,Implement naming strategy,25,26,,,0,2020-01-31 06:17:02,
schema/naming.go,5744e29,Joel Nordell,"Replacer interface for more flexible NamingStrategy (#4042)  * Change NameReplacer to an interface, allowing custom Replacers.  * Add NoLowerCase option to skip the snake_casing of names.  * Move sync.Map from global variable into member of NamingStrategy.  This maintains backward compatibility by making the smap optional - the NamingStrategy still works if it is nil. gorm.Open activates it by calling Init() if the given Namer is a schema.NamingStrategy.  Also, this changes the key stored in the smap to be the original name, instead of the replaced name.  * Refactor NamingStrategy tests to add more assertions about how and when Replacers get called.  * Remove the name cache from NamingStrategy.",27,31,Jinzhu,db0cc4d,0,2021-02-14 00:16:24,2021-02-01 02:37:12
schema/naming.go,bc68fde,Jinzhu,Implement naming strategy,47,47,,,0,2020-01-31 06:17:02,
schema/naming.go,9fea15a,black-06,"feat: add MigrateColumnUnique (#6640)  * feat: add MigrateColumnUnique  * feat: define new methods  * delete debug in test",32,33,mohammad ali,26663ab,0,2023-10-30 09:15:49,2023-05-30 02:00:48
schema/naming.go,bc68fde,Jinzhu,Implement naming strategy,34,35,,,0,2020-01-31 06:17:02,
schema/naming.go,26663ab,mohammad ali,"max identifier length changed to 63 (#6337)  * max identifier length changed to 63  * default maxIdentifierLength is 64  * renamed License to LICENSE (#6336)  * Added support of ""Violates Foreign Key Constraint"" (#6329)  * Added support of ""Violates Foreign Key Constraint""  Updated the translator and added the support of ""foreign key constraint violation"". For this, this error type is needed here.  * changed the description of ErrForeignKeyViolated  * refactor: error translator test (#6350)  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>  * fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements (#6220)  * test: add nested transaction and prepareStmt coexist test case  note: please test in the MySQL environment  Change-Id: I0db32adc5f74b0d443e98943d3b182236583b959 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements  1. SavetPoint SQL Statement not support in Prepared Statements  e.g. see mysql8.0 doc: https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html  Change-Id: I082012db9b140e8ec69764c633724665cc802692 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * revert(transaction_api): remove savepoint name pool,meaningless  Change-Id: I84aa9924fc54612005a81c83d66fdf8968ee56ad Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  ---------  Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: 王柳洋 <wangliuyang.520@bytedance.com>  * fix: save with hook (#6285) (#6294)  ---------  Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: Avinaba Bhattacharjee <avinababhattacharjee2002@gmail.com> Co-authored-by: Muhammad Amir Ejaz <37077032+codingamir@users.noreply.github.com> Co-authored-by: Saeid <sk.saeidee@yahoo.com> Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com> Co-authored-by: wangliuyang <54885906+wangliuyang520@users.noreply.github.com> Co-authored-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: black-06 <hello.bug@foxmail.com>",36,40,Jin,2d5cb99,1,2023-05-30 02:00:48,2022-03-20 01:02:45
schema/naming.go,bc68fde,Jinzhu,Implement naming strategy,49,50,,,0,2020-01-31 06:17:02,
schema/naming.go,bc68fde,Jinzhu,Implement naming strategy,41,45,,,0,2020-01-31 06:17:02,
schema/naming.go,66e8a72,Jinzhu,"Support NameReplace for NamingStrategy, close #3779",48,48,alresvor,a4c0c6b,0,2020-11-23 03:24:07,2020-11-16 07:16:15
schema/naming.go,66e8a72,Jinzhu,"Support NameReplace for NamingStrategy, close #3779",46,46,Jinzhu,1a526e6,0,2020-11-23 03:24:07,2020-09-24 03:32:38
schema/naming.go,bc68fde,Jinzhu,Implement naming strategy,61,61,,,0,2020-01-31 06:17:02,
schema/naming.go,2b2f6e7,Jinzhu,Add SchemaName to NamingStrategy,51,60,heige,50e85e1,0,2021-08-11 08:20:29,2021-06-10 02:21:28
schema/naming.go,0be4817,Jinzhu,Finish CreateConstraint,66,67,Jinzhu,3cbd233,0,2020-02-22 03:15:51,2020-02-01 16:03:56
schema/naming.go,5744e29,Joel Nordell,"Replacer interface for more flexible NamingStrategy (#4042)  * Change NameReplacer to an interface, allowing custom Replacers.  * Add NoLowerCase option to skip the snake_casing of names.  * Move sync.Map from global variable into member of NamingStrategy.  This maintains backward compatibility by making the smap optional - the NamingStrategy still works if it is nil. gorm.Open activates it by calling Init() if the given Namer is a schema.NamingStrategy.  Also, this changes the key stored in the smap to be the original name, instead of the replaced name.  * Refactor NamingStrategy tests to add more assertions about how and when Replacers get called.  * Remove the name cache from NamingStrategy.",68,68,Jinzhu,66e8a72,0,2021-02-14 00:16:24,2020-11-23 03:24:07
schema/naming.go,a2faa41,Jinzhu,"Refactor NamingStrategy, close #3540",69,69,Jinzhu,1a526e6,0,2020-09-28 02:55:27,2020-09-24 03:32:38
schema/naming.go,66e8a72,Jinzhu,"Support NameReplace for NamingStrategy, close #3779",63,63,Jinzhu,1a526e6,0,2020-11-23 03:24:07,2020-09-24 03:32:38
schema/naming.go,ad41985,Jinzhu,Parse Indexes,62,62,,,0,2020-02-21 15:51:38,
schema/naming.go,ad41985,Jinzhu,Parse Indexes,64,65,,,0,2020-02-21 15:51:38,
schema/naming.go,2d048d9,Jinzhu,SingularTable for JoinTable,72,72,Jinzhu,ad41985,0,2020-06-29 23:29:15,2020-02-21 15:51:38
schema/naming.go,0be4817,Jinzhu,Finish CreateConstraint,76,79,,,0,2020-02-22 03:15:51,
schema/naming.go,0be4817,Jinzhu,Finish CreateConstraint,81,84,,,0,2020-02-22 03:15:51,
schema/naming.go,db0cc4d,Jinzhu,"Fix too long foreign key/checker names, close #4026",80,80,Jinzhu,66e8a72,1,2021-02-01 02:37:12,2020-11-23 03:24:07
schema/naming.go,2d048d9,Jinzhu,SingularTable for JoinTable,74,74,Jinzhu,ad41985,0,2020-06-29 23:29:15,2020-02-21 15:51:38
schema/naming.go,9fea15a,black-06,"feat: add MigrateColumnUnique (#6640)  * feat: add MigrateColumnUnique  * feat: define new methods  * delete debug in test",93,97,mohammad ali,26663ab,0,2023-10-30 09:15:49,2023-05-30 02:00:48
schema/naming.go,0be4817,Jinzhu,Finish CreateConstraint,86,88,,,0,2020-02-22 03:15:51,
schema/naming.go,6e38a2c,Jinzhu,Fix many2many join table name rule,70,71,Jinzhu,3cbd233,1,2020-09-06 02:51:21,2020-02-01 16:03:56
schema/naming.go,db0cc4d,Jinzhu,"Fix too long foreign key/checker names, close #4026",98,98,alresvor,a4c0c6b,1,2021-02-01 02:37:12,2020-11-16 07:16:15
schema/naming.go,ad41985,Jinzhu,Parse Indexes,89,89,,,0,2020-02-21 15:51:38,
schema/naming.go,2d5cb99,Jin,style: fix linter check for NamingStrategy and onConflictOption (#5174),99,99,codingxh,664c5fb,1,2022-03-20 01:02:45,2022-02-20 11:55:04
schema/naming.go,66e8a72,Jinzhu,"Support NameReplace for NamingStrategy, close #3779",75,75,Jinzhu,3cbd233,0,2020-11-23 03:24:07,2020-02-01 16:03:56
schema/naming.go,ad41985,Jinzhu,Parse Indexes,102,102,,,0,2020-02-21 15:51:38,
schema/naming.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",100,100,Joel Nordell,5744e29,1,2021-06-10 02:21:28,2021-02-14 00:16:24
schema/naming.go,26663ab,mohammad ali,"max identifier length changed to 63 (#6337)  * max identifier length changed to 63  * default maxIdentifierLength is 64  * renamed License to LICENSE (#6336)  * Added support of ""Violates Foreign Key Constraint"" (#6329)  * Added support of ""Violates Foreign Key Constraint""  Updated the translator and added the support of ""foreign key constraint violation"". For this, this error type is needed here.  * changed the description of ErrForeignKeyViolated  * refactor: error translator test (#6350)  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>  * fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements (#6220)  * test: add nested transaction and prepareStmt coexist test case  note: please test in the MySQL environment  Change-Id: I0db32adc5f74b0d443e98943d3b182236583b959 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements  1. SavetPoint SQL Statement not support in Prepared Statements  e.g. see mysql8.0 doc: https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html  Change-Id: I082012db9b140e8ec69764c633724665cc802692 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * revert(transaction_api): remove savepoint name pool,meaningless  Change-Id: I84aa9924fc54612005a81c83d66fdf8968ee56ad Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  ---------  Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: 王柳洋 <wangliuyang.520@bytedance.com>  * fix: save with hook (#6285) (#6294)  ---------  Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: Avinaba Bhattacharjee <avinababhattacharjee2002@gmail.com> Co-authored-by: Muhammad Amir Ejaz <37077032+codingamir@users.noreply.github.com> Co-authored-by: Saeid <sk.saeidee@yahoo.com> Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com> Co-authored-by: wangliuyang <54885906+wangliuyang520@users.noreply.github.com> Co-authored-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: black-06 <hello.bug@foxmail.com>",103,107,Jin,2d5cb99,1,2023-05-30 02:00:48,2022-03-20 01:02:45
schema/naming.go,2d5cb99,Jin,style: fix linter check for NamingStrategy and onConflictOption (#5174),101,101,Sivchari,adf85d5,1,2022-03-20 01:02:45,2021-03-04 11:44:15
schema/naming.go,66e8a72,Jinzhu,"Support NameReplace for NamingStrategy, close #3779",73,73,Jinzhu,3cbd233,0,2020-11-23 03:24:07,2020-02-01 16:03:56
schema/naming.go,15a46bc,Chris Faulkner,Fix some typos (#4294),109,109,Jinzhu,db0cc4d,1,2021-04-19 13:03:39,2021-02-01 02:37:12
schema/naming.go,ad41985,Jinzhu,Parse Indexes,108,108,,,0,2020-02-21 15:51:38,
schema/naming.go,ad41985,Jinzhu,Parse Indexes,110,111,,,0,2020-02-21 15:51:38,
schema/naming.go,bc68fde,Jinzhu,Implement naming strategy,115,117,,,0,2020-01-31 06:17:02,
schema/naming.go,bc68fde,Jinzhu,Implement naming strategy,118,123,,,0,2020-01-31 06:17:02,
schema/naming.go,ad41985,Jinzhu,Parse Indexes,113,113,,,0,2020-02-21 15:51:38,
schema/naming.go,bc68fde,Jinzhu,Implement naming strategy,125,125,,,0,2020-01-31 06:17:02,
schema/naming.go,db0cc4d,Jinzhu,"Fix too long foreign key/checker names, close #4026",90,92,,,1,2021-02-01 02:37:12,
schema/naming.go,15a46bc,Chris Faulkner,Fix some typos (#4294),114,114,Jinzhu,db0cc4d,1,2021-04-19 13:03:39,2021-02-01 02:37:12
schema/naming.go,0f105ec,Ryuji Kokubu,"fix: strings.Title -> cases.Title bcs strings.Title library is deprecated (#6999)  * add: add cases library  * fix: strings.Title -> cases.Title  * run goimports to solve the error",126,126,black-06,9fea15a,1,2024-06-12 03:46:59,2023-10-30 09:15:49
schema/naming.go,bc68fde,Jinzhu,Implement naming strategy,127,130,,,0,2020-01-31 06:17:02,
schema/naming.go,bc68fde,Jinzhu,Implement naming strategy,132,133,,,0,2020-01-31 06:17:02,
schema/naming.go,db0cc4d,Jinzhu,"Fix too long foreign key/checker names, close #4026",85,85,,,1,2021-02-01 02:37:12,
schema/naming.go,bc68fde,Jinzhu,Implement naming strategy,134,135,,,0,2020-01-31 06:17:02,
schema/naming.go,5744e29,Joel Nordell,"Replacer interface for more flexible NamingStrategy (#4042)  * Change NameReplacer to an interface, allowing custom Replacers.  * Add NoLowerCase option to skip the snake_casing of names.  * Move sync.Map from global variable into member of NamingStrategy.  This maintains backward compatibility by making the smap optional - the NamingStrategy still works if it is nil. gorm.Open activates it by calling Init() if the given Namer is a schema.NamingStrategy.  Also, this changes the key stored in the smap to be the original name, instead of the replaced name.  * Refactor NamingStrategy tests to add more assertions about how and when Replacers get called.  * Remove the name cache from NamingStrategy.",146,149,Jinzhu,db0cc4d,0,2021-02-14 00:16:24,2021-02-01 02:37:12
schema/naming.go,66e8a72,Jinzhu,"Support NameReplace for NamingStrategy, close #3779",144,145,Jinzhu,a2faa41,0,2020-11-23 03:24:07,2020-09-28 02:55:27
schema/naming.go,bc68fde,Jinzhu,Implement naming strategy,150,185,,,0,2020-01-31 06:17:02,
schema/naming.go,bc68fde,Jinzhu,Implement naming strategy,188,188,,,0,2020-01-31 06:17:02,
schema/naming.go,66e8a72,Jinzhu,"Support NameReplace for NamingStrategy, close #3779",136,136,,,0,2020-11-23 03:24:07,
schema/naming.go,66e8a72,Jinzhu,"Support NameReplace for NamingStrategy, close #3779",131,131,,,0,2020-11-23 03:24:07,
schema/naming.go,0f105ec,Ryuji Kokubu,"fix: strings.Title -> cases.Title bcs strings.Title library is deprecated (#6999)  * add: add cases library  * fix: strings.Title -> cases.Title  * run goimports to solve the error",191,191,black-06,9fea15a,1,2024-06-12 03:46:59,2023-10-30 09:15:49
schema/naming.go,adf85d5,Sivchari,"change the method of initializing slice (#4097)  * change the method of initializing slice and fixed the length to be specified as 0  * keep the association.go code in the var group  * keep the association.go code in the var group  * change to initializing in var group",124,124,,,1,2021-03-04 11:44:15,
schema/naming.go,a4c0c6b,alresvor,"cache converted name (#3736)  BenchmarkToName-8     	  2322307	       521 ns/op	      88 B/op	       5 allocs/op ↓ BenchmarkToName-8     	19997366	        55.0 ns/op	       0 B/op	       0 allocs/op",186,186,,,0,2020-11-16 07:16:15,
schema/naming.go,a4c0c6b,alresvor,"cache converted name (#3736)  BenchmarkToName-8     	  2322307	       521 ns/op	      88 B/op	       5 allocs/op ↓ BenchmarkToName-8     	19997366	        55.0 ns/op	       0 B/op	       0 allocs/op",187,187,,,0,2020-11-16 07:16:15,
schema/naming.go,d222151,li-jin-gou,"fix: replace empty table name result in panic (#5048)  * fix: replace empty name result in panic  * fix: replace empty table name result in panic",137,143,,,1,2022-02-08 09:06:10,
schema/naming.go,0f105ec,Ryuji Kokubu,"fix: strings.Title -> cases.Title bcs strings.Title library is deprecated (#6999)  * add: add cases library  * fix: strings.Title -> cases.Title  * run goimports to solve the error",193,193,black-06,9fea15a,1,2024-06-12 03:46:59,2023-10-30 09:15:49
schema/naming.go,26663ab,mohammad ali,"max identifier length changed to 63 (#6337)  * max identifier length changed to 63  * default maxIdentifierLength is 64  * renamed License to LICENSE (#6336)  * Added support of ""Violates Foreign Key Constraint"" (#6329)  * Added support of ""Violates Foreign Key Constraint""  Updated the translator and added the support of ""foreign key constraint violation"". For this, this error type is needed here.  * changed the description of ErrForeignKeyViolated  * refactor: error translator test (#6350)  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>  * fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements (#6220)  * test: add nested transaction and prepareStmt coexist test case  note: please test in the MySQL environment  Change-Id: I0db32adc5f74b0d443e98943d3b182236583b959 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements  1. SavetPoint SQL Statement not support in Prepared Statements  e.g. see mysql8.0 doc: https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html  Change-Id: I082012db9b140e8ec69764c633724665cc802692 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * revert(transaction_api): remove savepoint name pool,meaningless  Change-Id: I84aa9924fc54612005a81c83d66fdf8968ee56ad Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  ---------  Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: 王柳洋 <wangliuyang.520@bytedance.com>  * fix: save with hook (#6285) (#6294)  ---------  Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: Avinaba Bhattacharjee <avinababhattacharjee2002@gmail.com> Co-authored-by: Muhammad Amir Ejaz <37077032+codingamir@users.noreply.github.com> Co-authored-by: Saeid <sk.saeidee@yahoo.com> Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com> Co-authored-by: wangliuyang <54885906+wangliuyang520@users.noreply.github.com> Co-authored-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: black-06 <hello.bug@foxmail.com>",112,112,Joel Nordell,5744e29,1,2023-05-30 02:00:48,2021-02-14 00:16:24
schema/naming.go,2b2f6e7,Jinzhu,Add SchemaName to NamingStrategy,192,192,,,0,2021-08-11 08:20:29,
schema/naming.go,2b2f6e7,Jinzhu,Add SchemaName to NamingStrategy,194,196,,,0,2021-08-11 08:20:29,
schema/naming.go,2b2f6e7,Jinzhu,Add SchemaName to NamingStrategy,189,190,,,0,2021-08-11 08:20:29,
schema/schema_helper_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,5,5,Jinzhu,a4a0895,0,2020-02-01 16:03:56,2020-02-01 14:26:17
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,8,9,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,7,7,Jinzhu,a4a0895,0,2020-02-01 16:03:56,2020-02-01 14:26:17
schema/schema_helper_test.go,8bb05a5,Jinzhu,Refactor tests files,11,11,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
schema/schema_helper_test.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",4,4,Chris Faulkner,15a46bc,1,2022-02-19 09:02:53,2021-04-19 13:03:39
schema/schema_helper_test.go,e986371,Jinzhu,Rename package name,10,10,Jinzhu,49310d0,0,2020-06-02 01:18:01,2020-05-31 09:42:21
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,12,14,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,1,3,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",6,6,Jinzhu,d833efe,0,2020-02-15 12:28:03,2020-02-02 11:11:17
schema/schema_helper_test.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",16,16,Jinzhu,ea0b13f,0,2020-03-04 03:33:50,2020-02-21 23:59:09
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,15,15,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,18,23,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,24,24,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,17,17,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,25,25,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,31,31,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,30,30,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,26,29,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,32,32,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,15a46bc,Chris Faulkner,Fix some typos (#4294),33,33,Jinzhu,06de6e8,1,2021-04-19 13:03:39,2020-08-20 02:58:35
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,35,35,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,36,36,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,37,39,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,34,34,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,43,43,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,40,42,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,44,44,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,45,46,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,59,60,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,ea0b13f,Jinzhu,Refactor ParseTagSetting,47,47,Jinzhu,cbbf8f3,0,2020-02-21 23:59:09,2020-02-18 14:56:37
schema/schema_helper_test.go,06de6e8,Jinzhu,"Test same field name from embedded field, close #3291",61,61,Jinzhu,3313c11,0,2020-08-20 02:58:35,2020-08-19 11:15:27
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,50,52,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,62,62,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,3313c11,Jinzhu,"Fix embedded struct containing field named ID, close #3286",53,58,Jinzhu,96368eb,1,2020-08-19 11:15:27,2020-06-18 01:15:23
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,48,49,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,d50879c,Jinzhu,Add field permission test,63,66,Jinzhu,8bb05a5,0,2020-06-05 11:18:22,2020-06-02 02:50:38
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,68,68,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,67,67,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,69,69,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,74,76,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,d50879c,Jinzhu,Add field permission test,70,70,Jinzhu,8bb05a5,0,2020-06-05 11:18:22,2020-06-02 02:50:38
schema/schema_helper_test.go,3313c11,Jinzhu,"Fix embedded struct containing field named ID, close #3286",71,71,Jinzhu,96368eb,1,2020-08-19 11:15:27,2020-06-18 01:15:23
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,88,89,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,90,90,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,77,87,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,94,112,Jinzhu,a4a0895,0,2020-02-01 16:03:56,2020-02-01 14:26:17
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,91,93,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,122,124,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,125,128,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,120,121,Jinzhu,a4a0895,0,2020-02-01 16:03:56,2020-02-01 14:26:17
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,113,119,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,129,130,Jinzhu,a4a0895,0,2020-02-01 16:03:56,2020-02-01 14:26:17
schema/schema_helper_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,133,134,Jinzhu,a4a0895,0,2020-02-01 16:03:56,2020-02-01 14:26:17
schema/schema_helper_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,138,138,Jinzhu,a4a0895,0,2020-02-01 16:03:56,2020-02-01 14:26:17
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,139,139,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,137,137,Jinzhu,a4a0895,0,2020-02-01 16:03:56,2020-02-01 14:26:17
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,135,136,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,131,132,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,141,142,Jinzhu,a4a0895,0,2020-02-01 16:03:56,2020-02-01 14:26:17
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,143,146,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,155,155,Jinzhu,a4a0895,0,2020-02-01 16:03:56,2020-02-01 14:26:17
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,148,154,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,147,147,Jinzhu,a4a0895,0,2020-02-01 16:03:56,2020-02-01 14:26:17
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,157,160,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,156,156,Jinzhu,a4a0895,0,2020-02-01 16:03:56,2020-02-01 14:26:17
schema/schema_helper_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,161,161,Jinzhu,a4a0895,0,2020-02-01 16:03:56,2020-02-01 14:26:17
schema/schema_helper_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,168,170,Jinzhu,a4a0895,0,2020-02-01 16:03:56,2020-02-01 14:26:17
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,162,165,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,2fb4928,BugKillerPro,refactor: Resolve implicit memory aliasing in for loop (#6730),166,167,black-06,828e22b,1,2023-12-15 08:31:23,2023-04-11 05:10:38
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,178,179,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,180,180,Jinzhu,a4a0895,0,2020-02-01 16:03:56,2020-02-01 14:26:17
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,171,176,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,177,177,Jinzhu,a4a0895,0,2020-02-01 16:03:56,2020-02-01 14:26:17
schema/schema_helper_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,181,181,Jinzhu,a4a0895,0,2020-02-01 16:03:56,2020-02-01 14:26:17
schema/schema_helper_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,197,197,Jinzhu,a4a0895,0,2020-02-01 16:03:56,2020-02-01 14:26:17
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,182,196,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,198,199,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,200,200,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,8cb15ca,Jinzhu,Improve test structure,201,201,Jinzhu,3cbd233,0,2020-02-02 00:35:01,2020-02-01 16:03:56
schema/schema_helper_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",203,203,Jinzhu,d833efe,0,2020-02-15 12:28:03,2020-02-02 11:11:17
schema/schema_helper_test.go,d50879c,Jinzhu,Add field permission test,72,73,Jinzhu,3cbd233,0,2020-06-05 11:18:22,2020-02-01 16:03:56
schema/schema_helper_test.go,a4a0895,Jinzhu,Test parse schema relations,202,202,,,0,2020-02-01 14:26:17,
schema/schema_helper_test.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",204,234,Jinzhu,39d84cb,1,2023-04-11 05:10:38,2022-02-19 09:02:53
schema/schema_helper_test.go,49310d0,Jinzhu,"Test override foreign key, reference",140,140,Jinzhu,3cbd233,0,2020-05-31 09:42:21,2020-02-01 16:03:56
schema/schema_helper_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",235,237,,,0,2020-02-15 12:28:03,
schema/schema_helper_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",240,242,,,0,2020-02-15 12:28:03,
schema/schema_helper_test.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",239,239,,,0,2020-03-04 03:33:50,
schema/schema_helper_test.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",238,238,,,1,2022-02-19 09:02:53,
association.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",1,2,Jinzhu,f0d514e,0,2020-01-29 11:22:44,2020-01-28 08:22:07
association.go,20cb57b,Jinzhu,Add association Delete support,5,5,Jinzhu,922a8ef,0,2020-05-19 18:03:43,2020-05-19 13:50:06
association.go,e490e09,Jinzhu,Add SetupJoinTable support,6,6,Jinzhu,1559fe2,0,2020-06-01 15:58:22,2020-06-01 11:41:33
association.go,f999240,Jinzhu,"Define association API, add conds to when preloading",11,12,Jinzhu,5ccd76f,0,2020-05-14 12:54:50,2020-02-23 15:28:59
association.go,e986371,Jinzhu,Rename package name,8,10,Jinzhu,e490e09,0,2020-06-02 01:18:01,2020-06-01 15:58:22
association.go,f999240,Jinzhu,"Define association API, add conds to when preloading",7,7,Jinzhu,5ccd76f,0,2020-05-14 12:54:50,2020-02-23 15:28:59
association.go,f999240,Jinzhu,"Define association API, add conds to when preloading",15,16,Jinzhu,5ccd76f,0,2020-05-14 12:54:50,2020-02-23 15:28:59
association.go,f999240,Jinzhu,"Define association API, add conds to when preloading",3,4,Jinzhu,5ccd76f,0,2020-05-14 12:54:50,2020-02-23 15:28:59
association.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",13,14,,,0,2020-01-29 11:22:44,
association.go,f999240,Jinzhu,"Define association API, add conds to when preloading",22,22,Jinzhu,5ccd76f,0,2020-05-14 12:54:50,2020-02-23 15:28:59
association.go,f999240,Jinzhu,"Define association API, add conds to when preloading",18,18,Jinzhu,5ccd76f,0,2020-05-14 12:54:50,2020-02-23 15:28:59
association.go,32045fd,black-06,"feat: unscoped association (#5899) (#6246)  * feat: unscoped association (#5899)  * modify name because mysql character is latin1  * work only on has association  * format  * Unscoped on belongs_to association",17,17,black-06,42fc75c,0,2023-05-04 11:30:45,2023-02-18 01:19:24
association.go,f999240,Jinzhu,"Define association API, add conds to when preloading",24,25,Jinzhu,5ccd76f,0,2020-05-14 12:54:50,2020-02-23 15:28:59
association.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",19,19,,,0,2020-01-29 11:22:44,
association.go,f999240,Jinzhu,"Define association API, add conds to when preloading",27,29,Jinzhu,5ccd76f,0,2020-05-14 12:54:50,2020-02-23 15:28:59
association.go,91a6958,Jinzhu,Test Association For BelongsTo,26,26,Jinzhu,cbc4a81,0,2020-05-24 10:33:15,2020-05-24 03:35:19
association.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",30,30,heige,495ec4b,1,2021-06-10 02:21:28,2021-03-07 02:56:32
association.go,91a6958,Jinzhu,Test Association For BelongsTo,23,23,Jinzhu,cbc4a81,0,2020-05-24 10:33:15,2020-05-24 03:35:19
association.go,f999240,Jinzhu,"Define association API, add conds to when preloading",31,31,Jinzhu,5ccd76f,0,2020-05-14 12:54:50,2020-02-23 15:28:59
association.go,5ccd76f,Jinzhu,Setup Transaction,20,21,,,0,2020-02-23 15:28:59,
association.go,72460df,Jinzhu,Fix associations find,32,32,Jinzhu,0f21272,1,2020-05-23 03:57:28,2020-05-20 15:44:50
association.go,32045fd,black-06,"feat: unscoped association (#5899) (#6246)  * feat: unscoped association (#5899)  * modify name because mysql character is latin1  * work only on has association  * format  * Unscoped on belongs_to association",44,52,black-06,42fc75c,0,2023-05-04 11:30:45,2023-02-18 01:19:24
association.go,f999240,Jinzhu,"Define association API, add conds to when preloading",53,54,Jinzhu,5ccd76f,0,2020-05-14 12:54:50,2020-02-23 15:28:59
association.go,1f05cb7,Jinzhu,"Handle Associations with pointer of pointer, close #3130",33,36,Jinzhu,2ae0653,0,2020-07-10 14:53:03,2020-07-09 01:03:48
association.go,f999240,Jinzhu,"Define association API, add conds to when preloading",56,56,Jinzhu,5ccd76f,0,2020-05-14 12:54:50,2020-02-23 15:28:59
association.go,f999240,Jinzhu,"Define association API, add conds to when preloading",37,43,Jinzhu,5ccd76f,0,2020-05-14 12:54:50,2020-02-23 15:28:59
association.go,f999240,Jinzhu,"Define association API, add conds to when preloading",57,60,Jinzhu,5ccd76f,0,2020-05-14 12:54:50,2020-02-23 15:28:59
association.go,0f21272,Jinzhu,Finish implement association support,76,76,Jinzhu,20cb57b,0,2020-05-20 15:44:50,2020-05-19 18:03:43
association.go,0f21272,Jinzhu,Finish implement association support,69,71,Jinzhu,20cb57b,0,2020-05-20 15:44:50,2020-05-19 18:03:43
association.go,32045fd,black-06,"feat: unscoped association (#5899) (#6246)  * feat: unscoped association (#5899)  * modify name because mysql character is latin1  * work only on has association  * format  * Unscoped on belongs_to association",77,94,black-06,42fc75c,0,2023-05-04 11:30:45,2023-02-18 01:19:24
association.go,0f21272,Jinzhu,Finish implement association support,61,67,Jinzhu,20cb57b,0,2020-05-20 15:44:50,2020-05-19 18:03:43
association.go,94c6bb9,Jinzhu,Refactor association,68,68,Jinzhu,c19a3ab,0,2020-08-28 09:32:19,2020-08-28 03:31:13
association.go,c299cb8,Jinzhu,Refactor association,99,100,Jinzhu,8de2bb4,0,2020-05-26 03:19:01,2020-05-25 17:57:22
association.go,0f21272,Jinzhu,Finish implement association support,101,101,Jinzhu,20cb57b,0,2020-05-20 15:44:50,2020-05-19 18:03:43
association.go,c299cb8,Jinzhu,Refactor association,95,95,Jinzhu,cbc4a81,0,2020-05-26 03:19:01,2020-05-24 03:35:19
association.go,1559fe2,Jinzhu,Add more updates test,105,107,Jinzhu,8de2bb4,0,2020-06-01 11:41:33,2020-05-25 17:57:22
association.go,f999240,Jinzhu,"Define association API, add conds to when preloading",72,75,,,0,2020-05-14 12:54:50,
association.go,91a6958,Jinzhu,Test Association For BelongsTo,102,104,Jinzhu,cbc4a81,0,2020-05-24 10:33:15,2020-05-24 03:35:19
association.go,91a6958,Jinzhu,Test Association For BelongsTo,113,117,Jinzhu,cbc4a81,0,2020-05-24 10:33:15,2020-05-24 03:35:19
association.go,1559fe2,Jinzhu,Add more updates test,109,110,Jinzhu,8de2bb4,0,2020-06-01 11:41:33,2020-05-25 17:57:22
association.go,0867810,Jinzhu,"Support replace associations without the creation in association mode, close #3937",96,98,Qt,f4cfa94,0,2021-01-26 06:34:21,2020-07-26 02:03:58
association.go,c19a3ab,Jinzhu,"Fix self-referential belongs to, close #3319",118,118,Qt,f4cfa94,1,2020-08-28 03:31:13,2020-07-26 02:03:58
association.go,91a6958,Jinzhu,Test Association For BelongsTo,119,119,Jinzhu,cbc4a81,0,2020-05-24 10:33:15,2020-05-24 03:35:19
association.go,c299cb8,Jinzhu,Refactor association,125,127,Jinzhu,8de2bb4,0,2020-05-26 03:19:01,2020-05-25 17:57:22
association.go,0f21272,Jinzhu,Finish implement association support,123,124,Jinzhu,20cb57b,0,2020-05-20 15:44:50,2020-05-19 18:03:43
association.go,1559fe2,Jinzhu,Add more updates test,112,112,Jinzhu,8de2bb4,0,2020-06-01 11:41:33,2020-05-25 17:57:22
association.go,32045fd,black-06,"feat: unscoped association (#5899) (#6246)  * feat: unscoped association (#5899)  * modify name because mysql character is latin1  * work only on has association  * format  * Unscoped on belongs_to association",120,122,black-06,42fc75c,0,2023-05-04 11:30:45,2023-02-18 01:19:24
association.go,0f21272,Jinzhu,Finish implement association support,131,131,Jinzhu,20cb57b,0,2020-05-20 15:44:50,2020-05-19 18:03:43
association.go,c299cb8,Jinzhu,Refactor association,129,130,Jinzhu,8de2bb4,0,2020-05-26 03:19:01,2020-05-25 17:57:22
association.go,94c6bb9,Jinzhu,Refactor association,55,55,Jinzhu,20cb57b,0,2020-08-28 09:32:19,2020-05-19 18:03:43
association.go,c299cb8,Jinzhu,Refactor association,135,135,Jinzhu,8de2bb4,0,2020-05-26 03:19:01,2020-05-25 17:57:22
association.go,68a7a82,Jinzhu,Test HasOne Association,136,136,Jinzhu,20cb57b,0,2020-05-24 15:07:42,2020-05-19 18:03:43
association.go,68a7a82,Jinzhu,Test HasOne Association,132,132,Jinzhu,20cb57b,0,2020-05-24 15:07:42,2020-05-19 18:03:43
association.go,0f21272,Jinzhu,Finish implement association support,138,141,Jinzhu,20cb57b,0,2020-05-20 15:44:50,2020-05-19 18:03:43
association.go,91a6958,Jinzhu,Test Association For BelongsTo,137,137,Jinzhu,20cb57b,0,2020-05-24 10:33:15,2020-05-19 18:03:43
association.go,0f21272,Jinzhu,Finish implement association support,142,143,Jinzhu,20cb57b,0,2020-05-20 15:44:50,2020-05-19 18:03:43
association.go,0f21272,Jinzhu,Finish implement association support,146,147,Jinzhu,20cb57b,0,2020-05-20 15:44:50,2020-05-19 18:03:43
association.go,c299cb8,Jinzhu,Refactor association,148,148,Jinzhu,8de2bb4,0,2020-05-26 03:19:01,2020-05-25 17:57:22
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",149,149,heige,50e85e1,1,2022-02-19 09:02:53,2021-06-10 02:21:28
association.go,c299cb8,Jinzhu,Refactor association,144,145,Jinzhu,8de2bb4,0,2020-05-26 03:19:01,2020-05-25 17:57:22
association.go,32045fd,black-06,"feat: unscoped association (#5899) (#6246)  * feat: unscoped association (#5899)  * modify name because mysql character is latin1  * work only on has association  * format  * Unscoped on belongs_to association",151,155,black-06,42fc75c,0,2023-05-04 11:30:45,2023-02-18 01:19:24
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",128,128,Jinzhu,8de2bb4,1,2022-02-19 09:02:53,2020-05-25 17:57:22
association.go,5ec4fee,Jinzhu,Don't preload if foreign keys zero,156,156,Jinzhu,20cb57b,0,2020-05-23 13:09:03,2020-05-19 18:03:43
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",108,108,Jinzhu,e986371,1,2022-02-19 09:02:53,2020-06-02 01:18:01
association.go,0f21272,Jinzhu,Finish implement association support,164,165,Jinzhu,922a8ef,0,2020-05-20 15:44:50,2020-05-19 13:50:06
association.go,0f21272,Jinzhu,Finish implement association support,157,157,Jinzhu,922a8ef,0,2020-05-20 15:44:50,2020-05-19 13:50:06
association.go,2ae0653,Jinzhu,"Fix ambiguous column when using same column name in join table, close #3120",134,134,Jinzhu,8de2bb4,1,2020-07-09 01:03:48,2020-05-25 17:57:22
association.go,c299cb8,Jinzhu,Refactor association,158,163,Jinzhu,8de2bb4,0,2020-05-26 03:19:01,2020-05-25 17:57:22
association.go,0f21272,Jinzhu,Finish implement association support,174,174,Jinzhu,922a8ef,0,2020-05-20 15:44:50,2020-05-19 13:50:06
association.go,dea48a8,Jinzhu,Test Many2Many Association,166,173,Jinzhu,135d9f8,0,2020-05-25 16:16:44,2020-05-25 03:57:58
association.go,c299cb8,Jinzhu,Refactor association,175,175,Jinzhu,8de2bb4,0,2020-05-26 03:19:01,2020-05-25 17:57:22
association.go,0f21272,Jinzhu,Finish implement association support,176,178,Jinzhu,922a8ef,0,2020-05-20 15:44:50,2020-05-19 13:50:06
association.go,c299cb8,Jinzhu,Refactor association,181,181,Jinzhu,5d9b57c,0,2020-05-26 03:19:01,2020-05-25 03:11:09
association.go,dea48a8,Jinzhu,Test Many2Many Association,182,182,Jinzhu,5d9b57c,0,2020-05-25 16:16:44,2020-05-25 03:11:09
association.go,0f21272,Jinzhu,Finish implement association support,184,185,Jinzhu,20cb57b,0,2020-05-20 15:44:50,2020-05-19 18:03:43
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",186,186,heige,50e85e1,1,2022-02-19 09:02:53,2021-06-10 02:21:28
association.go,2ae0653,Jinzhu,"Fix ambiguous column when using same column name in join table, close #3120",150,150,Jinzhu,8de2bb4,1,2020-07-09 01:03:48,2020-05-25 17:57:22
association.go,2ae0653,Jinzhu,"Fix ambiguous column when using same column name in join table, close #3120",180,180,Jinzhu,8de2bb4,1,2020-07-09 01:03:48,2020-05-25 17:57:22
association.go,0f21272,Jinzhu,Finish implement association support,189,190,Jinzhu,922a8ef,0,2020-05-20 15:44:50,2020-05-19 13:50:06
association.go,c299cb8,Jinzhu,Refactor association,188,188,Jinzhu,5d9b57c,0,2020-05-26 03:19:01,2020-05-25 03:11:09
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",179,179,Jinzhu,1f05cb7,1,2022-02-19 09:02:53,2020-07-10 14:53:03
association.go,0f21272,Jinzhu,Finish implement association support,192,193,Jinzhu,922a8ef,0,2020-05-20 15:44:50,2020-05-19 13:50:06
association.go,2ae0653,Jinzhu,"Fix ambiguous column when using same column name in join table, close #3120",187,187,Jinzhu,8de2bb4,1,2020-07-09 01:03:48,2020-05-25 17:57:22
association.go,f4cfa94,Qt,define err with the same code style (#3199),183,183,Jinzhu,8de2bb4,0,2020-07-26 02:03:58,2020-05-25 17:57:22
association.go,4456df7,Jinzhu,Lint with golangci-lint,200,205,Jinzhu,1f05cb7,0,2020-07-16 03:27:12,2020-07-10 14:53:03
association.go,f999240,Jinzhu,"Define association API, add conds to when preloading",194,197,,,0,2020-05-14 12:54:50,
association.go,5d9b57c,Jinzhu,Test HasMany Association,210,210,Jinzhu,91eaf0b,0,2020-05-25 03:11:09,2020-05-24 15:43:42
association.go,d66af58,Deviller,"Fix Association.Replace() error returning (#3766)  * Fix Association.Replace() error returning  * Fallback to gorm.Model at TestAssociationNotNullClear()",191,191,Jinzhu,e986371,1,2020-11-19 11:24:34,2020-06-02 01:18:01
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",133,133,Jinzhu,8de2bb4,1,2022-02-19 09:02:53,2020-05-25 17:57:22
association.go,5d9b57c,Jinzhu,Test HasMany Association,211,212,Jinzhu,91eaf0b,0,2020-05-25 03:11:09,2020-05-24 15:43:42
association.go,135d9f8,Jinzhu,Test HasMany Association for Slice,213,214,Jinzhu,5d9b57c,0,2020-05-25 03:57:58,2020-05-25 03:11:09
association.go,20cb57b,Jinzhu,Add association Delete support,198,199,,,0,2020-05-19 18:03:43,
association.go,c299cb8,Jinzhu,Refactor association,219,219,Jinzhu,8de2bb4,0,2020-05-26 03:19:01,2020-05-25 17:57:22
association.go,0f21272,Jinzhu,Finish implement association support,218,218,Jinzhu,922a8ef,0,2020-05-20 15:44:50,2020-05-19 13:50:06
association.go,32045fd,black-06,"feat: unscoped association (#5899) (#6246)  * feat: unscoped association (#5899)  * modify name because mysql character is latin1  * work only on has association  * format  * Unscoped on belongs_to association",220,221,black-06,42fc75c,0,2023-05-04 11:30:45,2023-02-18 01:19:24
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",111,111,Jinzhu,677c745,1,2022-02-19 09:02:53,2020-05-24 13:46:53
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",230,230,heige,50e85e1,1,2022-02-19 09:02:53,2021-06-10 02:21:28
association.go,20cb57b,Jinzhu,Add association Delete support,206,209,,,0,2020-05-19 18:03:43,
association.go,c299cb8,Jinzhu,Refactor association,222,222,Jinzhu,8de2bb4,0,2020-05-26 03:19:01,2020-05-25 17:57:22
association.go,5d9b57c,Jinzhu,Test HasMany Association,229,229,Jinzhu,91eaf0b,0,2020-05-25 03:11:09,2020-05-24 15:43:42
association.go,5d9b57c,Jinzhu,Test HasMany Association,233,233,Jinzhu,91eaf0b,0,2020-05-25 03:11:09,2020-05-24 15:43:42
association.go,135d9f8,Jinzhu,Test HasMany Association for Slice,232,232,Jinzhu,91eaf0b,0,2020-05-25 03:57:58,2020-05-24 15:43:42
association.go,c299cb8,Jinzhu,Refactor association,234,234,Jinzhu,135d9f8,0,2020-05-26 03:19:01,2020-05-25 03:57:58
association.go,32045fd,black-06,"feat: unscoped association (#5899) (#6246)  * feat: unscoped association (#5899)  * modify name because mysql character is latin1  * work only on has association  * format  * Unscoped on belongs_to association",235,246,black-06,42fc75c,0,2023-05-04 11:30:45,2023-02-18 01:19:24
association.go,c299cb8,Jinzhu,Refactor association,247,247,Jinzhu,8de2bb4,0,2020-05-26 03:19:01,2020-05-25 17:57:22
association.go,32045fd,black-06,"feat: unscoped association (#5899) (#6246)  * feat: unscoped association (#5899)  * modify name because mysql character is latin1  * work only on has association  * format  * Unscoped on belongs_to association",248,249,black-06,42fc75c,0,2023-05-04 11:30:45,2023-02-18 01:19:24
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",251,251,heige,50e85e1,1,2022-02-19 09:02:53,2021-06-10 02:21:28
association.go,677c745,Jinzhu,Test shared association,257,257,Jinzhu,cbc4a81,0,2020-05-24 13:46:53,2020-05-24 03:35:19
association.go,c299cb8,Jinzhu,Refactor association,250,250,Jinzhu,8de2bb4,0,2020-05-26 03:19:01,2020-05-25 17:57:22
association.go,2ae0653,Jinzhu,"Fix ambiguous column when using same column name in join table, close #3120",231,231,Jinzhu,8de2bb4,1,2020-07-09 01:03:48,2020-05-25 17:57:22
association.go,20cb57b,Jinzhu,Add association Delete support,215,217,,,0,2020-05-19 18:03:43,
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",258,258,heige,50e85e1,1,2022-02-19 09:02:53,2021-06-10 02:21:28
association.go,2ae0653,Jinzhu,"Fix ambiguous column when using same column name in join table, close #3120",259,259,Jinzhu,e986371,1,2020-07-09 01:03:48,2020-06-02 01:18:01
association.go,32045fd,black-06,"feat: unscoped association (#5899) (#6246)  * feat: unscoped association (#5899)  * modify name because mysql character is latin1  * work only on has association  * format  * Unscoped on belongs_to association",262,266,black-06,42fc75c,0,2023-05-04 11:30:45,2023-02-18 01:19:24
association.go,5d9b57c,Jinzhu,Test HasMany Association,261,261,Jinzhu,91eaf0b,0,2020-05-25 03:11:09,2020-05-24 15:43:42
association.go,3d7019a,Cr,fix: throw err if association model miss primary key (#5187),252,256,heige,50e85e1,1,2022-03-24 01:34:06,2021-06-10 02:21:28
association.go,135d9f8,Jinzhu,Test HasMany Association for Slice,260,260,Jinzhu,91eaf0b,0,2020-05-25 03:57:58,2020-05-24 15:43:42
association.go,c299cb8,Jinzhu,Refactor association,272,272,Jinzhu,8de2bb4,0,2020-05-26 03:19:01,2020-05-25 17:57:22
association.go,c299cb8,Jinzhu,Refactor association,268,270,Jinzhu,8de2bb4,0,2020-05-26 03:19:01,2020-05-25 17:57:22
association.go,dea48a8,Jinzhu,Test Many2Many Association,273,287,Jinzhu,91eaf0b,0,2020-05-25 16:16:44,2020-05-24 15:43:42
association.go,3d7019a,Cr,fix: throw err if association model miss primary key (#5187),289,293,heige,50e85e1,1,2022-03-24 01:34:06,2021-06-10 02:21:28
association.go,20cb57b,Jinzhu,Add association Delete support,267,267,,,0,2020-05-19 18:03:43,
association.go,94c6bb9,Jinzhu,Refactor association,271,271,Jinzhu,1f05cb7,0,2020-08-28 09:32:19,2020-07-10 14:53:03
association.go,dea48a8,Jinzhu,Test Many2Many Association,297,298,Jinzhu,922a8ef,0,2020-05-25 16:16:44,2020-05-19 13:50:06
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",223,223,Jinzhu,135d9f8,1,2022-02-19 09:02:53,2020-05-25 03:57:58
association.go,20cb57b,Jinzhu,Add association Delete support,300,301,,,0,2020-05-19 18:03:43,
association.go,2ae0653,Jinzhu,"Fix ambiguous column when using same column name in join table, close #3120",296,296,Jinzhu,8de2bb4,1,2020-07-09 01:03:48,2020-05-25 17:57:22
association.go,dea48a8,Jinzhu,Test Many2Many Association,294,294,Jinzhu,cbc4a81,0,2020-05-25 16:16:44,2020-05-24 03:35:19
association.go,c299cb8,Jinzhu,Refactor association,302,302,Jinzhu,8de2bb4,0,2020-05-26 03:19:01,2020-05-25 17:57:22
association.go,3d7019a,Cr,fix: throw err if association model miss primary key (#5187),224,228,Jinzhu,8de2bb4,1,2022-03-24 01:34:06,2020-05-25 17:57:22
association.go,5d9b57c,Jinzhu,Test HasMany Association,305,305,Jinzhu,922a8ef,0,2020-05-25 03:11:09,2020-05-19 13:50:06
association.go,20cb57b,Jinzhu,Add association Delete support,306,306,,,0,2020-05-19 18:03:43,
association.go,c299cb8,Jinzhu,Refactor association,309,309,Jinzhu,5ec4fee,0,2020-05-26 03:19:01,2020-05-23 13:09:03
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",307,308,Jinzhu,c19a3ab,1,2022-02-19 09:02:53,2020-08-28 03:31:13
association.go,94c6bb9,Jinzhu,Refactor association,303,303,Jinzhu,5ec4fee,0,2020-08-28 09:32:19,2020-05-23 13:09:03
association.go,20cb57b,Jinzhu,Add association Delete support,310,310,,,0,2020-05-19 18:03:43,
association.go,5d9b57c,Jinzhu,Test HasMany Association,315,315,Jinzhu,f999240,0,2020-05-25 03:11:09,2020-05-14 12:54:50
association.go,20cb57b,Jinzhu,Add association Delete support,314,314,,,0,2020-05-19 18:03:43,
association.go,c299cb8,Jinzhu,Refactor association,313,313,Jinzhu,5ec4fee,0,2020-05-26 03:19:01,2020-05-23 13:09:03
association.go,c299cb8,Jinzhu,Refactor association,319,319,Jinzhu,5ec4fee,0,2020-05-26 03:19:01,2020-05-23 13:09:03
association.go,20cb57b,Jinzhu,Add association Delete support,317,318,,,0,2020-05-19 18:03:43,
association.go,20cb57b,Jinzhu,Add association Delete support,311,312,,,0,2020-05-19 18:03:43,
association.go,94c6bb9,Jinzhu,Refactor association,299,299,Jinzhu,8de2bb4,0,2020-08-28 09:32:19,2020-05-25 17:57:22
association.go,20cb57b,Jinzhu,Add association Delete support,320,323,,,0,2020-05-19 18:03:43,
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",304,304,Jinzhu,5ec4fee,1,2022-02-19 09:02:53,2020-05-23 13:09:03
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",295,295,Jinzhu,8de2bb4,1,2022-02-19 09:02:53,2020-05-25 17:57:22
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",316,316,Jinzhu,dea48a8,1,2022-02-19 09:02:53,2020-05-25 16:16:44
association.go,5d9b57c,Jinzhu,Test HasMany Association,326,326,Jinzhu,cbc4a81,0,2020-05-25 03:11:09,2020-05-24 03:35:19
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",331,331,heige,50e85e1,1,2022-02-19 09:02:53,2021-06-10 02:21:28
association.go,20cb57b,Jinzhu,Add association Delete support,328,328,,,0,2020-05-19 18:03:43,
association.go,c299cb8,Jinzhu,Refactor association,334,337,Jinzhu,dea48a8,0,2020-05-26 03:19:01,2020-05-25 16:16:44
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",324,324,Jinzhu,8de2bb4,1,2022-02-19 09:02:53,2020-05-25 17:57:22
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",338,338,heige,50e85e1,1,2022-02-19 09:02:53,2021-06-10 02:21:28
association.go,c299cb8,Jinzhu,Refactor association,339,339,Jinzhu,dea48a8,0,2020-05-26 03:19:01,2020-05-25 16:16:44
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",340,340,heige,50e85e1,1,2022-02-19 09:02:53,2021-06-10 02:21:28
association.go,c299cb8,Jinzhu,Refactor association,341,341,Jinzhu,dea48a8,0,2020-05-26 03:19:01,2020-05-25 16:16:44
association.go,5d9b57c,Jinzhu,Test HasMany Association,342,342,Jinzhu,cbc4a81,0,2020-05-25 03:11:09,2020-05-24 03:35:19
association.go,91a6958,Jinzhu,Test Association For BelongsTo,343,343,Jinzhu,20cb57b,0,2020-05-24 10:33:15,2020-05-19 18:03:43
association.go,c299cb8,Jinzhu,Refactor association,329,330,Jinzhu,f999240,0,2020-05-26 03:19:01,2020-05-14 12:54:50
association.go,20cb57b,Jinzhu,Add association Delete support,325,325,,,0,2020-05-19 18:03:43,
association.go,c299cb8,Jinzhu,Refactor association,359,359,Jinzhu,8de2bb4,0,2020-05-26 03:19:01,2020-05-25 17:57:22
association.go,20cb57b,Jinzhu,Add association Delete support,357,358,,,0,2020-05-19 18:03:43,
association.go,f999240,Jinzhu,"Define association API, add conds to when preloading",365,366,,,0,2020-05-14 12:54:50,
association.go,20cb57b,Jinzhu,Add association Delete support,344,356,,,0,2020-05-19 18:03:43,
association.go,cbc4a81,Jinzhu,Add Count tests,367,367,Jinzhu,20cb57b,0,2020-05-24 03:35:19,2020-05-19 18:03:43
association.go,922a8ef,Jinzhu,Generate Query Conds for Relationship,368,368,,,0,2020-05-19 13:50:06,
association.go,922a8ef,Jinzhu,Generate Query Conds for Relationship,370,370,,,0,2020-05-19 13:50:06,
association.go,922a8ef,Jinzhu,Generate Query Conds for Relationship,364,364,,,0,2020-05-19 13:50:06,
association.go,5ccd76f,Jinzhu,Setup Transaction,372,372,,,0,2020-02-23 15:28:59,
association.go,922a8ef,Jinzhu,Generate Query Conds for Relationship,371,371,,,0,2020-05-19 13:50:06,
association.go,f999240,Jinzhu,"Define association API, add conds to when preloading",360,363,,,0,2020-05-14 12:54:50,
association.go,457f1e5,Jinzhu,Test Many2Many Association for Slice,374,379,Jinzhu,91eaf0b,0,2020-05-25 17:21:15,2020-05-24 15:43:42
association.go,c299cb8,Jinzhu,Refactor association,383,383,Jinzhu,8de2bb4,0,2020-05-26 03:19:01,2020-05-25 17:57:22
association.go,91a6958,Jinzhu,Test Association For BelongsTo,381,382,Jinzhu,cbc4a81,0,2020-05-24 10:33:15,2020-05-24 03:35:19
association.go,94c6bb9,Jinzhu,Refactor association,369,369,Jinzhu,91eaf0b,0,2020-08-28 09:32:19,2020-05-24 15:43:42
association.go,91a6958,Jinzhu,Test Association For BelongsTo,384,384,Jinzhu,cbc4a81,0,2020-05-24 10:33:15,2020-05-24 03:35:19
association.go,0f21272,Jinzhu,Finish implement association support,380,380,,,0,2020-05-20 15:44:50,
association.go,0f21272,Jinzhu,Finish implement association support,373,373,,,0,2020-05-20 15:44:50,
association.go,c299cb8,Jinzhu,Refactor association,393,393,Jinzhu,91eaf0b,0,2020-05-26 03:19:01,2020-05-24 15:43:42
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",392,392,Jinzhu,0867810,1,2022-02-19 09:02:53,2021-01-26 06:34:21
association.go,457f1e5,Jinzhu,Test Many2Many Association for Slice,394,395,Jinzhu,dea48a8,0,2020-05-25 17:21:15,2020-05-25 16:16:44
association.go,91a6958,Jinzhu,Test Association For BelongsTo,396,396,Jinzhu,cbc4a81,0,2020-05-24 10:33:15,2020-05-24 03:35:19
association.go,78c6dfd,Sergei Sadov,"Fix association replace non-addressable panic (#7012)  * Fix association replace non-addressable panic  * Fix tests  * Add has one panic test  ---------  Co-authored-by: sgsv <->",399,402,black-06,32045fd,1,2024-06-12 10:49:45,2023-05-04 11:30:45
association.go,0f21272,Jinzhu,Finish implement association support,397,398,,,0,2020-05-20 15:44:50,
association.go,457f1e5,Jinzhu,Test Many2Many Association for Slice,405,406,Jinzhu,91eaf0b,0,2020-05-25 17:21:15,2020-05-24 15:43:42
association.go,c299cb8,Jinzhu,Refactor association,404,404,Jinzhu,8de2bb4,0,2020-05-26 03:19:01,2020-05-25 17:57:22
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",403,403,Jinzhu,ad8a5c0,1,2022-02-19 09:02:53,2020-12-25 08:35:25
association.go,0f21272,Jinzhu,Finish implement association support,385,391,,,0,2020-05-20 15:44:50,
association.go,0f21272,Jinzhu,Finish implement association support,413,413,,,0,2020-05-20 15:44:50,
association.go,0f21272,Jinzhu,Finish implement association support,408,410,,,0,2020-05-20 15:44:50,
association.go,91a6958,Jinzhu,Test Association For BelongsTo,407,407,,,0,2020-05-24 10:33:15,
association.go,0f21272,Jinzhu,Finish implement association support,418,425,,,0,2020-05-20 15:44:50,
association.go,0f21272,Jinzhu,Finish implement association support,427,427,,,0,2020-05-20 15:44:50,
association.go,457f1e5,Jinzhu,Test Many2Many Association for Slice,428,428,Jinzhu,6a0ef98,0,2020-05-25 17:21:15,2020-05-24 15:28:06
association.go,c299cb8,Jinzhu,Refactor association,429,430,Jinzhu,8de2bb4,0,2020-05-26 03:19:01,2020-05-25 17:57:22
association.go,457f1e5,Jinzhu,Test Many2Many Association for Slice,431,431,Jinzhu,2db3373,0,2020-05-25 17:21:15,2020-05-24 12:53:20
association.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",426,426,Jinzhu,1f05cb7,1,2021-06-10 02:21:28,2020-07-10 14:53:03
association.go,0f21272,Jinzhu,Finish implement association support,432,436,,,0,2020-05-20 15:44:50,
association.go,4456df7,Jinzhu,Lint with golangci-lint,332,333,Jinzhu,5ec4fee,0,2020-07-16 03:27:12,2020-05-23 13:09:03
association.go,5d9b57c,Jinzhu,Test HasMany Association,437,437,,,0,2020-05-25 03:11:09,
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",288,288,Jinzhu,922a8ef,1,2022-02-19 09:02:53,2020-05-19 13:50:06
association.go,78c6dfd,Sergei Sadov,"Fix association replace non-addressable panic (#7012)  * Fix association replace non-addressable panic  * Fix tests  * Add has one panic test  ---------  Co-authored-by: sgsv <->",440,443,black-06,32045fd,1,2024-06-12 10:49:45,2023-05-04 11:30:45
association.go,0f21272,Jinzhu,Finish implement association support,438,439,,,0,2020-05-20 15:44:50,
association.go,42fc75c,black-06,"fix: association concurrently appending (#6044)  * fix: association concurrently appending  * fix: fix unit test  * fix: fix gofumpt",411,412,Jinzhu,ad8a5c0,1,2023-02-18 01:19:24,2020-12-25 08:35:25
association.go,c299cb8,Jinzhu,Refactor association,453,453,Jinzhu,91a6958,0,2020-05-26 03:19:01,2020-05-24 10:33:15
association.go,0f21272,Jinzhu,Finish implement association support,449,452,,,0,2020-05-20 15:44:50,
association.go,0f21272,Jinzhu,Finish implement association support,445,447,,,0,2020-05-20 15:44:50,
association.go,0867810,Jinzhu,"Support replace associations without the creation in association mode, close #3937",462,474,Jinzhu,ad8a5c0,0,2021-01-26 06:34:21,2020-12-25 08:35:25
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",448,448,Jinzhu,ad8a5c0,1,2022-02-19 09:02:53,2020-12-25 08:35:25
association.go,0f21272,Jinzhu,Finish implement association support,475,476,,,0,2020-05-20 15:44:50,
association.go,c299cb8,Jinzhu,Refactor association,477,477,,,0,2020-05-26 03:19:01,
association.go,0867810,Jinzhu,"Support replace associations without the creation in association mode, close #3937",454,458,Jinzhu,1f05cb7,0,2021-01-26 06:34:21,2020-07-10 14:53:03
association.go,7598204,Jinzhu,"Support `FullSaveAssociations` for association mode, close #4010",480,488,Jinzhu,c19a3ab,0,2021-01-29 08:55:26,2020-08-28 03:31:13
association.go,42fc75c,black-06,"fix: association concurrently appending (#6044)  * fix: association concurrently appending  * fix: fix unit test  * fix: fix gofumpt",414,417,Jinzhu,ad8a5c0,1,2023-02-18 01:19:24,2020-12-25 08:35:25
association.go,5d9b57c,Jinzhu,Test HasMany Association,444,444,,,0,2020-05-25 03:11:09,
association.go,0f21272,Jinzhu,Finish implement association support,489,492,,,0,2020-05-20 15:44:50,
association.go,7598204,Jinzhu,"Support `FullSaveAssociations` for association mode, close #4010",459,461,Jinzhu,1f05cb7,0,2021-01-29 08:55:26,2020-07-10 14:53:03
association.go,0f21272,Jinzhu,Finish implement association support,494,495,,,0,2020-05-20 15:44:50,
association.go,c299cb8,Jinzhu,Refactor association,500,500,,,0,2020-05-26 03:19:01,
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",504,504,Deviller,d66af58,1,2022-02-19 09:02:53,2020-11-19 11:24:34
association.go,0f21272,Jinzhu,Finish implement association support,478,479,,,0,2020-05-20 15:44:50,
association.go,8de2bb4,Jinzhu,Test single table many2many association,501,503,,,0,2020-05-25 17:57:22,
association.go,8de2bb4,Jinzhu,Test single table many2many association,508,508,,,0,2020-05-25 17:57:22,
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",327,327,Jinzhu,cbc4a81,1,2022-02-19 09:02:53,2020-05-24 03:35:19
association.go,0f21272,Jinzhu,Finish implement association support,511,513,,,0,2020-05-20 15:44:50,
association.go,c299cb8,Jinzhu,Refactor association,514,514,,,0,2020-05-26 03:19:01,
association.go,0f21272,Jinzhu,Finish implement association support,517,520,,,0,2020-05-20 15:44:50,
association.go,78c6dfd,Sergei Sadov,"Fix association replace non-addressable panic (#7012)  * Fix association replace non-addressable panic  * Fix tests  * Add has one panic test  ---------  Co-authored-by: sgsv <->",521,523,black-06,32045fd,1,2024-06-12 10:49:45,2023-05-04 11:30:45
association.go,4456df7,Jinzhu,Lint with golangci-lint,505,507,,,0,2020-07-16 03:27:12,
association.go,2db3373,Jinzhu,Add Slice Association for BelongsTo,509,510,,,0,2020-05-24 12:53:20,
association.go,0f21272,Jinzhu,Finish implement association support,524,524,,,0,2020-05-20 15:44:50,
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",496,496,Jinzhu,c19a3ab,1,2022-02-19 09:02:53,2020-08-28 03:31:13
association.go,677c745,Jinzhu,Test shared association,516,516,,,0,2020-05-24 13:46:53,
association.go,c299cb8,Jinzhu,Refactor association,525,525,,,0,2020-05-26 03:19:01,
association.go,4456df7,Jinzhu,Lint with golangci-lint,497,499,Jinzhu,dea48a8,0,2020-07-16 03:27:12,2020-05-25 16:16:44
association.go,0f21272,Jinzhu,Finish implement association support,527,528,,,0,2020-05-20 15:44:50,
association.go,4456df7,Jinzhu,Lint with golangci-lint,533,533,,,0,2020-07-16 03:27:12,
association.go,8de2bb4,Jinzhu,Test single table many2many association,534,535,,,0,2020-05-25 17:57:22,
association.go,0f21272,Jinzhu,Finish implement association support,530,530,,,0,2020-05-20 15:44:50,
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",531,531,,,1,2022-02-19 09:02:53,
association.go,2db3373,Jinzhu,Add Slice Association for BelongsTo,538,539,,,0,2020-05-24 12:53:20,
association.go,0f21272,Jinzhu,Finish implement association support,540,542,,,0,2020-05-20 15:44:50,
association.go,c299cb8,Jinzhu,Refactor association,532,532,,,0,2020-05-26 03:19:01,
association.go,91a6958,Jinzhu,Test Association For BelongsTo,543,544,,,0,2020-05-24 10:33:15,
association.go,78c6dfd,Sergei Sadov,"Fix association replace non-addressable panic (#7012)  * Fix association replace non-addressable panic  * Fix tests  * Add has one panic test  ---------  Co-authored-by: sgsv <->",545,547,black-06,32045fd,1,2024-06-12 10:49:45,2023-05-04 11:30:45
association.go,0f21272,Jinzhu,Finish implement association support,548,549,,,0,2020-05-20 15:44:50,
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",536,536,,,1,2022-02-19 09:02:53,
association.go,8de2bb4,Jinzhu,Test single table many2many association,537,537,,,0,2020-05-25 17:57:22,
association.go,2db3373,Jinzhu,Add Slice Association for BelongsTo,552,552,,,0,2020-05-24 12:53:20,
association.go,677c745,Jinzhu,Test shared association,550,550,,,0,2020-05-24 13:46:53,
association.go,0867810,Jinzhu,"Support replace associations without the creation in association mode, close #3937",551,551,,,0,2021-01-26 06:34:21,
association.go,94c6bb9,Jinzhu,Refactor association,493,493,,,0,2020-08-28 09:32:19,
association.go,0f21272,Jinzhu,Finish implement association support,562,563,,,0,2020-05-20 15:44:50,
association.go,91a6958,Jinzhu,Test Association For BelongsTo,553,555,,,0,2020-05-24 10:33:15,
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",556,556,,,1,2022-02-19 09:02:53,
association.go,457f1e5,Jinzhu,Test Many2Many Association for Slice,557,561,,,0,2020-05-25 17:21:15,
association.go,495ec4b,heige,invalid db error and value and invalid value length error (#4151),515,515,,,1,2021-03-07 02:56:32,
association.go,94c6bb9,Jinzhu,Refactor association,529,529,,,0,2020-08-28 09:32:19,
association.go,0867810,Jinzhu,"Support replace associations without the creation in association mode, close #3937",526,526,,,0,2021-01-26 06:34:21,
association.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",567,567,,,1,2022-02-19 09:02:53,
association.go,94c6bb9,Jinzhu,Refactor association,568,573,,,0,2020-08-28 09:32:19,
association.go,cd03153,Goxiaoy,fix: context missing in association (#5214),574,574,,,1,2022-04-01 00:33:39,
association.go,94c6bb9,Jinzhu,Refactor association,564,566,,,0,2020-08-28 09:32:19,
association.go,94c6bb9,Jinzhu,Refactor association,585,593,,,0,2020-08-28 09:32:19,
association.go,2ba599e,Goxiaoy,"fix empty QueryClauses in association (#5502) (#5503)  * fix empty QueryClauses in association (#5502)  * test: empty QueryClauses in association (#5502)  * style: empty QueryClauses in association (#5502)  * style: empty QueryClauses in association (#5502)",579,581,,,1,2022-07-15 03:15:18,
association.go,94c6bb9,Jinzhu,Refactor association,575,578,,,0,2020-08-28 09:32:19,
association.go,94c6bb9,Jinzhu,Refactor association,582,583,,,0,2020-08-28 09:32:19,
association.go,ad8a5c0,Jinzhu,Add QueryFields mode when query many2many relations,584,584,,,0,2020-12-25 08:35:25,
schema/serializer.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",1,3,,,1,2022-02-19 09:02:53,
schema/serializer.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",10,35,,,1,2022-02-19 09:02:53,
schema/serializer.go,3741f25,jing1,feat: support gob serialize (#5108),4,4,Jinzhu,39d84cb,0,2022-02-24 02:21:27,2022-02-19 09:02:53
schema/serializer.go,3741f25,jing1,feat: support gob serialize (#5108),36,36,Jinzhu,39d84cb,0,2022-02-24 02:21:27,2022-02-19 09:02:53
schema/serializer.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",37,72,,,1,2022-02-19 09:02:53,
schema/serializer.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",9,9,,,1,2022-02-19 09:02:53,
schema/serializer.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",5,7,,,1,2022-02-19 09:02:53,
schema/serializer.go,3741f25,jing1,feat: support gob serialize (#5108),8,8,Jinzhu,39d84cb,0,2022-02-24 02:21:27,2022-02-19 09:02:53
schema/serializer.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",96,104,,,1,2022-02-19 09:02:53,
schema/serializer.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",74,86,,,1,2022-02-19 09:02:53,
schema/serializer.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",73,73,Jinzhu,a0f4d3f,1,2023-02-18 01:06:43,2022-10-18 08:25:39
schema/serializer.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",91,92,,,1,2022-02-19 09:02:53,
schema/serializer.go,ab5f80a,Jinzhu,Save as NULL for nil object serialized into json,105,105,hjwblog.com,6e03b97,0,2022-10-18 07:44:56,2022-07-27 05:59:47
schema/serializer.go,62fdc2b,Jinzhu,Fix serializer with empty string,93,95,Jinzhu,74e07b0,1,2022-07-11 03:51:05,2022-04-11 14:07:56
schema/serializer.go,a0f4d3f,Jinzhu,Save as empty string for not nullable nil field serialized into json,106,108,Jinzhu,ab5f80a,0,2022-10-18 08:25:39,2022-10-18 07:44:56
schema/serializer.go,4f62911,Jinzhu,Allow to support other field types,87,90,Jinzhu,e0c3be0,0,2024-06-20 08:45:38,2024-03-18 08:28:46
schema/serializer.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",111,114,,,1,2022-02-19 09:02:53,
schema/serializer.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",116,119,,,1,2022-02-19 09:02:53,
schema/serializer.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",122,128,,,1,2022-02-19 09:02:53,
schema/serializer.go,6e03b97,hjwblog.com,"fix: empty serilizer err #5524 (#5525)  * fix: empty serilizer err #5524  * feat: fix UnixSecondSerializer return nil  * feat: split type case  Co-authored-by: huanjiawei <huanjiawei@bytedance.com>",129,129,Jinzhu,62fdc2b,1,2022-07-27 05:59:47,2022-07-11 03:51:05
schema/serializer.go,6e03b97,hjwblog.com,"fix: empty serilizer err #5524 (#5525)  * fix: empty serilizer err #5524  * feat: fix UnixSecondSerializer return nil  * feat: split type case  Co-authored-by: huanjiawei <huanjiawei@bytedance.com>",131,131,Jinzhu,62fdc2b,1,2022-07-27 05:59:47,2022-07-11 03:51:05
schema/serializer.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",115,115,Jinzhu,a0f4d3f,1,2023-02-18 01:06:43,2022-10-18 08:25:39
schema/serializer.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",130,130,,,1,2022-02-19 09:02:53,
schema/serializer.go,74e07b0,Jinzhu,Serializer unixtime support ptr of int,120,121,jing1,3741f25,0,2022-04-11 14:07:56,2022-02-24 02:21:27
schema/serializer.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",138,142,,,1,2022-02-19 09:02:53,
schema/serializer.go,e0c3be0,Jinzhu,Fix tests in local,132,132,Michael Anstis,532e9cf,1,2024-03-18 08:28:46,2023-02-18 01:06:43
schema/serializer.go,6e03b97,hjwblog.com,"fix: empty serilizer err #5524 (#5525)  * fix: empty serilizer err #5524  * feat: fix UnixSecondSerializer return nil  * feat: split type case  Co-authored-by: huanjiawei <huanjiawei@bytedance.com>",133,136,Jinzhu,62fdc2b,1,2022-07-27 05:59:47,2022-07-11 03:51:05
schema/serializer.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",145,145,Jinzhu,a0f4d3f,1,2023-02-18 01:06:43,2022-10-18 08:25:39
schema/serializer.go,3741f25,jing1,feat: support gob serialize (#5108),146,158,Jinzhu,39d84cb,0,2022-02-24 02:21:27,2022-02-19 09:02:53
schema/serializer.go,3741f25,jing1,feat: support gob serialize (#5108),143,144,Jinzhu,39d84cb,0,2022-02-24 02:21:27,2022-02-19 09:02:53
schema/serializer.go,ab5f80a,Jinzhu,Save as NULL for nil object serialized into json,109,110,,,0,2022-10-18 07:44:56,
schema/serializer.go,e0c3be0,Jinzhu,Fix tests in local,137,137,Michael Anstis,532e9cf,1,2024-03-18 08:28:46,2023-02-18 01:06:43
schema/serializer.go,3741f25,jing1,feat: support gob serialize (#5108),163,173,,,0,2022-02-24 02:21:27,
schema/serializer.go,62fdc2b,Jinzhu,Fix serializer with empty string,159,162,Jinzhu,39d84cb,1,2022-07-11 03:51:05,2022-02-19 09:02:53
scan.go,ba25398,Jinzhu,Fix Pluck with Time and Scanner,7,7,Jinzhu,02fb382,1,2020-09-24 12:08:24,2020-09-11 07:01:02
scan.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",2,4,,,0,2020-03-04 03:33:50,
scan.go,5be642a,Jinzhu,Add ScanRows support,1,1,,,0,2020-05-26 15:13:05,
scan.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",8,8,,,0,2020-03-04 03:33:50,
scan.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",6,6,,,0,2020-03-04 03:33:50,
scan.go,e73147f,Jinzhu,"Better support for scan into map, fix unfriendly data type for interface, close #3351",5,5,Jinzhu,9d7df71,1,2020-09-01 09:45:14,2020-07-01 11:49:04
scan.go,e986371,Jinzhu,Rename package name,9,9,,,0,2020-06-02 01:18:01,
scan.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",10,10,Edward McFarlane,4ec73c9,1,2023-03-10 09:21:56,2022-12-19 03:49:05
scan.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",11,12,,,0,2020-03-04 03:33:50,
scan.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",13,13,Jinzhu,270e38c,1,2022-02-19 09:02:53,2021-11-29 06:23:10
scan.go,e73147f,Jinzhu,"Better support for scan into map, fix unfriendly data type for interface, close #3351",14,17,Jinzhu,9d7df71,1,2020-09-01 09:45:14,2020-07-01 11:49:04
scan.go,e73147f,Jinzhu,"Better support for scan into map, fix unfriendly data type for interface, close #3351",19,25,Jinzhu,9d7df71,1,2020-09-01 09:45:14,2020-07-01 11:49:04
scan.go,9f27377,Aman,"fix deprecated reflect.PtrTo reflect.PointerTo usage (#7366)  * fix deprecated reflect.PtrTo reflect.PointerTo usage  * replace all deprecated reflect.PtrTo reflect.PointerTo usage",26,26,molon,11c4331,1,2025-02-13 06:16:26,2024-06-24 09:42:59
scan.go,e73147f,Jinzhu,"Better support for scan into map, fix unfriendly data type for interface, close #3351",27,52,Jinzhu,9d7df71,1,2020-09-01 09:45:14,2020-07-01 11:49:04
scan.go,9f27377,Aman,"fix deprecated reflect.PtrTo reflect.PointerTo usage (#7366)  * fix deprecated reflect.PtrTo reflect.PointerTo usage  * replace all deprecated reflect.PtrTo reflect.PointerTo usage",18,18,molon,11c4331,1,2025-02-13 06:16:26,2024-06-24 09:42:59
scan.go,43a72b3,Jinzhu,Refactor Scan,54,55,Jinzhu,68bb537,0,2022-02-27 16:16:57,2022-02-27 01:09:29
scan.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",53,53,Edward McFarlane,4ec73c9,1,2023-03-10 09:21:56,2022-12-19 03:49:05
scan.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",56,56,Jinzhu,270e38c,1,2022-02-19 09:02:53,2021-11-29 06:23:10
scan.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",68,68,Edward McFarlane,4ec73c9,1,2023-03-10 09:21:56,2022-12-19 03:49:05
scan.go,43a72b3,Jinzhu,Refactor Scan,57,57,Jinzhu,68bb537,0,2022-02-27 16:16:57,2022-02-27 01:09:29
scan.go,f78f635,jesse.tang,Optimize: code logic db.scanIntoStruct() (#5633),70,73,Cr,8d45714,0,2022-09-05 07:34:33,2022-06-14 05:48:50
scan.go,af3fbdc,Jinzhu,Improve returning support,63,67,Jinzhu,ab35533,0,2021-10-26 14:40:14,2021-09-17 10:35:14
scan.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",74,74,Edward McFarlane,4ec73c9,1,2023-03-10 09:21:56,2022-12-19 03:49:05
scan.go,e2e802b,Jinzhu,Refactor Scan,69,69,Jinzhu,43a72b3,0,2022-02-28 05:00:30,2022-02-27 16:16:57
scan.go,68bb537,Jinzhu,Refactor scan into struct,58,62,Jinzhu,270e38c,0,2022-02-27 01:09:29,2021-11-29 06:23:10
scan.go,f78f635,jesse.tang,Optimize: code logic db.scanIntoStruct() (#5633),75,75,Cr,8d45714,0,2022-09-05 07:34:33,2022-06-14 05:48:50
scan.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",76,94,Edward McFarlane,4ec73c9,1,2023-03-10 09:21:56,2022-12-19 03:49:05
scan.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",96,98,Edward McFarlane,4ec73c9,1,2023-03-10 09:21:56,2022-12-19 03:49:05
scan.go,f78f635,jesse.tang,Optimize: code logic db.scanIntoStruct() (#5633),95,95,Cr,8d45714,0,2022-09-05 07:34:33,2022-06-14 05:48:50
scan.go,af3fbdc,Jinzhu,Improve returning support,111,113,Jinzhu,ab35533,0,2021-10-26 14:40:14,2021-09-17 10:35:14
scan.go,af3fbdc,Jinzhu,Improve returning support,106,107,Jinzhu,ab35533,0,2021-10-26 14:40:14,2021-09-17 10:35:14
scan.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",114,114,Jinzhu,270e38c,1,2022-02-19 09:02:53,2021-11-29 06:23:10
scan.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",100,105,Edward McFarlane,4ec73c9,1,2023-03-10 09:21:56,2022-12-19 03:49:05
scan.go,af3fbdc,Jinzhu,Improve returning support,118,118,Jinzhu,ab35533,0,2021-10-26 14:40:14,2021-09-17 10:35:14
scan.go,af3fbdc,Jinzhu,Improve returning support,115,116,Jinzhu,ab35533,0,2021-10-26 14:40:14,2021-09-17 10:35:14
scan.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",117,117,Jinzhu,270e38c,1,2022-02-19 09:02:53,2021-11-29 06:23:10
scan.go,e2e802b,Jinzhu,Refactor Scan,99,99,Jinzhu,270e38c,0,2022-02-28 05:00:30,2021-11-29 06:23:10
scan.go,11c4331,molon,"feat: add MapColumns method (#6901)  * add MapColumns method  * fix MapColumns desc  * add TestMapColumns",134,142,Waleed Masoom,73a988c,1,2024-06-24 09:42:59,2024-06-12 10:57:36
scan.go,af3fbdc,Jinzhu,Improve returning support,126,133,Jinzhu,ab35533,0,2021-10-26 14:40:14,2021-09-17 10:35:14
scan.go,270e38c,Jinzhu,"Fix duplicated error when Scan, close #4525",119,121,Jinzhu,835d7bd,1,2021-11-29 06:23:10,2021-10-27 23:56:55
scan.go,9eec6ae,Jinzhu,"Fix affected rows for Scan, change affected rows count for row/rows to '-', close #3532",143,143,Jinzhu,02fb382,1,2020-09-27 04:25:38,2020-09-11 07:01:02
scan.go,af3fbdc,Jinzhu,Improve returning support,122,123,Jinzhu,ab35533,0,2021-10-26 14:40:14,2021-09-17 10:35:14
scan.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",144,146,,,0,2020-03-04 03:33:50,
scan.go,5be642a,Jinzhu,Add ScanRows support,147,147,,,0,2020-05-26 15:13:05,
scan.go,f78f635,jesse.tang,Optimize: code logic db.scanIntoStruct() (#5633),108,110,Jinzhu,f92e674,0,2022-09-05 07:34:33,2022-03-23 09:24:25
scan.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",151,151,,,0,2020-03-04 03:33:50,
scan.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,150,150,,,1,2020-06-02 15:30:26,
scan.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",153,153,,,0,2020-03-04 03:33:50,
scan.go,2b56fa0,Jinzhu,Fix Scanner tests on mssql,152,152,,,1,2020-05-30 17:21:16,
scan.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,154,156,,,1,2020-06-02 15:30:26,
scan.go,e73147f,Jinzhu,"Better support for scan into map, fix unfriendly data type for interface, close #3351",148,149,,,1,2020-09-01 09:45:14,
scan.go,9635d25,Jinzhu,Fix query with uninitialized map,157,159,Jinzhu,ab35533,1,2021-11-01 05:00:52,2021-09-17 10:35:14
scan.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,160,161,,,1,2020-06-02 15:30:26,
scan.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",164,164,,,0,2020-03-04 03:33:50,
scan.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",162,162,,,0,2020-03-04 03:33:50,
scan.go,e73147f,Jinzhu,"Better support for scan into map, fix unfriendly data type for interface, close #3351",163,163,,,1,2020-09-01 09:45:14,
scan.go,5be642a,Jinzhu,Add ScanRows support,167,167,,,0,2020-05-26 15:13:05,
scan.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,169,169,,,1,2020-06-02 15:30:26,
scan.go,9dd6ed9,Jinzhu,Scan with Rows interface,125,125,Jinzhu,9f53395,0,2022-03-29 10:14:37,2021-10-28 09:12:31
scan.go,e73147f,Jinzhu,"Better support for scan into map, fix unfriendly data type for interface, close #3351",168,168,,,1,2020-09-01 09:45:14,
scan.go,5be642a,Jinzhu,Add ScanRows support,170,170,,,0,2020-05-26 15:13:05,
scan.go,2b56fa0,Jinzhu,Fix Scanner tests on mssql,172,172,,,1,2020-05-30 17:21:16,
scan.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",171,171,,,0,2020-03-04 03:33:50,
scan.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",173,173,,,0,2020-03-04 03:33:50,
scan.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,174,174,,,1,2020-06-02 15:30:26,
scan.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",177,177,,,0,2020-03-04 03:33:50,
scan.go,e73147f,Jinzhu,"Better support for scan into map, fix unfriendly data type for interface, close #3351",166,166,,,1,2020-09-01 09:45:14,
scan.go,e73147f,Jinzhu,"Better support for scan into map, fix unfriendly data type for interface, close #3351",175,175,,,1,2020-09-01 09:45:14,
scan.go,cbc4a81,Jinzhu,Add Count tests,186,186,,,0,2020-05-24 03:35:19,
scan.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",176,176,Jinzhu,270e38c,1,2022-02-19 09:02:53,2021-11-29 06:23:10
scan.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",124,124,Jinzhu,ab35533,1,2022-02-19 09:02:53,2021-09-17 10:35:14
scan.go,cbc4a81,Jinzhu,Add Count tests,188,188,,,0,2020-05-24 03:35:19,
scan.go,5be642a,Jinzhu,Add ScanRows support,184,185,,,0,2020-05-26 15:13:05,
scan.go,2b56fa0,Jinzhu,Fix Scanner tests on mssql,187,187,,,1,2020-05-30 17:21:16,
scan.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",189,189,,,0,2020-03-04 03:33:50,
scan.go,af3fbdc,Jinzhu,Improve returning support,190,190,Jinzhu,ab35533,0,2021-10-26 14:40:14,2021-09-17 10:35:14
scan.go,43a72b3,Jinzhu,Refactor Scan,197,197,Jinzhu,68bb537,0,2022-02-27 16:16:57,2022-02-27 01:09:29
scan.go,af3fbdc,Jinzhu,Improve returning support,195,196,Jinzhu,ab35533,0,2021-10-26 14:40:14,2021-09-17 10:35:14
scan.go,12bbde8,Jinzhu,Fix Scan with interface,198,199,Jinzhu,c73fe96,1,2021-09-17 06:04:19,2021-07-13 11:59:31
scan.go,41e52f3,SmallTianTian,fix: scan more base type and sql.NullXXX (#3813),178,183,,,1,2020-12-02 06:00:16,
scan.go,9075b33,Jinzhu,Query with smaller struct,200,200,,,0,2020-07-01 00:56:21,
scan.go,95a6539,Jinzhu,Test Pluck,214,215,,,0,2020-05-31 13:11:20,
scan.go,af3fbdc,Jinzhu,Improve returning support,216,216,Jinzhu,ab35533,0,2021-10-26 14:40:14,2021-09-17 10:35:14
scan.go,1e241aa,Jinzhu,Reduce GC alloc,219,219,Jinzhu,9eec6ae,0,2020-11-10 13:23:20,2020-09-27 04:25:38
scan.go,af3fbdc,Jinzhu,Improve returning support,218,218,Jinzhu,ab35533,0,2021-10-26 14:40:14,2021-09-17 10:35:14
scan.go,af3fbdc,Jinzhu,Improve returning support,220,221,Jinzhu,ab35533,0,2021-10-26 14:40:14,2021-09-17 10:35:14
scan.go,af3fbdc,Jinzhu,Improve returning support,201,213,Jinzhu,ab35533,0,2021-10-26 14:40:14,2021-09-17 10:35:14
scan.go,43a72b3,Jinzhu,Refactor Scan,217,217,Jinzhu,e953880,0,2022-02-27 16:16:57,2021-10-28 01:17:33
scan.go,a3cc6c6,Stephano George,"Fix: wrong value when Find with Join with same column name, close #5723, #5711",193,194,Jinzhu,68bb537,1,2022-09-30 09:18:42,2022-02-27 01:09:29
scan.go,ba25398,Jinzhu,Fix Pluck with Time and Scanner,222,223,,,1,2020-09-24 12:08:24,
scan.go,a3cc6c6,Stephano George,"Fix: wrong value when Find with Join with same column name, close #5723, #5711",191,191,Jinzhu,68bb537,1,2022-09-30 09:18:42,2022-02-27 01:09:29
scan.go,43a72b3,Jinzhu,Refactor Scan,224,226,Jinzhu,ab35533,0,2022-02-27 16:16:57,2021-09-17 10:35:14
scan.go,a3cc6c6,Stephano George,"Fix: wrong value when Find with Join with same column name, close #5723, #5711",230,236,Jinzhu,68bb537,1,2022-09-30 09:18:42,2022-02-27 01:09:29
scan.go,a3cc6c6,Stephano George,"Fix: wrong value when Find with Join with same column name, close #5723, #5711",244,244,jesse.tang,1f634c3,1,2022-09-30 09:18:42,2022-09-22 06:50:35
scan.go,7e13b03,Cr,"fix: duplicate column scan (#5369)  * fix: duplicate column scan  * fix: dup filed in inconsistent schema and database  * chore[ci skip]: gofumpt style  * chore[ci skip]: fix typo",237,239,Jinzhu,68bb537,1,2022-05-28 14:18:07,2022-02-27 01:09:29
scan.go,43a72b3,Jinzhu,Refactor Scan,228,229,Jinzhu,ab35533,0,2022-02-27 16:16:57,2021-09-17 10:35:14
scan.go,a3cc6c6,Stephano George,"Fix: wrong value when Find with Join with same column name, close #5723, #5711",240,240,jesse.tang,1f634c3,1,2022-09-30 09:18:42,2022-09-22 06:50:35
scan.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",246,246,Edward McFarlane,4ec73c9,1,2023-03-10 09:21:56,2022-12-19 03:49:05
scan.go,43a72b3,Jinzhu,Refactor Scan,247,247,Jinzhu,68bb537,0,2022-02-27 16:16:57,2022-02-27 01:09:29
scan.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",192,192,Jinzhu,ab35533,1,2023-03-10 09:21:56,2021-09-17 10:35:14
scan.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",248,255,Edward McFarlane,4ec73c9,1,2023-03-10 09:21:56,2022-12-19 03:49:05
scan.go,43a72b3,Jinzhu,Refactor Scan,259,261,Jinzhu,68bb537,0,2022-02-27 16:16:57,2022-02-27 01:09:29
scan.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",257,258,Edward McFarlane,4ec73c9,1,2023-03-10 09:21:56,2022-12-19 03:49:05
scan.go,5e599a0,hakusai22,"fix: typo (#7003)  * fix: typo  * fix: covered",256,256,Edward McFarlane,4ec73c9,1,2024-05-08 04:07:58,2022-12-19 03:49:05
scan.go,43a72b3,Jinzhu,Refactor Scan,263,263,Jinzhu,68bb537,0,2022-02-27 16:16:57,2022-02-27 01:09:29
scan.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",165,165,Dakatan,acedbb8,1,2022-02-19 09:02:53,2020-11-30 02:09:08
scan.go,f3e2da5,Hasan,"Added offset when scanning the result back to struct, close #5143  commit 9a2058164d44c98d7b586b87bed1757f89d6fad7 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 22:34:19 2022 +0800      Refactor #5143  commit c259de21768936428c9d89f7b31afb95b8acb36a Author: Hasan <mr.k779@outlook.com> Date:   Mon Mar 14 20:04:01 2022 +0545      Update scan_test.go  commit 09f127b49151a52fbb8b354a03e6610d4f70262f Author: Hasan <mr.k779@outlook.com> Date:   Mon Mar 14 19:23:47 2022 +0545      Added test for scanning embedded data into structs  commit aeaca493cf412def7813d36fd6a68acc832bf79f Author: Hasan <mr.k779@outlook.com> Date:   Tue Mar 8 04:08:16 2022 +0600      Added offset when scanning the result back to struct",245,245,Jinzhu,ab35533,0,2022-03-17 14:52:40,2021-09-17 10:35:14
scan.go,f3e2da5,Hasan,"Added offset when scanning the result back to struct, close #5143  commit 9a2058164d44c98d7b586b87bed1757f89d6fad7 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 22:34:19 2022 +0800      Refactor #5143  commit c259de21768936428c9d89f7b31afb95b8acb36a Author: Hasan <mr.k779@outlook.com> Date:   Mon Mar 14 20:04:01 2022 +0545      Update scan_test.go  commit 09f127b49151a52fbb8b354a03e6610d4f70262f Author: Hasan <mr.k779@outlook.com> Date:   Mon Mar 14 19:23:47 2022 +0545      Added test for scanning embedded data into structs  commit aeaca493cf412def7813d36fd6a68acc832bf79f Author: Hasan <mr.k779@outlook.com> Date:   Tue Mar 8 04:08:16 2022 +0600      Added offset when scanning the result back to struct",241,243,Jinzhu,ab35533,0,2022-03-17 14:52:40,2021-09-17 10:35:14
scan.go,a3cc6c6,Stephano George,"Fix: wrong value when Find with Join with same column name, close #5723, #5711",227,227,Jinzhu,68bb537,1,2022-09-30 09:18:42,2022-02-27 01:09:29
scan.go,af3fbdc,Jinzhu,Improve returning support,277,280,Jinzhu,ab35533,0,2021-10-26 14:40:14,2021-09-17 10:35:14
scan.go,9d370bc,Wenli Looi,Fix handling of unknown column types (#6540),269,270,Jinzhu,2c56954,1,2024-04-26 09:53:11,2022-10-08 12:48:22
scan.go,9d370bc,Wenli Looi,Fix handling of unknown column types (#6540),272,273,Jinzhu,2c56954,1,2024-04-26 09:53:11,2022-10-08 12:48:22
scan.go,4ec73c9,Edward McFarlane,"Add test case for embedded value selects (#5901)  * Add test case for embedded value selects  * Revert recycle struct optimisation to avoid pointer overwrites",282,283,jesse.tang,1f634c3,0,2022-12-19 03:49:05,2022-09-22 06:50:35
scan.go,101a7c7,Cr,fix: scan array (#5624)  Co-authored-by: Jinzhu <wosmvp@gmail.com>,284,284,Cr,7e13b03,1,2022-09-22 07:51:47,2022-05-28 14:18:07
scan.go,43a72b3,Jinzhu,Refactor Scan,266,268,Jinzhu,673053f,0,2022-02-27 16:16:57,2021-04-09 02:21:01
scan.go,101a7c7,Cr,fix: scan array (#5624)  Co-authored-by: Jinzhu <wosmvp@gmail.com>,281,281,Cr,7e13b03,1,2022-09-22 07:51:47,2022-05-28 14:18:07
scan.go,af3fbdc,Jinzhu,Improve returning support,285,285,Jinzhu,ab35533,0,2021-10-26 14:40:14,2021-09-17 10:35:14
scan.go,43a72b3,Jinzhu,Refactor Scan,274,276,Ben,cc61202,0,2022-02-27 16:16:57,2021-01-27 03:50:15
scan.go,7b1fb0b,jessetang,"fix(scan): array element is set to a zero value (#6890)  * fix(scan): array element is set to a zero value  * add test  * fix test  * optimization",288,290,Cr,8bf1f26,1,2024-03-15 06:14:48,2023-03-10 09:21:56
scan.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",264,265,Jinzhu,68bb537,1,2023-03-10 09:21:56,2022-02-27 01:09:29
scan.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",262,262,Jinzhu,68bb537,1,2023-03-10 09:21:56,2022-02-27 01:09:29
scan.go,ba25398,Jinzhu,Fix Pluck with Time and Scanner,300,300,,,1,2020-09-24 12:08:24,
scan.go,5be642a,Jinzhu,Add ScanRows support,301,301,,,0,2020-05-26 15:13:05,
scan.go,af3fbdc,Jinzhu,Improve returning support,299,299,Ben,cc61202,0,2021-10-26 14:40:14,2021-01-27 03:50:15
scan.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,304,304,,,1,2020-06-02 15:30:26,
scan.go,5be642a,Jinzhu,Add ScanRows support,303,303,,,0,2020-05-26 15:13:05,
scan.go,1f634c3,jesse.tang,"support scan assign slice cap (#5634)  * support scan assign slice cap  * fix",298,298,Jinzhu,68bb537,1,2022-09-22 06:50:35,2022-02-27 01:09:29
scan.go,b326583,Jinzhu,Fix can't scan null value into normal data types,308,308,,,1,2020-06-03 01:00:20,
scan.go,43a72b3,Jinzhu,Refactor Scan,271,271,Ben,cc61202,0,2022-02-27 16:16:57,2021-01-27 03:50:15
scan.go,9f53395,Jinzhu,Add dest value if current size equal zero,286,287,,,0,2021-10-28 09:12:31,
scan.go,95a6539,Jinzhu,Test Pluck,315,315,,,0,2020-05-31 13:11:20,
scan.go,b326583,Jinzhu,Fix can't scan null value into normal data types,316,316,,,1,2020-06-03 01:00:20,
scan.go,1e241aa,Jinzhu,Reduce GC alloc,318,318,,,0,2020-11-10 13:23:20,
scan.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,317,317,,,1,2020-06-02 15:30:26,
scan.go,af3fbdc,Jinzhu,Improve returning support,309,311,,,0,2021-10-26 14:40:14,
scan.go,af3fbdc,Jinzhu,Improve returning support,302,302,,,0,2021-10-26 14:40:14,
scan.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",320,320,,,0,2020-03-04 03:33:50,
scan.go,af3fbdc,Jinzhu,Improve returning support,313,314,,,0,2021-10-26 14:40:14,
scan.go,9075b33,Jinzhu,Query with smaller struct,323,323,,,0,2020-07-01 00:56:21,
scan.go,af3fbdc,Jinzhu,Improve returning support,305,307,,,0,2021-10-26 14:40:14,
scan.go,b326583,Jinzhu,Fix can't scan null value into normal data types,332,332,,,1,2020-06-03 01:00:20,
scan.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",312,312,,,1,2022-02-19 09:02:53,
scan.go,ab35533,Jinzhu,Fix scan with interface,321,321,,,1,2021-09-17 10:35:14,
scan.go,b326583,Jinzhu,Fix can't scan null value into normal data types,334,334,,,1,2020-06-03 01:00:20,
scan.go,af3fbdc,Jinzhu,Improve returning support,324,324,,,0,2021-10-26 14:40:14,
scan.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",335,335,,,0,2020-03-04 03:33:50,
scan.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",337,337,,,0,2020-03-04 03:33:50,
scan.go,c4c9aa4,jessetang,fix(scan.go): reflect.MakeSlice passes in the reflect.Array type (#6880),291,297,Jinzhu,270e38c,1,2024-03-09 09:39:01,2021-11-29 06:23:10
scan.go,af3fbdc,Jinzhu,Improve returning support,338,342,,,0,2021-10-26 14:40:14,
scan.go,af3fbdc,Jinzhu,Improve returning support,336,336,,,0,2021-10-26 14:40:14,
scan.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",347,347,,,0,2020-03-04 03:33:50,
scan.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",350,352,,,0,2020-03-04 03:33:50,
scan.go,4ec73c9,Edward McFarlane,"Add test case for embedded value selects (#5901)  * Add test case for embedded value selects  * Revert recycle struct optimisation to avoid pointer overwrites",319,319,,,0,2022-12-19 03:49:05,
scan.go,101a7c7,Cr,fix: scan array (#5624)  Co-authored-by: Jinzhu <wosmvp@gmail.com>,333,333,,,1,2022-09-22 07:51:47,
scan.go,5be642a,Jinzhu,Add ScanRows support,358,358,,,0,2020-05-26 15:13:05,
scan.go,b0e1bcc,Jinzhu,"Support scan into map, slice, struct",359,359,,,0,2020-03-04 03:33:50,
scan.go,b616d81,Jinzhu,"Fix scan single value to custom type, close #4501",348,349,,,1,2021-07-13 11:29:10,
scan.go,43a72b3,Jinzhu,Refactor Scan,322,322,,,0,2022-02-27 16:16:57,
scan.go,673053f,Jinzhu,"Fix context cancel error, close #4259, close #4260",353,357,,,1,2021-04-09 02:21:01,
scan.go,73a988c,Waleed Masoom,fix(scan): update Scan function to reset structs to zero values for each scan (#7061)  Co-authored-by: waleed.masoom <waleed.masoom@wheniwork.com>,343,345,Jinzhu,673053f,1,2024-06-12 10:57:36,2021-04-09 02:21:01
scan.go,43a72b3,Jinzhu,Refactor Scan,346,346,,,0,2022-02-27 16:16:57,
scan.go,101a7c7,Cr,fix: scan array (#5624)  Co-authored-by: Jinzhu <wosmvp@gmail.com>,325,331,,,1,2022-09-22 07:51:47,
scan.go,2c56954,Jinzhu,tests mariadb with returning support,360,360,,,0,2022-10-08 12:48:22,
schema/utils_test.go,fd9b688,Jinzhu,Implement parse many2many relation,17,24,,,0,2020-02-01 10:02:19,
schema/utils_test.go,fd9b688,Jinzhu,Implement parse many2many relation,1,15,,,0,2020-02-01 10:02:19,
schema/utils_test.go,2676fa4,Jinzhu,"Remove autoincrement tag for join table, close #3217",16,16,Jinzhu,fd9b688,0,2020-07-31 10:19:25,2020-02-01 10:02:19
schema/relationship_test.go,49310d0,Jinzhu,"Test override foreign key, reference",9,12,,,0,2020-05-31 09:42:21,
schema/relationship_test.go,49310d0,Jinzhu,"Test override foreign key, reference",14,57,,,0,2020-05-31 09:42:21,
schema/relationship_test.go,e986371,Jinzhu,Rename package name,7,8,Jinzhu,76b8e78,0,2020-06-02 01:18:01,2020-06-01 00:13:16
schema/relationship_test.go,065787c,Jinzhu,Compatible with with foreign key with ID suffix #3890,77,95,Jinzhu,8bf50a5,0,2020-12-28 10:20:55,2020-12-28 09:58:12
schema/relationship_test.go,d9d5c4d,Mayank Govilla,"Fix self-referential belongs to constraint (#4801)  * create tests for self-ref has one migration  * add relation equality check to avoid skipping self-referential schemas  * remove drop table error check",96,107,Paras Waykole,5d91dda,1,2021-11-08 01:47:29,2021-10-08 02:59:55
schema/relationship_test.go,49310d0,Jinzhu,"Test override foreign key, reference",1,6,,,0,2020-05-31 09:42:21,
schema/relationship_test.go,3a72ba1,Jinzhu,Allow shared foreign key for many2many jointable,13,13,Jinzhu,e6f7da0,0,2022-09-22 07:03:41,2022-03-18 06:30:30
schema/relationship_test.go,8bf50a5,Jinzhu,"Fix parse relations if only specfied References, close #3890",58,76,Jinzhu,f6ed895,1,2020-12-28 09:58:12,2020-09-09 08:37:05
schema/relationship_test.go,9a61ef2,yetone,fix: duplicated preload (#6948),124,146,Alexis Viscogliosi,a2cac75,1,2024-04-15 03:20:20,2023-12-15 08:36:08
schema/relationship_test.go,d9d5c4d,Mayank Govilla,"Fix self-referential belongs to constraint (#4801)  * create tests for self-ref has one migration  * add relation equality check to avoid skipping self-referential schemas  * remove drop table error check",108,109,Paras Waykole,5d91dda,1,2021-11-08 01:47:29,2021-10-08 02:59:55
schema/relationship_test.go,49310d0,Jinzhu,"Test override foreign key, reference",147,183,,,0,2020-05-31 09:42:21,
schema/relationship_test.go,49310d0,Jinzhu,"Test override foreign key, reference",240,285,,,0,2020-05-31 09:42:21,
schema/relationship_test.go,c19a3ab,Jinzhu,"Fix self-referential belongs to, close #3319",110,123,,,1,2020-08-28 03:31:13,
schema/relationship_test.go,5d91dda,Paras Waykole,"fixed belongs_to & has_one reversed if field same (proper fix) (#4694)  * fixed belongs_to & has_one reversed if field same  * hasmany same foreign key bug fixed and test added  * belongsToSameForeignKey fixed and reverted old fix",184,184,Jinzhu,8bf50a5,1,2021-10-08 02:59:55,2020-12-28 09:58:12
schema/relationship_test.go,5d91dda,Paras Waykole,"fixed belongs_to & has_one reversed if field same (proper fix) (#4694)  * fixed belongs_to & has_one reversed if field same  * hasmany same foreign key bug fixed and test added  * belongsToSameForeignKey fixed and reverted old fix",185,201,Jinzhu,8bf50a5,1,2021-10-08 02:59:55,2020-12-28 09:58:12
schema/relationship_test.go,49310d0,Jinzhu,"Test override foreign key, reference",305,330,,,0,2020-05-31 09:42:21,
schema/relationship_test.go,065787c,Jinzhu,Compatible with with foreign key with ID suffix #3890,221,239,Jinzhu,e986371,0,2020-12-28 10:20:55,2020-06-02 01:18:01
schema/relationship_test.go,49310d0,Jinzhu,"Test override foreign key, reference",289,297,,,0,2020-05-31 09:42:21,
schema/relationship_test.go,49310d0,Jinzhu,"Test override foreign key, reference",358,366,,,0,2020-05-31 09:42:21,
schema/relationship_test.go,3a72ba1,Jinzhu,Allow shared foreign key for many2many jointable,331,357,Jinzhu,e6f7da0,0,2022-09-22 07:03:41,2022-03-18 06:30:30
schema/relationship_test.go,8bf50a5,Jinzhu,"Fix parse relations if only specfied References, close #3890",202,220,Jinzhu,e986371,1,2020-12-28 09:58:12,2020-06-02 01:18:01
schema/relationship_test.go,d4f8a52,Jinzhu,Fix join table foreign key in snake_case,286,288,,,1,2020-07-03 23:24:46,
schema/relationship_test.go,d4f8a52,Jinzhu,Fix join table foreign key in snake_case,298,304,,,1,2020-07-03 23:24:46,
schema/relationship_test.go,49310d0,Jinzhu,"Test override foreign key, reference",374,374,,,0,2020-05-31 09:42:21,
schema/relationship_test.go,49310d0,Jinzhu,"Test override foreign key, reference",368,372,,,0,2020-05-31 09:42:21,
schema/relationship_test.go,76b8e78,Jinzhu,Add multi primary keys test,380,380,,,0,2020-06-01 00:13:16,
schema/relationship_test.go,76b8e78,Jinzhu,Add multi primary keys test,404,450,,,0,2020-06-01 00:13:16,
schema/relationship_test.go,49310d0,Jinzhu,"Test override foreign key, reference",377,379,,,0,2020-05-31 09:42:21,
schema/relationship_test.go,6e38a2c,Jinzhu,Fix many2many join table name rule,373,373,,,1,2020-09-06 02:51:21,
schema/relationship_test.go,6e38a2c,Jinzhu,Fix many2many join table name rule,375,376,,,1,2020-09-06 02:51:21,
schema/relationship_test.go,220349c,Jinzhu,"Fix omit associations, close #4161",483,507,Jinzhu,6095dbf,1,2021-03-19 07:15:26,2021-01-19 07:40:04
schema/relationship_test.go,6e38a2c,Jinzhu,Fix many2many join table name rule,367,367,,,1,2020-09-06 02:51:21,
schema/relationship_test.go,162367b,Jinzhu,"Fix multiple M2M relations on one table, close #3347",451,481,,,1,2020-09-01 03:30:16,
schema/relationship_test.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",544,602,Jinzhu,3a72ba1,1,2023-04-11 05:10:38,2022-09-22 07:03:41
schema/relationship_test.go,9a61ef2,yetone,fix: duplicated preload (#6948),802,805,Alexis Viscogliosi,a2cac75,1,2024-04-15 03:20:20,2023-12-15 08:36:08
schema/relationship_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",603,789,mohammad ali,26663ab,1,2023-12-15 08:36:08,2023-05-30 02:00:48
schema/relationship_test.go,f6ed895,Jinzhu,"Build relationships if fields are not ignored, fix #3181",381,403,,,1,2020-09-09 08:37:05,
schema/relationship_test.go,6095dbf,Jinzhu,"Fix parse embedded relations, close #3964, #3965",508,542,,,1,2021-01-19 07:40:04,
schema/relationship_test.go,9a61ef2,yetone,fix: duplicated preload (#6948),846,850,Alexis Viscogliosi,a2cac75,1,2024-04-15 03:20:20,2023-12-15 08:36:08
schema/relationship_test.go,9a61ef2,yetone,fix: duplicated preload (#6948),816,816,Alexis Viscogliosi,a2cac75,1,2024-04-15 03:20:20,2023-12-15 08:36:08
schema/relationship_test.go,6095dbf,Jinzhu,"Fix parse embedded relations, close #3964, #3965",482,482,,,1,2021-01-19 07:40:04,
schema/relationship_test.go,628a0ae,Jinzhu,"Fix foreign key & reference with same name, close #4081",543,543,,,1,2021-02-15 01:10:51,
schema/relationship_test.go,8f7f3ad,Paras Waykole,fixed belongs_to & has_one reversed if field same (#4343),901,901,,,1,2021-05-04 23:57:54,
schema/relationship_test.go,628a0ae,Jinzhu,"Fix foreign key & reference with same name, close #4081",878,900,,,1,2021-02-15 01:10:51,
schema/relationship_test.go,5d91dda,Paras Waykole,"fixed belongs_to & has_one reversed if field same (proper fix) (#4694)  * fixed belongs_to & has_one reversed if field same  * hasmany same foreign key bug fixed and test added  * belongsToSameForeignKey fixed and reverted old fix",902,902,,,1,2021-10-08 02:59:55,
schema/relationship_test.go,e6f7da0,Jinzhu,Support Variable Relation,858,877,,,0,2022-03-18 06:30:30,
schema/relationship_test.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",817,845,,,1,2023-04-11 05:10:38,
schema/relationship_test.go,8f7f3ad,Paras Waykole,fixed belongs_to & has_one reversed if field same (#4343),927,929,,,1,2021-05-04 23:57:54,
schema/relationship_test.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",790,801,,,1,2023-04-11 05:10:38,
schema/relationship_test.go,5d91dda,Paras Waykole,"fixed belongs_to & has_one reversed if field same (proper fix) (#4694)  * fixed belongs_to & has_one reversed if field same  * hasmany same foreign key bug fixed and test added  * belongsToSameForeignKey fixed and reverted old fix",903,926,,,1,2021-10-08 02:59:55,
schema/relationship_test.go,5d91dda,Paras Waykole,"fixed belongs_to & has_one reversed if field same (proper fix) (#4694)  * fixed belongs_to & has_one reversed if field same  * hasmany same foreign key bug fixed and test added  * belongsToSameForeignKey fixed and reverted old fix",930,930,,,1,2021-10-08 02:59:55,
schema/relationship_test.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",806,815,,,1,2023-04-11 05:10:38,
schema/relationship_test.go,8f7f3ad,Paras Waykole,fixed belongs_to & has_one reversed if field same (#4343),931,934,,,1,2021-05-04 23:57:54,
schema/relationship_test.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",851,857,,,1,2023-04-11 05:10:38,
schema/relationship_test.go,5d91dda,Paras Waykole,"fixed belongs_to & has_one reversed if field same (proper fix) (#4694)  * fixed belongs_to & has_one reversed if field same  * hasmany same foreign key bug fixed and test added  * belongsToSameForeignKey fixed and reverted old fix",935,935,,,1,2021-10-08 02:59:55,
schema/relationship_test.go,79f427d,Paras Waykole,"fixed has_many stopped working if field names are identical (#4387)  * fixed belongs_to & has_one reversed if field same  * hasmany same foreign key bug fixed and test added",944,962,,,1,2021-05-19 08:05:29,
schema/relationship_test.go,8f7f3ad,Paras Waykole,fixed belongs_to & has_one reversed if field same (#4343),942,943,,,1,2021-05-04 23:57:54,
schema/relationship_test.go,8f7f3ad,Paras Waykole,fixed belongs_to & has_one reversed if field same (#4343),936,939,,,1,2021-05-04 23:57:54,
schema/relationship_test.go,5d91dda,Paras Waykole,"fixed belongs_to & has_one reversed if field same (proper fix) (#4694)  * fixed belongs_to & has_one reversed if field same  * hasmany same foreign key bug fixed and test added  * belongsToSameForeignKey fixed and reverted old fix",940,941,,,1,2021-10-08 02:59:55,
schema/relationship_test.go,45ef1da,Michael Nussbaum,"Fix naming longer then 64 chars with dots in table (#5045)  Ensures that foreign key relationships and indexes are given syntactically valid names when their name length exceeds 64 characters and they contained dot characters within the name. This is most often relevant when a Postgres table name is fully qualified by including its schema as part of its name",963,981,,,1,2022-02-24 02:10:20,
schema/relationship_test.go,26663ab,mohammad ali,"max identifier length changed to 63 (#6337)  * max identifier length changed to 63  * default maxIdentifierLength is 64  * renamed License to LICENSE (#6336)  * Added support of ""Violates Foreign Key Constraint"" (#6329)  * Added support of ""Violates Foreign Key Constraint""  Updated the translator and added the support of ""foreign key constraint violation"". For this, this error type is needed here.  * changed the description of ErrForeignKeyViolated  * refactor: error translator test (#6350)  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>  * fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements (#6220)  * test: add nested transaction and prepareStmt coexist test case  note: please test in the MySQL environment  Change-Id: I0db32adc5f74b0d443e98943d3b182236583b959 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements  1. SavetPoint SQL Statement not support in Prepared Statements  e.g. see mysql8.0 doc: https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html  Change-Id: I082012db9b140e8ec69764c633724665cc802692 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * revert(transaction_api): remove savepoint name pool,meaningless  Change-Id: I84aa9924fc54612005a81c83d66fdf8968ee56ad Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  ---------  Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: 王柳洋 <wangliuyang.520@bytedance.com>  * fix: save with hook (#6285) (#6294)  ---------  Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: Avinaba Bhattacharjee <avinababhattacharjee2002@gmail.com> Co-authored-by: Muhammad Amir Ejaz <37077032+codingamir@users.noreply.github.com> Co-authored-by: Saeid <sk.saeidee@yahoo.com> Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com> Co-authored-by: wangliuyang <54885906+wangliuyang520@users.noreply.github.com> Co-authored-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: black-06 <hello.bug@foxmail.com>",982,982,,,1,2023-05-30 02:00:48,
schema/relationship_test.go,45ef1da,Michael Nussbaum,"Fix naming longer then 64 chars with dots in table (#5045)  Ensures that foreign key relationships and indexes are given syntactically valid names when their name length exceeds 64 characters and they contained dot characters within the name. This is most often relevant when a Postgres table name is fully qualified by including its schema as part of its name",983,998,,,1,2022-02-24 02:10:20,
schema/utils.go,1079e17,Jinzhu,Implement schema parser,6,6,,,0,2020-01-31 04:46:16,
schema/utils.go,1079e17,Jinzhu,Implement schema parser,1,3,,,0,2020-01-31 04:46:16,
schema/utils.go,373bcf7,Cr,"fix: many2many auto migrate (#5322)  * fix: many2many auto migrate  * fix: uuid ossp",5,5,Jinzhu,39d84cb,1,2022-05-09 02:07:18,2022-02-19 09:02:53
schema/utils.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",4,4,heige,50e85e1,1,2022-02-19 09:02:53,2021-06-10 02:21:28
schema/utils.go,1079e17,Jinzhu,Implement schema parser,8,8,,,0,2020-01-31 04:46:16,
schema/utils.go,fd9b688,Jinzhu,Implement parse many2many relation,7,7,Jinzhu,eea78f3,0,2020-02-01 10:02:19,2020-02-01 04:46:52
schema/utils.go,1079e17,Jinzhu,Implement schema parser,12,13,,,0,2020-01-31 04:46:16,
schema/utils.go,59365b7,Jinzhu,Refacotr Preload,9,9,Jinzhu,56ca9a8,0,2020-05-18 05:07:11,2020-04-16 02:29:18
schema/utils.go,2ae0653,Jinzhu,"Fix ambiguous column when using same column name in join table, close #3120",10,10,Jinzhu,e986371,1,2020-07-09 01:03:48,2020-06-02 01:18:01
schema/utils.go,e986371,Jinzhu,Rename package name,11,11,Jinzhu,b71171d,0,2020-06-02 01:18:01,2020-06-01 17:34:00
schema/utils.go,ea0b13f,Jinzhu,Refactor ParseTagSetting,16,30,Jinzhu,14724dd,0,2020-02-21 23:59:09,2020-02-01 12:18:32
schema/utils.go,dc48e04,Jinzhu,"Fix nested embedded struct, close #3278",14,15,Jinzhu,2676fa4,1,2020-08-18 03:21:40,2020-07-31 10:19:25
schema/utils.go,1079e17,Jinzhu,Implement schema parser,31,32,,,0,2020-01-31 04:46:16,
schema/utils.go,eea78f3,Jinzhu,Implement parse relationship architecture,47,54,,,0,2020-02-01 04:46:52,
schema/utils.go,1079e17,Jinzhu,Implement schema parser,45,46,,,0,2020-01-31 04:46:16,
schema/utils.go,1079e17,Jinzhu,Implement schema parser,42,42,,,0,2020-01-31 04:46:16,
schema/utils.go,fd9b688,Jinzhu,Implement parse many2many relation,61,61,,,0,2020-02-01 10:02:19,
schema/utils.go,ea0b13f,Jinzhu,Refactor ParseTagSetting,33,41,Jinzhu,14724dd,0,2020-02-21 23:59:09,2020-02-01 12:18:32
schema/utils.go,2b510d6,Jinzhu,"Don't create index for join table, close #3294",56,60,Jinzhu,dc48e04,0,2020-08-21 07:40:50,2020-08-18 03:21:40
schema/utils.go,fd9b688,Jinzhu,Implement parse many2many relation,55,55,,,0,2020-02-01 10:02:19,
schema/utils.go,59365b7,Jinzhu,Refacotr Preload,62,62,Jinzhu,56ca9a8,0,2020-05-18 05:07:11,2020-04-16 02:29:18
schema/utils.go,373bcf7,Cr,"fix: many2many auto migrate (#5322)  * fix: many2many auto migrate  * fix: uuid ossp",63,70,Jinzhu,39d84cb,1,2022-05-09 02:07:18,2022-02-19 09:02:53
schema/utils.go,59365b7,Jinzhu,Refacotr Preload,71,71,Jinzhu,56ca9a8,0,2020-05-18 05:07:11,2020-04-16 02:29:18
schema/utils.go,59365b7,Jinzhu,Refacotr Preload,75,76,Jinzhu,56ca9a8,0,2020-05-18 05:07:11,2020-04-16 02:29:18
schema/utils.go,59365b7,Jinzhu,Refacotr Preload,73,73,Jinzhu,56ca9a8,0,2020-05-18 05:07:11,2020-04-16 02:29:18
schema/utils.go,9f27377,Aman,"fix deprecated reflect.PtrTo reflect.PointerTo usage (#7366)  * fix deprecated reflect.PtrTo reflect.PointerTo usage  * replace all deprecated reflect.PtrTo reflect.PointerTo usage",74,74,龚一涛,7e44f73,1,2025-02-13 06:16:26,2023-08-19 13:35:14
schema/utils.go,59365b7,Jinzhu,Refacotr Preload,79,80,Jinzhu,56ca9a8,0,2020-05-18 05:07:11,2020-04-16 02:29:18
schema/utils.go,ea0b13f,Jinzhu,Refactor ParseTagSetting,43,44,Jinzhu,1079e17,0,2020-02-21 23:59:09,2020-01-31 04:46:16
schema/utils.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",72,72,heige,50e85e1,1,2022-02-19 09:02:53,2021-06-10 02:21:28
schema/utils.go,59365b7,Jinzhu,Refacotr Preload,82,82,Jinzhu,56ca9a8,0,2020-05-18 05:07:11,2020-04-16 02:29:18
schema/utils.go,e60a8d5,Jinzhu,Test Nested Preload,81,81,Jinzhu,56ca9a8,0,2020-05-23 16:52:25,2020-04-16 02:29:18
schema/utils.go,e60a8d5,Jinzhu,Test Nested Preload,83,83,Jinzhu,56ca9a8,0,2020-05-23 16:52:25,2020-04-16 02:29:18
schema/utils.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",77,78,Shubhendra Singh Chauhan,0348b1d,1,2022-02-19 09:02:53,2021-03-08 02:46:43
schema/utils.go,e60a8d5,Jinzhu,Test Nested Preload,86,86,Jinzhu,56ca9a8,0,2020-05-23 16:52:25,2020-04-16 02:29:18
schema/utils.go,59365b7,Jinzhu,Refacotr Preload,89,109,Jinzhu,56ca9a8,0,2020-05-18 05:07:11,2020-04-16 02:29:18
schema/utils.go,e60a8d5,Jinzhu,Test Nested Preload,88,88,Jinzhu,56ca9a8,0,2020-05-23 16:52:25,2020-04-16 02:29:18
schema/utils.go,5ec4fee,Jinzhu,Don't preload if foreign keys zero,112,113,Jinzhu,20cb57b,0,2020-05-23 13:09:03,2020-05-19 18:03:43
schema/utils.go,59365b7,Jinzhu,Refacotr Preload,111,111,Jinzhu,56ca9a8,0,2020-05-18 05:07:11,2020-04-16 02:29:18
schema/utils.go,5ec4fee,Jinzhu,Don't preload if foreign keys zero,115,115,Jinzhu,20cb57b,0,2020-05-23 13:09:03,2020-05-19 18:03:43
schema/utils.go,b71171d,Jinzhu,Add more preload tests,114,114,Jinzhu,5ec4fee,0,2020-06-01 17:34:00,2020-05-23 13:09:03
schema/utils.go,7e44f73,龚一涛,fix schema GetIdentityFieldValuesMap interface or ptr (#6417)  Co-authored-by: uptutu <yitao.gong@vzenith.com>,118,122,black-06,e66a059,1,2023-08-19 13:35:14,2023-02-18 01:20:29
schema/utils.go,59365b7,Jinzhu,Refacotr Preload,123,127,Jinzhu,56ca9a8,0,2020-05-18 05:07:11,2020-04-16 02:29:18
schema/utils.go,59365b7,Jinzhu,Refacotr Preload,116,117,Jinzhu,56ca9a8,0,2020-05-18 05:07:11,2020-04-16 02:29:18
schema/utils.go,59365b7,Jinzhu,Refacotr Preload,130,131,Jinzhu,56ca9a8,0,2020-05-18 05:07:11,2020-04-16 02:29:18
schema/utils.go,b71171d,Jinzhu,Add more preload tests,139,140,Jinzhu,e60a8d5,0,2020-06-01 17:34:00,2020-05-23 16:52:25
schema/utils.go,5ec4fee,Jinzhu,Don't preload if foreign keys zero,129,129,Jinzhu,20cb57b,0,2020-05-23 13:09:03,2020-05-19 18:03:43
schema/utils.go,5ec4fee,Jinzhu,Don't preload if foreign keys zero,132,136,Jinzhu,59365b7,0,2020-05-23 13:09:03,2020-05-18 05:07:11
schema/utils.go,59365b7,Jinzhu,Refacotr Preload,137,138,Jinzhu,56ca9a8,0,2020-05-18 05:07:11,2020-04-16 02:29:18
schema/utils.go,b71171d,Jinzhu,Add more preload tests,142,149,Jinzhu,e60a8d5,0,2020-06-01 17:34:00,2020-05-23 16:52:25
schema/utils.go,590f622,Jinzhu,Refactor create tests,150,150,Jinzhu,59365b7,0,2020-05-23 14:32:16,2020-05-18 05:07:11
schema/utils.go,5ec4fee,Jinzhu,Don't preload if foreign keys zero,151,151,Jinzhu,59365b7,0,2020-05-23 13:09:03,2020-05-18 05:07:11
schema/utils.go,74e7a9c,heige,"Optimize reflect value length and method (#4280)  * Respect ignore migration when add column (#4276)  continue https://github.com/go-gorm/gorm/pull/4028  * feat: Optimal value type acquisition for v (#4278)  * feat: optimize relect value length and value  * feat: optimize ConvertSliceOfMapToValuesForCreate method  Co-authored-by: yrong1997 <yrong1997@gmail.com>",84,85,Jinzhu,56ca9a8,0,2021-04-14 05:00:54,2020-04-16 02:29:18
schema/utils.go,5ec4fee,Jinzhu,Don't preload if foreign keys zero,154,154,Jinzhu,56ca9a8,0,2020-05-23 13:09:03,2020-04-16 02:29:18
schema/utils.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",128,128,Jinzhu,e60a8d5,1,2022-02-19 09:02:53,2020-05-23 16:52:25
schema/utils.go,59365b7,Jinzhu,Refacotr Preload,152,152,,,0,2020-05-18 05:07:11,
schema/utils.go,59365b7,Jinzhu,Refacotr Preload,155,156,,,0,2020-05-18 05:07:11,
schema/utils.go,5ec4fee,Jinzhu,Don't preload if foreign keys zero,157,159,Jinzhu,56ca9a8,0,2020-05-23 13:09:03,2020-04-16 02:29:18
schema/utils.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",110,110,Jinzhu,56ca9a8,1,2022-02-19 09:02:53,2020-04-16 02:29:18
schema/utils.go,5ec4fee,Jinzhu,Don't preload if foreign keys zero,162,162,Jinzhu,56ca9a8,0,2020-05-23 13:09:03,2020-04-16 02:29:18
schema/utils.go,74e7a9c,heige,"Optimize reflect value length and method (#4280)  * Respect ignore migration when add column (#4276)  continue https://github.com/go-gorm/gorm/pull/4028  * feat: Optimal value type acquisition for v (#4278)  * feat: optimize relect value length and value  * feat: optimize ConvertSliceOfMapToValuesForCreate method  Co-authored-by: yrong1997 <yrong1997@gmail.com>",87,87,Jinzhu,56ca9a8,0,2021-04-14 05:00:54,2020-04-16 02:29:18
schema/utils.go,b71171d,Jinzhu,Add more preload tests,161,161,Jinzhu,59365b7,0,2020-06-01 17:34:00,2020-05-18 05:07:11
schema/utils.go,59365b7,Jinzhu,Refacotr Preload,164,164,,,0,2020-05-18 05:07:11,
schema/utils.go,59365b7,Jinzhu,Refacotr Preload,165,171,,,0,2020-05-18 05:07:11,
schema/utils.go,e66a059,black-06,"fix: update panic if model is not ptr (#6037)  * fix: update panic if model is not ptr  * fix: update panic if model is not ptr  * fix: update panic if model is not ptr  * fix: raise an error if the value is not addressable  * fix: return",141,141,Jinzhu,e60a8d5,1,2023-02-18 01:20:29,2020-05-23 16:52:25
schema/utils.go,0348b1d,Shubhendra Singh Chauhan,"chore: improve code quality (#4123)  * Combine multiple `append`s into a single call  * Clean up copied struct fields with type conversion  * Remove unnecessary use of slice",160,160,Jinzhu,59365b7,0,2021-03-08 02:46:43,2020-05-18 05:07:11
schema/utils.go,20cb57b,Jinzhu,Add association Delete support,172,172,,,0,2020-05-19 18:03:43,
schema/utils.go,b71171d,Jinzhu,Add more preload tests,163,163,Jinzhu,59365b7,0,2020-06-01 17:34:00,2020-05-18 05:07:11
schema/utils.go,20cb57b,Jinzhu,Add association Delete support,174,177,,,0,2020-05-19 18:03:43,
schema/utils.go,20cb57b,Jinzhu,Add association Delete support,179,186,,,0,2020-05-19 18:03:43,
schema/utils.go,59365b7,Jinzhu,Refacotr Preload,187,187,,,0,2020-05-18 05:07:11,
schema/utils.go,59365b7,Jinzhu,Refacotr Preload,189,194,,,0,2020-05-18 05:07:11,
schema/utils.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",178,178,Jinzhu,e986371,1,2022-02-19 09:02:53,2020-06-02 01:18:01
schema/utils.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",173,173,Jinzhu,e986371,1,2022-02-19 09:02:53,2020-06-02 01:18:01
schema/utils.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",153,153,Jinzhu,20cb57b,1,2022-02-19 09:02:53,2020-05-19 18:03:43
schema/utils.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",196,196,Jinzhu,2b510d6,1,2021-06-10 02:21:28,2020-08-21 07:40:50
schema/utils.go,59365b7,Jinzhu,Refacotr Preload,201,201,,,0,2020-05-18 05:07:11,
schema/utils.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",198,200,Jinzhu,2b510d6,1,2021-06-10 02:21:28,2020-08-21 07:40:50
schema/utils.go,59365b7,Jinzhu,Refacotr Preload,208,208,,,0,2020-05-18 05:07:11,
schema/utils.go,2ae0653,Jinzhu,"Fix ambiguous column when using same column name in join table, close #3120",195,195,,,1,2020-07-09 01:03:48,
schema/utils.go,2ae0653,Jinzhu,"Fix ambiguous column when using same column name in join table, close #3120",197,197,,,1,2020-07-09 01:03:48,
schema/utils.go,2ae0653,Jinzhu,"Fix ambiguous column when using same column name in join table, close #3120",188,188,,,1,2020-07-09 01:03:48,
schema/utils.go,1a526e6,Jinzhu,"Fix NamingStrategy with embedded struct, close #3513",209,213,,,1,2020-09-24 03:32:38,
schema/utils.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",202,207,,,1,2021-06-10 02:21:28,
soft_delete.go,5507421,Jinzhu,Add SoftDelete support,7,7,,,0,2020-05-28 23:35:45,
soft_delete.go,e986371,Jinzhu,Rename package name,10,11,Jinzhu,b3b19a5,0,2020-06-02 01:18:01,2020-05-31 03:34:59
soft_delete.go,689d6e2,Jinzhu,"Fix DeletedAt marshalling, close #3598",6,6,Jinzhu,bf6123b,1,2020-10-13 06:12:03,2020-09-01 10:05:26
soft_delete.go,5507421,Jinzhu,Add SoftDelete support,12,28,,,0,2020-05-28 23:35:45,
soft_delete.go,5507421,Jinzhu,Add SoftDelete support,8,8,,,0,2020-05-28 23:35:45,
soft_delete.go,689d6e2,Jinzhu,"Fix DeletedAt marshalling, close #3598",29,29,Jinzhu,bf6123b,1,2020-10-13 06:12:03,2020-09-01 10:05:26
soft_delete.go,5507421,Jinzhu,Add SoftDelete support,1,5,,,0,2020-05-28 23:35:45,
soft_delete.go,cfbcedb,qiankunli,"fix: support zeroValue tag on DeletedAt (#6011)  * fix: support zeroValue tag on DeletedAt  Signed-off-by: qiankunli <qiankun.li@qq.com>  * Update soft_delete_test.go  * Update tests_test.go  * Update soft_delete.go  ---------  Signed-off-by: qiankunli <qiankun.li@qq.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>",9,9,Jinzhu,f2edda5,1,2023-02-01 06:40:55,2022-02-27 00:40:15
soft_delete.go,3ebdcbd,Jinzhu,"Marshal invalid DeletedAt as null, fix #3693",30,33,Jinzhu,a8141b6,1,2020-10-30 11:08:20,2020-10-30 10:15:07
soft_delete.go,57b033e,Amit Basuri,Marshalling zero valued Deleted at to nullhttps://github.com/go-gorm/gorm/issues/3693 (#3695),37,40,Jinzhu,3ebdcbd,0,2020-11-02 02:03:39,2020-10-30 11:08:20
soft_delete.go,681268c,Jinzhu,Refactor Create/Query/Update/DeleteClauses interface,48,48,Jinzhu,39c8d62,0,2020-08-17 08:31:09,2020-08-06 09:48:46
soft_delete.go,689d6e2,Jinzhu,"Fix DeletedAt marshalling, close #3598",34,36,Jinzhu,bf6123b,1,2020-10-13 06:12:03,2020-09-01 10:05:26
soft_delete.go,689d6e2,Jinzhu,"Fix DeletedAt marshalling, close #3598",41,41,Jinzhu,bf6123b,1,2020-10-13 06:12:03,2020-09-01 10:05:26
soft_delete.go,57b033e,Amit Basuri,Marshalling zero valued Deleted at to nullhttps://github.com/go-gorm/gorm/issues/3693 (#3695),42,42,Jinzhu,3ebdcbd,0,2020-11-02 02:03:39,2020-10-30 11:08:20
soft_delete.go,681268c,Jinzhu,Refactor Create/Query/Update/DeleteClauses interface,61,61,Jinzhu,39c8d62,0,2020-08-17 08:31:09,2020-08-06 09:48:46
soft_delete.go,5507421,Jinzhu,Add SoftDelete support,59,60,,,0,2020-05-28 23:35:45,
soft_delete.go,cfbcedb,qiankunli,"fix: support zeroValue tag on DeletedAt (#6011)  * fix: support zeroValue tag on DeletedAt  Signed-off-by: qiankunli <qiankun.li@qq.com>  * Update soft_delete_test.go  * Update tests_test.go  * Update soft_delete.go  ---------  Signed-off-by: qiankunli <qiankun.li@qq.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>",49,58,Jinzhu,f2edda5,1,2023-02-01 06:40:55,2022-02-27 00:40:15
soft_delete.go,689d6e2,Jinzhu,"Fix DeletedAt marshalling, close #3598",43,47,Jinzhu,3dfa8a6,1,2020-10-13 06:12:03,2020-08-25 09:27:28
soft_delete.go,5507421,Jinzhu,Add SoftDelete support,64,65,,,0,2020-05-28 23:35:45,
soft_delete.go,681268c,Jinzhu,Refactor Create/Query/Update/DeleteClauses interface,66,76,Jinzhu,39c8d62,0,2020-08-17 08:31:09,2020-08-06 09:48:46
soft_delete.go,cfbcedb,qiankunli,"fix: support zeroValue tag on DeletedAt (#6011)  * fix: support zeroValue tag on DeletedAt  Signed-off-by: qiankunli <qiankun.li@qq.com>  * Update soft_delete_test.go  * Update tests_test.go  * Update soft_delete.go  ---------  Signed-off-by: qiankunli <qiankun.li@qq.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>",62,63,Jinzhu,f2edda5,1,2023-02-01 06:40:55,2022-02-27 00:40:15
soft_delete.go,810058c,Jinzhu,Fix soft delete with Update,98,98,Shubhendra Singh Chauhan,0348b1d,1,2021-06-01 10:34:38,2021-03-08 02:46:43
soft_delete.go,cfbcedb,qiankunli,"fix: support zeroValue tag on DeletedAt (#6011)  * fix: support zeroValue tag on DeletedAt  Signed-off-by: qiankunli <qiankun.li@qq.com>  * Update soft_delete_test.go  * Update tests_test.go  * Update soft_delete.go  ---------  Signed-off-by: qiankunli <qiankun.li@qq.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>",92,92,Jinzhu,f2edda5,1,2023-02-01 06:40:55,2022-02-27 00:40:15
soft_delete.go,681268c,Jinzhu,Refactor Create/Query/Update/DeleteClauses interface,93,97,Jinzhu,33c4861,0,2020-08-17 08:31:09,2020-07-10 05:08:29
soft_delete.go,681268c,Jinzhu,Refactor Create/Query/Update/DeleteClauses interface,91,91,Jinzhu,33c4861,0,2020-08-17 08:31:09,2020-07-10 05:08:29
soft_delete.go,9b21811,Jinzhu,"Fix soft delete with OrCondition, close #3627",78,78,Jinzhu,39c8d62,1,2020-10-19 06:50:11,2020-08-06 09:48:46
soft_delete.go,810058c,Jinzhu,Fix soft delete with Update,100,102,Shubhendra Singh Chauhan,0348b1d,1,2021-06-01 10:34:38,2021-03-08 02:46:43
soft_delete.go,cfbcedb,qiankunli,"fix: support zeroValue tag on DeletedAt (#6011)  * fix: support zeroValue tag on DeletedAt  Signed-off-by: qiankunli <qiankun.li@qq.com>  * Update soft_delete_test.go  * Update tests_test.go  * Update soft_delete.go  ---------  Signed-off-by: qiankunli <qiankun.li@qq.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>",99,99,Jinzhu,f2edda5,1,2023-02-01 06:40:55,2022-02-27 00:40:15
soft_delete.go,810058c,Jinzhu,Fix soft delete with Update,105,117,Shubhendra Singh Chauhan,0348b1d,1,2021-06-01 10:34:38,2021-03-08 02:46:43
soft_delete.go,9b21811,Jinzhu,"Fix soft delete with OrCondition, close #3627",80,90,Jinzhu,39c8d62,1,2020-10-19 06:50:11,2020-08-06 09:48:46
soft_delete.go,cfbcedb,qiankunli,"fix: support zeroValue tag on DeletedAt (#6011)  * fix: support zeroValue tag on DeletedAt  Signed-off-by: qiankunli <qiankun.li@qq.com>  * Update soft_delete_test.go  * Update tests_test.go  * Update soft_delete.go  ---------  Signed-off-by: qiankunli <qiankun.li@qq.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>",103,104,Jinzhu,f2edda5,1,2023-02-01 06:40:55,2022-02-27 00:40:15
soft_delete.go,cfbcedb,qiankunli,"fix: support zeroValue tag on DeletedAt (#6011)  * fix: support zeroValue tag on DeletedAt  Signed-off-by: qiankunli <qiankun.li@qq.com>  * Update soft_delete_test.go  * Update tests_test.go  * Update soft_delete.go  ---------  Signed-off-by: qiankunli <qiankun.li@qq.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>",124,124,Jinzhu,f2edda5,1,2023-02-01 06:40:55,2022-02-27 00:40:15
soft_delete.go,24026bf,liweitingwt,"modify unscoped judge (#4929)  * modify unscoped judge  * modify unscoped judge  Co-authored-by: liweiting <liweiting1995@gmail.com>",77,77,Jinzhu,689d6e2,0,2021-12-16 02:41:34,2020-10-13 06:12:03
soft_delete.go,cfbcedb,qiankunli,"fix: support zeroValue tag on DeletedAt (#6011)  * fix: support zeroValue tag on DeletedAt  Signed-off-by: qiankunli <qiankun.li@qq.com>  * Update soft_delete_test.go  * Update tests_test.go  * Update soft_delete.go  ---------  Signed-off-by: qiankunli <qiankun.li@qq.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>",128,129,Jinzhu,f2edda5,1,2023-02-01 06:40:55,2022-02-27 00:40:15
soft_delete.go,8dde09e,kinggo,fix: generate sql incorrect when use soft_delete and only one OR (#4969)  * fix: generate sql incorrect when use soft_delete and only one OR,79,79,Jinzhu,689d6e2,1,2021-12-30 03:47:14,2020-10-13 06:12:03
soft_delete.go,681268c,Jinzhu,Refactor Create/Query/Update/DeleteClauses interface,125,127,,,0,2020-08-17 08:31:09,
soft_delete.go,5507421,Jinzhu,Add SoftDelete support,130,131,,,0,2020-05-28 23:35:45,
soft_delete.go,5507421,Jinzhu,Add SoftDelete support,137,138,,,0,2020-05-28 23:35:45,
soft_delete.go,5507421,Jinzhu,Add SoftDelete support,133,135,,,0,2020-05-28 23:35:45,
soft_delete.go,681268c,Jinzhu,Refactor Create/Query/Update/DeleteClauses interface,123,123,,,0,2020-08-17 08:31:09,
soft_delete.go,5507421,Jinzhu,Add SoftDelete support,140,141,,,0,2020-05-28 23:35:45,
soft_delete.go,681268c,Jinzhu,Refactor Create/Query/Update/DeleteClauses interface,132,132,,,0,2020-08-17 08:31:09,
soft_delete.go,810058c,Jinzhu,Fix soft delete with Update,120,122,Jinzhu,39c8d62,1,2021-06-01 10:34:38,2020-08-06 09:48:46
soft_delete.go,681268c,Jinzhu,Refactor Create/Query/Update/DeleteClauses interface,139,139,,,0,2020-08-17 08:31:09,
soft_delete.go,681268c,Jinzhu,Refactor Create/Query/Update/DeleteClauses interface,136,136,,,0,2020-08-17 08:31:09,
soft_delete.go,e5bdd61,kinggo,"fix: save not use soft_delete (#4897)  * fix: Save not use soft_delete  * fix: save not use soft_delete  * fix: save not use soft_delete  * fix: save not use soft_delete  Co-authored-by: kinggo <>",118,118,Jinzhu,39c8d62,1,2021-12-08 05:58:06,2020-08-06 09:48:46
soft_delete.go,5507421,Jinzhu,Add SoftDelete support,147,148,,,0,2020-05-28 23:35:45,
soft_delete.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",149,149,kinggo,8dde09e,1,2022-02-19 09:02:53,2021-12-30 03:47:14
soft_delete.go,5507421,Jinzhu,Add SoftDelete support,151,155,,,0,2020-05-28 23:35:45,
soft_delete.go,681268c,Jinzhu,Refactor Create/Query/Update/DeleteClauses interface,142,142,,,0,2020-08-17 08:31:09,
soft_delete.go,6a18a15,Jinzhu,Refactor check missing where condition,119,119,Jinzhu,39c8d62,0,2022-02-25 02:48:23,2020-08-06 09:48:46
soft_delete.go,5507421,Jinzhu,Add SoftDelete support,159,165,,,0,2020-05-28 23:35:45,
soft_delete.go,33c4861,Jinzhu,"Fix customize table with Delete, close #3129",150,150,,,1,2020-07-10 05:08:29,
soft_delete.go,39c8d62,Jinzhu,Fix soft delete panic when using unaddressable value,156,156,,,1,2020-08-06 09:48:46,
soft_delete.go,5507421,Jinzhu,Add SoftDelete support,167,167,,,0,2020-05-28 23:35:45,
soft_delete.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",157,157,Jinzhu,14a0976,1,2022-02-19 09:02:53,2020-12-15 02:39:20
soft_delete.go,33c4861,Jinzhu,"Fix customize table with Delete, close #3129",158,158,,,1,2020-07-10 05:08:29,
soft_delete.go,5507421,Jinzhu,Add SoftDelete support,169,170,,,0,2020-05-28 23:35:45,
soft_delete.go,14a0976,Jinzhu,"populate the DeletedAt field when soft delete, fix #3855",144,146,,,1,2020-12-15 02:39:20,
soft_delete.go,e5bdd61,kinggo,"fix: save not use soft_delete (#4897)  * fix: Save not use soft_delete  * fix: save not use soft_delete  * fix: save not use soft_delete  * fix: save not use soft_delete  Co-authored-by: kinggo <>",143,143,Jinzhu,33c4861,1,2021-12-08 05:58:06,2020-07-10 05:08:29
soft_delete.go,e953880,Jinzhu,Add returning tests,168,168,,,0,2021-10-28 01:17:33,
soft_delete.go,6a18a15,Jinzhu,Refactor check missing where condition,166,166,,,0,2022-02-25 02:48:23,
schema/schema_test.go,06de6e8,Jinzhu,"Test same field name from embedded field, close #3291",8,8,Jinzhu,3313c11,0,2020-08-20 02:58:35,2020-08-19 11:15:27
schema/schema_test.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,1,3,,,0,2020-02-01 12:18:32,
schema/schema_test.go,1a526e6,Jinzhu,"Fix NamingStrategy with embedded struct, close #3513",4,4,Jinzhu,f121622,1,2020-09-24 03:32:38,2020-09-04 06:35:44
schema/schema_test.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,5,7,,,0,2020-02-01 12:18:32,
schema/schema_test.go,8bb05a5,Jinzhu,Refactor tests files,10,10,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
schema/schema_test.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,11,13,,,0,2020-02-01 12:18:32,
schema/schema_test.go,04adbaf,Jinzhu,Fix parse stmt ReflectValue,14,14,Jinzhu,e2a360b,1,2020-02-24 00:51:35,2020-02-23 13:22:35
schema/schema_test.go,e986371,Jinzhu,Rename package name,9,9,Jinzhu,a46d48c,0,2020-06-02 01:18:01,2020-04-08 00:32:28
schema/schema_test.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,15,18,,,0,2020-02-01 12:18:32,
schema/schema_test.go,8a0af58,Jinzhu,fix map fields with clickhouse driver,22,37,BugKillerPro,2fb4928,1,2024-06-20 12:19:31,2023-12-15 08:31:23
schema/schema_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",19,21,Jinzhu,faee069,0,2020-02-15 16:37:59,2020-02-15 12:28:03
schema/schema_test.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,50,50,,,0,2020-02-01 12:18:32,
schema/schema_test.go,a4a0895,Jinzhu,Test parse schema relations,48,49,Jinzhu,14724dd,0,2020-02-01 14:26:17,2020-02-01 12:18:32
schema/schema_test.go,a4a0895,Jinzhu,Test parse schema relations,51,51,,,0,2020-02-01 14:26:17,
schema/schema_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",40,47,Jinzhu,3cbd233,0,2020-02-15 16:37:59,2020-02-01 16:03:56
schema/schema_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",38,38,Jinzhu,14724dd,0,2020-02-15 16:37:59,2020-02-01 12:18:32
schema/schema_test.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,52,52,,,0,2020-02-01 12:18:32,
schema/schema_test.go,a4a0895,Jinzhu,Test parse schema relations,59,59,,,0,2020-02-01 14:26:17,
schema/schema_test.go,a4a0895,Jinzhu,Test parse schema relations,54,57,,,0,2020-02-01 14:26:17,
schema/schema_test.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,63,64,,,0,2020-02-01 12:18:32,
schema/schema_test.go,faee069,Jinzhu,"Test Field Valuer, Setter",62,62,Jinzhu,a4a0895,0,2020-02-15 12:28:03,2020-02-01 14:26:17
schema/schema_test.go,a4a0895,Jinzhu,Test parse schema relations,67,68,,,0,2020-02-01 14:26:17,
schema/schema_test.go,04adbaf,Jinzhu,Fix parse stmt ReflectValue,39,39,Jinzhu,14724dd,1,2020-02-24 00:51:35,2020-02-01 12:18:32
schema/schema_test.go,a4a0895,Jinzhu,Test parse schema relations,70,70,,,0,2020-02-01 14:26:17,
schema/schema_test.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,71,71,,,0,2020-02-01 12:18:32,
schema/schema_test.go,a1e35bd,Jinzhu,Support merge batch data some having primary values,53,53,Jinzhu,f7f6335,0,2020-06-20 08:52:15,2020-03-12 05:05:22
schema/schema_test.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,72,72,,,0,2020-02-01 12:18:32,
schema/schema_test.go,f7f6335,Jinzhu,"Fix tests with mysql, postgres",58,58,Jinzhu,a4a0895,1,2020-03-12 05:05:22,2020-02-01 14:26:17
schema/schema_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,75,104,Jinzhu,a4a0895,0,2020-02-01 16:03:56,2020-02-01 14:26:17
schema/schema_test.go,a4a0895,Jinzhu,Test parse schema relations,73,74,,,0,2020-02-01 14:26:17,
schema/schema_test.go,a46d48c,Jinzhu,Add tests for controlling field permission with tag,105,105,Jinzhu,f7f6335,0,2020-04-08 00:32:28,2020-03-12 05:05:22
schema/schema_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,106,108,,,0,2020-02-01 16:03:56,
schema/schema_test.go,f7f6335,Jinzhu,"Fix tests with mysql, postgres",60,61,Jinzhu,a4a0895,1,2020-03-12 05:05:22,2020-02-01 14:26:17
schema/schema_test.go,a46d48c,Jinzhu,Add tests for controlling field permission with tag,69,69,Jinzhu,a4a0895,0,2020-04-08 00:32:28,2020-02-01 14:26:17
schema/schema_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,110,118,,,0,2020-02-01 16:03:56,
schema/schema_test.go,a46d48c,Jinzhu,Add tests for controlling field permission with tag,119,119,Jinzhu,e2a360b,0,2020-04-08 00:32:28,2020-02-23 13:22:35
schema/schema_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,120,122,,,0,2020-02-01 16:03:56,
schema/schema_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,124,127,,,0,2020-02-01 16:03:56,
schema/schema_test.go,a4a0895,Jinzhu,Test parse schema relations,128,128,,,0,2020-02-01 14:26:17,
schema/schema_test.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,132,133,,,0,2020-02-01 12:18:32,
schema/schema_test.go,3cbd233,Jinzhu,Add more tests for parse schema relations,129,129,,,0,2020-02-01 16:03:56,
schema/schema_test.go,a4a0895,Jinzhu,Test parse schema relations,130,131,,,0,2020-02-01 14:26:17,
schema/schema_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",134,135,Jinzhu,faee069,0,2020-02-15 16:37:59,2020-02-15 12:28:03
schema/schema_test.go,a46d48c,Jinzhu,Add tests for controlling field permission with tag,123,123,Jinzhu,faee069,0,2020-04-08 00:32:28,2020-02-15 12:28:03
schema/schema_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",137,145,Jinzhu,faee069,0,2020-02-15 16:37:59,2020-02-15 12:28:03
schema/schema_test.go,a46d48c,Jinzhu,Add tests for controlling field permission with tag,109,109,Jinzhu,a4a0895,0,2020-04-08 00:32:28,2020-02-01 14:26:17
schema/schema_test.go,a1e35bd,Jinzhu,Support merge batch data some having primary values,146,146,Jinzhu,8bb05a5,0,2020-06-20 08:52:15,2020-06-02 02:50:38
schema/schema_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",147,154,,,0,2020-02-15 16:37:59,
schema/schema_test.go,04adbaf,Jinzhu,Fix parse stmt ReflectValue,136,136,Jinzhu,faee069,1,2020-02-24 00:51:35,2020-02-15 12:28:03
schema/schema_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",157,158,,,0,2020-02-15 16:37:59,
schema/schema_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),164,164,Jinzhu,1a526e6,0,2022-01-06 07:02:53,2020-09-24 03:32:38
schema/schema_test.go,a46d48c,Jinzhu,Add tests for controlling field permission with tag,159,159,,,0,2020-04-08 00:32:28,
schema/schema_test.go,18236fa,Jinzhu,"Add more tests for setter, valuer",160,162,,,0,2020-02-15 16:37:59,
schema/schema_test.go,dc48e04,Jinzhu,"Fix nested embedded struct, close #3278",183,183,Jinzhu,6834c25,1,2020-08-18 03:21:40,2020-08-17 04:02:46
schema/schema_test.go,dc48e04,Jinzhu,"Fix nested embedded struct, close #3278",182,182,Jinzhu,6834c25,1,2020-08-18 03:21:40,2020-08-17 04:02:46
schema/schema_test.go,c19a3ab,Jinzhu,"Fix self-referential belongs to, close #3319",189,189,Jinzhu,3313c11,1,2020-08-28 03:31:13,2020-08-19 11:15:27
schema/schema_test.go,2218e32,Jinzhu,Allow customize table name with TableName,165,179,,,0,2020-06-02 07:48:19,
schema/schema_test.go,2218e32,Jinzhu,Allow customize table name with TableName,163,163,,,0,2020-06-02 07:48:19,
schema/schema_test.go,3313c11,Jinzhu,"Fix embedded struct containing field named ID, close #3286",201,202,Jinzhu,dc48e04,1,2020-08-19 11:15:27,2020-08-18 03:21:40
schema/schema_test.go,2fb4928,BugKillerPro,refactor: Resolve implicit memory aliasing in for loop (#6730),65,66,Jinzhu,a4a0895,1,2023-12-15 08:31:23,2020-02-01 14:26:17
schema/schema_test.go,06de6e8,Jinzhu,"Test same field name from embedded field, close #3291",203,207,Jinzhu,3313c11,0,2020-08-20 02:58:35,2020-08-19 11:15:27
schema/schema_test.go,06de6e8,Jinzhu,"Test same field name from embedded field, close #3291",209,211,Jinzhu,3313c11,0,2020-08-20 02:58:35,2020-08-19 11:15:27
schema/schema_test.go,dc48e04,Jinzhu,"Fix nested embedded struct, close #3278",186,188,,,1,2020-08-18 03:21:40,
schema/schema_test.go,2fb4928,BugKillerPro,refactor: Resolve implicit memory aliasing in for loop (#6730),155,156,Jinzhu,8bb05a5,1,2023-12-15 08:31:23,2020-06-02 02:50:38
schema/schema_test.go,dc48e04,Jinzhu,"Fix nested embedded struct, close #3278",190,199,,,1,2020-08-18 03:21:40,
schema/schema_test.go,3313c11,Jinzhu,"Fix embedded struct containing field named ID, close #3286",208,208,Jinzhu,dc48e04,1,2020-08-19 11:15:27,2020-08-18 03:21:40
schema/schema_test.go,f121622,Jinzhu,Don't add prefix for invalid embedded fields,212,212,Jinzhu,c19a3ab,0,2020-09-04 06:35:44,2020-08-28 03:31:13
schema/schema_test.go,3313c11,Jinzhu,"Fix embedded struct containing field named ID, close #3286",213,215,Jinzhu,dc48e04,1,2020-08-19 11:15:27,2020-08-18 03:21:40
schema/schema_test.go,06de6e8,Jinzhu,"Test same field name from embedded field, close #3291",216,216,Jinzhu,3313c11,0,2020-08-20 02:58:35,2020-08-19 11:15:27
schema/schema_test.go,f121622,Jinzhu,Don't add prefix for invalid embedded fields,229,229,Jinzhu,c19a3ab,0,2020-09-04 06:35:44,2020-08-28 03:31:13
schema/schema_test.go,6834c25,Jinzhu,"Fix stack overflow for embedded self-referred associations, close #3269",184,185,,,1,2020-08-17 04:02:46,
schema/schema_test.go,6834c25,Jinzhu,"Fix stack overflow for embedded self-referred associations, close #3269",180,181,,,1,2020-08-17 04:02:46,
schema/schema_test.go,6834c25,Jinzhu,"Fix stack overflow for embedded self-referred associations, close #3269",200,200,,,1,2020-08-17 04:02:46,
schema/schema_test.go,3313c11,Jinzhu,"Fix embedded struct containing field named ID, close #3286",217,220,,,1,2020-08-19 11:15:27,
schema/schema_test.go,1a526e6,Jinzhu,"Fix NamingStrategy with embedded struct, close #3513",244,288,Jinzhu,f121622,1,2020-09-24 03:32:38,2020-09-04 06:35:44
schema/schema_test.go,1a526e6,Jinzhu,"Fix NamingStrategy with embedded struct, close #3513",289,311,Jinzhu,f121622,1,2020-09-24 03:32:38,2020-09-04 06:35:44
schema/schema_test.go,ed47415,Truong Nguyen,"Fix: Composite primary key with auto-increment value returns 0 after insert (#6127)  * Fix #4930 workaround for databases that support auto-increment in composite primary key.  * Add test for composite key with auto-increment.  * schema.go: use field.AutoIncrement instead of field.TagSettings[""AUTOINCREMENT""], add test to check autoincrement:false  create_test.go: remove unused code: drop table CompositeKeyProduct  ---------  Co-authored-by: Jinzhu <wosmvp@gmail.com>",312,352,kinggo,b47cf57,1,2023-03-10 08:50:03,2022-01-06 07:02:53
schema/schema_test.go,3313c11,Jinzhu,"Fix embedded struct containing field named ID, close #3286",221,225,,,1,2020-08-19 11:15:27,
schema/schema_test.go,3313c11,Jinzhu,"Fix embedded struct containing field named ID, close #3286",227,228,,,1,2020-08-19 11:15:27,
schema/schema_test.go,06de6e8,Jinzhu,"Test same field name from embedded field, close #3291",226,226,,,0,2020-08-20 02:58:35,
schema/schema_test.go,3313c11,Jinzhu,"Fix embedded struct containing field named ID, close #3286",241,243,,,1,2020-08-19 11:15:27,
schema/schema_test.go,3313c11,Jinzhu,"Fix embedded struct containing field named ID, close #3286",232,235,,,1,2020-08-19 11:15:27,
schema/schema_test.go,f121622,Jinzhu,Don't add prefix for invalid embedded fields,236,240,,,0,2020-09-04 06:35:44,
schema/schema_test.go,06de6e8,Jinzhu,"Test same field name from embedded field, close #3291",230,231,,,0,2020-08-20 02:58:35,
statement_test.go,8f8d549,Jinzhu,Refactor merge where exprs,7,7,Douglas Danger Manley,72d0fa6,0,2020-06-08 01:13:34,2020-06-07 20:54:01
statement_test.go,13f96f7,Douglas Danger Manley,"Spelling fix for ""condtion"" -> ""condition"" (#3042)  This fixes a spelling error in the word ""condition""; in particular, the `BuildCondtion` function should be named `BuildCondition`.",28,28,Jinzhu,8f8d549,1,2020-06-08 03:38:51,2020-06-08 01:13:34
statement_test.go,13f96f7,Douglas Danger Manley,"Spelling fix for ""condtion"" -> ""condition"" (#3042)  This fixes a spelling error in the word ""condition""; in particular, the `BuildCondtion` function should be named `BuildCondition`.",24,24,Jinzhu,8f8d549,1,2020-06-08 03:38:51,2020-06-08 01:13:34
statement_test.go,72d0fa6,Douglas Danger Manley,"Fix Statement Where clone array corruption in v2  Method-chaining in gorm is predicated on a `Clause`'s `MergeClause` method ensuring that the two clauses are disconnected in terms of pointers (at least in the Wherec case).  However, the original Where implementation used `append`, which only returns a new instance if the backing array needs to be resized. In some cases, this is true.  Practically, go doubles the size of the slice once it gets full, so the following slice `append` calls would result in a new slice:  * 0 -> 1 * 1 -> 2 * 2 -> 4 * 4 -> 8 * and so on.  So, when the number of ""where"" conditions was 0, 1, 2, or 4, method-chaining would work as expected.  However, when it was 3, 5, 6, or 7, modifying the copy would modify the original.  This also updates the ""order by"", ""group by"" and ""set"" clauses.",25,27,,,1,2020-06-07 20:54:01,
statement_test.go,13f96f7,Douglas Danger Manley,"Spelling fix for ""condtion"" -> ""condition"" (#3042)  This fixes a spelling error in the word ""condition""; in particular, the `BuildCondtion` function should be named `BuildCondition`.",18,18,Jinzhu,8f8d549,1,2020-06-08 03:38:51,2020-06-08 01:13:34
statement_test.go,72d0fa6,Douglas Danger Manley,"Fix Statement Where clone array corruption in v2  Method-chaining in gorm is predicated on a `Clause`'s `MergeClause` method ensuring that the two clauses are disconnected in terms of pointers (at least in the Wherec case).  However, the original Where implementation used `append`, which only returns a new instance if the backing array needs to be resized. In some cases, this is true.  Practically, go doubles the size of the slice once it gets full, so the following slice `append` calls would result in a new slice:  * 0 -> 1 * 1 -> 2 * 2 -> 4 * 4 -> 8 * and so on.  So, when the number of ""where"" conditions was 0, 1, 2, or 4, method-chaining would work as expected.  However, when it was 3, 5, 6, or 7, modifying the copy would modify the original.  This also updates the ""order by"", ""group by"" and ""set"" clauses.",1,6,,,1,2020-06-07 20:54:01,
statement_test.go,72d0fa6,Douglas Danger Manley,"Fix Statement Where clone array corruption in v2  Method-chaining in gorm is predicated on a `Clause`'s `MergeClause` method ensuring that the two clauses are disconnected in terms of pointers (at least in the Wherec case).  However, the original Where implementation used `append`, which only returns a new instance if the backing array needs to be resized. In some cases, this is true.  Practically, go doubles the size of the slice once it gets full, so the following slice `append` calls would result in a new slice:  * 0 -> 1 * 1 -> 2 * 2 -> 4 * 4 -> 8 * and so on.  So, when the number of ""where"" conditions was 0, 1, 2, or 4, method-chaining would work as expected.  However, when it was 3, 5, 6, or 7, modifying the copy would modify the original.  This also updates the ""order by"", ""group by"" and ""set"" clauses.",19,23,,,1,2020-06-07 20:54:01,
statement_test.go,72d0fa6,Douglas Danger Manley,"Fix Statement Where clone array corruption in v2  Method-chaining in gorm is predicated on a `Clause`'s `MergeClause` method ensuring that the two clauses are disconnected in terms of pointers (at least in the Wherec case).  However, the original Where implementation used `append`, which only returns a new instance if the backing array needs to be resized. In some cases, this is true.  Practically, go doubles the size of the slice once it gets full, so the following slice `append` calls would result in a new slice:  * 0 -> 1 * 1 -> 2 * 2 -> 4 * 4 -> 8 * and so on.  So, when the number of ""where"" conditions was 0, 1, 2, or 4, method-chaining would work as expected.  However, when it was 3, 5, 6, or 7, modifying the copy would modify the original.  This also updates the ""order by"", ""group by"" and ""set"" clauses.",8,17,,,1,2020-06-07 20:54:01,
statement_test.go,72d0fa6,Douglas Danger Manley,"Fix Statement Where clone array corruption in v2  Method-chaining in gorm is predicated on a `Clause`'s `MergeClause` method ensuring that the two clauses are disconnected in terms of pointers (at least in the Wherec case).  However, the original Where implementation used `append`, which only returns a new instance if the backing array needs to be resized. In some cases, this is true.  Practically, go doubles the size of the slice once it gets full, so the following slice `append` calls would result in a new slice:  * 0 -> 1 * 1 -> 2 * 2 -> 4 * 4 -> 8 * and so on.  So, when the number of ""where"" conditions was 0, 1, 2, or 4, method-chaining would work as expected.  However, when it was 3, 5, 6, or 7, modifying the copy would modify the original.  This also updates the ""order by"", ""group by"" and ""set"" clauses.",29,36,,,1,2020-06-07 20:54:01,
statement_test.go,3f92b9b,Shunsuke Otani,Refactor: redundant type from composite literal (#5604),47,58,Jinzhu,cae30e9,0,2022-08-15 02:47:26,2022-07-13 10:02:11
statement_test.go,e1f46eb,chyroc,fix: ignore nil query (#6021),38,44,Shunsuke Otani,3f92b9b,1,2023-02-02 09:54:51,2022-08-15 02:47:26
statement_test.go,cae30e9,Jinzhu,Fix select with association column,46,46,Jinzhu,a706384,1,2022-07-13 10:02:11,2022-07-13 09:44:14
statement_test.go,6312d86,Jinzhu,Support specify select/omit columns with table,37,37,Douglas Danger Manley,13f96f7,0,2021-10-08 09:51:27,2020-06-08 03:38:51
statement_test.go,6312d86,Jinzhu,Support specify select/omit columns with table,45,45,Douglas Danger Manley,13f96f7,0,2021-10-08 09:51:27,2020-06-08 03:38:51
statement_test.go,436cca7,Stephano George,"fix: join and select mytable.* not working (#6761)  * fix: select mytable.* not working  * fix: select mytable.*: will not match `mytable.""*""`. feat: increase readability of code matching table name column name",59,64,chyroc,e1f46eb,1,2023-12-23 13:19:41,2023-02-02 09:54:51
statement_test.go,436cca7,Stephano George,"fix: join and select mytable.* not working (#6761)  * fix: select mytable.* not working  * fix: select mytable.*: will not match `mytable.""*""`. feat: increase readability of code matching table name column name",66,67,chyroc,e1f46eb,1,2023-12-23 13:19:41,2023-02-02 09:54:51
statement_test.go,6312d86,Jinzhu,Support specify select/omit columns with table,65,65,,,0,2021-10-08 09:51:27,
statement_test.go,6312d86,Jinzhu,Support specify select/omit columns with table,68,70,,,0,2021-10-08 09:51:27,
tests/associations_belongs_to_test.go,c299cb8,Jinzhu,Refactor association,1,5,,,0,2020-05-26 03:19:01,
tests/associations_belongs_to_test.go,8bb05a5,Jinzhu,Refactor tests files,7,7,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/associations_belongs_to_test.go,c299cb8,Jinzhu,Refactor association,12,21,,,0,2020-05-26 03:19:01,
tests/associations_belongs_to_test.go,c299cb8,Jinzhu,Refactor association,8,10,,,0,2020-05-26 03:19:01,
tests/associations_belongs_to_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),11,11,Jinzhu,300a23f,0,2022-01-06 07:02:53,2021-12-02 02:39:24
tests/associations_belongs_to_test.go,d9525d4,Cr,"fix: skip append relation field to default db value (#5885)  * fix: relation field returning  * chore: gofumpt style",6,6,kinggo,b47cf57,1,2022-12-01 12:26:59,2022-01-06 07:02:53
tests/associations_belongs_to_test.go,c299cb8,Jinzhu,Refactor association,26,34,,,0,2020-05-26 03:19:01,
tests/associations_belongs_to_test.go,1f05cb7,Jinzhu,"Handle Associations with pointer of pointer, close #3130",22,25,Jinzhu,d11c424,0,2020-07-10 14:53:03,2020-06-07 07:26:43
tests/associations_belongs_to_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),35,36,Jinzhu,300a23f,0,2022-01-06 07:02:53,2021-12-02 02:39:24
tests/associations_belongs_to_test.go,c299cb8,Jinzhu,Refactor association,66,135,,,0,2020-05-26 03:19:01,
tests/associations_belongs_to_test.go,c299cb8,Jinzhu,Refactor association,37,63,,,0,2020-05-26 03:19:01,
tests/associations_belongs_to_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),64,65,Jinzhu,300a23f,0,2022-01-06 07:02:53,2021-12-02 02:39:24
tests/associations_belongs_to_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",141,141,Cr,d9525d4,0,2023-02-08 08:29:09,2022-12-01 12:26:59
tests/associations_belongs_to_test.go,c299cb8,Jinzhu,Refactor association,144,146,,,0,2020-05-26 03:19:01,
tests/associations_belongs_to_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),147,147,Jinzhu,300a23f,0,2022-01-06 07:02:53,2021-12-02 02:39:24
tests/associations_belongs_to_test.go,300a23f,Jinzhu,"Check rows.Close error, close #4891",142,143,Jinzhu,1f05cb7,1,2021-12-02 02:39:24,2020-07-10 14:53:03
tests/associations_belongs_to_test.go,c299cb8,Jinzhu,Refactor association,148,194,,,0,2020-05-26 03:19:01,
tests/associations_belongs_to_test.go,300a23f,Jinzhu,"Check rows.Close error, close #4891",136,140,Jinzhu,1f05cb7,1,2021-12-02 02:39:24,2020-07-10 14:53:03
tests/associations_belongs_to_test.go,c299cb8,Jinzhu,Refactor association,196,228,,,0,2020-05-26 03:19:01,
tests/associations_belongs_to_test.go,32045fd,black-06,"feat: unscoped association (#5899) (#6246)  * feat: unscoped association (#5899)  * modify name because mysql character is latin1  * work only on has association  * format  * Unscoped on belongs_to association",254,280,Cheese,02b7e26,0,2023-05-04 11:30:45,2023-02-08 08:29:09
tests/associations_belongs_to_test.go,32045fd,black-06,"feat: unscoped association (#5899) (#6246)  * feat: unscoped association (#5899)  * modify name because mysql character is latin1  * work only on has association  * format  * Unscoped on belongs_to association",281,306,Cheese,02b7e26,0,2023-05-04 11:30:45,2023-02-08 08:29:09
tests/associations_belongs_to_test.go,d9525d4,Cr,"fix: skip append relation field to default db value (#5885)  * fix: relation field returning  * chore: gofumpt style",229,253,kinggo,b47cf57,1,2022-12-01 12:26:59,2022-01-06 07:02:53
tests/associations_belongs_to_test.go,d11c424,Jinzhu,Fix typo,195,195,,,1,2020-06-07 07:26:43,
tests/associations_has_one_test.go,c299cb8,Jinzhu,Refactor association,1,5,,,0,2020-05-26 03:19:01,
tests/associations_has_one_test.go,c299cb8,Jinzhu,Refactor association,29,43,,,0,2020-05-26 03:19:01,
tests/associations_has_one_test.go,c299cb8,Jinzhu,Refactor association,7,9,,,0,2020-05-26 03:19:01,
tests/associations_has_one_test.go,c299cb8,Jinzhu,Refactor association,11,27,,,0,2020-05-26 03:19:01,
tests/associations_has_one_test.go,8bb05a5,Jinzhu,Refactor tests files,6,6,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/associations_has_one_test.go,c299cb8,Jinzhu,Refactor association,45,70,,,0,2020-05-26 03:19:01,
tests/associations_has_one_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),28,28,Jinzhu,54b80b1,0,2022-01-06 07:02:53,2020-11-17 13:49:40
tests/associations_has_one_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),10,10,Jinzhu,54b80b1,0,2022-01-06 07:02:53,2020-11-17 13:49:40
tests/associations_has_one_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),44,44,Jinzhu,54b80b1,0,2022-01-06 07:02:53,2020-11-17 13:49:40
tests/associations_has_one_test.go,a1e35bd,Jinzhu,Support merge batch data some having primary values,71,71,Jinzhu,d11c424,0,2020-06-20 08:52:15,2020-06-07 07:26:43
tests/associations_has_one_test.go,c299cb8,Jinzhu,Refactor association,72,85,,,0,2020-05-26 03:19:01,
tests/associations_has_one_test.go,c299cb8,Jinzhu,Refactor association,100,100,,,0,2020-05-26 03:19:01,
tests/associations_has_one_test.go,c299cb8,Jinzhu,Refactor association,102,130,,,0,2020-05-26 03:19:01,
tests/associations_has_one_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),87,87,Jinzhu,54b80b1,0,2022-01-06 07:02:53,2020-11-17 13:49:40
tests/associations_has_one_test.go,54b80b1,Jinzhu,"Allow to omit fields in associations, close #3752",86,86,Jinzhu,a1e35bd,0,2020-11-17 13:49:40,2020-06-20 08:52:15
tests/associations_has_one_test.go,54b80b1,Jinzhu,"Allow to omit fields in associations, close #3752",88,99,Jinzhu,a1e35bd,0,2020-11-17 13:49:40,2020-06-20 08:52:15
tests/associations_has_one_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),101,101,Jinzhu,54b80b1,0,2022-01-06 07:02:53,2020-11-17 13:49:40
tests/associations_has_one_test.go,c299cb8,Jinzhu,Refactor association,132,141,,,0,2020-05-26 03:19:01,
tests/associations_has_one_test.go,c299cb8,Jinzhu,Refactor association,143,159,,,0,2020-05-26 03:19:01,
tests/associations_has_one_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),142,142,Jinzhu,54b80b1,0,2022-01-06 07:02:53,2020-11-17 13:49:40
tests/associations_has_one_test.go,c299cb8,Jinzhu,Refactor association,161,175,,,0,2020-05-26 03:19:01,
tests/associations_has_one_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),160,160,Jinzhu,54b80b1,0,2022-01-06 07:02:53,2020-11-17 13:49:40
tests/associations_has_one_test.go,c299cb8,Jinzhu,Refactor association,177,202,,,0,2020-05-26 03:19:01,
tests/associations_has_one_test.go,d11c424,Jinzhu,Fix typo,131,131,,,1,2020-06-07 07:26:43,
tests/associations_has_one_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),176,176,Jinzhu,54b80b1,0,2022-01-06 07:02:53,2020-11-17 13:49:40
tests/associations_has_one_test.go,c299cb8,Jinzhu,Refactor association,204,218,,,0,2020-05-26 03:19:01,
tests/associations_has_one_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),219,219,Jinzhu,54b80b1,0,2022-01-06 07:02:53,2020-11-17 13:49:40
tests/associations_has_one_test.go,c299cb8,Jinzhu,Refactor association,220,248,,,0,2020-05-26 03:19:01,
tests/associations_has_one_test.go,c299cb8,Jinzhu,Refactor association,250,257,,,0,2020-05-26 03:19:01,
tests/associations_has_one_test.go,a1e35bd,Jinzhu,Support merge batch data some having primary values,203,203,,,0,2020-06-20 08:52:15,
tests/associations_has_one_test.go,78c6dfd,Sergei Sadov,"Fix association replace non-addressable panic (#7012)  * Fix association replace non-addressable panic  * Fix tests  * Add has one panic test  ---------  Co-authored-by: sgsv <->",258,269,kinggo,b47cf57,1,2024-06-12 10:49:45,2022-01-06 07:02:53
tests/associations_has_one_test.go,d11c424,Jinzhu,Fix typo,249,249,,,1,2020-06-07 07:26:43,
tests/associations_has_many_test.go,8bb05a5,Jinzhu,Refactor tests files,7,7,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,8,10,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,12,24,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,1,5,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),11,11,Jinzhu,0c9870d,0,2022-01-06 07:02:53,2020-08-20 02:39:01
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,42,45,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,47,60,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,32045fd,black-06,"feat: unscoped association (#5899) (#6246)  * feat: unscoped association (#5899)  * modify name because mysql character is latin1  * work only on has association  * format  * Unscoped on belongs_to association",6,6,kinggo,b47cf57,0,2023-05-04 11:30:45,2022-01-06 07:02:53
tests/associations_has_many_test.go,0c9870d,Jinzhu,Test Association Mode with conditions,25,41,Jinzhu,d11c424,0,2020-08-20 02:39:01,2020-06-07 07:26:43
tests/associations_has_many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),46,46,Jinzhu,0c9870d,0,2022-01-06 07:02:53,2020-08-20 02:39:01
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,64,66,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,62,62,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),61,61,Jinzhu,0c9870d,0,2022-01-06 07:02:53,2020-08-20 02:39:01
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,69,80,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),68,68,Jinzhu,0c9870d,0,2022-01-06 07:02:53,2020-08-20 02:39:01
tests/associations_has_many_test.go,0c9870d,Jinzhu,Test Association Mode with conditions,67,67,Jinzhu,d11c424,0,2020-08-20 02:39:01,2020-06-07 07:26:43
tests/associations_has_many_test.go,0c9870d,Jinzhu,Test Association Mode with conditions,63,63,Jinzhu,d11c424,0,2020-08-20 02:39:01,2020-06-07 07:26:43
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,142,155,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,82,122,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),81,81,Jinzhu,0c9870d,0,2022-01-06 07:02:53,2020-08-20 02:39:01
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,124,140,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,157,162,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),141,141,Jinzhu,0c9870d,0,2022-01-06 07:02:53,2020-08-20 02:39:01
tests/associations_has_many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),156,156,Jinzhu,0c9870d,0,2022-01-06 07:02:53,2020-08-20 02:39:01
tests/associations_has_many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),123,123,Jinzhu,0c9870d,0,2022-01-06 07:02:53,2020-08-20 02:39:01
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,177,217,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,164,175,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),176,176,Jinzhu,0c9870d,0,2022-01-06 07:02:53,2020-08-20 02:39:01
tests/associations_has_many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),163,163,Jinzhu,0c9870d,0,2022-01-06 07:02:53,2020-08-20 02:39:01
tests/associations_has_many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),218,218,Jinzhu,0c9870d,0,2022-01-06 07:02:53,2020-08-20 02:39:01
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,219,254,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,256,260,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,262,271,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,312,316,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,273,310,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),272,272,Jinzhu,0c9870d,0,2022-01-06 07:02:53,2020-08-20 02:39:01
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,329,345,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,318,327,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,d11c424,Jinzhu,Fix typo,255,255,,,1,2020-06-07 07:26:43,
tests/associations_has_many_test.go,d11c424,Jinzhu,Fix typo,317,317,,,1,2020-06-07 07:26:43,
tests/associations_has_many_test.go,d11c424,Jinzhu,Fix typo,311,311,,,1,2020-06-07 07:26:43,
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,362,367,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,d11c424,Jinzhu,Fix typo,261,261,,,1,2020-06-07 07:26:43,
tests/associations_has_many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),346,346,Jinzhu,0c9870d,0,2022-01-06 07:02:53,2020-08-20 02:39:01
tests/associations_has_many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),328,328,Jinzhu,0c9870d,0,2022-01-06 07:02:53,2020-08-20 02:39:01
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,347,360,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),361,361,Jinzhu,0c9870d,0,2022-01-06 07:02:53,2020-08-20 02:39:01
tests/associations_has_many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),368,368,Jinzhu,0c9870d,0,2022-01-06 07:02:53,2020-08-20 02:39:01
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,382,422,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,369,380,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,426,432,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,424,424,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),423,423,Jinzhu,0c9870d,0,2022-01-06 07:02:53,2020-08-20 02:39:01
tests/associations_has_many_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",425,425,black-06,32045fd,1,2023-12-15 08:36:08,2023-05-04 11:30:45
tests/associations_has_many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),381,381,Jinzhu,0c9870d,0,2022-01-06 07:02:53,2020-08-20 02:39:01
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,449,468,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",433,433,black-06,32045fd,1,2023-12-15 08:36:08,2023-05-04 11:30:45
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,434,440,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,470,474,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",441,448,black-06,32045fd,1,2023-12-15 08:36:08,2023-05-04 11:30:45
tests/associations_has_many_test.go,c299cb8,Jinzhu,Refactor association,476,483,,,0,2020-05-26 03:19:01,
tests/associations_has_many_test.go,32045fd,black-06,"feat: unscoped association (#5899) (#6246)  * feat: unscoped association (#5899)  * modify name because mysql character is latin1  * work only on has association  * format  * Unscoped on belongs_to association",484,556,kinggo,b47cf57,0,2023-05-04 11:30:45,2022-01-06 07:02:53
tests/associations_has_many_test.go,d11c424,Jinzhu,Fix typo,475,475,,,1,2020-06-07 07:26:43,
tests/associations_has_many_test.go,d11c424,Jinzhu,Fix typo,469,469,,,1,2020-06-07 07:26:43,
tests/associations_has_many_test.go,78c6dfd,Sergei Sadov,"Fix association replace non-addressable panic (#7012)  * Fix association replace non-addressable panic  * Fix tests  * Add has one panic test  ---------  Co-authored-by: sgsv <->",557,568,Alexis Viscogliosi,a2cac75,1,2024-06-12 10:49:45,2023-12-15 08:36:08
tests/benchmark_test.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,12,19,,,0,2020-06-05 15:26:56,
tests/benchmark_test.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,5,10,,,0,2020-06-05 15:26:56,
tests/benchmark_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),11,11,Jinzhu,1490a06,0,2022-01-06 07:02:53,2020-06-05 15:26:56
tests/benchmark_test.go,d01de72,Bexanderthebex,"enhancement: Avoid calling reflect.New() when passing in slice of values to `Scan()` (#5388)  * fix: reduce allocations when slice of values  * chore[test]: Add benchmark for scan  * chore[test]: add bench for scan slice  * chore[test]: add bench for slice pointer and improve tests  * chore[test]: make sure database is empty when doing slice tests  * fix[test]: correct sql delete statement  * enhancement: skip new if rows affected = 0",28,66,kinggo,b47cf57,1,2022-06-01 03:50:57,2022-01-06 07:02:53
tests/benchmark_test.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,21,27,,,0,2020-06-05 15:26:56,
tests/benchmark_test.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,1,3,,,0,2020-06-05 15:26:56,
tests/benchmark_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),20,20,Jinzhu,1490a06,0,2022-01-06 07:02:53,2020-06-05 15:26:56
tests/benchmark_test.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,67,67,,,0,2020-06-05 15:26:56,
tests/benchmark_test.go,d01de72,Bexanderthebex,"enhancement: Avoid calling reflect.New() when passing in slice of values to `Scan()` (#5388)  * fix: reduce allocations when slice of values  * chore[test]: Add benchmark for scan  * chore[test]: add bench for scan slice  * chore[test]: add bench for slice pointer and improve tests  * chore[test]: make sure database is empty when doing slice tests  * fix[test]: correct sql delete statement  * enhancement: skip new if rows affected = 0",4,4,kinggo,b47cf57,1,2022-06-01 03:50:57,2022-01-06 07:02:53
tests/benchmark_test.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,78,84,,,0,2020-06-05 15:26:56,
tests/benchmark_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),68,68,,,0,2022-01-06 07:02:53,
tests/benchmark_test.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,69,76,,,0,2020-06-05 15:26:56,
tests/benchmark_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),77,77,,,0,2022-01-06 07:02:53,
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,2,8,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,1,1,Jinzhu,5959c81,0,2020-02-01 12:18:32,2020-01-31 00:44:45
tests/callbacks_test.go,5959c81,Jinzhu,Refactor callbacks,9,9,,,0,2020-01-31 00:44:45,
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,11,12,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,e986371,Jinzhu,Rename package name,10,10,Jinzhu,728c0d4,0,2020-06-02 01:18:01,2020-02-02 12:05:10
tests/callbacks_test.go,5959c81,Jinzhu,Refactor callbacks,19,20,,,0,2020-01-31 00:44:45,
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,18,18,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,5959c81,Jinzhu,Refactor callbacks,13,17,,,0,2020-01-31 00:44:45,
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,21,25,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,5959c81,Jinzhu,Refactor callbacks,36,40,,,0,2020-01-31 00:44:45,
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,33,35,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,53,56,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,5959c81,Jinzhu,Refactor callbacks,50,52,,,0,2020-01-31 00:44:45,
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,42,49,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,5959c81,Jinzhu,Refactor callbacks,57,57,,,0,2020-01-31 00:44:45,
tests/callbacks_test.go,5959c81,Jinzhu,Refactor callbacks,26,32,,,0,2020-01-31 00:44:45,
tests/callbacks_test.go,b010494,Cr,fix: callbcak sort when using multiple plugin (#5304),41,41,Jinzhu,ff985b9,1,2022-04-30 01:57:16,2020-08-04 04:25:34
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,58,80,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,89,89,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,5959c81,Jinzhu,Refactor callbacks,81,88,,,0,2020-01-31 00:44:45,
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,91,93,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,95,99,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,5959c81,Jinzhu,Refactor callbacks,90,90,,,0,2020-01-31 00:44:45,
tests/callbacks_test.go,26195e6,snackmgmg,"fix: remove `callback` from `callbacks` if `Remove()` called (#6916)  * fix: remove callback from callbacks if Remove() called  * reduce number of loops  * remove unnecessary blank line",94,94,jesse.tang,be440e7,1,2024-03-26 03:33:36,2022-09-30 03:14:34
tests/callbacks_test.go,ff985b9,Jinzhu,"Fix failed to guess relations for embedded types, close #3224",105,110,Jinzhu,c11c939,1,2020-08-04 04:25:34,2020-08-03 13:48:36
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,112,113,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,c11c939,Jinzhu,callbacks support sort with wildcard,100,104,Jinzhu,e986371,0,2020-08-03 13:48:36,2020-06-02 01:18:01
tests/callbacks_test.go,728c0d4,Jinzhu,Add callbacks,119,119,,,0,2020-02-02 12:05:10,
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,120,121,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,5959c81,Jinzhu,Refactor callbacks,122,133,,,0,2020-01-31 00:44:45,
tests/callbacks_test.go,be440e7,jesse.tang,"fix possible nil panic in tests (#5720)  * fix maybe nil panic  * reset code",116,118,Cr,b010494,1,2022-09-30 03:14:34,2022-04-30 01:57:16
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,114,114,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,728c0d4,Jinzhu,Add callbacks,115,115,,,0,2020-02-02 12:05:10,
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,141,143,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,134,139,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,c11c939,Jinzhu,callbacks support sort with wildcard,111,111,Jinzhu,14724dd,0,2020-08-03 13:48:36,2020-02-01 12:18:32
tests/callbacks_test.go,5959c81,Jinzhu,Refactor callbacks,140,140,,,0,2020-01-31 00:44:45,
tests/callbacks_test.go,5959c81,Jinzhu,Refactor callbacks,144,144,,,0,2020-01-31 00:44:45,
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,145,147,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,5959c81,Jinzhu,Refactor callbacks,148,148,,,0,2020-01-31 00:44:45,
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,153,153,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,5959c81,Jinzhu,Refactor callbacks,154,154,,,0,2020-01-31 00:44:45,
tests/callbacks_test.go,5959c81,Jinzhu,Refactor callbacks,152,152,,,0,2020-01-31 00:44:45,
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,155,155,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,5959c81,Jinzhu,Refactor callbacks,156,156,,,0,2020-01-31 00:44:45,
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,149,151,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,157,157,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,5959c81,Jinzhu,Refactor callbacks,158,167,,,0,2020-01-31 00:44:45,
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,168,169,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,5959c81,Jinzhu,Refactor callbacks,170,170,,,0,2020-01-31 00:44:45,
tests/callbacks_test.go,e509b31,Jinzhu,Implement callbacks,171,174,,,0,2020-01-30 22:35:25,
tests/callbacks_test.go,26195e6,snackmgmg,"fix: remove `callback` from `callbacks` if `Remove()` called (#6916)  * fix: remove callback from callbacks if Remove() called  * reduce number of loops  * remove unnecessary blank line",209,254,jesse.tang,be440e7,1,2024-03-26 03:33:36,2022-09-30 03:14:34
tests/callbacks_test.go,b010494,Cr,fix: callbcak sort when using multiple plugin (#5304),175,208,Jinzhu,ff985b9,1,2022-04-30 01:57:16,2020-08-04 04:25:34
tests/associations_test.go,8bb05a5,Jinzhu,Refactor tests files,9,9,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/associations_test.go,2ba599e,Goxiaoy,"fix empty QueryClauses in association (#5502) (#5503)  * fix empty QueryClauses in association (#5502)  * test: empty QueryClauses in association (#5502)  * style: empty QueryClauses in association (#5502)  * style: empty QueryClauses in association (#5502)",7,8,Jinzhu,9144969,1,2022-07-15 03:15:18,2022-04-02 09:17:47
tests/associations_test.go,f0a442a,Jinzhu,Refactor tests,10,11,,,0,2020-05-23 15:50:48,
tests/associations_test.go,d66af58,Deviller,"Fix Association.Replace() error returning (#3766)  * Fix Association.Replace() error returning  * Fallback to gorm.Model at TestAssociationNotNullClear()",6,6,Jinzhu,2416eab,1,2020-11-19 11:24:34,2020-07-03 16:36:27
tests/associations_test.go,f0a442a,Jinzhu,Refactor tests,1,5,,,0,2020-05-23 15:50:48,
tests/associations_test.go,2db3373,Jinzhu,Add Slice Association for BelongsTo,12,13,Jinzhu,91a6958,0,2020-05-24 12:53:20,2020-05-24 10:33:15
tests/associations_test.go,1559fe2,Jinzhu,Add more updates test,14,14,Jinzhu,c299cb8,0,2020-06-01 11:41:33,2020-05-26 03:19:01
tests/associations_test.go,2db3373,Jinzhu,Add Slice Association for BelongsTo,15,25,Jinzhu,91a6958,0,2020-05-24 12:53:20,2020-05-24 10:33:15
tests/associations_test.go,c299cb8,Jinzhu,Refactor association,31,31,Jinzhu,8de2bb4,0,2020-05-26 03:19:01,2020-05-25 17:57:22
tests/associations_test.go,1559fe2,Jinzhu,Add more updates test,26,26,Jinzhu,c299cb8,0,2020-06-01 11:41:33,2020-05-26 03:19:01
tests/associations_test.go,2db3373,Jinzhu,Add Slice Association for BelongsTo,27,30,Jinzhu,91a6958,0,2020-05-24 12:53:20,2020-05-24 10:33:15
tests/associations_test.go,c299cb8,Jinzhu,Refactor association,33,33,Jinzhu,8de2bb4,0,2020-05-26 03:19:01,2020-05-25 17:57:22
tests/associations_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),32,32,Jinzhu,8627634,0,2022-01-06 07:02:53,2021-12-02 02:20:16
tests/associations_test.go,6a0ef98,Jinzhu,Test Polymorphic HasOne Association,35,35,Jinzhu,cbc4a81,0,2020-05-24 15:28:06,2020-05-24 03:35:19
tests/associations_test.go,d66af58,Deviller,"Fix Association.Replace() error returning (#3766)  * Fix Association.Replace() error returning  * Fallback to gorm.Model at TestAssociationNotNullClear()",38,68,Jinzhu,2416eab,1,2020-11-19 11:24:34,2020-07-03 16:36:27
tests/associations_test.go,4f19e2a,Jinzhu,Test ForeignKeyConstraints,37,37,Jinzhu,8bb05a5,0,2020-06-19 17:20:18,2020-06-02 02:50:38
tests/associations_test.go,d66af58,Deviller,"Fix Association.Replace() error returning (#3766)  * Fix Association.Replace() error returning  * Fallback to gorm.Model at TestAssociationNotNullClear()",70,72,Jinzhu,2416eab,1,2020-11-19 11:24:34,2020-07-03 16:36:27
tests/associations_test.go,8de2bb4,Jinzhu,Test single table many2many association,36,36,Jinzhu,cbc4a81,0,2020-05-25 17:57:22,2020-05-24 03:35:19
tests/associations_test.go,bcf2b38,Ikko Ashimine,Fix typo in associations_test.go (#4407)  occured -> occurred,69,69,Deviller,d66af58,1,2021-05-27 09:40:28,2020-11-19 11:24:34
tests/associations_test.go,4f19e2a,Jinzhu,Test ForeignKeyConstraints,73,73,Jinzhu,8bb05a5,0,2020-06-19 17:20:18,2020-06-02 02:50:38
tests/associations_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",74,75,Cr,186e8a9,0,2023-02-08 08:29:09,2022-10-18 03:58:42
tests/associations_test.go,4f19e2a,Jinzhu,Test ForeignKeyConstraints,85,130,Jinzhu,8bb05a5,0,2020-06-19 17:20:18,2020-06-02 02:50:38
tests/associations_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",131,132,Cr,186e8a9,0,2023-02-08 08:29:09,2022-10-18 03:58:42
tests/associations_test.go,4f19e2a,Jinzhu,Test ForeignKeyConstraints,76,83,Jinzhu,8bb05a5,0,2020-06-19 17:20:18,2020-06-02 02:50:38
tests/associations_test.go,2416eab,Jinzhu,Change unique_idnex to UniqueIndex,136,136,Jinzhu,8bb05a5,0,2020-07-03 16:36:27,2020-06-02 02:50:38
tests/associations_test.go,4f19e2a,Jinzhu,Test ForeignKeyConstraints,133,135,Jinzhu,8bb05a5,0,2020-06-19 17:20:18,2020-06-02 02:50:38
tests/associations_test.go,4f19e2a,Jinzhu,Test ForeignKeyConstraints,137,184,Jinzhu,8bb05a5,0,2020-06-19 17:20:18,2020-06-02 02:50:38
tests/associations_test.go,27e2753,Jinzhu,"Fix create duplicated value when updating nested has many relationship, close #4796",187,187,Jinzhu,e1b4c06,1,2021-11-29 10:43:39,2021-11-29 03:02:44
tests/associations_test.go,2416eab,Jinzhu,Change unique_idnex to UniqueIndex,84,84,Jinzhu,8bb05a5,0,2020-07-03 16:36:27,2020-06-02 02:50:38
tests/associations_test.go,e1b4c06,Jinzhu,"Fix FullSaveAssociations, close #4874",185,186,Ikko Ashimine,bcf2b38,1,2021-11-29 03:02:44,2021-05-27 09:40:28
tests/associations_test.go,27e2753,Jinzhu,"Fix create duplicated value when updating nested has many relationship, close #4796",188,188,Jinzhu,e1b4c06,1,2021-11-29 10:43:39,2021-11-29 03:02:44
tests/associations_test.go,27e2753,Jinzhu,"Fix create duplicated value when updating nested has many relationship, close #4796",197,197,Jinzhu,e1b4c06,1,2021-11-29 10:43:39,2021-11-29 03:02:44
tests/associations_test.go,8627634,Jinzhu,"Fix create associations with zero primary key, close #4890",189,189,Jinzhu,e1b4c06,1,2021-12-02 02:20:16,2021-11-29 03:02:44
tests/associations_test.go,27e2753,Jinzhu,"Fix create duplicated value when updating nested has many relationship, close #4796",190,194,Jinzhu,e1b4c06,1,2021-11-29 10:43:39,2021-11-29 03:02:44
tests/associations_test.go,e1b4c06,Jinzhu,"Fix FullSaveAssociations, close #4874",195,196,Ikko Ashimine,bcf2b38,1,2021-11-29 03:02:44,2021-05-27 09:40:28
tests/associations_test.go,8627634,Jinzhu,"Fix create associations with zero primary key, close #4890",202,202,Jinzhu,27e2753,1,2021-12-02 02:20:16,2021-11-29 10:43:39
tests/associations_test.go,8627634,Jinzhu,"Fix create associations with zero primary key, close #4890",206,206,Jinzhu,27e2753,1,2021-12-02 02:20:16,2021-11-29 10:43:39
tests/associations_test.go,e1b4c06,Jinzhu,"Fix FullSaveAssociations, close #4874",198,201,Ikko Ashimine,bcf2b38,1,2021-11-29 03:02:44,2021-05-27 09:40:28
tests/associations_test.go,e1b4c06,Jinzhu,"Fix FullSaveAssociations, close #4874",203,205,Ikko Ashimine,bcf2b38,1,2021-11-29 03:02:44,2021-05-27 09:40:28
tests/associations_test.go,8627634,Jinzhu,"Fix create associations with zero primary key, close #4890",214,227,Jinzhu,27e2753,1,2021-12-02 02:20:16,2021-11-29 10:43:39
tests/associations_test.go,27e2753,Jinzhu,"Fix create duplicated value when updating nested has many relationship, close #4796",209,213,Jinzhu,e1b4c06,1,2021-11-29 10:43:39,2021-11-29 03:02:44
tests/associations_test.go,9b9ae32,chenrui,"fix: circular reference save, close #5140  commit 2ac099a37ac7bd74f0a98a6fdc42cc8527404144 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 23:49:21 2022 +0800      Refactor #5140  commit 6e3ca2d1aa09943dcfb5d9a4b93bea28212f71be Author: a631807682 <631807682@qq.com> Date:   Sun Mar 13 12:52:08 2022 +0800      test: add test for LoadOrStoreVisitMap  commit 9d5c68e41000fd15dea124797dd5f2656bf6b304 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:33:47 2022 +0800      chore: add more comment  commit bfffefb179c883389b72bef8f04469c0a8418043 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:28:48 2022 +0800      fix: should check values has been saved instead of rel.Name  commit e55cdfa4b3fbcf8b80baf009e8ddb2e40d471494 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:48:01 2022 +0800      chore: go lint  commit fe4715c5bd4ac28950c97dded9848710d8becb88 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:27:24 2022 +0800      chore: add test comment  commit 326862f3f8980482a09d7d1a7f4d1011bb8a7c59 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:22:33 2022 +0800      fix: circular reference save",229,269,kinggo,b47cf57,1,2022-03-17 15:53:31,2022-01-06 07:02:53
tests/associations_test.go,3d7019a,Cr,fix: throw err if association model miss primary key (#5187),270,271,chenrui,9b9ae32,1,2022-03-24 01:34:06,2022-03-17 15:53:31
tests/associations_test.go,3d7019a,Cr,fix: throw err if association model miss primary key (#5187),272,292,chenrui,9b9ae32,1,2022-03-24 01:34:06,2022-03-17 15:53:31
tests/associations_test.go,2ba599e,Goxiaoy,"fix empty QueryClauses in association (#5502) (#5503)  * fix empty QueryClauses in association (#5502)  * test: empty QueryClauses in association (#5502)  * style: empty QueryClauses in association (#5502)  * style: empty QueryClauses in association (#5502)",293,354,Jinzhu,9144969,1,2022-07-15 03:15:18,2022-04-02 09:17:47
tests/associations_test.go,186e8a9,Cr,fix: association without pks (#5779),355,396,Goxiaoy,2ba599e,1,2022-10-18 03:58:42,2022-07-15 03:15:18
tests/associations_test.go,1559fe2,Jinzhu,Add more updates test,34,34,,,0,2020-06-01 11:41:33,
tests/associations_test.go,e1b4c06,Jinzhu,"Fix FullSaveAssociations, close #4874",207,208,,,1,2021-11-29 03:02:44,
tests/associations_test.go,e1b4c06,Jinzhu,"Fix FullSaveAssociations, close #4874",228,228,,,1,2021-11-29 03:02:44,
tests/connection_test.go,0df42e9,kinggo,feat: add `Connection` to execute multiple commands in a single connection; (#4982),7,8,,,0,2022-01-07 01:49:56,
tests/connection_test.go,eae7362,Jinzhu,Fix return failed to begin transaction error when failed to start a transaction,5,6,kinggo,0df42e9,1,2022-01-07 02:04:35,2022-01-07 01:49:56
tests/connection_test.go,0df42e9,kinggo,feat: add `Connection` to execute multiple commands in a single connection; (#4982),9,11,,,0,2022-01-07 01:49:56,
tests/connection_test.go,0df42e9,kinggo,feat: add `Connection` to execute multiple commands in a single connection; (#4982),1,4,,,0,2022-01-07 01:49:56,
tests/connection_test.go,0df42e9,kinggo,feat: add `Connection` to execute multiple commands in a single connection; (#4982),30,36,,,0,2022-01-07 01:49:56,
tests/connection_test.go,0df42e9,kinggo,feat: add `Connection` to execute multiple commands in a single connection; (#4982),37,46,,,0,2022-01-07 01:49:56,
tests/connection_test.go,0df42e9,kinggo,feat: add `Connection` to execute multiple commands in a single connection; (#4982),13,29,,,0,2022-01-07 01:49:56,
tests/connection_test.go,c0bea44,li-jin-gou,fix: omit not work when use join (#5034),12,12,Jinzhu,eae7362,1,2022-01-28 14:16:42,2022-01-07 02:04:35
tests/connpool_test.go,996b96e,lianghuan,Add TxConnPoolBeginner and Tx interface,12,50,,,0,2022-03-01 08:59:50,
tests/connpool_test.go,996b96e,lianghuan,Add TxConnPoolBeginner and Tx interface,1,5,,,0,2022-03-01 08:59:50,
tests/connpool_test.go,996b96e,lianghuan,Add TxConnPoolBeginner and Tx interface,58,104,,,0,2022-03-01 08:59:50,
tests/connpool_test.go,4e52349,Jinzhu,Refactor Tx interface,57,57,lianghuan,996b96e,0,2022-03-01 08:59:50,2022-03-01 08:59:50
tests/connpool_test.go,996b96e,lianghuan,Add TxConnPoolBeginner and Tx interface,6,8,,,0,2022-03-01 08:59:50,
tests/connpool_test.go,996b96e,lianghuan,Add TxConnPoolBeginner and Tx interface,56,56,,,0,2022-03-01 08:59:50,
tests/connpool_test.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",51,55,Jinzhu,2c56954,1,2023-02-18 01:06:43,2022-10-08 12:48:22
tests/connpool_test.go,996b96e,lianghuan,Add TxConnPoolBeginner and Tx interface,9,11,,,0,2022-03-01 08:59:50,
tests/connpool_test.go,996b96e,lianghuan,Add TxConnPoolBeginner and Tx interface,106,106,,,0,2022-03-01 08:59:50,
tests/connpool_test.go,9514d5f,jasonchuan,"let limit and offset use bind parameter (#6806)  * let limit and offset use bind parameter  * format  * format limt_test  * try again  * fix test case fro connpool  * adding driverName for postgres  ,if not to do so, the stmt vars will be added  a wrong  one called pgx.QueryExecModeSimpleProtocol  ,  causing the SQL with limit  problem  need 1 parameter ,but given two.  * delete trunk files  * restore the test_test.go  * restore test_test.go  * driver/postgres->v1.5.5  * change postgres version rollback to 1.5.4  ---------  Co-authored-by: chenchuan <chenchuan@360.cn> Co-authored-by: jason_chuan <jason_chuan@126.com>",105,105,Michael Anstis,532e9cf,1,2024-02-06 02:54:40,2023-02-18 01:06:43
tests/connpool_test.go,996b96e,lianghuan,Add TxConnPoolBeginner and Tx interface,122,173,,,0,2022-03-01 08:59:50,
tests/connpool_test.go,996b96e,lianghuan,Add TxConnPoolBeginner and Tx interface,109,109,,,0,2022-03-01 08:59:50,
tests/connpool_test.go,996b96e,lianghuan,Add TxConnPoolBeginner and Tx interface,112,120,,,0,2022-03-01 08:59:50,
tests/connpool_test.go,9514d5f,jasonchuan,"let limit and offset use bind parameter (#6806)  * let limit and offset use bind parameter  * format  * format limt_test  * try again  * fix test case fro connpool  * adding driverName for postgres  ,if not to do so, the stmt vars will be added  a wrong  one called pgx.QueryExecModeSimpleProtocol  ,  causing the SQL with limit  problem  need 1 parameter ,but given two.  * delete trunk files  * restore the test_test.go  * restore test_test.go  * driver/postgres->v1.5.5  * change postgres version rollback to 1.5.4  ---------  Co-authored-by: chenchuan <chenchuan@360.cn> Co-authored-by: jason_chuan <jason_chuan@126.com>",110,111,Michael Anstis,532e9cf,1,2024-02-06 02:54:40,2023-02-18 01:06:43
tests/connpool_test.go,9514d5f,jasonchuan,"let limit and offset use bind parameter (#6806)  * let limit and offset use bind parameter  * format  * format limt_test  * try again  * fix test case fro connpool  * adding driverName for postgres  ,if not to do so, the stmt vars will be added  a wrong  one called pgx.QueryExecModeSimpleProtocol  ,  causing the SQL with limit  problem  need 1 parameter ,but given two.  * delete trunk files  * restore the test_test.go  * restore test_test.go  * driver/postgres->v1.5.5  * change postgres version rollback to 1.5.4  ---------  Co-authored-by: chenchuan <chenchuan@360.cn> Co-authored-by: jason_chuan <jason_chuan@126.com>",107,108,Michael Anstis,532e9cf,1,2024-02-06 02:54:40,2023-02-18 01:06:43
tests/connpool_test.go,2c56954,Jinzhu,tests mariadb with returning support,121,121,Jinzhu,4e52349,0,2022-10-08 12:48:22,2022-03-01 08:59:50
tests/compose.yml,fe24c3f,Jinzhu,Setup tests script,4,4,,,0,2020-02-23 01:38:51,
tests/compose.yml,fe24c3f,Jinzhu,Setup tests script,6,13,,,0,2020-02-23 01:38:51,
tests/compose.yml,fe24c3f,Jinzhu,Setup tests script,1,2,,,0,2020-02-23 01:38:51,
tests/compose.yml,fe24c3f,Jinzhu,Setup tests script,15,15,,,0,2020-02-23 01:38:51,
tests/compose.yml,fe24c3f,Jinzhu,Setup tests script,17,17,,,0,2020-02-23 01:38:51,
tests/compose.yml,9f7f4b4,Jinzhu,Refactor find slice,18,18,,,0,2020-03-04 14:16:39,
tests/compose.yml,f7f6335,Jinzhu,"Fix tests with mysql, postgres",16,16,,,1,2020-03-12 05:05:22,
tests/compose.yml,fe24c3f,Jinzhu,Setup tests script,22,22,,,0,2020-02-23 01:38:51,
tests/compose.yml,fe24c3f,Jinzhu,Setup tests script,19,20,,,0,2020-02-23 01:38:51,
tests/compose.yml,c6ac548,Omkar P,"Use official SQL Server docker image for tests (#7205)  * Use official SQL Server docker image for tests  * Try with tag 2019-latest instead of latest  * Use platform ubuntu-20.04 for SQL Server  * Switch to 2019-CU18-ubuntu-20.04  * Check with 2022-latest image tag and ubuntu-latest platform  * Update health-cmd  * Try sqlcmd without -N -C  * Re-include -N -C, try with ubuntu-20.04  * Try ubuntu-20.04 without -N -C (last trial)  * Finalize working config  * Remove unused env variables",21,21,Kazuki Isogai,c2515ce,0,2024-09-30 03:21:19,2024-09-18 11:42:52
tests/compose.yml,fe24c3f,Jinzhu,Setup tests script,24,24,,,0,2020-02-23 01:38:51,
tests/compose.yml,fe24c3f,Jinzhu,Setup tests script,26,26,,,0,2020-02-23 01:38:51,
tests/compose.yml,8d293d4,Jinzhu,Fix docker-compose test env for Mac M1,3,3,,,1,2022-01-30 14:05:38,
tests/compose.yml,3d09f79,Jinzhu,only listen local port,5,5,,,0,2024-06-13 10:45:02,
tests/compose.yml,3d09f79,Jinzhu,only listen local port,14,14,,,0,2024-06-13 10:45:02,
tests/compose.yml,c6ac548,Omkar P,"Use official SQL Server docker image for tests (#7205)  * Use official SQL Server docker image for tests  * Try with tag 2019-latest instead of latest  * Use platform ubuntu-20.04 for SQL Server  * Switch to 2019-CU18-ubuntu-20.04  * Check with 2022-latest image tag and ubuntu-latest platform  * Update health-cmd  * Try sqlcmd without -N -C  * Re-include -N -C, try with ubuntu-20.04  * Try ubuntu-20.04 without -N -C (last trial)  * Finalize working config  * Remove unused env variables",27,27,Kazuki Isogai,c2515ce,0,2024-09-30 03:21:19,2024-09-18 11:42:52
tests/compose.yml,3d09f79,Jinzhu,only listen local port,23,23,,,0,2024-06-13 10:45:02,
tests/compose.yml,e0c3be0,Jinzhu,Fix tests in local,25,25,,,1,2024-03-18 08:28:46,
tests/compose.yml,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",28,30,,,0,2023-02-08 08:29:09,
tests/compose.yml,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",32,32,,,0,2023-02-08 08:29:09,
tests/compose.yml,3d09f79,Jinzhu,only listen local port,31,31,,,0,2024-06-13 10:45:02,
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,1,3,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,42fc75c,black-06,"fix: association concurrently appending (#6044)  * fix: association concurrently appending  * fix: fix unit test  * fix: fix gofumpt",4,5,Cheese,02b7e26,1,2023-02-18 01:19:24,2023-02-08 08:29:09
tests/associations_many2many_test.go,42fc75c,black-06,"fix: association concurrently appending (#6044)  * fix: association concurrently appending  * fix: fix unit test  * fix: fix gofumpt",9,9,Cheese,02b7e26,1,2023-02-18 01:19:24,2023-02-08 08:29:09
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,11,13,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,6,7,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,15,32,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,c74bc57,Cr,"fix: association many2many duplicate elem (#5473)  * fix: association many2many duplicate elem  * chore: gofumpt style",8,8,kinggo,b47cf57,1,2022-07-01 07:12:15,2022-01-06 07:02:53
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,46,61,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,8bb05a5,Jinzhu,Refactor tests files,10,10,,,0,2020-06-02 02:50:38,
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,34,44,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,63,99,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",101,102,Cr,c74bc57,0,2023-02-08 08:29:09,2022-07-01 07:12:15
tests/associations_many2many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),33,33,,,0,2022-01-06 07:02:53,
tests/associations_many2many_test.go,50df9da,Jinzhu,"Allow to skip associations when creating join table for many2many, close #3605",104,121,Jinzhu,d11c424,0,2020-11-17 12:24:08,2020-06-07 07:26:43
tests/associations_many2many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),62,62,,,0,2022-01-06 07:02:53,
tests/associations_many2many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),123,123,Jinzhu,0867810,0,2022-01-06 07:02:53,2021-01-26 06:34:21
tests/associations_many2many_test.go,0867810,Jinzhu,"Support replace associations without the creation in association mode, close #3937",122,122,Jinzhu,50df9da,0,2021-01-26 06:34:21,2020-11-17 12:24:08
tests/associations_many2many_test.go,50df9da,Jinzhu,"Allow to skip associations when creating join table for many2many, close #3605",100,100,Jinzhu,d11c424,0,2020-11-17 12:24:08,2020-06-07 07:26:43
tests/associations_many2many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),103,103,Jinzhu,d11c424,0,2022-01-06 07:02:53,2020-06-07 07:26:43
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,129,129,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,131,147,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,149,150,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),14,14,,,0,2022-01-06 07:02:53,
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,153,182,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),148,148,Jinzhu,0867810,0,2022-01-06 07:02:53,2021-01-26 06:34:21
tests/associations_many2many_test.go,50df9da,Jinzhu,"Allow to skip associations when creating join table for many2many, close #3605",127,128,,,0,2020-11-17 12:24:08,
tests/associations_many2many_test.go,0867810,Jinzhu,"Support replace associations without the creation in association mode, close #3937",124,126,Jinzhu,d11c424,0,2021-01-26 06:34:21,2020-06-07 07:26:43
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,184,188,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,190,199,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),45,45,,,0,2022-01-06 07:02:53,
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,201,218,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,220,229,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,231,242,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),219,219,,,0,2022-01-06 07:02:53,
tests/associations_many2many_test.go,d11c424,Jinzhu,Fix typo,183,183,,,1,2020-06-07 07:26:43,
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,244,280,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,d11c424,Jinzhu,Fix typo,189,189,,,1,2020-06-07 07:26:43,
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,282,298,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),299,301,Jinzhu,0867810,0,2022-01-06 07:02:53,2021-01-26 06:34:21
tests/associations_many2many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),130,130,,,0,2022-01-06 07:02:53,
tests/associations_many2many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),230,230,,,0,2022-01-06 07:02:53,
tests/associations_many2many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),151,152,,,0,2022-01-06 07:02:53,
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,302,306,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,d11c424,Jinzhu,Fix typo,318,318,,,1,2020-06-07 07:26:43,
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,310,317,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,319,323,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,c299cb8,Jinzhu,Refactor association,325,332,,,0,2020-05-26 03:19:01,
tests/associations_many2many_test.go,d11c424,Jinzhu,Fix typo,324,324,,,1,2020-06-07 07:26:43,
tests/associations_many2many_test.go,c2d571c,Saeid,"test: coverage for duplicated key err (#6389)  * test: ErrDuplicatedKey coverage added  * test: updated sqlserver version  * test: removed sqlserver  * test: support added for sqlserver  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",361,361,bsmith-auth0,ccc3cb7,0,2023-06-10 13:05:19,2023-04-11 03:06:13
tests/associations_many2many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),200,200,,,0,2022-01-06 07:02:53,
tests/associations_many2many_test.go,42fc75c,black-06,"fix: association concurrently appending (#6044)  * fix: association concurrently appending  * fix: fix unit test  * fix: fix gofumpt",362,395,Cheese,02b7e26,1,2023-02-18 01:19:24,2023-02-08 08:29:09
tests/associations_many2many_test.go,c74bc57,Cr,"fix: association many2many duplicate elem (#5473)  * fix: association many2many duplicate elem  * chore: gofumpt style",333,358,kinggo,b47cf57,1,2022-07-01 07:12:15,2022-01-06 07:02:53
tests/associations_many2many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),307,309,Jinzhu,8bb05a5,0,2022-01-06 07:02:53,2020-06-02 02:50:38
tests/associations_many2many_test.go,42fc75c,black-06,"fix: association concurrently appending (#6044)  * fix: association concurrently appending  * fix: fix unit test  * fix: fix gofumpt",359,360,Cheese,02b7e26,1,2023-02-18 01:19:24,2023-02-08 08:29:09
tests/associations_many2many_test.go,ccc3cb7,bsmith-auth0,fix: many2many association with duplicate belongs to elem (#6206),396,425,black-06,42fc75c,1,2023-04-11 03:06:13,2023-02-18 01:19:24
tests/associations_many2many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),281,281,,,0,2022-01-06 07:02:53,
tests/associations_many2many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),243,243,,,0,2022-01-06 07:02:53,
tests/customize_field_test.go,d50879c,Jinzhu,Add field permission test,1,63,,,0,2020-06-05 11:18:22,
tests/customize_field_test.go,7bb883b,lninl,"Auto creating/updating time with unix (milli) second (#3213)  * Auto creating/updating time with unix (milli) second  * add test for 'Auto creating/updating time with unix (milli) second'",74,74,Jinzhu,eeee014,0,2020-07-30 09:39:57,2020-07-01 11:49:04
tests/customize_field_test.go,ed1b134,Jinzhu,"Fix use uint to for autoCreateTime, autoUpdateTime",72,73,lninl,7bb883b,1,2020-09-11 09:33:31,2020-07-30 09:39:57
tests/customize_field_test.go,d50879c,Jinzhu,Add field permission test,78,118,,,0,2020-06-05 11:18:22,
tests/customize_field_test.go,d50879c,Jinzhu,Add field permission test,120,122,,,0,2020-06-05 11:18:22,
tests/customize_field_test.go,ed1b134,Jinzhu,"Fix use uint to for autoCreateTime, autoUpdateTime",119,119,lninl,7bb883b,1,2020-09-11 09:33:31,2020-07-30 09:39:57
tests/customize_field_test.go,ed1b134,Jinzhu,"Fix use uint to for autoCreateTime, autoUpdateTime",75,77,lninl,7bb883b,1,2020-09-11 09:33:31,2020-07-30 09:39:57
tests/customize_field_test.go,7bb883b,lninl,"Auto creating/updating time with unix (milli) second (#3213)  * Auto creating/updating time with unix (milli) second  * add test for 'Auto creating/updating time with unix (milli) second'",64,71,Jinzhu,eeee014,0,2020-07-30 09:39:57,2020-07-01 11:49:04
tests/customize_field_test.go,d50879c,Jinzhu,Add field permission test,147,150,,,0,2020-06-05 11:18:22,
tests/customize_field_test.go,7bb883b,lninl,"Auto creating/updating time with unix (milli) second (#3213)  * Auto creating/updating time with unix (milli) second  * add test for 'Auto creating/updating time with unix (milli) second'",124,126,Jinzhu,eeee014,0,2020-07-30 09:39:57,2020-07-01 11:49:04
tests/customize_field_test.go,d50879c,Jinzhu,Add field permission test,155,171,,,0,2020-06-05 11:18:22,
tests/customize_field_test.go,d50879c,Jinzhu,Add field permission test,128,142,,,0,2020-06-05 11:18:22,
tests/customize_field_test.go,9bfe306,Jinzhu,Only query with readable fields,143,146,Jinzhu,d50879c,0,2020-06-27 00:04:12,2020-06-05 11:18:22
tests/customize_field_test.go,ed1b134,Jinzhu,"Fix use uint to for autoCreateTime, autoUpdateTime",123,123,lninl,7bb883b,1,2020-09-11 09:33:31,2020-07-30 09:39:57
tests/customize_field_test.go,9bfe306,Jinzhu,Only query with readable fields,151,154,Jinzhu,d50879c,0,2020-06-27 00:04:12,2020-06-05 11:18:22
tests/customize_field_test.go,ed1b134,Jinzhu,"Fix use uint to for autoCreateTime, autoUpdateTime",127,127,lninl,7bb883b,1,2020-09-11 09:33:31,2020-07-30 09:39:57
tests/customize_field_test.go,d50879c,Jinzhu,Add field permission test,182,184,,,0,2020-06-05 11:18:22,
tests/customize_field_test.go,ed1b134,Jinzhu,"Fix use uint to for autoCreateTime, autoUpdateTime",181,181,lninl,7bb883b,1,2020-09-11 09:33:31,2020-07-30 09:39:57
tests/customize_field_test.go,7bb883b,lninl,"Auto creating/updating time with unix (milli) second (#3213)  * Auto creating/updating time with unix (milli) second  * add test for 'Auto creating/updating time with unix (milli) second'",172,173,Jinzhu,eeee014,0,2020-07-30 09:39:57,2020-07-01 11:49:04
tests/customize_field_test.go,ed1b134,Jinzhu,"Fix use uint to for autoCreateTime, autoUpdateTime",185,185,lninl,7bb883b,1,2020-09-11 09:33:31,2020-07-30 09:39:57
tests/customize_field_test.go,d50879c,Jinzhu,Add field permission test,190,192,,,0,2020-06-05 11:18:22,
tests/customize_field_test.go,d50879c,Jinzhu,Add field permission test,174,180,,,0,2020-06-05 11:18:22,
tests/customize_field_test.go,7bb883b,lninl,"Auto creating/updating time with unix (milli) second (#3213)  * Auto creating/updating time with unix (milli) second  * add test for 'Auto creating/updating time with unix (milli) second'",186,188,Jinzhu,eeee014,0,2020-07-30 09:39:57,2020-07-01 11:49:04
tests/customize_field_test.go,ed1b134,Jinzhu,"Fix use uint to for autoCreateTime, autoUpdateTime",189,189,lninl,7bb883b,1,2020-09-11 09:33:31,2020-07-30 09:39:57
tests/default_value_test.go,fb56fe9,Jinzhu,Add default value test,6,12,,,0,2020-06-24 22:38:07,
tests/default_value_test.go,fb56fe9,Jinzhu,Add default value test,1,4,,,0,2020-06-24 22:38:07,
tests/default_value_test.go,fb56fe9,Jinzhu,Add default value test,20,27,,,0,2020-06-24 22:38:07,
tests/default_value_test.go,63ac66b,Jinzhu,Support default tag for time.Time,31,31,kinggo,b47cf57,0,2022-03-17 03:34:27,2022-01-06 07:02:53
tests/default_value_test.go,fb56fe9,Jinzhu,Add default value test,29,30,,,0,2020-06-24 22:38:07,
tests/default_value_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),28,28,Jinzhu,3d84695,0,2022-01-06 07:02:53,2020-10-09 09:42:28
tests/default_value_test.go,63ac66b,Jinzhu,Support default tag for time.Time,5,5,kinggo,b47cf57,0,2022-03-17 03:34:27,2022-01-06 07:02:53
tests/default_value_test.go,63ac66b,Jinzhu,Support default tag for time.Time,13,19,kinggo,b47cf57,0,2022-03-17 03:34:27,2022-01-06 07:02:53
tests/default_value_test.go,fb56fe9,Jinzhu,Add default value test,32,37,,,0,2020-06-24 22:38:07,
tests/default_value_test.go,fb56fe9,Jinzhu,Add default value test,39,40,,,0,2020-06-24 22:38:07,
tests/default_value_test.go,63ac66b,Jinzhu,Support default tag for time.Time,38,38,kinggo,b47cf57,0,2022-03-17 03:34:27,2022-01-06 07:02:53
tests/default_value_test.go,fb56fe9,Jinzhu,Add default value test,59,59,,,0,2020-06-24 22:38:07,
tests/default_value_test.go,1e13fd7,Jinzhu,Fix duplicated columns in INSERT SQL for some fields with default value,41,58,Jinzhu,63ac66b,1,2024-04-08 03:29:55,2022-03-17 03:34:27
tests/delete_test.go,f0a442a,Jinzhu,Refactor tests,1,1,,,0,2020-05-23 15:50:48,
tests/delete_test.go,b4b249d,Jinzhu,Refactor test files,10,11,,,0,2020-04-15 11:13:36,
tests/delete_test.go,8bb05a5,Jinzhu,Refactor tests files,9,9,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/delete_test.go,f0a442a,Jinzhu,Refactor tests,12,12,,,0,2020-05-23 15:50:48,
tests/delete_test.go,70a7bd5,Jinzhu,Support delete associations with Select when deleting,8,8,Jinzhu,3dfa8a6,0,2020-09-10 13:46:18,2020-08-25 09:27:28
tests/delete_test.go,b4b249d,Jinzhu,Refactor test files,2,6,,,0,2020-04-15 11:13:36,
tests/delete_test.go,b4b249d,Jinzhu,Refactor test files,14,14,,,0,2020-04-15 11:13:36,
tests/delete_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),13,13,Jinzhu,e953880,0,2022-01-06 07:02:53,2021-10-28 01:17:33
tests/delete_test.go,f0a442a,Jinzhu,Refactor tests,15,17,,,0,2020-05-23 15:50:48,
tests/delete_test.go,e986371,Jinzhu,Rename package name,7,7,Jinzhu,1559fe2,0,2020-06-02 01:18:01,2020-06-01 11:41:33
tests/delete_test.go,b4b249d,Jinzhu,Refactor test files,22,22,,,0,2020-04-15 11:13:36,
tests/delete_test.go,b4b249d,Jinzhu,Refactor test files,18,18,,,0,2020-04-15 11:13:36,
tests/delete_test.go,f0a442a,Jinzhu,Refactor tests,19,21,,,0,2020-05-23 15:50:48,
tests/delete_test.go,b4b249d,Jinzhu,Refactor test files,24,24,,,0,2020-04-15 11:13:36,
tests/delete_test.go,f0a442a,Jinzhu,Refactor tests,27,27,,,0,2020-05-23 15:50:48,
tests/delete_test.go,f0a442a,Jinzhu,Refactor tests,23,23,,,0,2020-05-23 15:50:48,
tests/delete_test.go,04f049c,Jinzhu,Add tests for RowsAffected,25,26,Jinzhu,883c32e,0,2021-09-09 03:22:55,2021-02-07 06:36:27
tests/delete_test.go,b4b249d,Jinzhu,Refactor test files,28,28,,,0,2020-04-15 11:13:36,
tests/delete_test.go,f0a442a,Jinzhu,Refactor tests,34,34,,,0,2020-05-23 15:50:48,
tests/delete_test.go,f0a442a,Jinzhu,Refactor tests,29,32,,,0,2020-05-23 15:50:48,
tests/delete_test.go,b4b249d,Jinzhu,Refactor test files,33,33,,,0,2020-04-15 11:13:36,
tests/delete_test.go,f0a442a,Jinzhu,Refactor tests,36,37,,,0,2020-05-23 15:50:48,
tests/delete_test.go,1559fe2,Jinzhu,Add more updates test,35,35,Jinzhu,e26abb8,0,2020-06-01 11:41:33,2020-05-31 12:42:07
tests/delete_test.go,f0a442a,Jinzhu,Refactor tests,39,39,,,0,2020-05-23 15:50:48,
tests/delete_test.go,b4b249d,Jinzhu,Refactor test files,38,38,,,0,2020-04-15 11:13:36,
tests/delete_test.go,b4b249d,Jinzhu,Refactor test files,40,40,,,0,2020-04-15 11:13:36,
tests/delete_test.go,1559fe2,Jinzhu,Add more updates test,42,42,Jinzhu,e26abb8,0,2020-06-01 11:41:33,2020-05-31 12:42:07
tests/delete_test.go,f0a442a,Jinzhu,Refactor tests,41,41,,,0,2020-05-23 15:50:48,
tests/delete_test.go,f0a442a,Jinzhu,Refactor tests,43,44,,,0,2020-05-23 15:50:48,
tests/delete_test.go,b4b249d,Jinzhu,Refactor test files,45,45,,,0,2020-04-15 11:13:36,
tests/delete_test.go,f0a442a,Jinzhu,Refactor tests,46,46,,,0,2020-05-23 15:50:48,
tests/delete_test.go,39c8d62,Jinzhu,Fix soft delete panic when using unaddressable value,47,47,Jinzhu,33c4861,1,2020-08-06 09:48:46,2020-07-10 05:08:29
tests/delete_test.go,b4b249d,Jinzhu,Refactor test files,59,59,,,0,2020-04-15 11:13:36,
tests/delete_test.go,14a0976,Jinzhu,"populate the DeletedAt field when soft delete, fix #3855",48,48,Jinzhu,fcf2ab6,1,2020-12-15 02:39:20,2020-11-05 03:20:08
tests/delete_test.go,3dfa8a6,Jinzhu,"Fix panic when delet without pointer, close #3308",53,55,Jinzhu,ebdb4ed,1,2020-08-25 09:27:28,2020-08-23 12:08:23
tests/delete_test.go,fcf2ab6,Jinzhu,"Add deleted_at check when soft deleting, fix #3720",52,52,Jinzhu,a932175,1,2020-11-05 03:20:08,2020-09-15 06:28:26
tests/delete_test.go,39c8d62,Jinzhu,Fix soft delete panic when using unaddressable value,49,51,Jinzhu,33c4861,1,2020-08-06 09:48:46,2020-07-10 05:08:29
tests/delete_test.go,7c0de91,Jinzhu,Test Migrate Indexes,60,60,Jinzhu,f0a442a,0,2020-05-30 14:43:41,2020-05-23 15:50:48
tests/delete_test.go,39c8d62,Jinzhu,Fix soft delete panic when using unaddressable value,56,58,Jinzhu,33c4861,1,2020-08-06 09:48:46,2020-07-10 05:08:29
tests/delete_test.go,33c4861,Jinzhu,"Fix customize table with Delete, close #3129",61,103,Jinzhu,e7b2e92,1,2020-07-10 05:08:29,2020-06-07 14:03:45
tests/delete_test.go,7c0de91,Jinzhu,Test Migrate Indexes,104,110,,,0,2020-05-30 14:43:41,
tests/delete_test.go,7c0de91,Jinzhu,Test Migrate Indexes,112,116,,,0,2020-05-30 14:43:41,
tests/delete_test.go,7c0de91,Jinzhu,Test Migrate Indexes,118,120,,,0,2020-05-30 14:43:41,
tests/delete_test.go,a932175,Jinzhu,Refactor cascade delete associations,139,139,Jinzhu,70a7bd5,0,2020-09-15 06:28:26,2020-09-10 13:46:18
tests/delete_test.go,e26abb8,Jinzhu,Test block global update/delete,130,130,,,0,2020-05-31 12:42:07,
tests/delete_test.go,70a7bd5,Jinzhu,Support delete associations with Select when deleting,131,138,Jinzhu,3dfa8a6,0,2020-09-10 13:46:18,2020-08-25 09:27:28
tests/delete_test.go,e26abb8,Jinzhu,Test block global update/delete,121,125,,,0,2020-05-31 12:42:07,
tests/delete_test.go,883c32e,Jinzhu,"Support Unscoped when delete with selected associations, close #4062",156,179,Jinzhu,14a0976,0,2021-02-07 06:36:27,2020-12-15 02:39:20
tests/delete_test.go,e953880,Jinzhu,Add returning tests,208,208,Jinzhu,04f049c,0,2021-10-28 01:17:33,2021-09-09 03:22:55
tests/delete_test.go,e953880,Jinzhu,Add returning tests,210,210,Jinzhu,04f049c,0,2021-10-28 01:17:33,2021-09-09 03:22:55
tests/delete_test.go,70a7bd5,Jinzhu,Support delete associations with Select when deleting,180,207,Jinzhu,3dfa8a6,0,2020-09-10 13:46:18,2020-08-25 09:27:28
tests/delete_test.go,6bef318,Franco Liberali,add support for returning in sqlserver (#6585),209,209,kinggo,b47cf57,0,2023-10-10 07:03:34,2022-01-06 07:02:53
tests/delete_test.go,70a7bd5,Jinzhu,Support delete associations with Select when deleting,140,155,Jinzhu,3dfa8a6,0,2020-09-10 13:46:18,2020-08-25 09:27:28
tests/delete_test.go,e953880,Jinzhu,Add returning tests,212,235,Jinzhu,04f049c,0,2021-10-28 01:17:33,2021-09-09 03:22:55
tests/delete_test.go,e7b2e92,Jinzhu,Remove RecordNotFound method,117,117,,,0,2020-06-07 14:03:45,
tests/delete_test.go,6bef318,Franco Liberali,add support for returning in sqlserver (#6585),236,236,kinggo,b47cf57,0,2023-10-10 07:03:34,2022-01-06 07:02:53
tests/delete_test.go,6bef318,Franco Liberali,add support for returning in sqlserver (#6585),211,211,kinggo,b47cf57,0,2023-10-10 07:03:34,2022-01-06 07:02:53
tests/delete_test.go,e7b2e92,Jinzhu,Remove RecordNotFound method,111,111,,,0,2020-06-07 14:03:45,
tests/delete_test.go,e953880,Jinzhu,Add returning tests,237,258,Jinzhu,04f049c,0,2021-10-28 01:17:33,2021-09-09 03:22:55
tests/delete_test.go,ebdb4ed,Jinzhu,Add AllowGlobalUpdate mode,126,129,,,0,2020-08-23 12:08:23,
tests/distinct_test.go,eda2f02,Jinzhu,Add Distinct support,1,3,,,0,2020-06-05 11:19:12,
tests/distinct_test.go,eda2f02,Jinzhu,Add Distinct support,8,11,,,0,2020-06-05 11:19:12,
tests/distinct_test.go,eda2f02,Jinzhu,Add Distinct support,5,6,,,0,2020-06-05 11:19:12,
tests/distinct_test.go,eda2f02,Jinzhu,Add Distinct support,13,25,,,0,2020-06-05 11:19:12,
tests/distinct_test.go,3627795,Jinzhu,"Fix Select with specific symbol, close #3157",4,4,Jinzhu,22ff837,1,2020-07-17 03:24:24,2020-06-09 07:36:10
tests/distinct_test.go,eda2f02,Jinzhu,Add Distinct support,27,33,,,0,2020-06-05 11:19:12,
tests/distinct_test.go,22ff837,Jinzhu,Fix Pluck with Table only,26,26,Jinzhu,eda2f02,1,2020-06-09 07:36:10,2020-06-05 11:19:12
tests/distinct_test.go,3627795,Jinzhu,"Fix Select with specific symbol, close #3157",7,7,Jinzhu,22ff837,1,2020-07-17 03:24:24,2020-06-09 07:36:10
tests/distinct_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),12,12,kinggo,6864a24,0,2022-01-06 07:02:53,2021-09-27 14:11:29
tests/distinct_test.go,eda2f02,Jinzhu,Add Distinct support,40,67,,,0,2020-06-05 11:19:12,
tests/distinct_test.go,3627795,Jinzhu,"Fix Select with specific symbol, close #3157",68,73,Jinzhu,22ff837,1,2020-07-17 03:24:24,2020-06-09 07:36:10
tests/distinct_test.go,eda2f02,Jinzhu,Add Distinct support,74,74,,,0,2020-06-05 11:19:12,
tests/distinct_test.go,6864a24,kinggo,fix:remove the tableName judgment in pluck (#4731),34,39,Jinzhu,3627795,1,2021-09-27 14:11:29,2020-07-17 03:24:24
tests/embedded_struct_test.go,6353414,aclich,"fix: 🐛 embedded struct test failed with custom datatypes (#6311)  * fix: 🐛 embedded struct test failed with custom datatypes  Fix the pointer embedded struct within custom datatypes and *time.time should be nil issue.  * fix: 🐛 change test case to avoid mssql driver issue  change test cases from bytes to string to avoid mssql driver issue",9,9,hykuan,67642ab,1,2023-05-15 01:59:26,2023-05-04 11:29:31
tests/embedded_struct_test.go,6d555ef,Jinzhu,Test embedded struct,10,10,,,0,2020-05-31 06:18:07,
tests/embedded_struct_test.go,6d555ef,Jinzhu,Test embedded struct,1,3,,,0,2020-05-31 06:18:07,
tests/embedded_struct_test.go,96368eb,Jinzhu,Test embedded struct implements Scan & Value interface,4,6,Jinzhu,8bb05a5,0,2020-06-18 01:15:23,2020-06-02 02:50:38
tests/embedded_struct_test.go,6d555ef,Jinzhu,Test embedded struct,8,8,,,0,2020-05-31 06:18:07,
tests/embedded_struct_test.go,6353414,aclich,"fix: 🐛 embedded struct test failed with custom datatypes (#6311)  * fix: 🐛 embedded struct test failed with custom datatypes  Fix the pointer embedded struct within custom datatypes and *time.time should be nil issue.  * fix: 🐛 change test case to avoid mssql driver issue  change test cases from bytes to string to avoid mssql driver issue",7,7,hykuan,67642ab,1,2023-05-15 01:59:26,2023-05-04 11:29:31
tests/embedded_struct_test.go,e986371,Jinzhu,Rename package name,11,11,,,0,2020-06-02 01:18:01,
tests/embedded_struct_test.go,ff985b9,Jinzhu,"Fix failed to guess relations for embedded types, close #3224",12,12,Jinzhu,e77e7bb,1,2020-08-04 04:25:34,2020-06-23 01:12:57
tests/embedded_struct_test.go,e77e7bb,Jinzhu,"Fix nested embedded field with pointer, close #3071",16,19,Jinzhu,d4d339f,1,2020-06-23 01:12:57,2020-06-19 14:51:46
tests/embedded_struct_test.go,6d555ef,Jinzhu,Test embedded struct,25,40,,,0,2020-05-31 06:18:07,
tests/embedded_struct_test.go,6d555ef,Jinzhu,Test embedded struct,20,23,,,0,2020-05-31 06:18:07,
tests/embedded_struct_test.go,e77e7bb,Jinzhu,"Fix nested embedded field with pointer, close #3071",24,24,Jinzhu,d4d339f,1,2020-06-23 01:12:57,2020-06-19 14:51:46
tests/embedded_struct_test.go,4ec73c9,Edward McFarlane,"Add test case for embedded value selects (#5901)  * Add test case for embedded value selects  * Revert recycle struct optimisation to avoid pointer overwrites",41,41,Cr,06e174e,0,2022-12-19 03:49:05,2022-07-25 06:10:30
tests/embedded_struct_test.go,6d555ef,Jinzhu,Test embedded struct,13,15,,,0,2020-05-31 06:18:07,
tests/embedded_struct_test.go,6d555ef,Jinzhu,Test embedded struct,81,86,,,0,2020-05-31 06:18:07,
tests/embedded_struct_test.go,4ec73c9,Edward McFarlane,"Add test case for embedded value selects (#5901)  * Add test case for embedded value selects  * Revert recycle struct optimisation to avoid pointer overwrites",79,80,Cr,06e174e,0,2022-12-19 03:49:05,2022-07-25 06:10:30
tests/embedded_struct_test.go,f0360dc,Cr,fix: embedded should be nil if not exists (#6219),108,108,Michael Anstis,532e9cf,1,2023-04-11 02:13:25,2023-02-18 01:06:43
tests/embedded_struct_test.go,6d555ef,Jinzhu,Test embedded struct,42,78,,,0,2020-05-31 06:18:07,
tests/embedded_struct_test.go,6353414,aclich,"fix: 🐛 embedded struct test failed with custom datatypes (#6311)  * fix: 🐛 embedded struct test failed with custom datatypes  Fix the pointer embedded struct within custom datatypes and *time.time should be nil issue.  * fix: 🐛 change test case to avoid mssql driver issue  change test cases from bytes to string to avoid mssql driver issue",109,116,hykuan,67642ab,1,2023-05-15 01:59:26,2023-05-04 11:29:31
tests/embedded_struct_test.go,6d555ef,Jinzhu,Test embedded struct,99,107,,,0,2020-05-31 06:18:07,
tests/embedded_struct_test.go,4ec73c9,Edward McFarlane,"Add test case for embedded value selects (#5901)  * Add test case for embedded value selects  * Revert recycle struct optimisation to avoid pointer overwrites",87,98,Cr,06e174e,0,2022-12-19 03:49:05,2022-07-25 06:10:30
tests/embedded_struct_test.go,f0360dc,Cr,fix: embedded should be nil if not exists (#6219),117,118,Michael Anstis,532e9cf,1,2023-04-11 02:13:25,2023-02-18 01:06:43
tests/embedded_struct_test.go,6d555ef,Jinzhu,Test embedded struct,119,121,,,0,2020-05-31 06:18:07,
tests/embedded_struct_test.go,6d555ef,Jinzhu,Test embedded struct,123,139,,,0,2020-05-31 06:18:07,
tests/embedded_struct_test.go,6d555ef,Jinzhu,Test embedded struct,186,186,,,0,2020-05-31 06:18:07,
tests/embedded_struct_test.go,6353414,aclich,"fix: 🐛 embedded struct test failed with custom datatypes (#6311)  * fix: 🐛 embedded struct test failed with custom datatypes  Fix the pointer embedded struct within custom datatypes and *time.time should be nil issue.  * fix: 🐛 change test case to avoid mssql driver issue  change test cases from bytes to string to avoid mssql driver issue",144,185,hykuan,67642ab,1,2023-05-15 01:59:26,2023-05-04 11:29:31
tests/embedded_struct_test.go,6353414,aclich,"fix: 🐛 embedded struct test failed with custom datatypes (#6311)  * fix: 🐛 embedded struct test failed with custom datatypes  Fix the pointer embedded struct within custom datatypes and *time.time should be nil issue.  * fix: 🐛 change test case to avoid mssql driver issue  change test cases from bytes to string to avoid mssql driver issue",193,195,hykuan,67642ab,1,2023-05-15 01:59:26,2023-05-04 11:29:31
tests/embedded_struct_test.go,d4d339f,Jinzhu,Handle data type cases,189,189,,,0,2020-06-19 14:51:46,
tests/embedded_struct_test.go,96368eb,Jinzhu,Test embedded struct implements Scan & Value interface,190,192,,,0,2020-06-18 01:15:23,
tests/embedded_struct_test.go,96368eb,Jinzhu,Test embedded struct implements Scan & Value interface,187,188,,,0,2020-06-18 01:15:23,
tests/embedded_struct_test.go,96368eb,Jinzhu,Test embedded struct implements Scan & Value interface,213,236,,,0,2020-06-18 01:15:23,
tests/embedded_struct_test.go,5adc0ce,Cr,test: fix TestEmbeddedRelations (#6639),239,245,aclich,6353414,1,2023-10-26 03:58:13,2023-05-15 01:59:26
tests/embedded_struct_test.go,6353414,aclich,"fix: 🐛 embedded struct test failed with custom datatypes (#6311)  * fix: 🐛 embedded struct test failed with custom datatypes  Fix the pointer embedded struct within custom datatypes and *time.time should be nil issue.  * fix: 🐛 change test case to avoid mssql driver issue  change test cases from bytes to string to avoid mssql driver issue",200,212,hykuan,67642ab,1,2023-05-15 01:59:26,2023-05-04 11:29:31
tests/embedded_struct_test.go,f0360dc,Cr,fix: embedded should be nil if not exists (#6219),140,143,Jinzhu,96368eb,1,2023-04-11 02:13:25,2020-06-18 01:15:23
tests/embedded_struct_test.go,5adc0ce,Cr,test: fix TestEmbeddedRelations (#6639),247,247,aclich,6353414,1,2023-10-26 03:58:13,2023-05-15 01:59:26
tests/embedded_struct_test.go,ff985b9,Jinzhu,"Fix failed to guess relations for embedded types, close #3224",237,238,,,1,2020-08-04 04:25:34,
tests/embedded_struct_test.go,96368eb,Jinzhu,Test embedded struct implements Scan & Value interface,199,199,,,0,2020-06-18 01:15:23,
tests/embedded_struct_test.go,96368eb,Jinzhu,Test embedded struct implements Scan & Value interface,196,198,,,0,2020-06-18 01:15:23,
tests/embedded_struct_test.go,ff985b9,Jinzhu,"Fix failed to guess relations for embedded types, close #3224",246,246,,,1,2020-08-04 04:25:34,
tests/embedded_struct_test.go,dc48e04,Jinzhu,"Fix nested embedded struct, close #3278",251,251,,,1,2020-08-18 03:21:40,
tests/embedded_struct_test.go,ff985b9,Jinzhu,"Fix failed to guess relations for embedded types, close #3224",252,252,,,1,2020-08-04 04:25:34,
tests/embedded_struct_test.go,5e599a0,hakusai22,"fix: typo (#7003)  * fix: typo  * fix: covered",282,282,Cr,5adc0ce,1,2024-05-08 04:07:58,2023-10-26 03:58:13
tests/embedded_struct_test.go,dc48e04,Jinzhu,"Fix nested embedded struct, close #3278",253,253,,,1,2020-08-18 03:21:40,
tests/embedded_struct_test.go,06e174e,Cr,fix: embedded default value (#5540),259,281,,,1,2022-07-25 06:10:30,
tests/embedded_struct_test.go,ff985b9,Jinzhu,"Fix failed to guess relations for embedded types, close #3224",248,250,,,1,2020-08-04 04:25:34,
tests/embedded_struct_test.go,f0360dc,Cr,fix: embedded should be nil if not exists (#6219),122,122,,,1,2023-04-11 02:13:25,
tests/embedded_struct_test.go,ff985b9,Jinzhu,"Fix failed to guess relations for embedded types, close #3224",257,258,,,1,2020-08-04 04:25:34,
tests/embedded_struct_test.go,06e174e,Cr,fix: embedded default value (#5540),283,284,,,1,2022-07-25 06:10:30,
tests/embedded_struct_test.go,c9d5c0b,Jinzhu,"Fix create database foreign keys for same type having has many/one & many2many relationships, close #3424",254,256,,,1,2020-09-08 10:25:29,
tests/error_translator_test.go,b444011,Saeid Kanishka,refactor: translatorError flag added for backward compatibility (#6178)  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>,12,12,Saeid Kanishka,85eaf9e,0,2023-03-24 02:07:05,2023-03-06 06:03:31
tests/error_translator_test.go,b444011,Saeid Kanishka,refactor: translatorError flag added for backward compatibility (#6178)  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>,14,14,Saeid Kanishka,85eaf9e,0,2023-03-24 02:07:05,2023-03-06 06:03:31
tests/error_translator_test.go,85eaf9e,Saeid Kanishka,"feat: Unique Constraint Violation error translator for different drivers (#6004)  * feat: duplicated key error translator for different drivers  * test: removed the dependency  * test: fixed broken tests  * refactor: added ErrorTransltor interface  * style: applied styler  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",1,11,,,1,2023-03-06 06:03:31,
tests/error_translator_test.go,85eaf9e,Saeid Kanishka,"feat: Unique Constraint Violation error translator for different drivers (#6004)  * feat: duplicated key error translator for different drivers  * test: removed the dependency  * test: fixed broken tests  * refactor: added ErrorTransltor interface  * style: applied styler  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",15,16,,,1,2023-03-06 06:03:31,
tests/error_translator_test.go,85eaf9e,Saeid Kanishka,"feat: Unique Constraint Violation error translator for different drivers (#6004)  * feat: duplicated key error translator for different drivers  * test: removed the dependency  * test: fixed broken tests  * refactor: added ErrorTransltor interface  * style: applied styler  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",13,13,,,1,2023-03-06 06:03:31,
tests/error_translator_test.go,b444011,Saeid Kanishka,refactor: translatorError flag added for backward compatibility (#6178)  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>,20,25,Saeid Kanishka,85eaf9e,0,2023-03-24 02:07:05,2023-03-06 06:03:31
tests/error_translator_test.go,8197c00,Saeid,refactor: error translator test (#6350)  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>,18,19,Saeid Kanishka,b444011,1,2023-05-25 03:10:00,2023-03-24 02:07:05
tests/error_translator_test.go,b444011,Saeid Kanishka,refactor: translatorError flag added for backward compatibility (#6178)  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>,17,17,Saeid Kanishka,85eaf9e,0,2023-03-24 02:07:05,2023-03-06 06:03:31
tests/error_translator_test.go,85eaf9e,Saeid Kanishka,"feat: Unique Constraint Violation error translator for different drivers (#6004)  * feat: duplicated key error translator for different drivers  * test: removed the dependency  * test: fixed broken tests  * refactor: added ErrorTransltor interface  * style: applied styler  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",26,29,,,1,2023-03-06 06:03:31,
tests/error_translator_test.go,c10f807,Saeid,"test: coverage for foreign key violation err (#6403)  * test: coverage for foreign key violation err  * test: enabled foreign keys constraint for sqlite  * test: enabled mysql& mssql for ErrForeignKeyViolate  * test: disabled mysql & updated sqlserver driver version  * test: skipped tidb  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",47,48,Saeid,c2d571c,0,2023-07-12 13:21:22,2023-06-10 13:05:19
tests/error_translator_test.go,c2d571c,Saeid,"test: coverage for duplicated key err (#6389)  * test: ErrDuplicatedKey coverage added  * test: updated sqlserver version  * test: removed sqlserver  * test: support added for sqlserver  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",49,62,Saeid,8197c00,0,2023-06-10 13:05:19,2023-05-25 03:10:00
tests/error_translator_test.go,c2d571c,Saeid,"test: coverage for duplicated key err (#6389)  * test: ErrDuplicatedKey coverage added  * test: updated sqlserver version  * test: removed sqlserver  * test: support added for sqlserver  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",30,46,Saeid,8197c00,0,2023-06-10 13:05:19,2023-05-25 03:10:00
tests/error_translator_test.go,c10f807,Saeid,"test: coverage for foreign key violation err (#6403)  * test: coverage for foreign key violation err  * test: enabled foreign keys constraint for sqlite  * test: enabled mysql& mssql for ErrForeignKeyViolate  * test: disabled mysql & updated sqlserver driver version  * test: skipped tidb  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",63,111,Saeid,c2d571c,0,2023-07-12 13:21:22,2023-06-10 13:05:19
tests/count_test.go,cbc4a81,Jinzhu,Add Count tests,12,13,,,0,2020-05-24 03:35:19,
tests/count_test.go,1ef1f0b,Jinzhu,"Fix Count with complicated Select, close #3826",6,7,Jinzhu,26504f5,1,2020-12-06 06:30:42,2020-11-17 08:28:37
tests/count_test.go,cbc4a81,Jinzhu,Add Count tests,8,9,,,0,2020-05-24 03:35:19,
tests/count_test.go,f83b00d,Jinzhu,"Fix Count with Select when Model not specfied, close #3220",5,5,Jinzhu,d342f41,1,2020-08-03 02:30:25,2020-07-01 11:49:04
tests/count_test.go,cbc4a81,Jinzhu,Add Count tests,1,4,,,0,2020-05-24 03:35:19,
tests/count_test.go,7e1fa4a,Jinzhu,Fix Count after Session,10,10,Jinzhu,8bb05a5,1,2020-06-23 14:41:41,2020-06-02 02:50:38
tests/count_test.go,9fea15a,black-06,"feat: add MigrateColumnUnique (#6640)  * feat: add MigrateColumnUnique  * feat: define new methods  * delete debug in test",32,32,black-06,1a7ea98,0,2023-10-30 09:15:49,2023-03-23 03:19:53
tests/count_test.go,1a7ea98,black-06,"fix: count with group (#6157) (#6160)  * fix: count with group (#6157)  * add an easy-to-understand ut",14,31,Jinzhu,f913134,1,2023-03-23 03:19:53,2022-11-21 03:10:56
tests/count_test.go,cbc4a81,Jinzhu,Add Count tests,61,71,,,0,2020-05-24 03:35:19,
tests/count_test.go,1a7ea98,black-06,"fix: count with group (#6157) (#6160)  * fix: count with group (#6157)  * add an easy-to-understand ut",33,39,Jinzhu,f913134,1,2023-03-23 03:19:53,2022-11-21 03:10:56
tests/count_test.go,8bb05a5,Jinzhu,Refactor tests files,11,11,,,0,2020-06-02 02:50:38,
tests/count_test.go,cbc4a81,Jinzhu,Add Count tests,40,52,,,0,2020-05-24 03:35:19,
tests/count_test.go,26504f5,Jinzhu,Use NewDB to replace WithConditions for Session,72,72,Jinzhu,9b21811,0,2020-11-17 08:28:37,2020-10-19 06:50:11
tests/count_test.go,91a6958,Jinzhu,Test Association For BelongsTo,81,81,,,0,2020-05-24 10:33:15,
tests/count_test.go,cbc4a81,Jinzhu,Add Count tests,82,86,,,0,2020-05-24 03:35:19,
tests/count_test.go,cbc4a81,Jinzhu,Add Count tests,79,80,,,0,2020-05-24 03:35:19,
tests/count_test.go,1ef1f0b,Jinzhu,"Fix Count with complicated Select, close #3826",108,115,Jinzhu,26504f5,1,2020-12-06 06:30:42,2020-11-17 08:28:37
tests/count_test.go,7e1fa4a,Jinzhu,Fix Count after Session,73,78,,,1,2020-06-23 14:41:41,
tests/count_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),116,116,kinggo,d8a710c,0,2022-01-06 07:02:53,2021-11-29 12:14:23
tests/count_test.go,d02b592,Jinzhu,Better support Count in chain,53,60,Jinzhu,cbc4a81,0,2020-07-01 02:19:52,2020-05-24 03:35:19
tests/count_test.go,1ef1f0b,Jinzhu,"Fix Count with complicated Select, close #3826",117,129,Jinzhu,26504f5,1,2020-12-06 06:30:42,2020-11-17 08:28:37
tests/count_test.go,f83b00d,Jinzhu,"Fix Count with Select when Model not specfied, close #3220",87,97,,,1,2020-08-03 02:30:25,
tests/count_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),130,130,Jinzhu,8e67a08,0,2022-01-06 07:02:53,2021-06-18 07:38:20
tests/count_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),144,144,kinggo,d8a710c,0,2022-01-06 07:02:53,2021-11-29 12:14:23
tests/count_test.go,045d5f8,Jinzhu,"Fix count with join and no model, close #3255",106,107,,,1,2020-08-13 04:18:36,
tests/count_test.go,9b21811,Jinzhu,"Fix soft delete with OrCondition, close #3627",100,100,,,1,2020-10-19 06:50:11,
tests/count_test.go,045d5f8,Jinzhu,"Fix count with join and no model, close #3255",98,99,,,1,2020-08-13 04:18:36,
tests/count_test.go,231aba5,Jinzhu,Fix count with order by,101,105,,,1,2020-10-22 03:28:43,
tests/count_test.go,1ef1f0b,Jinzhu,"Fix Count with complicated Select, close #3826",131,140,,,1,2020-12-06 06:30:42,
tests/count_test.go,1ef1f0b,Jinzhu,"Fix Count with complicated Select, close #3826",142,143,,,1,2020-12-06 06:30:42,
tests/count_test.go,704e53a,Jinzhu,"Call scopes before parse model value, close #4209",153,154,,,0,2021-03-24 08:35:39,
tests/count_test.go,61b018c,Jinzhu,Fix count with selected *,141,141,,,1,2021-09-16 03:17:54,
tests/count_test.go,61b018c,Jinzhu,Fix count with selected *,155,155,,,1,2021-09-16 03:17:54,
tests/count_test.go,704e53a,Jinzhu,"Call scopes before parse model value, close #4209",150,151,,,0,2021-03-24 08:35:39,
tests/count_test.go,61b018c,Jinzhu,Fix count with selected *,152,152,,,1,2021-09-16 03:17:54,
tests/count_test.go,1a7ea98,black-06,"fix: count with group (#6157) (#6160)  * fix: count with group (#6157)  * add an easy-to-understand ut",170,171,Jinzhu,f913134,1,2023-03-23 03:19:53,2022-11-21 03:10:56
tests/count_test.go,1ef1f0b,Jinzhu,"Fix Count with complicated Select, close #3826",145,149,,,1,2020-12-06 06:30:42,
tests/count_test.go,61b018c,Jinzhu,Fix count with selected *,157,162,,,1,2021-09-16 03:17:54,
tests/count_test.go,cbc4a81,Jinzhu,Add Count tests,191,191,,,0,2020-05-24 03:35:19,
tests/count_test.go,d8a710c,kinggo,fix: count() when use group by and only find one record (#4885)  Co-authored-by: 李龙 <lilong.21@bytedance.com>,163,169,,,1,2021-11-29 12:14:23,
tests/count_test.go,704e53a,Jinzhu,"Call scopes before parse model value, close #4209",156,156,,,0,2021-03-24 08:35:39,
tests/count_test.go,d8a710c,kinggo,fix: count() when use group by and only find one record (#4885)  Co-authored-by: 李龙 <lilong.21@bytedance.com>,172,172,,,1,2021-11-29 12:14:23,
tests/count_test.go,6befa0c,Jinzhu,Refactor preload error check,179,189,,,1,2022-03-17 03:22:25,
tests/count_test.go,8c36732,Ning,preoload not allowd before count (#5023)  Co-authored-by: ningfei <accelerator314@outlook.com>,190,190,,,0,2022-01-30 10:17:06,
tests/count_test.go,8c36732,Ning,preoload not allowd before count (#5023)  Co-authored-by: ningfei <accelerator314@outlook.com>,173,178,,,0,2022-01-30 10:17:06,
tests/gorm_test.go,19cf645,Jim,feat: Convert SQL nulls to zero values (ConvertNullToZeroValues)  Makes it the default behavior to convert SQL null values to zero values for model fields which are not pointers.,1,3,,,0,2021-10-13 12:11:22,
tests/gorm_test.go,19cf645,Jim,feat: Convert SQL nulls to zero values (ConvertNullToZeroValues)  Makes it the default behavior to convert SQL null values to zero values for model fields which are not pointers.,9,10,,,0,2021-10-13 12:11:22,
tests/gorm_test.go,19cf645,Jim,feat: Convert SQL nulls to zero values (ConvertNullToZeroValues)  Makes it the default behavior to convert SQL null values to zero values for model fields which are not pointers.,4,4,,,0,2021-10-13 12:11:22,
tests/gorm_test.go,af3fbdc,Jinzhu,Improve returning support,8,8,Jim,19cf645,0,2021-10-26 14:40:14,2021-10-13 12:11:22
tests/gorm_test.go,af3fbdc,Jinzhu,Improve returning support,5,5,Jim,19cf645,0,2021-10-26 14:40:14,2021-10-13 12:11:22
tests/gorm_test.go,19cf645,Jim,feat: Convert SQL nulls to zero values (ConvertNullToZeroValues)  Makes it the default behavior to convert SQL null values to zero values for model fields which are not pointers.,19,32,,,0,2021-10-13 12:11:22,
tests/gorm_test.go,19cf645,Jim,feat: Convert SQL nulls to zero values (ConvertNullToZeroValues)  Makes it the default behavior to convert SQL null values to zero values for model fields which are not pointers.,33,103,,,0,2021-10-13 12:11:22,
tests/gorm_test.go,c1ea730,black,fix: avoid panic when open fails,6,7,Jinzhu,af3fbdc,1,2023-06-01 07:22:21,2021-10-26 14:40:14
tests/gorm_test.go,c1ea730,black,fix: avoid panic when open fails,11,18,Jinzhu,af3fbdc,1,2023-06-01 07:22:21,2021-10-26 14:40:14
tests/group_by_test.go,f0a442a,Jinzhu,Refactor tests,11,13,,,0,2020-05-23 15:50:48,
tests/group_by_test.go,a158d1a,Jinzhu,Add GroupBy test,7,8,,,0,2020-03-08 10:05:22,
tests/group_by_test.go,4eae3fe,Jinzhu,Test group by with multiple columns,14,14,Jinzhu,8bb05a5,0,2020-06-25 15:37:49,2020-06-02 02:50:38
tests/group_by_test.go,f0a442a,Jinzhu,Refactor tests,9,9,,,0,2020-05-23 15:50:48,
tests/group_by_test.go,f0a442a,Jinzhu,Refactor tests,1,1,,,0,2020-05-23 15:50:48,
tests/group_by_test.go,a158d1a,Jinzhu,Add GroupBy test,2,5,,,0,2020-03-08 10:05:22,
tests/group_by_test.go,f0a442a,Jinzhu,Refactor tests,15,22,,,0,2020-05-23 15:50:48,
tests/group_by_test.go,8bb05a5,Jinzhu,Refactor tests files,6,6,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/group_by_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),10,10,Jinzhu,33601dc,0,2022-01-06 07:02:53,2021-03-30 10:28:09
tests/group_by_test.go,f0a442a,Jinzhu,Refactor tests,24,31,,,0,2020-05-23 15:50:48,
tests/group_by_test.go,4eae3fe,Jinzhu,Test group by with multiple columns,23,23,Jinzhu,8bb05a5,0,2020-06-25 15:37:49,2020-06-02 02:50:38
tests/group_by_test.go,f0a442a,Jinzhu,Refactor tests,38,46,,,0,2020-05-23 15:50:48,
tests/group_by_test.go,cb5a35a,Jinzhu,Test group with table name,47,54,Jinzhu,4eae3fe,0,2020-06-26 00:39:18,2020-06-25 15:37:49
tests/group_by_test.go,f0a442a,Jinzhu,Refactor tests,55,68,,,0,2020-05-23 15:50:48,
tests/group_by_test.go,f0a442a,Jinzhu,Refactor tests,33,36,,,0,2020-05-23 15:50:48,
tests/group_by_test.go,4eae3fe,Jinzhu,Test group by with multiple columns,32,32,Jinzhu,8bb05a5,0,2020-06-25 15:37:49,2020-06-02 02:50:38
tests/group_by_test.go,4eae3fe,Jinzhu,Test group by with multiple columns,37,37,Jinzhu,8bb05a5,0,2020-06-25 15:37:49,2020-06-02 02:50:38
tests/group_by_test.go,9a4941b,Jinzhu,Test Order/GroupBy,71,90,Jinzhu,d5d31b3,0,2020-07-06 01:47:14,2020-07-01 11:49:04
tests/group_by_test.go,4eae3fe,Jinzhu,Test group by with multiple columns,69,69,Jinzhu,8bb05a5,0,2020-06-25 15:37:49,2020-06-02 02:50:38
tests/group_by_test.go,33601dc,Jinzhu,Support Having w/o Group,99,108,Jinzhu,9a4941b,0,2021-03-30 10:28:09,2020-07-06 01:47:14
tests/group_by_test.go,a158d1a,Jinzhu,Add GroupBy test,109,109,,,0,2020-03-08 10:05:22,
tests/group_by_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),70,70,Jinzhu,33601dc,0,2022-01-06 07:02:53,2021-03-30 10:28:09
tests/group_by_test.go,4eae3fe,Jinzhu,Test group by with multiple columns,91,98,,,0,2020-06-25 15:37:49,
tests/go.mod,49d94c1,Jinzhu,upgrade github action tests template,12,12,Jinzhu,5553ff3,0,2024-06-12 09:24:34,2024-04-25 12:12:15
tests/go.mod,8bb05a5,Jinzhu,Refactor tests files,1,2,,,0,2020-06-02 02:50:38,
tests/go.mod,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,3,5,Jinzhu,6bfccf8,0,2025-04-25 08:22:26,2024-11-21 09:03:31
tests/go.mod,8bb05a5,Jinzhu,Refactor tests files,6,7,,,0,2020-06-02 02:50:38,
tests/go.mod,f3e2da5,Hasan,"Added offset when scanning the result back to struct, close #5143  commit 9a2058164d44c98d7b586b87bed1757f89d6fad7 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 22:34:19 2022 +0800      Refactor #5143  commit c259de21768936428c9d89f7b31afb95b8acb36a Author: Hasan <mr.k779@outlook.com> Date:   Mon Mar 14 20:04:01 2022 +0545      Update scan_test.go  commit 09f127b49151a52fbb8b354a03e6610d4f70262f Author: Hasan <mr.k779@outlook.com> Date:   Mon Mar 14 19:23:47 2022 +0545      Added test for scanning embedded data into structs  commit aeaca493cf412def7813d36fd6a68acc832bf79f Author: Hasan <mr.k779@outlook.com> Date:   Tue Mar 8 04:08:16 2022 +0600      Added offset when scanning the result back to struct",9,9,,,0,2022-03-17 14:52:40,
tests/go.mod,8fb9a31,black-06,refactor: part 2 of distinguish between Unique and UniqueIndex (#6822),8,8,Jinzhu,940358e,0,2024-02-06 11:48:40,2024-01-12 08:42:21
tests/go.mod,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,11,11,Jinzhu,6bfccf8,0,2025-04-25 08:22:26,2024-11-21 09:03:31
tests/go.mod,c10f807,Saeid,"test: coverage for foreign key violation err (#6403)  * test: coverage for foreign key violation err  * test: enabled foreign keys constraint for sqlite  * test: enabled mysql& mssql for ErrForeignKeyViolate  * test: disabled mysql & updated sqlserver driver version  * test: skipped tidb  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",10,10,Saeid,c2d571c,0,2023-07-12 13:21:22,2023-06-10 13:05:19
tests/go.mod,b0d70a2,홍성욱,"[#6372] Fixed nullable constraint bug for columns during auto migration (#7269)  * [#6372] Fixed nullable constraint bug for columns during auto migration  * [#6372] fix comment  * [#6372] Add test code  * [#6372] Add test code  * [#6372] Fix failed test case  * [#6372] Fix failed test case  * [#6372] wip  * [#6372] wip  * [#6372] wip  * [#6372] wip",15,15,Jinzhu,68434b7,1,2024-11-14 09:40:18,2024-09-18 12:03:35
tests/go.mod,68434b7,Jinzhu,fix test script with latest docker release,16,16,Leo Sjöberg,7f75b12,1,2024-09-18 12:03:35,2024-09-14 12:58:29
tests/go.mod,e0c3be0,Jinzhu,Fix tests in local,20,20,black-06,8fb9a31,1,2024-03-18 08:28:46,2024-02-06 11:48:40
tests/go.mod,a7f01bd,Jinzhu,Test Pluck with customized type,23,25,Saeid,c10f807,0,2023-07-25 02:47:19,2023-07-12 13:21:22
tests/go.mod,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,13,14,Jinzhu,6bfccf8,0,2025-04-25 08:22:26,2024-11-21 09:03:31
tests/go.mod,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,22,22,Jinzhu,6bfccf8,0,2025-04-25 08:22:26,2024-11-21 09:03:31
tests/go.mod,a7f01bd,Jinzhu,Test Pluck with customized type,17,19,Saeid,c10f807,0,2023-07-25 02:47:19,2023-07-12 13:21:22
tests/go.mod,68434b7,Jinzhu,fix test script with latest docker release,27,27,Leo Sjöberg,7f75b12,1,2024-09-18 12:03:35,2024-09-14 12:58:29
tests/go.mod,49d94c1,Jinzhu,upgrade github action tests template,26,26,Jinzhu,5553ff3,0,2024-06-12 09:24:34,2024-04-25 12:12:15
tests/go.mod,8fb9a31,black-06,refactor: part 2 of distinguish between Unique and UniqueIndex (#6822),21,21,Jinzhu,940358e,0,2024-02-06 11:48:40,2024-01-12 08:42:21
tests/go.mod,8fb9a31,black-06,refactor: part 2 of distinguish between Unique and UniqueIndex (#6822),29,29,Jinzhu,940358e,0,2024-02-06 11:48:40,2024-01-12 08:42:21
tests/go.mod,a7f01bd,Jinzhu,Test Pluck with customized type,28,28,Saeid,c10f807,0,2023-07-25 02:47:19,2023-07-12 13:21:22
tests/go.mod,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,30,30,Jinzhu,6bfccf8,0,2025-04-25 08:22:26,2024-11-21 09:03:31
tests/go.mod,8bb05a5,Jinzhu,Refactor tests files,37,39,,,0,2020-06-02 02:50:38,
tests/go.mod,8fb9a31,black-06,refactor: part 2 of distinguish between Unique and UniqueIndex (#6822),32,33,Jinzhu,940358e,0,2024-02-06 11:48:40,2024-01-12 08:42:21
tests/go.mod,49d94c1,Jinzhu,upgrade github action tests template,31,31,Jinzhu,5553ff3,0,2024-06-12 09:24:34,2024-04-25 12:12:15
tests/go.mod,8fb9a31,black-06,refactor: part 2 of distinguish between Unique and UniqueIndex (#6822),36,36,Jinzhu,940358e,0,2024-02-06 11:48:40,2024-01-12 08:42:21
tests/go.mod,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,34,35,Jinzhu,6bfccf8,0,2025-04-25 08:22:26,2024-11-21 09:03:31
tests/go.mod,c1e911f,Jinzhu,Update tests/go.mod,40,41,,,0,2023-11-09 10:46:39,
tests/go.mod,5553ff3,Jinzhu,downgrade mssql driver,42,43,,,0,2024-04-25 12:12:15,
tests/hooks_test.go,befef0c,Jinzhu,Improve Hooks,7,7,,,0,2020-05-31 16:12:20,
tests/hooks_test.go,befef0c,Jinzhu,Improve Hooks,13,104,,,0,2020-05-31 16:12:20,
tests/hooks_test.go,befef0c,Jinzhu,Improve Hooks,9,10,,,0,2020-05-31 16:12:20,
tests/hooks_test.go,163200d,Jinzhu,Test Hooks,12,12,Jinzhu,8bb05a5,0,2020-06-05 12:24:15,2020-06-02 02:50:38
tests/hooks_test.go,befef0c,Jinzhu,Improve Hooks,1,4,,,0,2020-05-31 16:12:20,
tests/hooks_test.go,109f239,Sérgio Prata Almeida,"add DB level propagation for the Unscoped flag (#7007)  * adds PropagateUnscoped to db Config  * adds PropagateUnscoped test  * adds PropagateUnscoped to Session and sets it accordingly",5,6,black-06,e66a059,0,2024-06-17 03:59:06,2023-02-18 01:20:29
tests/hooks_test.go,163200d,Jinzhu,Test Hooks,8,8,Jinzhu,8bb05a5,0,2020-06-05 12:24:15,2020-06-02 02:50:38
tests/hooks_test.go,e986371,Jinzhu,Rename package name,11,11,Jinzhu,befef0c,0,2020-06-02 01:18:01,2020-05-31 16:12:20
tests/hooks_test.go,163200d,Jinzhu,Test Hooks,105,105,Jinzhu,8bb05a5,0,2020-06-05 12:24:15,2020-06-02 02:50:38
tests/hooks_test.go,befef0c,Jinzhu,Improve Hooks,106,120,,,0,2020-05-31 16:12:20,
tests/hooks_test.go,163200d,Jinzhu,Test Hooks,121,121,Jinzhu,8bb05a5,0,2020-06-05 12:24:15,2020-06-02 02:50:38
tests/hooks_test.go,befef0c,Jinzhu,Improve Hooks,122,137,,,0,2020-05-31 16:12:20,
tests/hooks_test.go,163200d,Jinzhu,Test Hooks,214,298,Jinzhu,8bb05a5,0,2020-06-05 12:24:15,2020-06-02 02:50:38
tests/hooks_test.go,befef0c,Jinzhu,Improve Hooks,147,213,,,0,2020-05-31 16:12:20,
tests/hooks_test.go,4373aa0,Jinzhu,"Don't call AfterFind hooks if no record found, close #4048",138,146,Jinzhu,26504f5,0,2021-02-07 04:44:59,2020-11-17 08:28:37
tests/hooks_test.go,4009ec5,Jinzhu,Fix call hook methods when updating with struct,371,379,Jinzhu,63e4819,1,2020-10-27 10:14:36,2020-07-01 13:28:19
tests/hooks_test.go,9b80fe9,Cr,"fix: stmt.Changed zero value filed behavior (#5281)  * fix: stmt.Changed zero value filed behavior  * chore: rename var",387,387,Jinzhu,4373aa0,1,2022-04-24 01:08:52,2021-02-07 04:44:59
tests/hooks_test.go,f556628,Jinzhu,"Add SetColumn, Changed method",299,367,Jinzhu,163200d,0,2020-06-30 08:53:54,2020-06-05 12:24:15
tests/hooks_test.go,4009ec5,Jinzhu,Fix call hook methods when updating with struct,368,369,Jinzhu,63e4819,1,2020-10-27 10:14:36,2020-07-01 13:28:19
tests/hooks_test.go,9b80fe9,Cr,"fix: stmt.Changed zero value filed behavior (#5281)  * fix: stmt.Changed zero value filed behavior  * chore: rename var",380,385,Jinzhu,4373aa0,1,2022-04-24 01:08:52,2021-02-07 04:44:59
tests/hooks_test.go,f556628,Jinzhu,"Add SetColumn, Changed method",370,370,,,0,2020-06-30 08:53:54,
tests/hooks_test.go,4009ec5,Jinzhu,Fix call hook methods when updating with struct,386,386,Jinzhu,3e4dbde,1,2020-10-27 10:14:36,2020-07-01 11:49:04
tests/hooks_test.go,f6e1786,Jinzhu,Add skip hooks support,391,391,Jinzhu,3e4dbde,0,2020-11-17 07:19:58,2020-07-01 11:49:04
tests/hooks_test.go,f556628,Jinzhu,"Add SetColumn, Changed method",407,407,,,0,2020-06-30 08:53:54,
tests/hooks_test.go,929c0c5,Jinzhu,Test Hooks For Slice,408,409,Jinzhu,f556628,0,2020-06-30 14:47:21,2020-06-30 08:53:54
tests/hooks_test.go,9b80fe9,Cr,"fix: stmt.Changed zero value filed behavior (#5281)  * fix: stmt.Changed zero value filed behavior  * chore: rename var",392,392,Jinzhu,4373aa0,1,2022-04-24 01:08:52,2021-02-07 04:44:59
tests/hooks_test.go,26504f5,Jinzhu,Use NewDB to replace WithConditions for Session,400,406,Jinzhu,66dcd7e,0,2020-11-17 08:28:37,2020-07-01 11:49:04
tests/hooks_test.go,929c0c5,Jinzhu,Test Hooks For Slice,413,458,Jinzhu,f556628,0,2020-06-30 14:47:21,2020-06-30 08:53:54
tests/hooks_test.go,63e4819,Jinzhu,"Test failed to save association should rollback, close #3100",410,412,Jinzhu,66dcd7e,0,2020-07-01 13:28:19,2020-07-01 11:49:04
tests/hooks_test.go,63e4819,Jinzhu,"Test failed to save association should rollback, close #3100",459,470,Jinzhu,3e4dbde,0,2020-07-01 13:28:19,2020-07-01 11:49:04
tests/hooks_test.go,19b8d37,Cr,fix: preload with skip hooks (#5310),483,487,Cr,9b80fe9,1,2022-05-04 10:57:53,2022-04-24 01:08:52
tests/hooks_test.go,f556628,Jinzhu,"Add SetColumn, Changed method",396,399,,,0,2020-06-30 08:53:54,
tests/hooks_test.go,f556628,Jinzhu,"Add SetColumn, Changed method",388,390,,,0,2020-06-30 08:53:54,
tests/hooks_test.go,f6e1786,Jinzhu,Add skip hooks support,393,395,Jinzhu,66dcd7e,0,2020-11-17 07:19:58,2020-07-01 11:49:04
tests/hooks_test.go,19b8d37,Cr,fix: preload with skip hooks (#5310),471,473,Cr,9b80fe9,1,2022-05-04 10:57:53,2022-04-24 01:08:52
tests/hooks_test.go,19b8d37,Cr,fix: preload with skip hooks (#5310),509,517,Cr,9b80fe9,1,2022-05-04 10:57:53,2022-04-24 01:08:52
tests/hooks_test.go,e66a059,black-06,"fix: update panic if model is not ptr (#6037)  * fix: update panic if model is not ptr  * fix: update panic if model is not ptr  * fix: update panic if model is not ptr  * fix: raise an error if the value is not addressable  * fix: return",519,570,Cr,19b8d37,1,2023-02-18 01:20:29,2022-05-04 10:57:53
tests/hooks_test.go,63e4819,Jinzhu,"Test failed to save association should rollback, close #3100",518,518,,,0,2020-07-01 13:28:19,
tests/hooks_test.go,63e4819,Jinzhu,"Test failed to save association should rollback, close #3100",474,482,,,0,2020-07-01 13:28:19,
tests/hooks_test.go,109f239,Sérgio Prata Almeida,"add DB level propagation for the Unscoped flag (#7007)  * adds PropagateUnscoped to db Config  * adds PropagateUnscoped test  * adds PropagateUnscoped to Session and sets it accordingly",571,611,black-06,e66a059,0,2024-06-17 03:59:06,2023-02-18 01:20:29
tests/hooks_test.go,63e4819,Jinzhu,"Test failed to save association should rollback, close #3100",488,508,,,0,2020-07-01 13:28:19,
tests/joins_table_test.go,e490e09,Jinzhu,Add SetupJoinTable support,9,14,,,0,2020-06-01 15:58:22,
tests/joins_table_test.go,e490e09,Jinzhu,Add SetupJoinTable support,116,116,,,0,2020-06-01 15:58:22,
tests/joins_table_test.go,e490e09,Jinzhu,Add SetupJoinTable support,16,99,,,0,2020-06-01 15:58:22,
tests/joins_table_test.go,e490e09,Jinzhu,Add SetupJoinTable support,1,6,,,0,2020-06-01 15:58:22,
tests/joins_table_test.go,70a7bd5,Jinzhu,Support delete associations with Select when deleting,15,15,Jinzhu,8bb05a5,0,2020-09-10 13:46:18,2020-06-02 02:50:38
tests/joins_table_test.go,e986371,Jinzhu,Rename package name,7,7,Jinzhu,e490e09,0,2020-06-02 01:18:01,2020-06-01 15:58:22
tests/joins_table_test.go,70a7bd5,Jinzhu,Support delete associations with Select when deleting,8,8,Jinzhu,8bb05a5,0,2020-09-10 13:46:18,2020-06-02 02:50:38
tests/joins_table_test.go,70a7bd5,Jinzhu,Support delete associations with Select when deleting,100,115,Jinzhu,8bb05a5,0,2020-09-10 13:46:18,2020-06-02 02:50:38
tests/joins_test.go,8bb05a5,Jinzhu,Refactor tests files,11,11,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/joins_test.go,f0a442a,Jinzhu,Refactor tests,6,8,,,0,2020-05-23 15:50:48,
tests/joins_test.go,05167fd,Emilien,fix: use reflect.Append when preloading nested associations (#7014)  Co-authored-by: Emilien Kofman <emilien.kofman@miimosa.com>,4,4,贾一饼,9c4070e,1,2024-06-12 10:52:33,2024-06-12 09:51:44
tests/joins_test.go,05167fd,Emilien,fix: use reflect.Append when preloading nested associations (#7014)  Co-authored-by: Emilien Kofman <emilien.kofman@miimosa.com>,9,9,贾一饼,9c4070e,1,2024-06-12 10:52:33,2024-06-12 09:51:44
tests/joins_test.go,f0a442a,Jinzhu,Refactor tests,1,3,,,0,2020-05-23 15:50:48,
tests/joins_test.go,f0a442a,Jinzhu,Refactor tests,12,14,,,0,2020-05-23 15:50:48,
tests/joins_test.go,e986371,Jinzhu,Rename package name,10,10,Jinzhu,e26abb8,0,2020-06-02 01:18:01,2020-05-31 12:42:07
tests/joins_test.go,3a97639,Jinzhu,"Fix unordered joins, close #3267",5,5,Jinzhu,9a4941b,1,2020-08-23 02:45:10,2020-07-06 01:47:14
tests/joins_test.go,6aa6d37,Filippo Del Moro,"Fix scanIntoStruct (#5241)  * Reproduces error case  * Fix scanIntoStruct  Co-authored-by: Filippo Del Moro <filippo.delmoro@facile.it>",15,15,ag9920,3c00980,1,2022-04-13 07:47:04,2022-03-18 09:12:17
tests/joins_test.go,f0a442a,Jinzhu,Refactor tests,16,19,,,0,2020-05-23 15:50:48,
tests/joins_test.go,6aa6d37,Filippo Del Moro,"Fix scanIntoStruct (#5241)  * Reproduces error case  * Fix scanIntoStruct  Co-authored-by: Filippo Del Moro <filippo.delmoro@facile.it>",20,20,ag9920,3c00980,1,2022-04-13 07:47:04,2022-03-18 09:12:17
tests/joins_test.go,f0a442a,Jinzhu,Refactor tests,21,59,,,0,2020-05-23 15:50:48,
tests/joins_test.go,5b1d3e4,Jinzhu,Test Joins,60,61,Jinzhu,f0a442a,0,2020-05-31 12:21:52,2020-05-23 15:50:48
tests/joins_test.go,5b1d3e4,Jinzhu,Test Joins,63,65,Jinzhu,f0a442a,0,2020-05-31 12:21:52,2020-05-23 15:50:48
tests/joins_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),62,62,kinggo,418c60c,0,2022-01-06 07:02:53,2021-10-09 08:55:45
tests/joins_test.go,5b1d3e4,Jinzhu,Test Joins,67,71,Jinzhu,f0a442a,0,2020-05-31 12:21:52,2020-05-23 15:50:48
tests/joins_test.go,e195292,Jinzhu,"Support named Joins, close #3833",66,66,Jinzhu,3a97639,0,2020-12-07 02:31:06,2020-08-23 02:45:10
tests/joins_test.go,5b1d3e4,Jinzhu,Test Joins,73,77,Jinzhu,f0a442a,0,2020-05-31 12:21:52,2020-05-23 15:50:48
tests/joins_test.go,e195292,Jinzhu,"Support named Joins, close #3833",72,72,Jinzhu,3a97639,0,2020-12-07 02:31:06,2020-08-23 02:45:10
tests/joins_test.go,e195292,Jinzhu,"Support named Joins, close #3833",78,78,Jinzhu,3a97639,0,2020-12-07 02:31:06,2020-08-23 02:45:10
tests/joins_test.go,e195292,Jinzhu,"Support named Joins, close #3833",90,90,Jinzhu,3a97639,0,2020-12-07 02:31:06,2020-08-23 02:45:10
tests/joins_test.go,5b1d3e4,Jinzhu,Test Joins,79,83,Jinzhu,f0a442a,0,2020-05-31 12:21:52,2020-05-23 15:50:48
tests/joins_test.go,e195292,Jinzhu,"Support named Joins, close #3833",84,84,Jinzhu,3a97639,0,2020-12-07 02:31:06,2020-08-23 02:45:10
tests/joins_test.go,5b1d3e4,Jinzhu,Test Joins,91,93,Jinzhu,f0a442a,0,2020-05-31 12:21:52,2020-05-23 15:50:48
tests/joins_test.go,5b1d3e4,Jinzhu,Test Joins,85,89,Jinzhu,f0a442a,0,2020-05-31 12:21:52,2020-05-23 15:50:48
tests/joins_test.go,3a97639,Jinzhu,"Fix unordered joins, close #3267",94,94,Jinzhu,9a4941b,1,2020-08-23 02:45:10,2020-07-06 01:47:14
tests/joins_test.go,e195292,Jinzhu,"Support named Joins, close #3833",95,100,Jinzhu,3a97639,0,2020-12-07 02:31:06,2020-08-23 02:45:10
tests/joins_test.go,002bf78,Jinzhu,"Fix Join condition with DB, close #4719",107,112,Jinzhu,a16db07,1,2021-09-28 13:43:31,2021-09-07 13:21:44
tests/joins_test.go,3a97639,Jinzhu,"Fix unordered joins, close #3267",101,106,Jinzhu,9a4941b,1,2020-08-23 02:45:10,2020-07-06 01:47:14
tests/joins_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),116,116,kinggo,418c60c,0,2022-01-06 07:02:53,2021-10-09 08:55:45
tests/joins_test.go,d047f85,Adrien Carreira,PR Comments,122,122,Adrien Carreira,52cc438,0,2021-09-06 12:13:20,2021-09-06 12:13:20
tests/joins_test.go,52cc438,Adrien Carreira,JoinsOn unit test + use all primary keys,117,119,Jinzhu,e195292,0,2021-09-06 12:13:20,2020-12-07 02:31:06
tests/joins_test.go,52cc438,Adrien Carreira,JoinsOn unit test + use all primary keys,115,115,Jinzhu,e195292,0,2021-09-06 12:13:20,2020-12-07 02:31:06
tests/joins_test.go,a16db07,Jinzhu,Refactor Join ON,120,120,Adrien Carreira,d047f85,0,2021-09-07 13:21:44,2021-09-06 12:13:20
tests/joins_test.go,52cc438,Adrien Carreira,JoinsOn unit test + use all primary keys,123,124,Jinzhu,e195292,0,2021-09-06 12:13:20,2020-12-07 02:31:06
tests/joins_test.go,52cc438,Adrien Carreira,JoinsOn unit test + use all primary keys,121,121,Jinzhu,e195292,0,2021-09-06 12:13:20,2020-12-07 02:31:06
tests/joins_test.go,52cc438,Adrien Carreira,JoinsOn unit test + use all primary keys,126,127,Jinzhu,e195292,0,2021-09-06 12:13:20,2020-12-07 02:31:06
tests/joins_test.go,a16db07,Jinzhu,Refactor Join ON,128,128,Jinzhu,e195292,0,2021-09-07 13:21:44,2020-12-07 02:31:06
tests/joins_test.go,5b1d3e4,Jinzhu,Test Joins,113,114,,,0,2020-05-31 12:21:52,
tests/joins_test.go,a16db07,Jinzhu,Refactor Join ON,125,125,Adrien Carreira,52cc438,0,2021-09-07 13:21:44,2021-09-06 12:13:20
tests/joins_test.go,52cc438,Adrien Carreira,JoinsOn unit test + use all primary keys,129,129,Jinzhu,e195292,0,2021-09-06 12:13:20,2020-12-07 02:31:06
tests/joins_test.go,5b1d3e4,Jinzhu,Test Joins,136,137,,,0,2020-05-31 12:21:52,
tests/joins_test.go,5b1d3e4,Jinzhu,Test Joins,141,146,,,0,2020-05-31 12:21:52,
tests/joins_test.go,e26abb8,Jinzhu,Test block global update/delete,138,140,,,0,2020-05-31 12:42:07,
tests/joins_test.go,5b1d3e4,Jinzhu,Test Joins,158,158,,,0,2020-05-31 12:21:52,
tests/joins_test.go,418c60c,kinggo,fixed: clauseSelect.Columns missed when use Join And execute multiple query. (#4757),162,162,Jinzhu,002bf78,1,2021-10-09 08:55:45,2021-09-28 13:43:31
tests/joins_test.go,5b1d3e4,Jinzhu,Test Joins,160,161,,,0,2020-05-31 12:21:52,
tests/joins_test.go,e26abb8,Jinzhu,Test block global update/delete,159,159,,,0,2020-05-31 12:42:07,
tests/joins_test.go,418c60c,kinggo,fixed: clauseSelect.Columns missed when use Join And execute multiple query. (#4757),179,188,Jinzhu,002bf78,1,2021-10-09 08:55:45,2021-09-28 13:43:31
tests/joins_test.go,52cc438,Adrien Carreira,JoinsOn unit test + use all primary keys,131,135,Jinzhu,8bb05a5,0,2021-09-06 12:13:20,2020-06-02 02:50:38
tests/joins_test.go,9c4070e,贾一饼,fix: AfterQuery should clear FROM Clause's Joins rather than the Statement (#7027),189,189,Cr,407beda,1,2024-06-12 09:51:44,2023-04-26 14:19:32
tests/joins_test.go,c0bea44,li-jin-gou,fix: omit not work when use join (#5034),163,178,kinggo,b47cf57,1,2022-01-28 14:16:42,2022-01-06 07:02:53
tests/joins_test.go,e26abb8,Jinzhu,Test block global update/delete,148,157,,,0,2020-05-31 12:42:07,
tests/joins_test.go,9c4070e,贾一饼,fix: AfterQuery should clear FROM Clause's Joins rather than the Statement (#7027),202,205,Cr,407beda,1,2024-06-12 09:51:44,2023-04-26 14:19:32
tests/joins_test.go,418c60c,kinggo,fixed: clauseSelect.Columns missed when use Join And execute multiple query. (#4757),195,201,,,1,2021-10-09 08:55:45,
tests/joins_test.go,418c60c,kinggo,fixed: clauseSelect.Columns missed when use Join And execute multiple query. (#4757),206,206,,,1,2021-10-09 08:55:45,
tests/joins_test.go,1935eb0,Cr,"feat: support inner join (#5583)  * feat: support inner join  * test: mixed inner join and left join  * chore: code comment  * Update statement.go  Co-authored-by: Jinzhu <wosmvp@gmail.com>",237,258,Cr,b2f4252,0,2022-12-24 04:27:38,2022-11-02 02:28:00
tests/joins_test.go,d047f85,Adrien Carreira,PR Comments,130,130,Jinzhu,5b1d3e4,0,2021-09-06 12:13:20,2020-05-31 12:21:52
tests/joins_test.go,a3cc6c6,Stephano George,"Fix: wrong value when Find with Join with same column name, close #5723, #5711",259,288,Filippo Del Moro,6aa6d37,1,2022-09-30 09:18:42,2022-04-13 07:47:04
tests/joins_test.go,9a4941b,Jinzhu,Test Order/GroupBy,147,147,,,0,2020-07-06 01:47:14,
tests/joins_test.go,c2e36eb,chenrui,"fix: soft delete for join, close #5132  commit a83023bdfc0dc6eaccc6704b64ff6436c2fe7725 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 01:05:25 2022 +0800      Refactor #5132  commit 8559f51102c01be6c19913c0bc3a5771721ff1f5 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 20:33:12 2022 +0800      fix: should add deleted_at exprs for every joins  commit 2b7a1bdcf3eff9d23253173d21e73c1f056f9be4 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 14:46:48 2022 +0800      test: move debug flag  commit ce13a2a7bc50d2c23678806acf65dbd589827c77 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 14:39:56 2022 +0800      fix: soft delete for join.on",207,208,li-jin-gou,c0bea44,1,2022-03-17 17:09:20,2022-01-28 14:16:42
tests/joins_test.go,b2f4252,Cr,"fix(Joins): args with select and omit (#5790)  * fix(Joins): args with select and omit  * chore: gofumpt style",289,331,Stephano George,a3cc6c6,1,2022-11-02 02:28:00,2022-09-30 09:18:42
tests/joins_test.go,c2e36eb,chenrui,"fix: soft delete for join, close #5132  commit a83023bdfc0dc6eaccc6704b64ff6436c2fe7725 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 01:05:25 2022 +0800      Refactor #5132  commit 8559f51102c01be6c19913c0bc3a5771721ff1f5 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 20:33:12 2022 +0800      fix: should add deleted_at exprs for every joins  commit 2b7a1bdcf3eff9d23253173d21e73c1f056f9be4 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 14:46:48 2022 +0800      test: move debug flag  commit ce13a2a7bc50d2c23678806acf65dbd589827c77 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 14:39:56 2022 +0800      fix: soft delete for join.on",209,235,li-jin-gou,c0bea44,1,2022-03-17 17:09:20,2022-01-28 14:16:42
tests/joins_test.go,a3cc6c6,Stephano George,"Fix: wrong value when Find with Join with same column name, close #5723, #5711",236,236,Filippo Del Moro,6aa6d37,1,2022-09-30 09:18:42,2022-04-13 07:47:04
tests/joins_test.go,407beda,Cr,fix: nested joins alias (#6265),336,348,Cr,8bf1f26,1,2023-04-26 14:19:32,2023-03-10 09:21:56
tests/joins_test.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",371,406,Cr,1935eb0,1,2023-03-10 09:21:56,2022-12-24 04:27:38
tests/joins_test.go,05167fd,Emilien,fix: use reflect.Append when preloading nested associations (#7014)  Co-authored-by: Emilien Kofman <emilien.kofman@miimosa.com>,407,472,贾一饼,9c4070e,1,2024-06-12 10:52:33,2024-06-12 09:51:44
tests/joins_test.go,05167fd,Emilien,fix: use reflect.Append when preloading nested associations (#7014)  Co-authored-by: Emilien Kofman <emilien.kofman@miimosa.com>,474,478,贾一饼,9c4070e,1,2024-06-12 10:52:33,2024-06-12 09:51:44
tests/joins_test.go,79bf7f9,Jinzhu,fix CI for sqlserver,473,473,Emilien,05167fd,1,2024-06-17 03:58:13,2024-06-12 10:52:33
tests/joins_test.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",349,369,Cr,1935eb0,1,2023-03-10 09:21:56,2022-12-24 04:27:38
tests/joins_test.go,407beda,Cr,fix: nested joins alias (#6265),370,370,Cr,1935eb0,1,2023-04-26 14:19:32,2022-12-24 04:27:38
tests/joins_test.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",332,335,Cr,1935eb0,1,2023-03-10 09:21:56,2022-12-24 04:27:38
tests/joins_test.go,418c60c,kinggo,fixed: clauseSelect.Columns missed when use Join And execute multiple query. (#4757),190,194,,,1,2021-10-09 08:55:45,
tests/lru_test.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,1,561,,,0,2025-04-25 08:22:26,
tests/main_test.go,e26abb8,Jinzhu,Test block global update/delete,48,53,Jinzhu,5457fe8,0,2020-05-31 12:42:07,2020-05-31 10:51:43
tests/main_test.go,5457fe8,Jinzhu,Test Transactions,1,5,Jinzhu,2ca4e91,0,2020-05-31 10:51:43,2020-05-23 10:38:55
tests/main_test.go,e26abb8,Jinzhu,Test block global update/delete,42,45,Jinzhu,5457fe8,0,2020-05-31 12:42:07,2020-05-31 10:51:43
tests/main_test.go,8bb05a5,Jinzhu,Refactor tests files,6,6,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/main_test.go,5457fe8,Jinzhu,Test Transactions,7,9,Jinzhu,2ca4e91,0,2020-05-31 10:51:43,2020-05-23 10:38:55
tests/main_test.go,8ce2dd5,Jinzhu,Update test script,10,13,Jinzhu,94685d1,0,2020-06-24 11:09:19,2020-06-02 15:30:26
tests/main_test.go,5457fe8,Jinzhu,Test Transactions,14,41,Jinzhu,2ca4e91,0,2020-05-31 10:51:43,2020-05-23 10:38:55
tests/main_test.go,9a4d10b,Jin,style: fix coding typo (#5184),46,47,Jinzhu,6b92bca,1,2022-03-24 01:31:58,2020-07-01 11:49:04
statement.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",1,3,,,0,2020-01-29 11:22:44,
statement.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",7,7,,,0,2020-01-29 11:22:44,
statement.go,6312d86,Jinzhu,Support specify select/omit columns with table,9,9,heige,e3fc49a,0,2021-10-08 09:51:27,2021-10-08 03:16:58
statement.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",4,5,,,0,2020-01-29 11:22:44,
statement.go,85bfd17,Jinzhu,Implement build conditions,6,6,,,0,2020-01-29 19:03:06,
statement.go,4e066c9,Jinzhu,Test Or,10,10,,,0,2020-07-05 04:23:45,
statement.go,fa22807,Jinzhu,Make inesrt into db works,8,8,,,0,2020-02-23 11:41:29,
statement.go,85bfd17,Jinzhu,Implement build conditions,11,11,,,0,2020-01-29 19:03:06,
statement.go,e986371,Jinzhu,Rename package name,17,17,,,0,2020-06-02 01:18:01,
statement.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",12,14,,,0,2020-01-29 11:22:44,
statement.go,f6117b7,Jinzhu,"Should not diplay SubQuery SQL log, close #3437",16,16,,,0,2020-09-09 08:26:16,
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",18,18,,,0,2020-06-30 08:53:54,
statement.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,23,23,,,0,2020-03-10 00:39:33,
statement.go,e986371,Jinzhu,Rename package name,15,15,,,0,2020-06-02 01:18:01,
statement.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",19,22,,,0,2020-01-29 11:22:44,
statement.go,de764d9,Jinzhu,Replace FullTable with TableExpr,24,24,,,0,2020-07-17 13:19:21,
statement.go,5507421,Jinzhu,Add SoftDelete support,27,27,,,0,2020-05-28 23:35:45,
statement.go,1403ee7,Jinzhu,Make Query works,28,30,,,0,2020-03-03 06:18:12,
statement.go,1403ee7,Jinzhu,Make Query works,25,26,,,0,2020-03-03 06:18:12,
statement.go,6951be0,Jinzhu,Allow customize clauses,31,31,Jinzhu,d327926,0,2021-04-28 09:19:30,2021-04-19 13:37:38
statement.go,eda2f02,Jinzhu,Add Distinct support,32,32,,,0,2020-06-05 11:19:12,
statement.go,3a97639,Jinzhu,"Fix unordered joins, close #3267",36,36,,,1,2020-08-23 02:45:10,
statement.go,1403ee7,Jinzhu,Make Query works,38,38,,,0,2020-03-03 06:18:12,
statement.go,11c4331,molon,"feat: add MapColumns method (#6901)  * add MapColumns method  * fix MapColumns desc  * add TestMapColumns",33,35,Jinzhu,940358e,1,2024-06-24 09:42:59,2024-01-12 08:42:21
statement.go,50aa9be,Jinzhu,Add joins support,37,37,,,0,2020-04-15 01:45:43,
statement.go,1403ee7,Jinzhu,Make Query works,40,40,,,0,2020-03-03 06:18:12,
statement.go,a145d7e,Jinzhu,Refactor structure,39,39,,,0,2020-03-09 06:25:50,
statement.go,3aa1891,Jinzhu,Add sync pool,44,45,,,0,2020-03-09 07:32:55,
statement.go,9df9f76,Jinzhu,Change UpdatingColumn to SkipHooks,43,43,,,0,2020-11-17 09:49:43,
statement.go,1403ee7,Jinzhu,Make Query works,42,42,,,0,2020-03-03 06:18:12,
statement.go,a145d7e,Jinzhu,Refactor structure,41,41,,,0,2020-03-09 06:25:50,
statement.go,ac8708b,Jinzhu,Add FirstOrInit support,47,48,,,0,2020-05-28 05:12:56,
statement.go,929c0c5,Jinzhu,Test Hooks For Slice,46,46,,,0,2020-06-30 14:47:21,
statement.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",50,51,,,0,2020-01-29 11:22:44,
statement.go,828e6b6,Jinzhu,Lazy call registered scopes,49,49,Jinzhu,79225bf,0,2021-02-25 10:49:01,2021-02-18 02:53:29
statement.go,3a97639,Jinzhu,"Fix unordered joins, close #3267",52,52,,,1,2020-08-23 02:45:10,
statement.go,af080e6,Jinzhu,Fix primary key tag,61,63,,,1,2020-03-12 00:39:42,
statement.go,3a97639,Jinzhu,"Fix unordered joins, close #3267",59,60,,,1,2020-08-23 02:45:10,
statement.go,9d5b983,Jinzhu,Refactor builder,64,65,,,0,2020-01-30 11:47:00,
statement.go,504f427,Jinzhu,Refactor clause Writer,67,68,,,0,2020-03-09 09:07:00,
statement.go,363f9b7,heyanfu,golint standard (#4421),66,66,Jinzhu,ea1bce3,0,2021-05-31 02:08:06,2021-05-23 03:21:56
statement.go,1935eb0,Cr,"feat: support inner join (#5583)  * feat: support inner join  * test: mixed inner join and left join  * chore: code comment  * Update statement.go  Co-authored-by: Jinzhu <wosmvp@gmail.com>",53,58,Cr,b2f4252,0,2022-12-24 04:27:38,2022-11-02 02:28:00
statement.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",69,70,,,0,2020-01-29 11:22:44,
statement.go,504f427,Jinzhu,Refactor clause Writer,72,72,,,0,2020-03-09 09:07:00,
statement.go,9d5b983,Jinzhu,Refactor builder,73,75,,,0,2020-01-30 11:47:00,
statement.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",79,80,,,0,2020-01-29 11:22:44,
statement.go,4456df7,Jinzhu,Lint with golangci-lint,77,77,,,0,2020-07-16 03:27:12,
statement.go,078ba75,Jinzhu,Add QuoteTo method,76,76,,,0,2020-03-08 15:30:16,
statement.go,078ba75,Jinzhu,Add QuoteTo method,81,81,,,0,2020-03-08 15:30:16,
statement.go,aaf0725,Jinzhu,Refactor for performance,82,82,,,0,2020-06-08 09:21:26,
statement.go,078ba75,Jinzhu,Add QuoteTo method,78,78,,,0,2020-03-08 15:30:16,
statement.go,851fea0,River,"fix: QuoteTo not fully support raw mode (#4735)  * fix: QuoteTo not fully support raw mode  * fix: table alias without AS  * test: clause.Column/Table quote test  * fix: revert table alias quote",97,97,Jinzhu,a16db07,1,2021-09-29 06:02:35,2021-09-07 13:21:44
statement.go,d833efe,Jinzhu,Work on clauses,91,92,,,0,2020-02-02 11:11:17,
statement.go,de764d9,Jinzhu,Replace FullTable with TableExpr,94,95,,,0,2020-07-17 13:19:21,
statement.go,d4b462a,Jinzhu,"Fix alias keyword with Table, close #3104",96,96,,,1,2020-07-10 13:11:28,
statement.go,1f38ec4,Jinzhu,Finish clauses tests,93,93,,,0,2020-02-08 15:23:45,
statement.go,d4b462a,Jinzhu,"Fix alias keyword with Table, close #3104",98,98,,,1,2020-07-10 13:11:28,
statement.go,851fea0,River,"fix: QuoteTo not fully support raw mode (#4735)  * fix: QuoteTo not fully support raw mode  * fix: table alias without AS  * test: clause.Column/Table quote test  * fix: revert table alias quote",83,90,Jinzhu,a16db07,1,2021-09-29 06:02:35,2021-09-07 13:21:44
statement.go,851fea0,River,"fix: QuoteTo not fully support raw mode (#4735)  * fix: QuoteTo not fully support raw mode  * fix: table alias without AS  * test: clause.Column/Table quote test  * fix: revert table alias quote",100,100,Jinzhu,a16db07,1,2021-09-29 06:02:35,2021-09-07 13:21:44
statement.go,9d19be0,Jinzhu,Setup clauses tests,101,101,,,0,2020-02-04 01:51:19,
statement.go,46b1c85,Jinzhu,Add more clauses,102,102,,,0,2020-02-04 00:56:15,
statement.go,677edf9,Jinzhu,"ignore AS when alias table as it doesn't work on oracle db, close #3328",104,104,,,0,2020-08-29 14:09:07,
statement.go,9d19be0,Jinzhu,Setup clauses tests,99,99,,,0,2020-02-04 01:51:19,
statement.go,d833efe,Jinzhu,Work on clauses,103,103,,,0,2020-02-02 11:11:17,
statement.go,363f9b7,heyanfu,golint standard (#4421),71,71,,,0,2021-05-31 02:08:06,
statement.go,851fea0,River,"fix: QuoteTo not fully support raw mode (#4735)  * fix: QuoteTo not fully support raw mode  * fix: table alias without AS  * test: clause.Column/Table quote test  * fix: revert table alias quote",105,105,Jinzhu,a16db07,1,2021-09-29 06:02:35,2021-09-07 13:21:44
statement.go,d833efe,Jinzhu,Work on clauses,106,108,,,0,2020-02-02 11:11:17,
statement.go,46b1c85,Jinzhu,Add more clauses,113,113,,,0,2020-02-04 00:56:15,
statement.go,46b1c85,Jinzhu,Add more clauses,109,109,,,0,2020-02-04 00:56:15,
statement.go,46b1c85,Jinzhu,Add more clauses,111,111,,,0,2020-02-04 00:56:15,
statement.go,46b1c85,Jinzhu,Add more clauses,117,117,,,0,2020-02-04 00:56:15,
statement.go,078ba75,Jinzhu,Add QuoteTo method,114,114,,,0,2020-03-08 15:30:16,
statement.go,d833efe,Jinzhu,Work on clauses,115,116,,,0,2020-02-02 11:11:17,
statement.go,851fea0,River,"fix: QuoteTo not fully support raw mode (#4735)  * fix: QuoteTo not fully support raw mode  * fix: table alias without AS  * test: clause.Column/Table quote test  * fix: revert table alias quote",110,110,Jinzhu,a16db07,1,2021-09-29 06:02:35,2021-09-07 13:21:44
statement.go,69d8111,Jinzhu,"Fix panic when using invalid data, close #3193",118,118,,,1,2020-07-24 00:32:50,
statement.go,f4cfa94,Qt,define err with the same code style (#3199),119,119,,,0,2020-07-26 02:03:58,
statement.go,69d8111,Jinzhu,"Fix panic when using invalid data, close #3193",120,120,,,1,2020-07-24 00:32:50,
statement.go,669ce48,Jinzhu,Fix order by primary key if it is not defined,122,122,,,1,2020-06-02 03:30:21,
statement.go,851fea0,River,"fix: QuoteTo not fully support raw mode (#4735)  * fix: QuoteTo not fully support raw mode  * fix: table alias without AS  * test: clause.Column/Table quote test  * fix: revert table alias quote",121,121,Jinzhu,a16db07,1,2021-09-29 06:02:35,2021-09-07 13:21:44
statement.go,878ac51,Cr,"fix:throw model value required error (#6031)  * fix:throw model value required error  * chore:ingore typecheck  * chore:ingore errcheck  * refactor: use other error  * chore: gofumpt style",124,125,chyroc,e1f46eb,1,2023-02-08 05:40:41,2023-02-02 09:54:51
statement.go,851fea0,River,"fix: QuoteTo not fully support raw mode (#4735)  * fix: QuoteTo not fully support raw mode  * fix: table alias without AS  * test: clause.Column/Table quote test  * fix: revert table alias quote",123,123,Jinzhu,a16db07,1,2021-09-29 06:02:35,2021-09-07 13:21:44
statement.go,46b1c85,Jinzhu,Add more clauses,126,127,,,0,2020-02-04 00:56:15,
statement.go,851fea0,River,"fix: QuoteTo not fully support raw mode (#4735)  * fix: QuoteTo not fully support raw mode  * fix: table alias without AS  * test: clause.Column/Table quote test  * fix: revert table alias quote",128,128,Jinzhu,a16db07,1,2021-09-29 06:02:35,2021-09-07 13:21:44
statement.go,0160bab,Jinzhu,Add clause tests,130,130,,,0,2020-02-05 10:28:58,
statement.go,078ba75,Jinzhu,Add QuoteTo method,132,132,,,0,2020-03-08 15:30:16,
statement.go,d833efe,Jinzhu,Work on clauses,131,131,,,0,2020-02-02 11:11:17,
statement.go,46b1c85,Jinzhu,Add more clauses,129,129,,,0,2020-02-04 00:56:15,
statement.go,d833efe,Jinzhu,Work on clauses,134,134,,,0,2020-02-02 11:11:17,
statement.go,f7f6335,Jinzhu,"Fix tests with mysql, postgres",146,147,,,1,2020-03-12 05:05:22,
statement.go,2ae0653,Jinzhu,"Fix ambiguous column when using same column name in join table, close #3120",135,138,,,1,2020-07-09 01:03:48,
statement.go,2ae0653,Jinzhu,"Fix ambiguous column when using same column name in join table, close #3120",140,143,,,1,2020-07-09 01:03:48,
statement.go,aaf0725,Jinzhu,Refactor for performance,151,151,,,0,2020-06-08 09:21:26,
statement.go,b549f9b,Jinzhu,Implement preload support,148,150,,,0,2020-05-14 04:19:12,
statement.go,b549f9b,Jinzhu,Implement preload support,153,156,,,0,2020-05-14 04:19:12,
statement.go,d833efe,Jinzhu,Work on clauses,157,157,,,0,2020-02-02 11:11:17,
statement.go,851fea0,River,"fix: QuoteTo not fully support raw mode (#4735)  * fix: QuoteTo not fully support raw mode  * fix: table alias without AS  * test: clause.Column/Table quote test  * fix: revert table alias quote",112,112,,,1,2021-09-29 06:02:35,
statement.go,078ba75,Jinzhu,Add QuoteTo method,158,158,,,0,2020-03-08 15:30:16,
statement.go,d833efe,Jinzhu,Work on clauses,159,159,,,0,2020-02-02 11:11:17,
statement.go,078ba75,Jinzhu,Add QuoteTo method,160,160,,,0,2020-03-08 15:30:16,
statement.go,d833efe,Jinzhu,Work on clauses,161,161,,,0,2020-02-02 11:11:17,
statement.go,aaf0725,Jinzhu,Refactor for performance,163,163,,,0,2020-06-08 09:21:26,
statement.go,078ba75,Jinzhu,Add QuoteTo method,164,166,,,0,2020-03-08 15:30:16,
statement.go,9d5b983,Jinzhu,Refactor builder,167,168,,,0,2020-01-30 11:47:00,
statement.go,504f427,Jinzhu,Refactor clause Writer,170,170,,,0,2020-03-09 09:07:00,
statement.go,85bfd17,Jinzhu,Implement build conditions,171,172,,,0,2020-01-29 19:03:06,
statement.go,363f9b7,heyanfu,golint standard (#4421),169,169,Jinzhu,9fccb17,0,2021-05-31 02:08:06,2021-03-10 11:46:59
statement.go,1f38ec4,Jinzhu,Finish clauses tests,176,177,,,0,2020-02-08 15:23:45,
statement.go,078ba75,Jinzhu,Add QuoteTo method,162,162,,,0,2020-03-08 15:30:16,
statement.go,504f427,Jinzhu,Refactor clause Writer,173,173,,,0,2020-03-09 09:07:00,
statement.go,bba569a,Jinzhu,Add NamedArg support,178,178,,,0,2020-07-10 04:28:24,
statement.go,85bfd17,Jinzhu,Implement build conditions,174,175,,,0,2020-01-29 19:03:06,
statement.go,6d58b62,Jinzhu,Add sqlite migration tests,179,179,,,0,2020-02-22 12:57:29,
statement.go,ce8853e,Jinzhu,Add GormValuer interface support,181,181,,,0,2020-08-27 07:03:57,
statement.go,2990790,Mikhail Faraponov,Use WriteByte for single byte operations (#5167)  Co-authored-by: Mikhail Faraponov <mikefaraponov@Mikhails-MacBook-Pro.local>,139,139,heyanfu,363f9b7,0,2022-03-17 14:54:30,2021-05-31 02:08:06
statement.go,45e804d,Jinzhu,Fix call valuer interface when using nil value,182,187,Jinzhu,b8f33a4,1,2021-11-29 08:19:11,2021-11-23 09:11:52
statement.go,504f427,Jinzhu,Refactor clause Writer,180,180,,,0,2020-03-09 09:07:00,
statement.go,1f38ec4,Jinzhu,Finish clauses tests,200,200,,,0,2020-02-08 15:23:45,
statement.go,07960fe,Jinzhu,Fix []byte support,197,199,,,1,2020-06-18 03:24:08,
statement.go,25f561a,River,"feat: QuoteTo accept clause.Expr (#4621)  * feat: QuoteTo accept clause.Expr  * test: update Expr build test",144,145,,,0,2021-08-19 06:33:18,
statement.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",194,196,,,0,2020-05-30 13:05:27,
statement.go,1f38ec4,Jinzhu,Finish clauses tests,201,201,,,0,2020-02-08 15:23:45,
statement.go,504f427,Jinzhu,Refactor clause Writer,202,202,,,0,2020-03-09 09:07:00,
statement.go,3f20a54,Jinzhu,Support use clause.Interface as query params,188,191,Jiepeng Cao,b3eb1c8,0,2022-10-18 10:01:55,2022-09-05 07:39:19
statement.go,851fea0,River,"fix: QuoteTo not fully support raw mode (#4735)  * fix: QuoteTo not fully support raw mode  * fix: table alias without AS  * test: clause.Column/Table quote test  * fix: revert table alias quote",133,133,,,1,2021-09-29 06:02:35,
statement.go,504f427,Jinzhu,Refactor clause Writer,203,204,,,0,2020-03-09 09:07:00,
statement.go,85bfd17,Jinzhu,Implement build conditions,205,205,,,0,2020-01-29 19:03:06,
statement.go,85bfd17,Jinzhu,Implement build conditions,207,207,,,0,2020-01-29 19:03:06,
statement.go,26504f5,Jinzhu,Use NewDB to replace WithConditions for Session,209,209,,,0,2020-11-17 08:28:37,
statement.go,504f427,Jinzhu,Refactor clause Writer,206,206,,,0,2020-03-09 09:07:00,
statement.go,e490e09,Jinzhu,Add SetupJoinTable support,236,237,,,0,2020-06-01 15:58:22,
statement.go,84ea3ec,Jinzhu,Fix sub query argument order with multiple raw SQL,210,235,,,1,2021-02-09 11:56:45,
statement.go,4e147e1,Jinzhu,Test SubQuery,208,208,,,0,2020-06-01 13:26:23,
statement.go,1f38ec4,Jinzhu,Finish clauses tests,238,238,,,0,2020-02-08 15:23:45,
statement.go,bb68f0d,Jinzhu,Refactor tests,246,259,,,0,2020-05-23 08:08:50,
statement.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",264,264,,,0,2020-01-29 11:22:44,
statement.go,d52ee0a,Jinzhu,Work on create callbacks,265,265,,,0,2020-02-03 02:40:03,
statement.go,bb68f0d,Jinzhu,Refactor tests,239,242,,,0,2020-05-23 08:08:50,
statement.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",260,261,,,0,2020-01-29 11:22:44,
statement.go,af080e6,Jinzhu,Fix primary key tag,266,267,,,1,2020-03-12 00:39:42,
statement.go,6937d71,Jinzhu,Refactor clauses,268,268,,,0,2020-06-06 14:52:08,
statement.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",262,263,,,0,2020-01-29 11:22:44,
statement.go,56bdded,Jinzhu,Fix statement modifier support,269,269,,,1,2020-06-14 04:18:46,
statement.go,56bdded,Jinzhu,Fix statement modifier support,271,271,,,1,2020-06-14 04:18:46,
statement.go,4456df7,Jinzhu,Lint with golangci-lint,270,270,,,0,2020-07-16 03:27:12,
statement.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",275,275,,,0,2020-01-29 11:22:44,
statement.go,6937d71,Jinzhu,Refactor clauses,272,272,,,0,2020-06-06 14:52:08,
statement.go,56bdded,Jinzhu,Fix statement modifier support,273,273,,,1,2020-06-14 04:18:46,
statement.go,85bfd17,Jinzhu,Implement build conditions,276,276,,,0,2020-01-29 19:03:06,
statement.go,9d5b983,Jinzhu,Refactor builder,274,274,,,0,2020-01-30 11:47:00,
statement.go,d52ee0a,Jinzhu,Work on create callbacks,277,278,,,0,2020-02-03 02:40:03,
statement.go,6937d71,Jinzhu,Refactor clauses,279,279,,,0,2020-06-06 14:52:08,
statement.go,1e241aa,Jinzhu,Reduce GC alloc,285,285,,,0,2020-11-10 13:23:20,
statement.go,13f96f7,Douglas Danger Manley,"Spelling fix for ""condtion"" -> ""condition"" (#3042)  This fixes a spelling error in the word ""condition""; in particular, the `BuildCondtion` function should be named `BuildCondition`.",284,284,,,1,2020-06-08 03:38:51,
statement.go,bba569a,Jinzhu,Add NamedArg support,286,286,,,0,2020-07-10 04:28:24,
statement.go,1f38ec4,Jinzhu,Finish clauses tests,280,280,,,0,2020-02-08 15:23:45,
statement.go,d52ee0a,Jinzhu,Work on create callbacks,281,283,,,0,2020-02-03 02:40:03,
statement.go,dffc271,Jinzhu,Add mores tests for query,287,287,,,0,2020-06-01 02:54:32,
statement.go,1e241aa,Jinzhu,Reduce GC alloc,290,290,,,0,2020-11-10 13:23:20,
statement.go,bba569a,Jinzhu,Add NamedArg support,295,295,,,0,2020-07-10 04:28:24,
statement.go,bba569a,Jinzhu,Add NamedArg support,288,289,,,0,2020-07-10 04:28:24,
statement.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,294,294,,,0,2020-06-05 15:26:56,
statement.go,bba569a,Jinzhu,Add NamedArg support,299,300,,,0,2020-07-10 04:28:24,
statement.go,cec0d32,Jinzhu,Support use clause.Expression as argument,192,193,,,0,2022-01-28 10:48:32,
statement.go,e3fc49a,heige,feat: ajust PreparedStmtDB unlock location and BuildCondition if logic (#4681),296,298,,,0,2021-10-08 03:16:58,
statement.go,bba569a,Jinzhu,Add NamedArg support,309,309,,,0,2020-07-10 04:28:24,
statement.go,a0d6ff1,piyongcai,"time.Time, []byte type add alias support. (rebase master) (#4992)  * time.Time, []byte type add alias support  * reformat",243,245,,,0,2022-01-12 05:11:40,
statement.go,85bfd17,Jinzhu,Implement build conditions,311,313,,,0,2020-01-29 19:03:06,
statement.go,dffc271,Jinzhu,Add mores tests for query,310,310,,,0,2020-06-01 02:54:32,
statement.go,1e241aa,Jinzhu,Reduce GC alloc,314,314,,,0,2020-11-10 13:23:20,
statement.go,e1f46eb,chyroc,fix: ignore nil query (#6021),317,319,Jinzhu,3d35ddb,1,2023-02-02 09:54:51,2023-01-12 08:52:56
statement.go,85bfd17,Jinzhu,Implement build conditions,315,315,,,0,2020-01-29 19:03:06,
statement.go,1b8cb07,Jinzhu,Allow Where select fields when searching with struct,316,316,,,0,2020-12-30 10:13:52,
statement.go,e3fc49a,heige,feat: ajust PreparedStmtDB unlock location and BuildCondition if logic (#4681),308,308,Jinzhu,ddeb143,0,2021-10-08 03:16:58,2021-02-25 14:01:59
statement.go,9d5b983,Jinzhu,Refactor builder,325,325,,,0,2020-01-30 11:47:00,
statement.go,85bfd17,Jinzhu,Implement build conditions,320,324,,,0,2020-01-29 19:03:06,
statement.go,3d8f6f9,Jinzhu,Test GroupConditions,327,327,,,0,2020-06-19 17:55:30,
statement.go,ac8708b,Jinzhu,Add FirstOrInit support,326,326,,,0,2020-05-28 05:12:56,
statement.go,4b0da0e,black-06,"fix cond in scopes (#6152)  * fix cond in scopes  * replace quote  * fix execute scopes",328,328,Cr,878ac51,1,2023-04-11 04:01:23,2023-02-08 05:40:41
statement.go,940358e,Jinzhu,Fix tests doesn't follow https://gorm.io/docs/method_chaining.html convention,330,330,Stephano George,436cca7,1,2024-01-12 08:42:21,2023-12-23 13:19:41
statement.go,3d8f6f9,Jinzhu,Test GroupConditions,331,331,,,0,2020-06-19 17:55:30,
statement.go,35ebfe6,Jinzhu,Support group conditions with single OR condition,332,333,,,0,2021-01-20 10:24:05,
statement.go,35ebfe6,Jinzhu,Support group conditions with single OR condition,335,336,,,0,2021-01-20 10:24:05,
statement.go,e3fc49a,heige,feat: ajust PreparedStmtDB unlock location and BuildCondition if logic (#4681),301,302,,,0,2021-10-08 03:16:58,
statement.go,3d8f6f9,Jinzhu,Test GroupConditions,337,337,,,0,2020-06-19 17:55:30,
statement.go,0348b1d,Shubhendra Singh Chauhan,"chore: improve code quality (#4123)  * Combine multiple `append`s into a single call  * Clean up copied struct fields with type conversion  * Remove unnecessary use of slice",334,334,,,0,2021-03-08 02:46:43,
statement.go,940358e,Jinzhu,Fix tests doesn't follow https://gorm.io/docs/method_chaining.html convention,338,338,Stephano George,436cca7,1,2024-01-12 08:42:21,2023-12-23 13:19:41
statement.go,85bfd17,Jinzhu,Implement build conditions,342,342,,,0,2020-01-29 19:03:06,
statement.go,e3fc49a,heige,feat: ajust PreparedStmtDB unlock location and BuildCondition if logic (#4681),291,293,,,0,2021-10-08 03:16:58,
statement.go,85bfd17,Jinzhu,Implement build conditions,343,343,,,0,2020-01-29 19:03:06,
statement.go,ac8708b,Jinzhu,Add FirstOrInit support,344,344,,,0,2020-05-28 05:12:56,
statement.go,3d8f6f9,Jinzhu,Test GroupConditions,339,341,,,0,2020-06-19 17:55:30,
statement.go,85bfd17,Jinzhu,Implement build conditions,345,345,,,0,2020-01-29 19:03:06,
statement.go,b8f33a4,Jinzhu,Add unused argument (#4871)  * Append unused argument to gorm statement,303,307,,,0,2021-11-23 09:11:52,
statement.go,85bfd17,Jinzhu,Implement build conditions,346,346,,,0,2020-01-29 19:03:06,
statement.go,4e066c9,Jinzhu,Test Or,348,354,,,0,2020-07-05 04:23:45,
statement.go,85bfd17,Jinzhu,Implement build conditions,356,356,,,0,2020-01-29 19:03:06,
statement.go,85bfd17,Jinzhu,Implement build conditions,355,355,,,0,2020-01-29 19:03:06,
statement.go,4e066c9,Jinzhu,Test Or,358,364,,,0,2020-07-05 04:23:45,
statement.go,5228735,Jinzhu,"Don't build IN condition if value implemented Valuer interface, #3517",367,371,,,0,2020-09-24 07:00:13,
statement.go,1a2fabb,Jinzhu,Test Not,365,366,,,0,2020-07-05 03:56:12,
statement.go,1a2fabb,Jinzhu,Test Not,378,378,,,0,2020-07-05 03:56:12,
statement.go,5228735,Jinzhu,"Don't build IN condition if value implemented Valuer interface, #3517",376,377,,,0,2020-09-24 07:00:13,
statement.go,5228735,Jinzhu,"Don't build IN condition if value implemented Valuer interface, #3517",379,380,,,0,2020-09-24 07:00:13,
statement.go,1a2fabb,Jinzhu,Test Not,381,381,,,0,2020-07-05 03:56:12,
statement.go,4e066c9,Jinzhu,Test Or,382,382,,,0,2020-07-05 04:23:45,
statement.go,1a2fabb,Jinzhu,Test Not,383,383,,,0,2020-07-05 03:56:12,
statement.go,85bfd17,Jinzhu,Implement build conditions,385,385,,,0,2020-01-29 19:03:06,
statement.go,85bfd17,Jinzhu,Implement build conditions,384,384,,,0,2020-01-29 19:03:06,
statement.go,15a46bc,Chris Faulkner,Fix some typos (#4294),372,372,,,1,2021-04-19 13:03:39,
statement.go,2990790,Mikhail Faraponov,Use WriteByte for single byte operations (#5167)  Co-authored-by: Mikhail Faraponov <mikefaraponov@Mikhails-MacBook-Pro.local>,152,152,,,0,2022-03-17 14:54:30,
statement.go,74e7a9c,heige,"Optimize reflect value length and method (#4280)  * Respect ignore migration when add column (#4276)  continue https://github.com/go-gorm/gorm/pull/4028  * feat: Optimal value type acquisition for v (#4278)  * feat: optimize relect value length and value  * feat: optimize ConvertSliceOfMapToValuesForCreate method  Co-authored-by: yrong1997 <yrong1997@gmail.com>",373,375,,,0,2021-04-14 05:00:54,
statement.go,9fccb17,Jinzhu,"Fix double pointer for where conditions, close #4159",387,390,,,1,2021-03-10 11:46:59,
statement.go,53b3ebd,Jinzhu,Add invalid data error when building conditions,386,386,,,1,2021-01-05 13:01:16,
statement.go,53b3ebd,Jinzhu,Add invalid data error when building conditions,399,400,,,1,2021-01-05 13:01:16,
statement.go,53b3ebd,Jinzhu,Add invalid data error when building conditions,391,396,,,1,2021-01-05 13:01:16,
statement.go,00a785c,Jinzhu,"Don't use invalid value to build conditions, close #3912",401,401,,,0,2021-01-05 10:01:51,
statement.go,53b3ebd,Jinzhu,Add invalid data error when building conditions,402,406,,,1,2021-01-05 13:01:16,
statement.go,ac8708b,Jinzhu,Add FirstOrInit support,397,398,,,0,2020-05-28 05:12:56,
statement.go,dca5244,Jinzhu,Add FirstOrCreate support,418,418,,,0,2020-05-28 08:21:10,
statement.go,1b8cb07,Jinzhu,Allow Where select fields when searching with struct,419,420,,,0,2020-12-30 10:13:52,
statement.go,53b3ebd,Jinzhu,Add invalid data error when building conditions,408,417,,,1,2021-01-05 13:01:16,
statement.go,2c4e857,Jinzhu,Should ignore association conditions when querying with struct,422,422,,,0,2020-08-13 10:09:04,
statement.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",407,407,Jinzhu,df23650,1,2022-02-19 09:02:53,2022-02-09 09:23:16
statement.go,3cd81ff,Jinzhu,"Fix query with specified table and conditions, close #3382",423,423,,,1,2020-09-03 10:42:32,
statement.go,3cd81ff,Jinzhu,"Fix query with specified table and conditions, close #3382",425,425,,,1,2020-09-03 10:42:32,
statement.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),347,347,,,0,2022-01-06 07:02:53,
statement.go,dca5244,Jinzhu,Add FirstOrCreate support,427,427,,,0,2020-05-28 08:21:10,
statement.go,ac8708b,Jinzhu,Add FirstOrInit support,428,429,,,0,2020-05-28 05:12:56,
statement.go,9bfe306,Jinzhu,Only query with readable fields,426,426,,,0,2020-06-27 00:04:12,
statement.go,53b3ebd,Jinzhu,Add invalid data error when building conditions,430,440,,,1,2021-01-05 13:01:16,
statement.go,1a2fabb,Jinzhu,Test Not,441,441,,,0,2020-07-05 03:56:12,
statement.go,2c4e857,Jinzhu,Should ignore association conditions when querying with struct,424,424,,,0,2020-08-13 10:09:04,
statement.go,53b3ebd,Jinzhu,Add invalid data error when building conditions,446,446,,,1,2021-01-05 13:01:16,
statement.go,1a2fabb,Jinzhu,Test Not,447,448,,,0,2020-07-05 03:56:12,
statement.go,940358e,Jinzhu,Fix tests doesn't follow https://gorm.io/docs/method_chaining.html convention,451,451,Stephano George,436cca7,1,2024-01-12 08:42:21,2023-12-23 13:19:41
statement.go,15a46bc,Chris Faulkner,Fix some typos (#4294),442,442,,,1,2021-04-19 13:03:39,
statement.go,88c26b6,Jinzhu,Support Scopes in group conditions,329,329,,,0,2022-04-20 09:21:38,
statement.go,53b3ebd,Jinzhu,Add invalid data error when building conditions,449,450,,,1,2021-01-05 13:01:16,
statement.go,1a2fabb,Jinzhu,Test Not,452,452,,,0,2020-07-05 03:56:12,
statement.go,1a2fabb,Jinzhu,Test Not,454,454,,,0,2020-07-05 03:56:12,
statement.go,940358e,Jinzhu,Fix tests doesn't follow https://gorm.io/docs/method_chaining.html convention,453,453,Stephano George,436cca7,1,2024-01-12 08:42:21,2023-12-23 13:19:41
statement.go,00a785c,Jinzhu,"Don't use invalid value to build conditions, close #3912",455,455,,,0,2021-01-05 10:01:51,
statement.go,85bfd17,Jinzhu,Implement build conditions,459,461,,,0,2020-01-29 19:03:06,
statement.go,ac8708b,Jinzhu,Add FirstOrInit support,458,458,,,0,2020-05-28 05:12:56,
statement.go,53b3ebd,Jinzhu,Add invalid data error when building conditions,456,457,,,1,2021-01-05 13:01:16,
statement.go,85bfd17,Jinzhu,Implement build conditions,466,467,,,0,2020-01-29 19:03:06,
statement.go,74e7a9c,heige,"Optimize reflect value length and method (#4280)  * Respect ignore migration when add column (#4276)  continue https://github.com/go-gorm/gorm/pull/4028  * feat: Optimal value type acquisition for v (#4278)  * feat: optimize relect value length and value  * feat: optimize ConvertSliceOfMapToValuesForCreate method  Co-authored-by: yrong1997 <yrong1997@gmail.com>",443,445,,,0,2021-04-14 05:00:54,
statement.go,940358e,Jinzhu,Fix tests doesn't follow https://gorm.io/docs/method_chaining.html convention,462,465,Stephano George,436cca7,1,2024-01-12 08:42:21,2023-12-23 13:19:41
statement.go,d52ee0a,Jinzhu,Work on create callbacks,469,469,,,0,2020-02-03 02:40:03,
statement.go,9d5b983,Jinzhu,Refactor builder,468,468,,,0,2020-01-30 11:47:00,
statement.go,9d5b983,Jinzhu,Refactor builder,471,473,,,0,2020-01-30 11:47:00,
statement.go,728c0d4,Jinzhu,Add callbacks,470,470,,,0,2020-02-02 12:05:10,
statement.go,d52ee0a,Jinzhu,Work on create callbacks,479,479,,,0,2020-02-03 02:40:03,
statement.go,728c0d4,Jinzhu,Add callbacks,474,474,,,0,2020-02-02 12:05:10,
statement.go,9d5b983,Jinzhu,Refactor builder,475,477,,,0,2020-01-30 11:47:00,
statement.go,728c0d4,Jinzhu,Add callbacks,478,478,,,0,2020-02-02 12:05:10,
statement.go,d52ee0a,Jinzhu,Work on create callbacks,481,483,,,0,2020-02-03 02:40:03,
statement.go,62dcd78,Jinzhu,Add Migrator,487,488,,,0,2020-02-20 15:04:03,
statement.go,9d5b983,Jinzhu,Refactor builder,484,485,,,0,2020-01-30 11:47:00,
statement.go,d05128b,Jinzhu,OnConflict support for mysql,480,480,,,0,2020-05-29 14:34:35,
statement.go,85bfd17,Jinzhu,Implement build conditions,486,486,,,0,2020-01-29 19:03:06,
statement.go,90183fa,Jinzhu,Allow advanced table with args,494,499,,,0,2020-07-19 13:30:24,
statement.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),357,357,heige,74e7a9c,0,2022-01-06 07:02:53,2021-04-14 05:00:54
statement.go,62dcd78,Jinzhu,Add Migrator,501,503,,,0,2020-02-20 15:04:03,
statement.go,04adbaf,Jinzhu,Fix parse stmt ReflectValue,500,500,,,1,2020-02-24 00:51:35,
statement.go,3aa1891,Jinzhu,Add sync pool,504,504,,,0,2020-03-09 07:32:55,
statement.go,91a6958,Jinzhu,Test Association For BelongsTo,505,506,,,0,2020-05-24 10:33:15,
statement.go,91a6958,Jinzhu,Test Association For BelongsTo,508,509,,,0,2020-05-24 10:33:15,
statement.go,d011ebe,Jinzhu,"Fix clone statement for Unscoped, UpdatingColumn, close #3681",510,510,,,1,2020-10-26 02:17:25,
statement.go,eda2f02,Jinzhu,Add Distinct support,514,514,,,0,2020-06-05 11:19:12,
statement.go,91a6958,Jinzhu,Test Association For BelongsTo,511,513,,,0,2020-05-24 10:33:15,
statement.go,dea93ed,Jinzhu,Copy TableExpr when clone statement,507,507,,,0,2020-08-13 08:28:21,
statement.go,91a6958,Jinzhu,Test Association For BelongsTo,524,525,,,0,2020-05-24 10:33:15,
statement.go,91a6958,Jinzhu,Test Association For BelongsTo,515,516,,,0,2020-05-24 10:33:15,
statement.go,df24821,Jinzhu,Fix SubQuery for raw sql,526,531,,,1,2021-02-09 09:05:50,
statement.go,91a6958,Jinzhu,Test Association For BelongsTo,518,522,,,0,2020-05-24 10:33:15,
statement.go,9df9f76,Jinzhu,Change UpdatingColumn to SkipHooks,523,523,,,0,2020-11-17 09:49:43,
statement.go,11c4331,molon,"feat: add MapColumns method (#6901)  * add MapColumns method  * fix MapColumns desc  * add TestMapColumns",517,517,Jinzhu,940358e,1,2024-06-24 09:42:59,2024-01-12 08:42:21
statement.go,3a97639,Jinzhu,"Fix unordered joins, close #3267",540,542,,,1,2020-08-23 02:45:10,
statement.go,91a6958,Jinzhu,Test Association For BelongsTo,532,539,,,0,2020-05-24 10:33:15,
statement.go,91a6958,Jinzhu,Test Association For BelongsTo,543,544,,,0,2020-05-24 10:33:15,
statement.go,828e6b6,Jinzhu,Lazy call registered scopes,548,549,,,0,2021-02-25 10:49:01,
statement.go,2c1b04a,Jinzhu,"Fix failed to create second record in same transaction, close #3060",550,554,,,1,2020-06-19 04:38:03,
statement.go,ddeb143,Jinzhu,Lazy call registered scopes,545,547,,,0,2021-02-25 14:01:59,
statement.go,91a6958,Jinzhu,Test Association For BelongsTo,555,556,,,0,2020-05-24 10:33:15,
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",557,557,,,0,2020-06-30 08:53:54,
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",558,558,,,0,2020-06-30 08:53:54,
statement.go,14a0976,Jinzhu,"populate the DeletedAt field when soft delete, fix #3855",562,562,,,1,2020-12-15 02:39:20,
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",563,564,,,0,2020-06-30 08:53:54,
statement.go,f92e674,Jinzhu,Handle field set value error,586,586,Mikhail Faraponov,2990790,1,2022-03-23 09:24:25,2022-03-17 14:54:30
statement.go,4009ec5,Jinzhu,Fix call hook methods when updating with struct,571,585,,,1,2020-10-27 10:14:36,
statement.go,d321190,Jason Lee,"Refactor ParseWithSchemaTable method and improve test. (#4789)  * Refactor ParseWithSchemaTable method and improve test.  * Fix schema.ParseWithSchemaTable method for only use schemaTable in migrator and improve test.  * Rename `schemaTable` to `specialTableName` for clearly argument.",489,493,,,1,2021-10-25 03:26:44,
statement.go,14a0976,Jinzhu,"populate the DeletedAt field when soft delete, fix #3855",565,568,,,1,2020-12-15 02:39:20,
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",569,570,,,0,2020-06-30 08:53:54,
statement.go,4009ec5,Jinzhu,Fix call hook methods when updating with struct,587,591,,,1,2020-10-27 10:14:36,
statement.go,14a0976,Jinzhu,"populate the DeletedAt field when soft delete, fix #3855",594,595,,,1,2020-12-15 02:39:20,
statement.go,14a0976,Jinzhu,"populate the DeletedAt field when soft delete, fix #3855",600,600,,,1,2020-12-15 02:39:20,
statement.go,929c0c5,Jinzhu,Test Hooks For Slice,592,593,,,0,2020-06-30 14:47:21,
statement.go,14a0976,Jinzhu,"populate the DeletedAt field when soft delete, fix #3855",597,598,,,1,2020-12-15 02:39:20,
statement.go,929c0c5,Jinzhu,Test Hooks For Slice,601,601,,,0,2020-06-30 14:47:21,
statement.go,f92e674,Jinzhu,Handle field set value error,607,607,Jinzhu,df23650,1,2022-03-23 09:24:25,2022-02-09 09:23:16
statement.go,ea1bce3,Jinzhu,Only check struct value can address or not,602,606,,,0,2021-05-23 03:21:56,
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",609,618,,,0,2020-06-30 08:53:54,
statement.go,4009ec5,Jinzhu,Fix call hook methods when updating with struct,619,619,,,1,2020-10-27 10:14:36,
statement.go,929c0c5,Jinzhu,Test Hooks For Slice,608,608,,,0,2020-06-30 14:47:21,
statement.go,929c0c5,Jinzhu,Test Hooks For Slice,620,624,,,0,2020-06-30 14:47:21,
statement.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",421,421,,,1,2022-02-19 09:02:53,
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",625,626,,,0,2020-06-30 08:53:54,
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",628,628,,,0,2020-06-30 08:53:54,
statement.go,9b80fe9,Cr,"fix: stmt.Changed zero value filed behavior (#5281)  * fix: stmt.Changed zero value filed behavior  * chore: rename var",629,630,Jinzhu,88c26b6,1,2022-04-24 01:08:52,2022-04-20 09:21:38
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",631,631,,,0,2020-06-30 08:53:54,
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",633,633,,,0,2020-06-30 08:53:54,
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",634,635,,,0,2020-06-30 08:53:54,
statement.go,4009ec5,Jinzhu,Fix call hook methods when updating with struct,636,640,,,1,2020-10-27 10:14:36,
statement.go,4009ec5,Jinzhu,Fix call hook methods when updating with struct,645,645,,,1,2020-10-27 10:14:36,
statement.go,f92e674,Jinzhu,Handle field set value error,596,596,,,1,2022-03-23 09:24:25,
statement.go,f92e674,Jinzhu,Handle field set value error,599,599,,,1,2022-03-23 09:24:25,
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",646,669,,,0,2020-06-30 08:53:54,
statement.go,436cca7,Stephano George,"fix: join and select mytable.* not working (#6761)  * fix: select mytable.* not working  * fix: select mytable.*: will not match `mytable.""*""`. feat: increase readability of code matching table name column name",670,684,black-06,4b0da0e,1,2023-12-23 13:19:41,2023-04-11 04:01:23
statement.go,b2f4252,Cr,"fix(Joins): args with select and omit (#5790)  * fix(Joins): args with select and omit  * chore: gofumpt style",559,561,,,1,2022-11-02 02:28:00,
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",686,690,,,0,2020-06-30 08:53:54,
statement.go,6312d86,Jinzhu,Support specify select/omit columns with table,685,685,,,0,2021-10-08 09:51:27,
statement.go,79225bf,Jinzhu,"Fix Omit/Select without Model value, close #4098",692,692,,,1,2021-02-18 02:53:29,
statement.go,3d35ddb,Jinzhu,Fix use table.* as select/omit columns,691,691,Cr,1935eb0,1,2023-01-12 08:52:56,2022-12-24 04:27:38
statement.go,3d35ddb,Jinzhu,Fix use table.* as select/omit columns,695,695,Cr,1935eb0,1,2023-01-12 08:52:56,2022-12-24 04:27:38
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",696,696,,,0,2020-06-30 08:53:54,
statement.go,79225bf,Jinzhu,"Fix Omit/Select without Model value, close #4098",694,694,,,1,2021-02-18 02:53:29,
statement.go,79225bf,Jinzhu,"Fix Omit/Select without Model value, close #4098",699,699,,,1,2021-02-18 02:53:29,
statement.go,3d35ddb,Jinzhu,Fix use table.* as select/omit columns,693,693,Cr,1935eb0,1,2023-01-12 08:52:56,2022-12-24 04:27:38
statement.go,3d35ddb,Jinzhu,Fix use table.* as select/omit columns,697,697,Cr,1935eb0,1,2023-01-12 08:52:56,2022-12-24 04:27:38
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",698,698,,,0,2020-06-30 08:53:54,
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",700,700,,,0,2020-06-30 08:53:54,
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",702,703,,,0,2020-06-30 08:53:54,
statement.go,3d35ddb,Jinzhu,Fix use table.* as select/omit columns,701,701,Cr,1935eb0,1,2023-01-12 08:52:56,2022-12-24 04:27:38
statement.go,3d35ddb,Jinzhu,Fix use table.* as select/omit columns,704,704,Cr,1935eb0,1,2023-01-12 08:52:56,2022-12-24 04:27:38
statement.go,436cca7,Stephano George,"fix: join and select mytable.* not working (#6761)  * fix: select mytable.* not working  * fix: select mytable.*: will not match `mytable.""*""`. feat: increase readability of code matching table name column name",705,706,black-06,4b0da0e,1,2023-12-23 13:19:41,2023-04-11 04:01:23
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",713,713,,,0,2020-06-30 08:53:54,
statement.go,9b80fe9,Cr,"fix: stmt.Changed zero value filed behavior (#5281)  * fix: stmt.Changed zero value filed behavior  * chore: rename var",642,644,,,1,2022-04-24 01:08:52,
statement.go,436cca7,Stephano George,"fix: join and select mytable.* not working (#6761)  * fix: select mytable.* not working  * fix: select mytable.*: will not match `mytable.""*""`. feat: increase readability of code matching table name column name",711,711,black-06,4b0da0e,1,2023-12-23 13:19:41,2023-04-11 04:01:23
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",715,717,,,0,2020-06-30 08:53:54,
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",723,723,,,0,2020-06-30 08:53:54,
statement.go,3d35ddb,Jinzhu,Fix use table.* as select/omit columns,707,710,,,1,2023-01-12 08:52:56,
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",726,728,,,0,2020-06-30 08:53:54,
statement.go,f655041,Jinzhu,"Allow overwrite ignored field's permission, close #3829",729,729,,,0,2020-12-06 03:07:05,
statement.go,f556628,Jinzhu,"Add SetColumn, Changed method",730,744,,,0,2020-06-30 08:53:54,
statement.go,3d35ddb,Jinzhu,Fix use table.* as select/omit columns,712,712,,,1,2023-01-12 08:52:56,
statement.go,3d35ddb,Jinzhu,Fix use table.* as select/omit columns,724,725,,,1,2023-01-12 08:52:56,
statement.go,3d35ddb,Jinzhu,Fix use table.* as select/omit columns,714,714,,,1,2023-01-12 08:52:56,
statement.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",641,641,,,1,2022-02-19 09:02:53,
statement.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",627,627,,,1,2022-02-19 09:02:53,
statement.go,9b80fe9,Cr,"fix: stmt.Changed zero value filed behavior (#5281)  * fix: stmt.Changed zero value filed behavior  * chore: rename var",632,632,,,1,2022-04-24 01:08:52,
statement.go,3d35ddb,Jinzhu,Fix use table.* as select/omit columns,718,722,,,1,2023-01-12 08:52:56,
tests/helper_test.go,d833efe,Jinzhu,Work on clauses,2,3,,,0,2020-02-02 11:11:17,
tests/helper_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",4,4,Jinzhu,4d40e34,0,2023-02-08 08:29:09,2022-07-14 06:55:54
tests/helper_test.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",11,12,Cheese,02b7e26,1,2023-02-18 01:06:43,2023-02-08 08:29:09
tests/helper_test.go,d833efe,Jinzhu,Work on clauses,8,8,,,0,2020-02-02 11:11:17,
tests/helper_test.go,8bb05a5,Jinzhu,Refactor tests files,1,1,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/helper_test.go,0da8191,Jinzhu,Update test helper,9,9,,,0,2020-03-02 15:43:34,
tests/helper_test.go,d833efe,Jinzhu,Work on clauses,14,15,,,0,2020-02-02 11:11:17,
tests/helper_test.go,8bb05a5,Jinzhu,Refactor tests files,13,13,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/helper_test.go,c2e36eb,chenrui,"fix: soft delete for join, close #5132  commit a83023bdfc0dc6eaccc6704b64ff6436c2fe7725 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 01:05:25 2022 +0800      Refactor #5132  commit 8559f51102c01be6c19913c0bc3a5771721ff1f5 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 20:33:12 2022 +0800      fix: should add deleted_at exprs for every joins  commit 2b7a1bdcf3eff9d23253173d21e73c1f056f9be4 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 14:46:48 2022 +0800      test: move debug flag  commit ce13a2a7bc50d2c23678806acf65dbd589827c77 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 14:39:56 2022 +0800      fix: soft delete for join.on",25,25,Jinzhu,308d22b,1,2022-03-17 17:09:20,2020-09-01 05:48:37
tests/helper_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",26,26,Saeid,1fb26ac,1,2023-12-15 08:36:08,2023-08-04 02:30:07
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,5,7,,,0,2020-05-23 15:50:48,
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,10,10,,,0,2020-05-23 15:50:48,
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,27,30,,,0,2020-05-23 15:50:48,
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,16,24,,,0,2020-05-23 15:50:48,
tests/helper_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",51,54,Saeid,1fb26ac,1,2023-12-15 08:36:08,2023-08-04 02:30:07
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,32,50,,,0,2020-05-23 15:50:48,
tests/helper_test.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",84,87,Cheese,02b7e26,1,2023-02-18 01:06:43,2023-02-08 08:29:09
tests/helper_test.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",89,92,Cheese,02b7e26,1,2023-02-18 01:06:43,2023-02-08 08:29:09
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,55,69,,,0,2020-05-23 15:50:48,
tests/helper_test.go,7b6b9c4,Jinzhu,Add tests for Columns,31,31,,,0,2020-05-30 16:42:52,
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,70,76,,,0,2020-05-23 15:50:48,
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,81,83,,,0,2020-05-23 15:50:48,
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,88,88,,,0,2020-05-23 15:50:48,
tests/helper_test.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",95,95,chenrui,c2e36eb,1,2023-02-18 01:06:43,2022-03-17 17:09:20
tests/helper_test.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",112,115,Cheese,02b7e26,1,2023-02-18 01:06:43,2023-02-08 08:29:09
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,100,111,,,0,2020-05-23 15:50:48,
tests/helper_test.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",117,120,Cheese,02b7e26,1,2023-02-18 01:06:43,2023-02-08 08:29:09
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,96,98,,,0,2020-05-23 15:50:48,
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,93,94,,,0,2020-05-23 15:50:48,
tests/helper_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",126,127,Saeid,1fb26ac,1,2023-12-15 08:36:08,2023-08-04 02:30:07
tests/helper_test.go,c2e36eb,chenrui,"fix: soft delete for join, close #5132  commit a83023bdfc0dc6eaccc6704b64ff6436c2fe7725 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 01:05:25 2022 +0800      Refactor #5132  commit 8559f51102c01be6c19913c0bc3a5771721ff1f5 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 20:33:12 2022 +0800      fix: should add deleted_at exprs for every joins  commit 2b7a1bdcf3eff9d23253173d21e73c1f056f9be4 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 14:46:48 2022 +0800      test: move debug flag  commit ce13a2a7bc50d2c23678806acf65dbd589827c77 Author: chenrui <chenrui@jingdaka.com> Date:   Mon Mar 7 14:39:56 2022 +0800      fix: soft delete for join.on",77,80,Jinzhu,e986371,1,2022-03-17 17:09:20,2020-06-02 01:18:01
tests/helper_test.go,4d40e34,Jinzhu,Update select tests,99,99,Jinzhu,e986371,0,2022-07-14 06:55:54,2020-06-02 01:18:01
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,116,116,,,0,2020-05-23 15:50:48,
tests/helper_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",131,132,Saeid,1fb26ac,1,2023-12-15 08:36:08,2023-08-04 02:30:07
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,124,125,,,0,2020-05-23 15:50:48,
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,121,122,,,0,2020-05-23 15:50:48,
tests/helper_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",143,144,Saeid,1fb26ac,1,2023-12-15 08:36:08,2023-08-04 02:30:07
tests/helper_test.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",142,142,Jinzhu,a1e35bd,1,2023-02-18 01:06:43,2020-06-20 08:52:15
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,128,130,,,0,2020-05-23 15:50:48,
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,145,150,,,0,2020-05-23 15:50:48,
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,133,141,,,0,2020-05-23 15:50:48,
tests/helper_test.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",123,123,Jinzhu,e986371,1,2023-02-18 01:06:43,2020-06-02 01:18:01
tests/helper_test.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",166,166,Jinzhu,a1e35bd,1,2023-02-18 01:06:43,2020-06-20 08:52:15
tests/helper_test.go,308d22b,Jinzhu,"Clean up associations before Preload, close #3345",151,151,Jinzhu,e986371,0,2020-09-01 05:48:37,2020-06-02 01:18:01
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,167,172,,,0,2020-05-23 15:50:48,
tests/helper_test.go,308d22b,Jinzhu,"Clean up associations before Preload, close #3345",216,216,Jinzhu,a1e35bd,0,2020-09-01 05:48:37,2020-06-20 08:52:15
tests/helper_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",204,207,Saeid,1fb26ac,1,2023-12-15 08:36:08,2023-08-04 02:30:07
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,152,165,,,0,2020-05-23 15:50:48,
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,174,202,,,0,2020-05-23 15:50:48,
tests/helper_test.go,308d22b,Jinzhu,"Clean up associations before Preload, close #3345",173,173,Jinzhu,e986371,0,2020-09-01 05:48:37,2020-06-02 01:18:01
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,217,227,,,0,2020-05-23 15:50:48,
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,208,215,,,0,2020-05-23 15:50:48,
tests/helper_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",228,229,Saeid,1fb26ac,1,2023-12-15 08:36:08,2023-08-04 02:30:07
tests/helper_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",264,265,Saeid,1fb26ac,1,2023-12-15 08:36:08,2023-08-04 02:30:07
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,230,234,,,0,2020-05-23 15:50:48,
tests/helper_test.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",203,203,Jinzhu,a1e35bd,1,2023-02-18 01:06:43,2020-06-20 08:52:15
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,253,263,,,0,2020-05-23 15:50:48,
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,236,251,,,0,2020-05-23 15:50:48,
tests/helper_test.go,81536f8,Jinzhu,"Fix insert id into map results, fix #6812",284,287,Alexis Viscogliosi,a2cac75,1,2024-03-19 03:50:28,2023-12-15 08:36:08
tests/helper_test.go,f0a442a,Jinzhu,Refactor tests,266,268,,,0,2020-05-23 15:50:48,
tests/helper_test.go,308d22b,Jinzhu,"Clean up associations before Preload, close #3345",235,235,,,0,2020-09-01 05:48:37,
tests/helper_test.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",279,279,,,1,2023-02-18 01:06:43,
tests/helper_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",269,278,,,0,2023-02-08 08:29:09,
tests/helper_test.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",288,294,,,1,2023-02-18 01:06:43,
tests/helper_test.go,308d22b,Jinzhu,"Clean up associations before Preload, close #3345",252,252,,,0,2020-09-01 05:48:37,
tests/helper_test.go,1fb26ac,Saeid,"test: coverage for tabletype added (#6496)  * test: coverage for tabletype added  * test: tidb exclueded  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",280,283,,,0,2023-08-04 02:30:07,
tests/multi_primary_keys_test.go,76b8e78,Jinzhu,Add multi primary keys test,10,16,,,0,2020-06-01 00:13:16,
tests/multi_primary_keys_test.go,76b8e78,Jinzhu,Add multi primary keys test,18,25,,,0,2020-06-01 00:13:16,
tests/multi_primary_keys_test.go,2ae0653,Jinzhu,"Fix ambiguous column when using same column name in join table, close #3120",17,17,Jinzhu,630f4fe,1,2020-07-09 01:03:48,2020-07-01 11:49:04
tests/multi_primary_keys_test.go,76b8e78,Jinzhu,Add multi primary keys test,1,6,,,0,2020-06-01 00:13:16,
tests/multi_primary_keys_test.go,76b8e78,Jinzhu,Add multi primary keys test,27,39,,,0,2020-06-01 00:13:16,
tests/multi_primary_keys_test.go,2ae0653,Jinzhu,"Fix ambiguous column when using same column name in join table, close #3120",26,26,Jinzhu,630f4fe,1,2020-07-09 01:03:48,2020-07-01 11:49:04
tests/multi_primary_keys_test.go,76b8e78,Jinzhu,Add multi primary keys test,42,43,,,0,2020-06-01 00:13:16,
tests/multi_primary_keys_test.go,fcb666c,Jinzhu,"Fix associations using composite primary keys without ID field, close #3365",9,9,Jinzhu,2ae0653,1,2020-09-03 02:58:48,2020-07-09 01:03:48
tests/multi_primary_keys_test.go,4a01d4c,Jinzhu,Create join table with ReorderModels,7,8,Jinzhu,8bb05a5,0,2020-06-24 09:19:11,2020-06-02 02:50:38
tests/multi_primary_keys_test.go,8bb05a5,Jinzhu,Refactor tests files,40,41,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/multi_primary_keys_test.go,76b8e78,Jinzhu,Add multi primary keys test,54,73,,,0,2020-06-01 00:13:16,
tests/multi_primary_keys_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),74,74,Jinzhu,27e2753,0,2022-01-06 07:02:53,2021-11-29 10:43:39
tests/multi_primary_keys_test.go,76b8e78,Jinzhu,Add multi primary keys test,75,97,,,0,2020-06-01 00:13:16,
tests/multi_primary_keys_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),98,99,Jinzhu,27e2753,0,2022-01-06 07:02:53,2021-11-29 10:43:39
tests/multi_primary_keys_test.go,76b8e78,Jinzhu,Add multi primary keys test,100,137,,,0,2020-06-01 00:13:16,
tests/multi_primary_keys_test.go,76b8e78,Jinzhu,Add multi primary keys test,140,141,,,0,2020-06-01 00:13:16,
tests/multi_primary_keys_test.go,4a01d4c,Jinzhu,Create join table with ReorderModels,44,53,Jinzhu,8bb05a5,0,2020-06-24 09:19:11,2020-06-02 02:50:38
tests/multi_primary_keys_test.go,47ffd0b,Luis Guillermo Gómez,"Select all fields in SQL queries avoiding the SELECT * FROM (#3731)  * Select all fields in SQL queries avoiding the SELECT * FROM  * Select table name with fields in SQL queries  * Use QueryFields to execute the SQL query with all fields of the table",143,143,Jinzhu,fcb666c,0,2020-11-20 07:38:25,2020-09-03 02:58:48
tests/multi_primary_keys_test.go,8bb05a5,Jinzhu,Refactor tests files,138,139,,,0,2020-06-02 02:50:38,
tests/multi_primary_keys_test.go,4a01d4c,Jinzhu,Create join table with ReorderModels,142,142,Jinzhu,8bb05a5,0,2020-06-24 09:19:11,2020-06-02 02:50:38
tests/multi_primary_keys_test.go,4a01d4c,Jinzhu,Create join table with ReorderModels,144,146,Jinzhu,8bb05a5,0,2020-06-24 09:19:11,2020-06-02 02:50:38
tests/multi_primary_keys_test.go,76b8e78,Jinzhu,Add multi primary keys test,147,172,,,0,2020-06-01 00:13:16,
tests/multi_primary_keys_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),173,173,Jinzhu,27e2753,0,2022-01-06 07:02:53,2021-11-29 10:43:39
tests/multi_primary_keys_test.go,76b8e78,Jinzhu,Add multi primary keys test,174,203,,,0,2020-06-01 00:13:16,
tests/multi_primary_keys_test.go,76b8e78,Jinzhu,Add multi primary keys test,205,217,,,0,2020-06-01 00:13:16,
tests/multi_primary_keys_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),204,204,Jinzhu,27e2753,0,2022-01-06 07:02:53,2021-11-29 10:43:39
tests/multi_primary_keys_test.go,76b8e78,Jinzhu,Add multi primary keys test,220,262,,,0,2020-06-01 00:13:16,
tests/multi_primary_keys_test.go,76b8e78,Jinzhu,Add multi primary keys test,265,266,,,0,2020-06-01 00:13:16,
tests/multi_primary_keys_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),218,219,Jinzhu,27e2753,0,2022-01-06 07:02:53,2021-11-29 10:43:39
tests/multi_primary_keys_test.go,76b8e78,Jinzhu,Add multi primary keys test,272,293,,,0,2020-06-01 00:13:16,
tests/multi_primary_keys_test.go,8bb05a5,Jinzhu,Refactor tests files,263,264,,,0,2020-06-02 02:50:38,
tests/multi_primary_keys_test.go,4a01d4c,Jinzhu,Create join table with ReorderModels,269,271,Jinzhu,8bb05a5,0,2020-06-24 09:19:11,2020-06-02 02:50:38
tests/multi_primary_keys_test.go,76b8e78,Jinzhu,Add multi primary keys test,295,324,,,0,2020-06-01 00:13:16,
tests/multi_primary_keys_test.go,4a01d4c,Jinzhu,Create join table with ReorderModels,267,267,Jinzhu,8bb05a5,0,2020-06-24 09:19:11,2020-06-02 02:50:38
tests/multi_primary_keys_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),294,294,Jinzhu,27e2753,0,2022-01-06 07:02:53,2021-11-29 10:43:39
tests/multi_primary_keys_test.go,47ffd0b,Luis Guillermo Gómez,"Select all fields in SQL queries avoiding the SELECT * FROM (#3731)  * Select all fields in SQL queries avoiding the SELECT * FROM  * Select table name with fields in SQL queries  * Use QueryFields to execute the SQL query with all fields of the table",268,268,Jinzhu,fcb666c,0,2020-11-20 07:38:25,2020-09-03 02:58:48
tests/multi_primary_keys_test.go,76b8e78,Jinzhu,Add multi primary keys test,326,338,,,0,2020-06-01 00:13:16,
tests/multi_primary_keys_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),325,325,Jinzhu,27e2753,0,2022-01-06 07:02:53,2021-11-29 10:43:39
tests/multi_primary_keys_test.go,76b8e78,Jinzhu,Add multi primary keys test,341,413,,,0,2020-06-01 00:13:16,
tests/multi_primary_keys_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),339,340,Jinzhu,27e2753,0,2022-01-06 07:02:53,2021-11-29 10:43:39
tests/multi_primary_keys_test.go,fcb666c,Jinzhu,"Fix associations using composite primary keys without ID field, close #3365",414,429,Jinzhu,2ae0653,1,2020-09-03 02:58:48,2020-07-09 01:03:48
tests/multi_primary_keys_test.go,27e2753,Jinzhu,"Fix create duplicated value when updating nested has many relationship, close #4796",430,430,Luis Guillermo Gómez,47ffd0b,1,2021-11-29 10:43:39,2020-11-20 07:38:25
tests/multi_primary_keys_test.go,fcb666c,Jinzhu,"Fix associations using composite primary keys without ID field, close #3365",431,448,Jinzhu,2ae0653,1,2020-09-03 02:58:48,2020-07-09 01:03:48
tests/named_argument_test.go,c0319f6,Jinzhu,Test map with named argument for raw sql,57,57,,,0,2020-07-10 04:52:01,
tests/named_argument_test.go,bba569a,Jinzhu,Add NamedArg support,1,4,,,0,2020-07-10 04:28:24,
tests/named_argument_test.go,bba569a,Jinzhu,Add NamedArg support,56,56,,,0,2020-07-10 04:28:24,
tests/named_argument_test.go,496db1f,Jinzhu,"Fix named argument with multiple line SQL, fix #3336",52,55,Jinzhu,c0319f6,1,2020-08-31 07:45:56,2020-07-10 04:52:01
tests/named_argument_test.go,bba569a,Jinzhu,Add NamedArg support,6,51,,,0,2020-07-10 04:28:24,
tests/named_argument_test.go,bba569a,Jinzhu,Add NamedArg support,58,60,,,0,2020-07-10 04:28:24,
tests/named_argument_test.go,496db1f,Jinzhu,"Fix named argument with multiple line SQL, fix #3336",61,69,Jinzhu,c0319f6,1,2020-08-31 07:45:56,2020-07-10 04:52:01
tests/named_argument_test.go,bba569a,Jinzhu,Add NamedArg support,82,82,,,0,2020-07-10 04:28:24,
tests/named_argument_test.go,2c3fc2d,Emre Güllü,Fix: Where clauses with named arguments may cause generation of unintended queries (#4937),5,5,Jinzhu,496db1f,1,2021-12-21 11:50:00,2020-08-31 07:45:56
tests/named_argument_test.go,2c3fc2d,Emre Güllü,Fix: Where clauses with named arguments may cause generation of unintended queries (#4937),70,81,Jinzhu,496db1f,1,2021-12-21 11:50:00,2020-08-31 07:45:56
tests/named_polymorphic_test.go,aa959ec,Jinzhu,Test NamedPolymorphic,1,5,,,0,2020-05-31 06:41:45,
tests/named_polymorphic_test.go,aa959ec,Jinzhu,Test NamedPolymorphic,14,16,,,0,2020-05-31 06:41:45,
tests/named_polymorphic_test.go,8bb05a5,Jinzhu,Refactor tests files,6,6,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/named_polymorphic_test.go,aa959ec,Jinzhu,Test NamedPolymorphic,7,11,,,0,2020-05-31 06:41:45,
tests/named_polymorphic_test.go,aa959ec,Jinzhu,Test NamedPolymorphic,18,23,,,0,2020-05-31 06:41:45,
tests/named_polymorphic_test.go,ae9e4f1,Jinzhu,Fix change log level,24,24,Jinzhu,aa959ec,1,2020-05-31 09:49:31,2020-05-31 06:41:45
tests/named_polymorphic_test.go,619cd33,Jinzhu,Add index priority supports,12,13,Jinzhu,8f8d549,0,2020-07-08 09:59:40,2020-06-08 01:13:34
tests/named_polymorphic_test.go,8f8d549,Jinzhu,Refactor merge where exprs,17,17,Jinzhu,8bb05a5,0,2020-06-08 01:13:34,2020-06-02 02:50:38
tests/named_polymorphic_test.go,aa959ec,Jinzhu,Test NamedPolymorphic,25,147,,,0,2020-05-31 06:41:45,
tests/non_std_test.go,7b6b9c4,Jinzhu,Add tests for Columns,18,18,Jinzhu,abae7f7,0,2020-05-30 16:42:52,2020-05-30 08:03:27
tests/non_std_test.go,abae7f7,Jinzhu,Test non std primary key and default value,19,19,,,0,2020-05-30 08:03:27,
tests/non_std_test.go,abae7f7,Jinzhu,Test non std primary key and default value,14,17,,,0,2020-05-30 08:03:27,
tests/non_std_test.go,abae7f7,Jinzhu,Test non std primary key and default value,6,8,,,0,2020-05-30 08:03:27,
tests/non_std_test.go,7b6b9c4,Jinzhu,Add tests for Columns,12,13,Jinzhu,abae7f7,0,2020-05-30 16:42:52,2020-05-30 08:03:27
tests/non_std_test.go,abae7f7,Jinzhu,Test non std primary key and default value,1,5,,,0,2020-05-30 08:03:27,
tests/non_std_test.go,7b6b9c4,Jinzhu,Add tests for Columns,9,10,Jinzhu,abae7f7,0,2020-05-30 16:42:52,2020-05-30 08:03:27
tests/non_std_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),11,11,Jinzhu,8bb05a5,0,2022-01-06 07:02:53,2020-06-02 02:50:38
tests/non_std_test.go,7b6b9c4,Jinzhu,Add tests for Columns,20,22,Jinzhu,abae7f7,0,2020-05-30 16:42:52,2020-05-30 08:03:27
tests/non_std_test.go,abae7f7,Jinzhu,Test non std primary key and default value,23,23,,,0,2020-05-30 08:03:27,
tests/non_std_test.go,abae7f7,Jinzhu,Test non std primary key and default value,24,34,,,0,2020-05-30 08:03:27,
tests/non_std_test.go,e26abb8,Jinzhu,Test block global update/delete,35,35,Jinzhu,7b6b9c4,0,2020-05-31 12:42:07,2020-05-30 16:42:52
tests/non_std_test.go,abae7f7,Jinzhu,Test non std primary key and default value,36,39,,,0,2020-05-30 08:03:27,
tests/non_std_test.go,abae7f7,Jinzhu,Test non std primary key and default value,41,61,,,0,2020-05-30 08:03:27,
tests/non_std_test.go,5e599a0,hakusai22,"fix: typo (#7003)  * fix: typo  * fix: covered",40,40,kinggo,b47cf57,1,2024-05-08 04:07:58,2022-01-06 07:02:53
migrator/migrator.go,4456df7,Jinzhu,Lint with golangci-lint,4,4,,,0,2020-07-16 03:27:12,
migrator/migrator.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",9,9,,,0,2020-08-23 10:16:12,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,3,3,,,0,2020-02-20 15:04:03,
migrator/migrator.go,1305f63,qqxhb,"feat: add method GetIndexes (#5436)  * feat: add method GetIndexes  * feat: add default impl for Index interface  * feat: fmt",6,6,Cr,93986de,0,2022-06-17 03:00:57,2022-05-28 15:09:13
migrator/migrator.go,413fe58,heige,Optimize migrator.go MigrateColumn and ColumnTypes func. (#4532),5,5,heige,5115813,0,2021-08-02 10:44:10,2021-07-28 10:50:08
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,7,7,,,0,2020-02-20 15:04:03,
migrator/migrator.go,8eae7e4,Jinzhu,Add migrator,1,2,,,0,2020-01-28 15:01:35,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,8,8,,,0,2020-02-22 05:11:54,
migrator/migrator.go,1b0aa80,Jinzhu,Fix AutoMigrate for bool fields with default value,10,10,black-06,8fb9a31,1,2024-03-18 11:24:16,2024-02-06 11:48:40
migrator/migrator.go,775fa70,Defoo Li,"DryRun for migrator (#5689)  * DryRun for migrator  * Update migrator.go  * Update migrator.go  Co-authored-by: Jinzhu <wosmvp@gmail.com>",12,12,Ning,bbd2bbe,0,2022-12-24 04:14:23,2022-12-24 03:02:11
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,11,11,,,0,2020-02-22 05:11:54,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,13,13,,,0,2020-02-20 15:04:03,
migrator/migrator.go,775fa70,Defoo Li,"DryRun for migrator (#5689)  * DryRun for migrator  * Update migrator.go  * Update migrator.go  Co-authored-by: Jinzhu <wosmvp@gmail.com>",16,16,Ning,bbd2bbe,0,2022-12-24 04:14:23,2022-12-24 03:02:11
migrator/migrator.go,e986371,Jinzhu,Rename package name,14,15,,,0,2020-06-02 01:18:01,
migrator/migrator.go,e986371,Jinzhu,Rename package name,17,17,,,0,2020-06-02 01:18:01,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,18,18,,,0,2020-02-20 15:04:03,
migrator/migrator.go,8eae7e4,Jinzhu,Add migrator,19,19,,,0,2020-01-28 15:01:35,
migrator/migrator.go,3c34bc2,fayvori,"refactor: Regex description (#6507)  * Mirror cleanup  * Regex description  ---------  Co-authored-by: Ignat Belousov <ignatbelousov@Ignats-MacBook-Pro.local>",20,26,John Mai,e61b98d,0,2023-08-07 08:35:19,2023-05-05 07:58:27
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,33,33,,,0,2020-02-22 09:53:57,
migrator/migrator.go,8eae7e4,Jinzhu,Add migrator,34,34,,,0,2020-01-28 15:01:35,
migrator/migrator.go,3c34bc2,fayvori,"refactor: Regex description (#6507)  * Mirror cleanup  * Regex description  ---------  Co-authored-by: Ignat Belousov <ignatbelousov@Ignats-MacBook-Pro.local>",29,30,John Mai,e61b98d,0,2023-08-07 08:35:19,2023-05-05 07:58:27
migrator/migrator.go,9fea15a,black-06,"feat: add MigrateColumnUnique (#6640)  * feat: add MigrateColumnUnique  * feat: define new methods  * delete debug in test",31,32,Samuel N Cui,2095d42,0,2023-10-30 09:15:49,2023-10-09 09:26:27
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,35,35,,,0,2020-02-22 09:53:57,
migrator/migrator.go,07f3795,heige,optimize MigrateColumn method for regexp (#4188),28,28,,,0,2021-03-17 03:32:17,
migrator/migrator.go,8eae7e4,Jinzhu,Add migrator,36,39,,,0,2020-01-28 15:01:35,
migrator/migrator.go,d0764be,Jinzhu,Test migrate with comment and check created constraints,40,41,,,0,2020-06-21 05:59:43,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,42,42,,,0,2020-02-22 09:53:57,
migrator/migrator.go,775fa70,Defoo Li,"DryRun for migrator (#5689)  * DryRun for migrator  * Update migrator.go  * Update migrator.go  Co-authored-by: Jinzhu <wosmvp@gmail.com>",45,54,Ning,bbd2bbe,0,2022-12-24 04:14:23,2022-12-24 03:02:11
migrator/migrator.go,8eae7e4,Jinzhu,Add migrator,43,43,,,0,2020-01-28 15:01:35,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,44,44,,,0,2020-02-20 15:04:03,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",55,55,Jinzhu,a0aceeb,1,2022-02-19 09:02:53,2022-02-10 02:40:48
migrator/migrator.go,a954d77,Jinzhu,Support customize gorm field type,56,59,,,0,2020-06-06 02:47:32,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,61,61,,,0,2020-02-22 09:53:57,
migrator/migrator.go,dd92f8b,Jinzhu,Allow create table for other database/schema #3640,65,65,,,0,2020-10-23 03:01:45,
migrator/migrator.go,70d60ef,Jinzhu,Fix create join table,68,69,,,1,2020-04-29 12:37:06,
migrator/migrator.go,70d60ef,Jinzhu,Fix create join table,62,64,,,1,2020-04-29 12:37:06,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,71,76,,,0,2020-02-20 15:04:03,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,66,67,,,0,2020-02-20 15:04:03,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,78,78,,,0,2020-02-22 09:53:57,
migrator/migrator.go,7b6b9c4,Jinzhu,Add tests for Columns,90,91,,,0,2020-05-30 16:42:52,
migrator/migrator.go,a954d77,Jinzhu,Support customize gorm field type,79,85,,,0,2020-06-06 02:47:32,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,86,88,,,0,2020-02-22 09:53:57,
migrator/migrator.go,be537f2,Jinzhu,[migrator] Use full data type when add column,92,92,,,0,2020-03-30 01:31:02,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",89,89,Jinzhu,a0aceeb,1,2022-02-19 09:02:53,2022-02-10 02:40:48
migrator/migrator.go,7b6b9c4,Jinzhu,Add tests for Columns,94,94,,,0,2020-05-30 16:42:52,
migrator/migrator.go,be537f2,Jinzhu,[migrator] Use full data type when add column,93,93,,,0,2020-03-30 01:31:02,
migrator/migrator.go,be537f2,Jinzhu,[migrator] Use full data type when add column,95,96,,,0,2020-03-30 01:31:02,
migrator/migrator.go,1b28c18,Jinzhu,Fix create with default value,98,101,,,1,2020-06-25 00:00:10,
migrator/migrator.go,be537f2,Jinzhu,[migrator] Use full data type when add column,105,105,,,0,2020-03-30 01:31:02,
migrator/migrator.go,f2b4943,Jinzhu,Test set string field's default value to blank string,97,97,,,0,2020-06-25 14:48:10,
migrator/migrator.go,7b6b9c4,Jinzhu,Add tests for Columns,103,104,,,0,2020-05-30 16:42:52,
migrator/migrator.go,7b6b9c4,Jinzhu,Add tests for Columns,106,107,,,0,2020-05-30 16:42:52,
migrator/migrator.go,619d306,Jinzhu,"ignore (-) when creating default values, #3434",102,102,,,0,2020-09-10 02:55:02,
migrator/migrator.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",110,119,black-06,9fea15a,1,2024-02-04 07:49:19,2023-10-30 09:15:49
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",77,77,,,1,2022-02-19 09:02:53,
migrator/migrator.go,be537f2,Jinzhu,[migrator] Use full data type when add column,108,109,,,0,2020-03-30 01:31:02,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",120,120,kinggo,b47cf57,1,2022-02-19 09:02:53,2022-01-06 07:02:53
migrator/migrator.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,122,122,,,0,2020-02-22 16:18:12,
migrator/migrator.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",123,123,black-06,9fea15a,1,2024-02-04 07:49:19,2023-10-30 09:15:49
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,126,128,,,0,2020-02-22 05:11:54,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,121,121,,,0,2020-02-22 09:53:57,
migrator/migrator.go,d321190,Jason Lee,"Refactor ParseWithSchemaTable method and improve test. (#4789)  * Refactor ParseWithSchemaTable method and improve test.  * Fix schema.ParseWithSchemaTable method for only use schemaTable in migrator and improve test.  * Rename `schemaTable` to `specialTableName` for clearly argument.",70,70,,,1,2021-10-25 03:26:44,
migrator/migrator.go,775fa70,Defoo Li,"DryRun for migrator (#5689)  * DryRun for migrator  * Update migrator.go  * Update migrator.go  Co-authored-by: Jinzhu <wosmvp@gmail.com>",135,135,Ning,bbd2bbe,0,2022-12-24 04:14:23,2022-12-24 03:02:11
migrator/migrator.go,7892019,PiexlMax(奇淼,Fix panic bug in migrator due to lack of nil check for stmt.Schema (#6932),130,134,Jinzhu,1b0aa80,1,2024-04-26 07:15:49,2024-03-18 11:24:16
migrator/migrator.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",27,27,,,1,2023-02-18 01:06:43,
migrator/migrator.go,775fa70,Defoo Li,"DryRun for migrator (#5689)  * DryRun for migrator  * Update migrator.go  * Update migrator.go  Co-authored-by: Jinzhu <wosmvp@gmail.com>",124,125,Jinzhu,48ced75,0,2022-12-24 04:14:23,2022-02-19 15:42:20
migrator/migrator.go,635dcc9,Michelle,"add gorm ColumnType interface, remove sql one (#3647)",144,144,,,0,2020-10-21 10:35:33,
migrator/migrator.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",145,146,,,0,2020-08-23 10:16:12,
migrator/migrator.go,3d91802,Jinzhu,"Fix unexpected alter table in auto migration, close #5942, #5943",139,142,Ning,bbd2bbe,1,2023-01-02 13:06:04,2022-12-24 03:02:11
migrator/migrator.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",148,154,,,0,2020-08-23 10:16:12,
migrator/migrator.go,05bb9d6,jessetang,refactor(migrator): non-standard codes (#6180),129,129,kinggo,b47cf57,0,2023-04-11 02:32:46,2022-01-06 07:02:53
migrator/migrator.go,05bb9d6,jessetang,refactor(migrator): non-standard codes (#6180),155,161,Haibo,16a2722,0,2023-04-11 02:32:46,2023-01-01 14:14:28
migrator/migrator.go,da2b286,Haibo,fix(migrator): ignore relationships when migrating #5913 (#5946),167,171,Ning,bbd2bbe,1,2023-01-01 11:54:28,2022-12-24 03:02:11
migrator/migrator.go,f757b8f,halfcrazy,fix: auto migration column order unpredictable (#4980),143,143,,,1,2022-01-06 10:55:20,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,176,178,,,0,2020-02-22 05:11:54,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,162,166,,,0,2020-02-22 05:11:54,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",60,60,,,1,2022-02-19 09:02:53,
migrator/migrator.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",172,172,,,1,2021-06-10 02:21:28,
migrator/migrator.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",175,175,,,1,2021-06-10 02:21:28,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,180,180,,,0,2020-02-22 05:11:54,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,185,186,,,0,2020-02-22 05:11:54,
migrator/migrator.go,f757b8f,halfcrazy,fix: auto migration column order unpredictable (#4980),147,147,,,1,2022-01-06 10:55:20,
migrator/migrator.go,775fa70,Defoo Li,"DryRun for migrator (#5689)  * DryRun for migrator  * Update migrator.go  * Update migrator.go  Co-authored-by: Jinzhu <wosmvp@gmail.com>",182,183,Jinzhu,a0aceeb,0,2022-12-24 04:14:23,2022-02-10 02:40:48
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,187,187,,,0,2020-02-22 05:11:54,
migrator/migrator.go,edb00c1,Googol Lee,"AutoMigrate() should always migrate checks, even there is no relationship constraints. (#5644)  * fix: remove uuid autoincrement  * AutoMigrate() should always migrate checks, even there is no relationship constranits.  Co-authored-by: a631807682 <631807682@qq.com>",184,184,heige,9e5a4e3,1,2022-09-14 02:26:51,2021-08-03 03:40:57
migrator/migrator.go,089939c,Jinzhu,"AutoMigrate should auto create indexes, close #3486",188,188,,,0,2020-09-18 13:50:11,
migrator/migrator.go,395606a,glebarez,fix missing error-check in AutoMigrate (#5283),136,138,yrong1997,d791130,1,2022-04-22 03:19:33,2021-04-13 01:39:43
migrator/migrator.go,3d91802,Jinzhu,"Fix unexpected alter table in auto migration, close #5942, #5943",189,189,Jinzhu,a0aceeb,1,2023-01-02 13:06:04,2022-02-10 02:40:48
migrator/migrator.go,089939c,Jinzhu,"AutoMigrate should auto create indexes, close #3486",192,196,,,0,2020-09-18 13:50:11,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,197,204,,,0,2020-02-22 05:11:54,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,205,206,,,0,2020-02-20 15:04:03,
migrator/migrator.go,edb00c1,Googol Lee,"AutoMigrate() should always migrate checks, even there is no relationship constraints. (#5644)  * fix: remove uuid autoincrement  * AutoMigrate() should always migrate checks, even there is no relationship constranits.  Co-authored-by: a631807682 <631807682@qq.com>",179,179,,,1,2022-09-14 02:26:51,
migrator/migrator.go,5e64ac7,dino.ma,"feat(migrator,migrator/migrator.go,tests/migrate_test.go) : Get multiple data tables for migrator. (#4841)  * feat(migrator,migrator/migrator.go,tests/migrate_test.go) : Get multiple data tables for migrator.  * feat(migrator.go and migrator/migrator.go) : remove Table Struct replace with []string  * fix(migrator)  : Return all data tables  * Update migrator.go  * fix(migrator/migrator.go):remove var sql  * feat(migrate_test.go/go.mod):update sqlserver,sqlite,postgres,pq version and add getTables test  * fix(migrate_test.go):change GetTables Method Test,use intersection  Co-authored-by: dino.ma <mashengjie03@baidu.com>",208,208,heige,50e85e1,1,2021-11-13 06:03:33,2021-06-10 02:21:28
migrator/migrator.go,775fa70,Defoo Li,"DryRun for migrator (#5689)  * DryRun for migrator  * Update migrator.go  * Update migrator.go  Co-authored-by: Jinzhu <wosmvp@gmail.com>",173,174,,,0,2022-12-24 04:14:23,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,215,215,,,0,2020-02-22 09:53:57,
migrator/migrator.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,216,216,,,0,2020-02-22 16:18:12,
migrator/migrator.go,775fa70,Defoo Li,"DryRun for migrator (#5689)  * DryRun for migrator  * Update migrator.go  * Update migrator.go  Co-authored-by: Jinzhu <wosmvp@gmail.com>",190,191,Jinzhu,a0aceeb,0,2022-12-24 04:14:23,2022-02-10 02:40:48
migrator/migrator.go,05bb9d6,jessetang,refactor(migrator): non-standard codes (#6180),218,218,black-06,a80707d,0,2023-04-11 02:32:46,2023-02-27 07:43:10
migrator/migrator.go,59c01b7,Jinzhu,"Make migrator works with dbresolver, close #3992",217,217,,,0,2021-01-25 02:30:57,
migrator/migrator.go,9d5f315,heige,"feat: go code style adjust and optimize code for callbacks package (#4861)  * feat: go code style adjust and optimize code for callbacks package  * Update scan.go",209,211,heige,50e85e1,0,2021-11-29 01:33:20,2021-06-10 02:21:28
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,224,225,,,0,2020-02-22 05:11:54,
migrator/migrator.go,7892019,PiexlMax(奇淼,Fix panic bug in migrator due to lack of nil check for stmt.Schema (#6932),219,223,Jinzhu,1b0aa80,1,2024-04-26 07:15:49,2024-03-18 11:24:16
migrator/migrator.go,85e9f66,Jinzhu,"Fix create index for other database/schema, close #3698",226,226,,,1,2020-11-05 03:43:21,
migrator/migrator.go,5e64ac7,dino.ma,"feat(migrator,migrator/migrator.go,tests/migrate_test.go) : Get multiple data tables for migrator. (#4841)  * feat(migrator,migrator/migrator.go,tests/migrate_test.go) : Get multiple data tables for migrator.  * feat(migrator.go and migrator/migrator.go) : remove Table Struct replace with []string  * fix(migrator)  : Return all data tables  * Update migrator.go  * fix(migrator/migrator.go):remove var sql  * feat(migrate_test.go/go.mod):update sqlserver,sqlite,postgres,pq version and add getTables test  * fix(migrate_test.go):change GetTables Method Test,use intersection  Co-authored-by: dino.ma <mashengjie03@baidu.com>",212,213,,,1,2021-11-13 06:03:33,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,227,231,,,0,2020-02-22 05:11:54,
migrator/migrator.go,1546f8a,Jinzhu,Test CreateWithNoGORMPrimayKey,240,240,,,0,2020-05-31 04:52:49,
migrator/migrator.go,21e85b8,张凯强,Fix create with ignore migration (#4571),232,233,,,1,2021-08-09 05:23:44,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,238,239,,,0,2020-02-22 05:11:54,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",207,207,,,1,2022-02-19 09:02:53,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",214,214,heige,50e85e1,1,2022-02-19 09:02:53,2021-06-10 02:21:28
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,241,241,,,0,2020-02-22 05:11:54,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,243,250,,,0,2020-02-22 05:11:54,
migrator/migrator.go,6d58b62,Jinzhu,Add sqlite migration tests,251,251,,,0,2020-02-22 12:57:29,
migrator/migrator.go,f8bd4c4,Jinzhu,"Don't create index if there are error exist, close #3976",255,255,,,1,2021-01-24 02:23:04,
migrator/migrator.go,d0764be,Jinzhu,Test migrate with comment and check created constraints,256,256,,,0,2020-06-21 05:59:43,
migrator/migrator.go,21e85b8,张凯强,Fix create with ignore migration (#4571),235,237,,,1,2021-08-09 05:23:44,
migrator/migrator.go,d0764be,Jinzhu,Test migrate with comment and check created constraints,252,252,,,0,2020-06-21 05:59:43,
migrator/migrator.go,6d58b62,Jinzhu,Add sqlite migration tests,257,257,,,0,2020-02-22 12:57:29,
migrator/migrator.go,4201f7b,Jinzhu,"Fix create unique index when creating table, close #3081",258,260,,,1,2020-06-23 14:14:41,
migrator/migrator.go,05bb9d6,jessetang,refactor(migrator): non-standard codes (#6180),253,254,Defoo Li,775fa70,0,2023-04-11 02:32:46,2022-12-24 04:14:23
migrator/migrator.go,5fee5b1,Jinzhu,Add option tag support for index,261,262,,,0,2020-10-21 12:18:21,
migrator/migrator.go,5fee5b1,Jinzhu,Add option tag support for index,267,271,,,0,2020-10-21 12:18:21,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,274,275,,,0,2020-02-22 05:11:54,
migrator/migrator.go,6d58b62,Jinzhu,Add sqlite migration tests,273,273,,,0,2020-02-22 12:57:29,
migrator/migrator.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",283,283,black-06,9fea15a,1,2024-02-04 07:49:19,2023-10-30 09:15:49
migrator/migrator.go,2202e99,s-takehana,"Fix create index with comments in MySQL (#4521)  * Fix create index with comments in MySQL  * Fix tests",263,266,,,1,2021-07-18 03:47:44,
migrator/migrator.go,5d04464,Jinzhu,Allow DisableForeignKeyConstraintWhenMigrating,284,286,,,0,2020-06-22 03:04:44,
migrator/migrator.go,3d91802,Jinzhu,"Fix unexpected alter table in auto migration, close #5942, #5943",181,181,,,1,2023-01-02 13:06:04,
migrator/migrator.go,5d04464,Jinzhu,Allow DisableForeignKeyConstraintWhenMigrating,281,282,,,0,2020-06-22 03:04:44,
migrator/migrator.go,4f19e2a,Jinzhu,Test ForeignKeyConstraints,287,287,,,0,2020-06-19 17:20:18,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,288,288,,,0,2020-02-22 05:11:54,
migrator/migrator.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",291,295,black-06,9fea15a,1,2024-02-04 07:49:19,2023-10-30 09:15:49
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,289,290,,,0,2020-02-22 05:11:54,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,296,296,,,0,2020-02-22 05:11:54,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,298,303,,,0,2020-02-22 05:11:54,
migrator/migrator.go,1fdc667,Jinzhu,Add table options,304,308,,,0,2020-06-14 11:13:16,
migrator/migrator.go,30188e7,Jinzhu,CHECK constraint without parentheses,297,297,,,0,2020-07-08 10:15:45,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",318,318,Jinzhu,a0aceeb,1,2022-02-19 09:02:53,2022-02-10 02:40:48
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,316,317,,,0,2020-02-20 15:04:03,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,311,315,,,0,2020-02-22 05:11:54,
migrator/migrator.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,320,321,,,0,2020-02-22 16:18:12,
migrator/migrator.go,05bb9d6,jessetang,refactor(migrator): non-standard codes (#6180),242,242,heige,50e85e1,0,2023-04-11 02:32:46,2021-06-10 02:21:28
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,319,319,,,0,2020-02-22 09:53:57,
migrator/migrator.go,59c01b7,Jinzhu,"Make migrator works with dbresolver, close #3992",322,322,,,0,2021-01-25 02:30:57,
migrator/migrator.go,85e9f66,Jinzhu,"Fix create index for other database/schema, close #3698",324,324,,,1,2020-11-05 03:43:21,
migrator/migrator.go,5ecbf25,Jinzhu,Drop table with CASCADE option,325,326,,,0,2020-06-01 23:56:53,
migrator/migrator.go,5ecbf25,Jinzhu,Drop table with CASCADE option,323,323,,,0,2020-06-01 23:56:53,
migrator/migrator.go,f5e77aa,black-06,fix: quote index when creating table (#5331),272,272,,,1,2022-05-17 02:59:53,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,334,334,,,0,2020-02-20 15:04:03,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,327,331,,,0,2020-02-20 15:04:03,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,333,333,,,0,2020-02-22 09:53:57,
migrator/migrator.go,70d60ef,Jinzhu,Fix create join table,335,335,,,1,2020-04-29 12:37:06,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",332,332,Jinzhu,a0aceeb,1,2022-02-19 09:02:53,2022-02-10 02:40:48
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,340,340,,,0,2020-02-20 15:04:03,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,336,339,,,0,2020-02-22 09:53:57,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,342,343,,,0,2020-02-20 15:04:03,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,341,341,,,0,2020-02-22 09:53:57,
migrator/migrator.go,85e9f66,Jinzhu,"Fix create index for other database/schema, close #3698",348,348,,,1,2020-11-05 03:43:21,
migrator/migrator.go,d811795,Jinzhu,Add tests for Tables,345,345,,,0,2020-05-31 02:24:49,
migrator/migrator.go,85e9f66,Jinzhu,"Fix create index for other database/schema, close #3698",346,346,,,1,2020-11-05 03:43:21,
migrator/migrator.go,d811795,Jinzhu,Add tests for Tables,347,347,,,0,2020-05-31 02:24:49,
migrator/migrator.go,85e9f66,Jinzhu,"Fix create index for other database/schema, close #3698",352,352,,,1,2020-11-05 03:43:21,
migrator/migrator.go,d811795,Jinzhu,Add tests for Tables,349,351,,,0,2020-05-31 02:24:49,
migrator/migrator.go,85e9f66,Jinzhu,"Fix create index for other database/schema, close #3698",359,359,,,1,2020-11-05 03:43:21,
migrator/migrator.go,d811795,Jinzhu,Add tests for Tables,353,358,,,0,2020-05-31 02:24:49,
migrator/migrator.go,85e9f66,Jinzhu,"Fix create index for other database/schema, close #3698",363,363,,,1,2020-11-05 03:43:21,
migrator/migrator.go,d811795,Jinzhu,Add tests for Tables,360,362,,,0,2020-05-31 02:24:49,
migrator/migrator.go,d811795,Jinzhu,Add tests for Tables,364,368,,,0,2020-05-31 02:24:49,
migrator/migrator.go,2095d42,Samuel N Cui,"fix: sqlite dialector cannot apply `PRIMARY KEY AUTOINCREMENT` type (#6624)  * fix: sqlite dialector cannot apply `PRIMARY KEY AUTOINCREMENT` type  fix #4760  * feat: add auto increment test  * feat: update sqlite  * feat: update tests deps sqlite to v1.5.4",234,234,,,1,2023-10-09 09:26:27,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,370,371,,,0,2020-02-20 15:04:03,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,374,374,,,0,2020-02-22 09:53:57,
migrator/migrator.go,7892019,PiexlMax(奇淼,Fix panic bug in migrator due to lack of nil check for stmt.Schema (#6932),376,378,Jinzhu,1b0aa80,1,2024-04-26 07:15:49,2024-03-18 11:24:16
migrator/migrator.go,da2b286,Haibo,fix(migrator): ignore relationships when migrating #5913 (#5946),276,280,,,1,2023-01-01 11:54:28,
migrator/migrator.go,85e9f66,Jinzhu,"Fix create index for other database/schema, close #3698",369,369,,,1,2020-11-05 03:43:21,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,382,382,,,0,2020-02-20 15:04:03,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",381,381,Jinzhu,a0aceeb,1,2022-02-19 09:02:53,2022-02-10 02:40:48
migrator/migrator.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",375,375,,,1,2021-06-10 02:21:28,
migrator/migrator.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",383,391,Jinzhu,3694ef4,1,2021-06-10 02:21:28,2021-02-26 09:30:00
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",379,379,Jinzhu,a0aceeb,1,2022-02-19 09:02:53,2022-02-10 02:40:48
migrator/migrator.go,2428506,Jinzhu,"Fix RenameColumn for mssql, DropColumn for sqlite",396,396,,,1,2020-05-31 01:03:51,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",344,344,,,1,2022-02-19 09:02:53,
migrator/migrator.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",380,380,,,1,2021-06-10 02:21:28,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,392,394,,,0,2020-02-20 15:04:03,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,397,397,,,0,2020-02-22 09:53:57,
migrator/migrator.go,7892019,PiexlMax(奇淼,Fix panic bug in migrator due to lack of nil check for stmt.Schema (#6932),398,401,Jinzhu,1b0aa80,1,2024-04-26 07:15:49,2024-03-18 11:24:16
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,402,402,,,0,2020-02-20 15:04:03,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,407,409,,,0,2020-02-20 15:04:03,
migrator/migrator.go,85e9f66,Jinzhu,"Fix create index for other database/schema, close #3698",405,405,,,1,2020-11-05 03:43:21,
migrator/migrator.go,2428506,Jinzhu,"Fix RenameColumn for mssql, DropColumn for sqlite",403,404,,,1,2020-05-31 01:03:51,
migrator/migrator.go,2428506,Jinzhu,"Fix RenameColumn for mssql, DropColumn for sqlite",406,406,,,1,2020-05-31 01:03:51,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,411,412,,,0,2020-02-22 09:53:57,
migrator/migrator.go,7892019,PiexlMax(奇淼,Fix panic bug in migrator due to lack of nil check for stmt.Schema (#6932),421,421,Jinzhu,1b0aa80,1,2024-04-26 07:15:49,2024-03-18 11:24:16
migrator/migrator.go,7892019,PiexlMax(奇淼,Fix panic bug in migrator due to lack of nil check for stmt.Schema (#6932),413,419,Jinzhu,1b0aa80,1,2024-04-26 07:15:49,2024-03-18 11:24:16
migrator/migrator.go,0273856,Jinzhu,"Don't alter column with full column data type, close #3339",420,420,,,0,2020-08-31 08:27:27,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,428,428,,,0,2020-02-22 09:53:57,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,422,426,,,0,2020-02-20 15:04:03,
migrator/migrator.go,05bb9d6,jessetang,refactor(migrator): non-standard codes (#6180),309,310,,,0,2023-04-11 02:32:46,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,429,429,,,0,2020-02-22 05:11:54,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",410,410,heige,9d5f315,1,2022-02-19 09:02:53,2021-11-29 01:33:20
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,432,432,,,0,2020-02-22 05:11:54,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,437,438,,,0,2020-02-22 05:11:54,
migrator/migrator.go,7892019,PiexlMax(奇淼,Fix panic bug in migrator due to lack of nil check for stmt.Schema (#6932),433,436,Jinzhu,1b0aa80,1,2024-04-26 07:15:49,2024-03-18 11:24:16
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,430,431,,,0,2020-02-22 09:53:57,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,439,439,,,0,2020-02-22 09:53:57,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,440,441,,,0,2020-02-22 05:11:54,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,443,444,,,0,2020-02-22 05:11:54,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,442,442,,,0,2020-02-22 09:53:57,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,446,447,,,0,2020-02-22 05:11:54,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,445,445,,,0,2020-02-22 09:53:57,
migrator/migrator.go,2428506,Jinzhu,"Fix RenameColumn for mssql, DropColumn for sqlite",449,449,,,1,2020-05-31 01:03:51,
migrator/migrator.go,7892019,PiexlMax(奇淼,Fix panic bug in migrator due to lack of nil check for stmt.Schema (#6932),451,454,Jinzhu,1b0aa80,1,2024-04-26 07:15:49,2024-03-18 11:24:16
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",372,373,,,1,2022-02-19 09:02:53,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,450,450,,,0,2020-02-22 09:53:57,
migrator/migrator.go,7892019,PiexlMax(奇淼,Fix panic bug in migrator due to lack of nil check for stmt.Schema (#6932),456,458,Jinzhu,1b0aa80,1,2024-04-26 07:15:49,2024-03-18 11:24:16
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",448,448,Jinzhu,3a3b822,1,2022-02-19 09:02:53,2021-11-29 12:24:16
migrator/migrator.go,2428506,Jinzhu,"Fix RenameColumn for mssql, DropColumn for sqlite",459,462,,,1,2020-05-31 01:03:51,
migrator/migrator.go,2428506,Jinzhu,"Fix RenameColumn for mssql, DropColumn for sqlite",455,455,,,1,2020-05-31 01:03:51,
migrator/migrator.go,2428506,Jinzhu,"Fix RenameColumn for mssql, DropColumn for sqlite",464,464,,,1,2020-05-31 01:03:51,
migrator/migrator.go,85e9f66,Jinzhu,"Fix create index for other database/schema, close #3698",463,463,,,1,2020-11-05 03:43:21,
migrator/migrator.go,635dcc9,Michelle,"add gorm ColumnType interface, remove sql one (#3647)",469,469,,,0,2020-10-21 10:35:33,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,465,467,,,0,2020-02-20 15:04:03,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",468,468,Jinzhu,a0aceeb,1,2022-02-19 09:02:53,2022-02-10 02:40:48
migrator/migrator.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",474,474,,,0,2020-08-23 10:16:12,
migrator/migrator.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",476,477,,,0,2020-08-23 10:16:12,
migrator/migrator.go,3d91802,Jinzhu,"Fix unexpected alter table in auto migration, close #5942, #5943",479,480,Cr,73bc53f,1,2023-01-02 13:06:04,2022-09-22 07:56:32
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",395,395,,,1,2022-02-19 09:02:53,
migrator/migrator.go,235c093,Cr,fix(MigrateColumn):declared different type without length (#5465),475,475,Jinzhu,0af95f5,1,2022-06-29 02:07:42,2022-02-19 09:02:53
migrator/migrator.go,62593cf,viatoriche / Maxim Panfilov,"add test: TestAutoMigrateInt8PG: shouldn't execute ALTER COLUMN TYPE smallint, close #5762",478,478,black-06,f5e77aa,0,2022-10-18 09:28:06,2022-05-17 02:59:53
migrator/migrator.go,73bc53f,Cr,"feat: migrator support type aliases (#5627)  * feat: migrator support type aliases  * perf: check type",483,484,black-06,f5e77aa,0,2022-09-22 07:56:32,2022-05-17 02:59:53
migrator/migrator.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",482,482,,,0,2020-08-23 10:16:12,
migrator/migrator.go,62593cf,viatoriche / Maxim Panfilov,"add test: TestAutoMigrateInt8PG: shouldn't execute ALTER COLUMN TYPE smallint, close #5762",481,481,black-06,f5e77aa,0,2022-10-18 09:28:06,2022-05-17 02:59:53
migrator/migrator.go,73bc53f,Cr,"feat: migrator support type aliases (#5627)  * feat: migrator support type aliases  * perf: check type",498,498,Googol Lee,edb00c1,0,2022-09-22 07:56:32,2022-09-14 02:26:51
migrator/migrator.go,62593cf,viatoriche / Maxim Panfilov,"add test: TestAutoMigrateInt8PG: shouldn't execute ALTER COLUMN TYPE smallint, close #5762",485,486,black-06,f5e77aa,0,2022-10-18 09:28:06,2022-05-17 02:59:53
migrator/migrator.go,62593cf,viatoriche / Maxim Panfilov,"add test: TestAutoMigrateInt8PG: shouldn't execute ALTER COLUMN TYPE smallint, close #5762",495,497,Googol Lee,edb00c1,0,2022-10-18 09:28:06,2022-09-14 02:26:51
migrator/migrator.go,73bc53f,Cr,"feat: migrator support type aliases (#5627)  * feat: migrator support type aliases  * perf: check type",487,493,black-06,f5e77aa,0,2022-09-22 07:56:32,2022-05-17 02:59:53
migrator/migrator.go,62593cf,viatoriche / Maxim Panfilov,"add test: TestAutoMigrateInt8PG: shouldn't execute ALTER COLUMN TYPE smallint, close #5762",501,504,Googol Lee,edb00c1,0,2022-10-18 09:28:06,2022-09-14 02:26:51
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",427,427,,,1,2022-02-19 09:02:53,
migrator/migrator.go,73bc53f,Cr,"feat: migrator support type aliases (#5627)  * feat: migrator support type aliases  * perf: check type",494,494,Jinzhu,0af95f5,0,2022-09-22 07:56:32,2022-02-19 09:02:53
migrator/migrator.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",470,473,Cr,73bc53f,1,2024-02-04 07:49:19,2022-09-22 07:56:32
migrator/migrator.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",514,515,,,0,2020-08-23 10:16:12,
migrator/migrator.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",505,505,,,0,2020-08-23 10:16:12,
migrator/migrator.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",516,516,,,0,2020-08-23 10:16:12,
migrator/migrator.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",522,526,,,0,2020-08-23 10:16:12,
migrator/migrator.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",529,532,,,0,2020-08-23 10:16:12,
migrator/migrator.go,48ced75,Jinzhu,Improve support for AutoMigrate,533,533,Jinzhu,a0aceeb,0,2022-02-19 15:42:20,2022-02-10 02:40:48
migrator/migrator.go,b0d70a2,홍성욱,"[#6372] Fixed nullable constraint bug for columns during auto migration (#7269)  * [#6372] Fixed nullable constraint bug for columns during auto migration  * [#6372] fix comment  * [#6372] Add test code  * [#6372] Add test code  * [#6372] Fix failed test case  * [#6372] Fix failed test case  * [#6372] wip  * [#6372] wip  * [#6372] wip  * [#6372] wip",527,528,PiexlMax(奇淼,7892019,1,2024-11-14 09:40:18,2024-04-26 07:15:49
migrator/migrator.go,235c093,Cr,fix(MigrateColumn):declared different type without length (#5465),499,500,Jinzhu,3a3b822,1,2022-06-29 02:07:42,2021-11-29 12:24:16
migrator/migrator.go,62593cf,viatoriche / Maxim Panfilov,"add test: TestAutoMigrateInt8PG: shouldn't execute ALTER COLUMN TYPE smallint, close #5762",517,521,Jinzhu,a0aceeb,0,2022-10-18 09:28:06,2022-02-10 02:40:48
migrator/migrator.go,62593cf,viatoriche / Maxim Panfilov,"add test: TestAutoMigrateInt8PG: shouldn't execute ALTER COLUMN TYPE smallint, close #5762",506,513,Jinzhu,3a3b822,0,2022-10-18 09:28:06,2021-11-29 12:24:16
migrator/migrator.go,bbd2bbe,Ning,fix:Issue migrating field with CURRENT_TIMESTAMP (#5906)  Co-authored-by: ningfei <accelerator314@outlook.com>,537,537,Jinzhu,a0aceeb,1,2022-12-24 03:02:11,2022-02-10 02:40:48
migrator/migrator.go,93986de,Cr,fix: migrate column default value (#5359)  Co-authored-by: Jinzhu <wosmvp@gmail.com>,541,541,Jinzhu,a0aceeb,1,2022-05-28 15:09:13,2022-02-10 02:40:48
migrator/migrator.go,16a2722,Haibo,"fix(migrator): Tag default:'null' always causes field migration #5953 (#5954)  * fix(migrator): Tag default:'null' always causes field migration #5953  * Update migrate_test.go  * Update migrate_test.go  * Update migrate_test.go  Co-authored-by: Jinzhu <wosmvp@gmail.com>",535,535,Jinzhu,3a3b822,1,2023-01-01 14:14:28,2021-11-29 12:24:16
migrator/migrator.go,1b0aa80,Jinzhu,Fix AutoMigrate for bool fields with default value,543,554,black-06,46816ad,1,2024-03-18 11:24:16,2024-02-04 07:49:19
migrator/migrator.go,93986de,Cr,fix: migrate column default value (#5359)  Co-authored-by: Jinzhu <wosmvp@gmail.com>,536,536,,,1,2022-05-28 15:09:13,
migrator/migrator.go,93986de,Cr,fix: migrate column default value (#5359)  Co-authored-by: Jinzhu <wosmvp@gmail.com>,534,534,,,1,2022-05-28 15:09:13,
migrator/migrator.go,8fb9a31,black-06,refactor: part 2 of distinguish between Unique and UniqueIndex (#6822),567,574,Samuel N Cui,2095d42,0,2024-02-06 11:48:40,2023-10-09 09:26:27
migrator/migrator.go,bbd2bbe,Ning,fix:Issue migrating field with CURRENT_TIMESTAMP (#5906)  Co-authored-by: ningfei <accelerator314@outlook.com>,540,540,Jinzhu,a0aceeb,1,2022-12-24 03:02:11,2022-02-10 02:40:48
migrator/migrator.go,93986de,Cr,fix: migrate column default value (#5359)  Co-authored-by: Jinzhu <wosmvp@gmail.com>,539,539,,,1,2022-05-28 15:09:13,
migrator/migrator.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",575,579,,,0,2020-08-23 10:16:12,
migrator/migrator.go,59c01b7,Jinzhu,"Make migrator works with dbresolver, close #3992",604,604,,,0,2021-01-25 02:30:57,
migrator/migrator.go,9fea15a,black-06,"feat: add MigrateColumnUnique (#6640)  * feat: add MigrateColumnUnique  * feat: define new methods  * delete debug in test",580,599,Michael Anstis,532e9cf,0,2023-10-30 09:15:49,2023-02-18 01:06:43
migrator/migrator.go,48ced75,Jinzhu,Improve support for AutoMigrate,556,566,heige,413fe58,0,2022-02-19 15:42:20,2021-08-02 10:44:10
migrator/migrator.go,413fe58,heige,Optimize migrator.go MigrateColumn and ColumnTypes func. (#4532),600,602,,,0,2021-08-02 10:44:10,
migrator/migrator.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",607,607,,,0,2020-02-22 11:41:01,
migrator/migrator.go,05bb9d6,jessetang,refactor(migrator): non-standard codes (#6180),538,538,Jinzhu,3a3b822,0,2023-04-11 02:32:46,2021-11-29 12:24:16
migrator/migrator.go,48ced75,Jinzhu,Improve support for AutoMigrate,542,542,Jinzhu,59c01b7,0,2022-02-19 15:42:20,2021-01-25 02:30:57
migrator/migrator.go,413fe58,heige,Optimize migrator.go MigrateColumn and ColumnTypes func. (#4532),612,619,heige,50e85e1,0,2021-08-02 10:44:10,2021-06-10 02:21:28
migrator/migrator.go,413fe58,heige,Optimize migrator.go MigrateColumn and ColumnTypes func. (#4532),608,608,,,0,2021-08-02 10:44:10,
migrator/migrator.go,413fe58,heige,Optimize migrator.go MigrateColumn and ColumnTypes func. (#4532),621,622,heige,50e85e1,0,2021-08-02 10:44:10,2021-06-10 02:21:28
migrator/migrator.go,413fe58,heige,Optimize migrator.go MigrateColumn and ColumnTypes func. (#4532),605,606,,,0,2021-08-02 10:44:10,
migrator/migrator.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",624,624,,,0,2020-02-22 11:41:01,
migrator/migrator.go,300a23f,Jinzhu,"Check rows.Close error, close #4891",603,603,,,1,2021-12-02 02:39:24,
migrator/migrator.go,413fe58,heige,Optimize migrator.go MigrateColumn and ColumnTypes func. (#4532),625,626,s-takehana,2202e99,0,2021-08-02 10:44:10,2021-07-18 03:47:44
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,627,628,,,0,2020-02-20 15:04:03,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,641,641,,,0,2020-02-22 09:53:57,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,662,663,,,0,2020-02-20 15:04:03,
migrator/migrator.go,300a23f,Jinzhu,"Check rows.Close error, close #4891",609,611,,,1,2021-12-02 02:39:24,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,665,665,,,0,2020-02-22 09:53:57,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,667,668,,,0,2020-02-20 15:04:03,
migrator/migrator.go,93986de,Cr,fix: migrate column default value (#5359)  Co-authored-by: Jinzhu <wosmvp@gmail.com>,555,555,Jinzhu,59c01b7,1,2022-05-28 15:09:13,2021-01-25 02:30:57
migrator/migrator.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",669,680,black-06,9fea15a,1,2024-02-04 07:49:19,2023-10-30 09:15:49
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,682,683,,,0,2020-02-22 05:11:54,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,681,681,,,0,2020-02-22 05:11:54,
migrator/migrator.go,300a23f,Jinzhu,"Check rows.Close error, close #4891",623,623,,,1,2021-12-02 02:39:24,
migrator/migrator.go,916338a,Jinzhu,"Test migrate constraints, close #3986",687,687,,,0,2021-01-26 05:39:34,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",620,620,,,1,2022-02-19 09:02:53,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",664,664,s-takehana,2202e99,1,2022-02-19 09:02:53,2021-07-18 03:47:44
migrator/migrator.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",688,688,black-06,9fea15a,1,2024-02-04 07:49:19,2023-10-30 09:15:49
migrator/migrator.go,916338a,Jinzhu,"Test migrate constraints, close #3986",689,692,,,0,2021-01-26 05:39:34,
migrator/migrator.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",693,698,black-06,9fea15a,1,2024-02-04 07:49:19,2023-10-30 09:15:49
migrator/migrator.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",713,713,black-06,9fea15a,1,2024-02-04 07:49:19,2023-10-30 09:15:49
migrator/migrator.go,916338a,Jinzhu,"Test migrate constraints, close #3986",699,712,,,0,2021-01-26 05:39:34,
migrator/migrator.go,916338a,Jinzhu,"Test migrate constraints, close #3986",714,717,,,0,2021-01-26 05:39:34,
migrator/migrator.go,a80707d,black-06,"Create and drop view (#6097)  * create view  * add comment  * fix test  * check param and add comment",666,666,Jinzhu,a0aceeb,1,2023-02-27 07:43:10,2022-02-10 02:40:48
migrator/migrator.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",721,728,black-06,9fea15a,1,2024-02-04 07:49:19,2023-10-30 09:15:49
migrator/migrator.go,916338a,Jinzhu,"Test migrate constraints, close #3986",729,733,,,0,2021-01-26 05:39:34,
migrator/migrator.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",734,734,black-06,9fea15a,1,2024-02-04 07:49:19,2023-10-30 09:15:49
migrator/migrator.go,916338a,Jinzhu,"Test migrate constraints, close #3986",735,737,,,0,2021-01-26 05:39:34,
migrator/migrator.go,916338a,Jinzhu,"Test migrate constraints, close #3986",740,741,,,0,2021-01-26 05:39:34,
migrator/migrator.go,3694ef4,Jinzhu,Fix get current table,738,738,,,1,2021-02-26 09:30:00,
migrator/migrator.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",739,739,black-06,9fea15a,1,2024-02-04 07:49:19,2023-10-30 09:15:49
migrator/migrator.go,9e5a4e3,heige,Fix migrator GuessConstraintAndTable method for return value for *schema.Check (#4527),718,720,,,1,2021-08-03 03:40:57,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,743,744,,,0,2020-02-22 09:53:57,
migrator/migrator.go,916338a,Jinzhu,"Test migrate constraints, close #3986",746,746,,,0,2021-01-26 05:39:34,
migrator/migrator.go,916338a,Jinzhu,"Test migrate constraints, close #3986",748,749,,,0,2021-01-26 05:39:34,
migrator/migrator.go,0be4817,Jinzhu,Finish CreateConstraint,750,750,,,0,2020-02-22 03:15:51,
migrator/migrator.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",751,751,black-06,9fea15a,1,2024-02-04 07:49:19,2023-10-30 09:15:49
migrator/migrator.go,916338a,Jinzhu,"Test migrate constraints, close #3986",752,752,,,0,2021-01-26 05:39:34,
migrator/migrator.go,916338a,Jinzhu,"Test migrate constraints, close #3986",754,754,,,0,2021-01-26 05:39:34,
migrator/migrator.go,0be4817,Jinzhu,Finish CreateConstraint,753,753,,,0,2020-02-22 03:15:51,
migrator/migrator.go,0be4817,Jinzhu,Finish CreateConstraint,755,755,,,0,2020-02-22 03:15:51,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,756,757,,,0,2020-02-20 15:04:03,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,759,760,,,0,2020-02-22 09:53:57,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",742,742,,,1,2022-02-19 09:02:53,
migrator/migrator.go,916338a,Jinzhu,"Test migrate constraints, close #3986",762,762,,,0,2021-01-26 05:39:34,
migrator/migrator.go,a80707d,black-06,"Create and drop view (#6097)  * create view  * add comment  * fix test  * check param and add comment",642,661,heige,413fe58,1,2023-02-27 07:43:10,2021-08-02 10:44:10
migrator/migrator.go,916338a,Jinzhu,"Test migrate constraints, close #3986",764,765,,,0,2021-01-26 05:39:34,
migrator/migrator.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",745,745,Jinzhu,a0aceeb,1,2024-02-04 07:49:19,2022-02-10 02:40:48
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,766,768,,,0,2020-02-20 15:04:03,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,770,770,,,0,2020-02-22 09:53:57,
migrator/migrator.go,a80707d,black-06,"Create and drop view (#6097)  * create view  * add comment  * fix test  * check param and add comment",629,640,Jinzhu,59c01b7,1,2023-02-27 07:43:10,2021-01-25 02:30:57
migrator/migrator.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),747,747,,,0,2022-01-06 07:02:53,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,772,773,,,0,2020-02-22 09:53:57,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,771,771,,,0,2020-02-22 05:11:54,
migrator/migrator.go,916338a,Jinzhu,"Test migrate constraints, close #3986",775,775,,,0,2021-01-26 05:39:34,
migrator/migrator.go,916338a,Jinzhu,"Test migrate constraints, close #3986",777,778,,,0,2021-01-26 05:39:34,
migrator/migrator.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",684,686,Jinzhu,59c01b7,1,2024-02-04 07:49:19,2021-01-25 02:30:57
migrator/migrator.go,d0764be,Jinzhu,Test migrate with comment and check created constraints,780,780,,,0,2020-06-21 05:59:43,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",758,758,,,1,2022-02-19 09:02:53,
migrator/migrator.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",763,763,Jinzhu,a0aceeb,1,2024-02-04 07:49:19,2022-02-10 02:40:48
migrator/migrator.go,916338a,Jinzhu,"Test migrate constraints, close #3986",781,781,,,0,2021-01-26 05:39:34,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,779,779,,,0,2020-02-22 09:53:57,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,782,782,,,0,2020-02-22 09:53:57,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,783,784,,,0,2020-02-22 05:11:54,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,786,787,,,0,2020-02-22 05:11:54,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,785,785,,,0,2020-02-22 09:53:57,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,789,789,,,0,2020-02-22 09:53:57,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,798,801,,,0,2020-02-22 09:53:57,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,790,797,,,0,2020-02-22 05:11:54,
migrator/migrator.go,0801cdf,Jinzhu,Almost finish Migrator,802,809,,,0,2020-02-22 05:11:54,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",769,769,,,1,2022-02-19 09:02:53,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,811,814,,,0,2020-02-22 09:53:57,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",810,810,Jinzhu,a0aceeb,1,2022-02-19 09:02:53,2022-02-10 02:40:48
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",815,815,Jinzhu,a0aceeb,1,2022-02-19 09:02:53,2022-02-10 02:40:48
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,816,817,,,0,2020-02-22 09:53:57,
migrator/migrator.go,7c0de91,Jinzhu,Test Migrate Indexes,821,821,,,0,2020-05-30 14:43:41,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,822,822,,,0,2020-02-22 09:53:57,
migrator/migrator.go,0be4817,Jinzhu,Finish CreateConstraint,831,834,,,0,2020-02-22 03:15:51,
migrator/migrator.go,85e9f66,Jinzhu,"Fix create index for other database/schema, close #3698",823,823,,,1,2020-11-05 03:43:21,
migrator/migrator.go,7892019,PiexlMax(奇淼,Fix panic bug in migrator due to lack of nil check for stmt.Schema (#6932),818,820,Jinzhu,1b0aa80,1,2024-04-26 07:15:49,2024-03-18 11:24:16
migrator/migrator.go,0be4817,Jinzhu,Finish CreateConstraint,824,830,,,0,2020-02-22 03:15:51,
migrator/migrator.go,5fee5b1,Jinzhu,Add option tag support for index,839,842,,,0,2020-10-21 12:18:21,
migrator/migrator.go,0be4817,Jinzhu,Finish CreateConstraint,844,844,,,0,2020-02-22 03:15:51,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,843,843,,,0,2020-02-22 09:53:57,
migrator/migrator.go,7c0de91,Jinzhu,Test Migrate Indexes,845,845,,,0,2020-05-30 14:43:41,
migrator/migrator.go,2202e99,s-takehana,"Fix create index with comments in MySQL (#4521)  * Fix create index with comments in MySQL  * Fix tests",835,838,,,1,2021-07-18 03:47:44,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,848,849,,,0,2020-02-20 15:04:03,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",788,788,,,1,2022-02-19 09:02:53,
migrator/migrator.go,5115813,heige,Fix preload fmt.Errorf formatter (#4531),846,846,,,1,2021-07-28 10:50:08,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,851,852,,,0,2020-02-22 09:53:57,
migrator/migrator.go,0be4817,Jinzhu,Finish CreateConstraint,847,847,,,0,2020-02-22 03:15:51,
migrator/migrator.go,7c0de91,Jinzhu,Test Migrate Indexes,857,858,,,0,2020-05-30 14:43:41,
migrator/migrator.go,85e9f66,Jinzhu,"Fix create index for other database/schema, close #3698",859,859,,,1,2020-11-05 03:43:21,
migrator/migrator.go,7892019,PiexlMax(奇淼,Fix panic bug in migrator due to lack of nil check for stmt.Schema (#6932),853,856,Jinzhu,1b0aa80,1,2024-04-26 07:15:49,2024-03-18 11:24:16
migrator/migrator.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",761,761,Jinzhu,59c01b7,1,2024-02-04 07:49:19,2021-01-25 02:30:57
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,860,862,,,0,2020-02-20 15:04:03,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,864,864,,,0,2020-02-22 09:53:57,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,865,865,,,0,2020-02-20 15:04:03,
migrator/migrator.go,7892019,PiexlMax(奇淼,Fix panic bug in migrator due to lack of nil check for stmt.Schema (#6932),868,871,Jinzhu,1b0aa80,1,2024-04-26 07:15:49,2024-03-18 11:24:16
migrator/migrator.go,7c0de91,Jinzhu,Test Migrate Indexes,872,873,,,0,2020-05-30 14:43:41,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,866,867,,,0,2020-02-22 09:53:57,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,877,877,,,0,2020-02-22 09:53:57,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,874,874,,,0,2020-02-22 09:53:57,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,878,879,,,0,2020-02-20 15:04:03,
migrator/migrator.go,0be4817,Jinzhu,Finish CreateConstraint,875,876,,,0,2020-02-22 03:15:51,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,880,880,,,0,2020-02-22 09:53:57,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,884,886,,,0,2020-02-22 09:53:57,
migrator/migrator.go,0be4817,Jinzhu,Finish CreateConstraint,887,887,,,0,2020-02-22 03:15:51,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,881,882,,,0,2020-02-20 15:04:03,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,890,892,,,0,2020-02-20 15:04:03,
migrator/migrator.go,0be4817,Jinzhu,Finish CreateConstraint,889,889,,,0,2020-02-22 03:15:51,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",850,850,,,1,2022-02-19 09:02:53,
migrator/migrator.go,85e9f66,Jinzhu,"Fix create index for other database/schema, close #3698",888,888,,,1,2020-11-05 03:43:21,
migrator/migrator.go,62dcd78,Jinzhu,Add Migrator,896,897,,,0,2020-02-20 15:04:03,
migrator/migrator.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,894,895,,,0,2020-02-22 09:53:57,
migrator/migrator.go,a67be2a,Jinzhu,Refactor reorder migrator models,902,902,,,0,2020-02-23 00:54:13,
migrator/migrator.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,903,908,,,0,2020-02-22 16:18:12,
migrator/migrator.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,898,901,,,0,2020-02-22 16:18:12,
migrator/migrator.go,a67be2a,Jinzhu,Refactor reorder migrator models,910,911,,,0,2020-02-23 00:54:13,
migrator/migrator.go,c9d5c0b,Jinzhu,"Fix create database foreign keys for same type having has many/one & many2many relationships, close #3424",909,909,,,1,2020-09-08 10:25:29,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",863,863,,,1,2022-02-19 09:02:53,
migrator/migrator.go,a67be2a,Jinzhu,Refactor reorder migrator models,916,916,,,0,2020-02-23 00:54:13,
migrator/migrator.go,9e8a4db,Jinzhu,Use *gorm.DB to replace gorm.DB,917,917,,,0,2020-03-10 00:39:33,
migrator/migrator.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,913,914,,,0,2020-02-22 16:18:12,
migrator/migrator.go,4a01d4c,Jinzhu,Create join table with ReorderModels,912,912,,,0,2020-06-24 09:19:11,
migrator/migrator.go,a67be2a,Jinzhu,Refactor reorder migrator models,918,918,,,0,2020-02-23 00:54:13,
migrator/migrator.go,4a01d4c,Jinzhu,Create join table with ReorderModels,915,915,,,0,2020-06-24 09:19:11,
migrator/migrator.go,c9d5c0b,Jinzhu,"Fix create database foreign keys for same type having has many/one & many2many relationships, close #3424",919,919,,,1,2020-09-08 10:25:29,
migrator/migrator.go,4456df7,Jinzhu,Lint with golangci-lint,922,923,,,0,2020-07-16 03:27:12,
migrator/migrator.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,928,928,,,0,2020-02-22 16:18:12,
migrator/migrator.go,c9d5c0b,Jinzhu,"Fix create database foreign keys for same type having has many/one & many2many relationships, close #3424",924,927,,,1,2020-09-08 10:25:29,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",883,883,,,1,2022-02-19 09:02:53,
migrator/migrator.go,fee1e4a,Jinzhu,Fix create foreign keys for many2many relations,937,937,,,1,2020-06-21 02:48:23,
migrator/migrator.go,c9d5c0b,Jinzhu,"Fix create database foreign keys for same type having has many/one & many2many relationships, close #3424",941,941,,,1,2020-09-08 10:25:29,
migrator/migrator.go,fee1e4a,Jinzhu,Fix create foreign keys for many2many relations,954,954,,,1,2020-06-21 02:48:23,
migrator/migrator.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,955,955,,,0,2020-02-22 16:18:12,
migrator/migrator.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,956,956,,,0,2020-02-22 16:18:12,
migrator/migrator.go,a67be2a,Jinzhu,Refactor reorder migrator models,957,957,,,0,2020-02-23 00:54:13,
migrator/migrator.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,958,958,,,0,2020-02-22 16:18:12,
migrator/migrator.go,a67be2a,Jinzhu,Refactor reorder migrator models,959,961,,,0,2020-02-23 00:54:13,
migrator/migrator.go,da2b286,Haibo,fix(migrator): ignore relationships when migrating #5913 (#5946),929,936,,,1,2023-01-01 11:54:28,
migrator/migrator.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,962,963,,,0,2020-02-22 16:18:12,
migrator/migrator.go,a67be2a,Jinzhu,Refactor reorder migrator models,964,964,,,0,2020-02-23 00:54:13,
migrator/migrator.go,a67be2a,Jinzhu,Refactor reorder migrator models,966,966,,,0,2020-02-23 00:54:13,
migrator/migrator.go,da2b286,Haibo,fix(migrator): ignore relationships when migrating #5913 (#5946),938,940,,,1,2023-01-01 11:54:28,
migrator/migrator.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,965,965,,,0,2020-02-22 16:18:12,
migrator/migrator.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,967,967,,,0,2020-02-22 16:18:12,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",893,893,,,1,2022-02-19 09:02:53,
migrator/migrator.go,da2b286,Haibo,fix(migrator): ignore relationships when migrating #5913 (#5946),942,953,,,1,2023-01-01 11:54:28,
migrator/migrator.go,6095dbf,Jinzhu,"Fix parse embedded relations, close #3964, #3965",970,978,,,1,2021-01-19 07:40:04,
migrator/migrator.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,969,969,,,0,2020-02-22 16:18:12,
migrator/migrator.go,fee1e4a,Jinzhu,Fix create foreign keys for many2many relations,968,968,,,1,2020-06-21 02:48:23,
migrator/migrator.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,983,984,,,0,2020-02-22 16:18:12,
migrator/migrator.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,979,982,,,0,2020-02-22 16:18:12,
migrator/migrator.go,a67be2a,Jinzhu,Refactor reorder migrator models,985,985,,,0,2020-02-23 00:54:13,
migrator/migrator.go,e647855,Jinzhu,"Add helper methods to check user, pet",986,990,,,0,2020-05-23 10:05:26,
migrator/migrator.go,a67be2a,Jinzhu,Refactor reorder migrator models,991,992,,,0,2020-02-23 00:54:13,
migrator/migrator.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,993,993,,,0,2020-02-22 16:18:12,
migrator/migrator.go,a67be2a,Jinzhu,Refactor reorder migrator models,998,998,,,0,2020-02-23 00:54:13,
migrator/migrator.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,995,997,,,0,2020-02-22 16:18:12,
migrator/migrator.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,999,1001,,,0,2020-02-22 16:18:12,
migrator/migrator.go,85e9f66,Jinzhu,"Fix create index for other database/schema, close #3698",1002,1002,,,1,2020-11-05 03:43:21,
migrator/migrator.go,a67be2a,Jinzhu,Refactor reorder migrator models,994,994,,,0,2020-02-23 00:54:13,
migrator/migrator.go,85e9f66,Jinzhu,"Fix create index for other database/schema, close #3698",1004,1009,,,1,2020-11-05 03:43:21,
migrator/migrator.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",1003,1003,,,1,2022-02-19 09:02:53,
migrator/migrator.go,1305f63,qqxhb,"feat: add method GetIndexes (#5436)  * feat: add method GetIndexes  * feat: add default impl for Index interface  * feat: fmt",1010,1014,,,0,2022-06-17 03:00:57,
migrator/migrator.go,73bc53f,Cr,"feat: migrator support type aliases (#5627)  * feat: migrator support type aliases  * perf: check type",1015,1019,,,0,2022-09-22 07:56:32,
migrator/migrator.go,bd7e42e,Cr,"fix: AutoMigrate with special table name (#5301)  * fix: AutoMigrate with special table name  * test: migrate with special table name",920,921,,,1,2022-04-27 13:13:48,
migrator/migrator.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",776,776,,,1,2024-02-04 07:49:19,
migrator/migrator.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",774,774,,,1,2024-02-04 07:49:19,
migrator/migrator.go,e61b98d,John Mai,"feat: migrator support table comment (#6225)  * feat: migrator support table comment  * feat: migrator support tableType.It like ColumnTypes  * Avoid updating the go.mod file.  * Update tests_all.sh  * Update migrator.go  * remove Catalog() & Engine() methods.  * remove CatalogValue & EngineValue.  ---------  Co-authored-by: Jinzhu <wosmvp@gmail.com>",1020,1024,,,0,2023-05-05 07:58:27,
tests/create_test.go,28121d4,Jinzhu,"Fix panic when batch creating from slice contains invalid data, close #3385",4,4,Jinzhu,48b395b,1,2020-09-03 12:59:41,2020-09-03 03:32:30
tests/create_test.go,6848ae8,Jinzhu,"Fix gorm.Expr with SubQuery, fix #3857",6,6,Jinzhu,0c12a4c,1,2020-12-15 07:50:35,2020-12-02 06:59:50
tests/create_test.go,b3b19a5,Jinzhu,Test Override NowFunc,8,8,Jinzhu,1e7eb12,0,2020-05-31 03:34:59,2020-05-31 03:19:45
tests/create_test.go,5790ba9,Jinzhu,Fix package path,10,10,Jinzhu,e986371,1,2020-06-02 01:25:55,2020-06-02 01:18:01
tests/create_test.go,bb68f0d,Jinzhu,Refactor tests,7,7,Jinzhu,d833efe,0,2020-05-23 08:08:50,2020-02-02 11:11:17
tests/create_test.go,3207ad6,FangSqing,map insert support return increment id (#6662),5,5,black-06,ac20d9e,0,2023-11-15 13:32:56,2023-04-21 14:09:38
tests/create_test.go,bb68f0d,Jinzhu,Refactor tests,1,3,Jinzhu,d833efe,0,2020-05-23 08:08:50,2020-02-02 11:11:17
tests/create_test.go,bb68f0d,Jinzhu,Refactor tests,9,9,Jinzhu,d833efe,0,2020-05-23 08:08:50,2020-02-02 11:11:17
tests/create_test.go,e986371,Jinzhu,Rename package name,11,11,Jinzhu,9d3e929,0,2020-06-02 01:18:01,2020-05-31 05:34:53
tests/create_test.go,5883490,Jinzhu,"Select, Omit, Preload supports clause.Associations",12,12,maiyama18,1bbaa43,0,2020-06-20 09:21:01,2020-06-14 01:24:07
tests/create_test.go,bb68f0d,Jinzhu,Refactor tests,14,16,Jinzhu,d833efe,0,2020-05-23 08:08:50,2020-02-02 11:11:17
tests/create_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),17,17,kinggo,ec58e33,0,2022-01-06 07:02:53,2021-10-12 13:19:08
tests/create_test.go,e647855,Jinzhu,"Add helper methods to check user, pet",39,39,Jinzhu,bb68f0d,0,2020-05-23 10:05:26,2020-05-23 08:08:50
tests/create_test.go,bb68f0d,Jinzhu,Refactor tests,18,18,Jinzhu,d833efe,0,2020-05-23 08:08:50,2020-02-02 11:11:17
tests/create_test.go,0c12a4c,Jinzhu,Add CreateBatchSize option,55,87,Jinzhu,a8db54a,0,2020-12-02 06:59:50,2020-11-16 13:42:30
tests/create_test.go,a8db54a,Jinzhu,Add CreateInBatches supports,45,54,Jinzhu,28121d4,0,2020-11-16 13:42:30,2020-09-03 12:59:41
tests/create_test.go,e647855,Jinzhu,"Add helper methods to check user, pet",41,41,Jinzhu,bb68f0d,0,2020-05-23 10:05:26,2020-05-23 08:08:50
tests/create_test.go,bb68f0d,Jinzhu,Refactor tests,40,40,Jinzhu,d833efe,0,2020-05-23 08:08:50,2020-02-02 11:11:17
tests/create_test.go,bb68f0d,Jinzhu,Refactor tests,23,38,Jinzhu,d833efe,0,2020-05-23 08:08:50,2020-02-02 11:11:17
tests/create_test.go,bb68f0d,Jinzhu,Refactor tests,42,44,Jinzhu,d833efe,0,2020-05-23 08:08:50,2020-02-02 11:11:17
tests/create_test.go,1e7eb12,Jinzhu,Test empty struct,19,22,Jinzhu,d833efe,0,2020-05-31 03:19:45,2020-02-02 11:11:17
tests/create_test.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",127,127,kinggo,b47cf57,1,2022-02-19 09:02:53,2022-01-06 07:02:53
tests/create_test.go,8bb05a5,Jinzhu,Refactor tests files,13,13,Jinzhu,590f622,0,2020-06-02 02:50:38,2020-05-23 14:32:16
tests/create_test.go,e647855,Jinzhu,"Add helper methods to check user, pet",142,142,Jinzhu,d833efe,0,2020-05-23 10:05:26,2020-02-02 11:11:17
tests/create_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),143,143,kinggo,ec58e33,0,2022-01-06 07:02:53,2021-10-12 13:19:08
tests/create_test.go,a8db54a,Jinzhu,Add CreateInBatches supports,88,102,Jinzhu,6ed697d,0,2020-11-16 13:42:30,2020-07-23 15:41:56
tests/create_test.go,e647855,Jinzhu,"Add helper methods to check user, pet",144,155,Jinzhu,d833efe,0,2020-05-23 10:05:26,2020-02-02 11:11:17
tests/create_test.go,bb68f0d,Jinzhu,Refactor tests,156,157,Jinzhu,d833efe,0,2020-05-23 08:08:50,2020-02-02 11:11:17
tests/create_test.go,bb68f0d,Jinzhu,Refactor tests,159,159,Jinzhu,d833efe,0,2020-05-23 08:08:50,2020-02-02 11:11:17
tests/create_test.go,e647855,Jinzhu,"Add helper methods to check user, pet",160,160,Jinzhu,d833efe,0,2020-05-23 10:05:26,2020-02-02 11:11:17
tests/create_test.go,590f622,Jinzhu,Refactor create tests,161,161,Jinzhu,5ec4fee,0,2020-05-23 14:32:16,2020-05-23 13:09:03
tests/create_test.go,bb68f0d,Jinzhu,Refactor tests,164,164,Jinzhu,d833efe,0,2020-05-23 08:08:50,2020-02-02 11:11:17
tests/create_test.go,e647855,Jinzhu,"Add helper methods to check user, pet",162,163,Jinzhu,d833efe,0,2020-05-23 10:05:26,2020-02-02 11:11:17
tests/create_test.go,1e7eb12,Jinzhu,Test empty struct,177,180,Jinzhu,5ec4fee,0,2020-05-31 03:19:45,2020-05-23 13:09:03
tests/create_test.go,e647855,Jinzhu,"Add helper methods to check user, pet",158,158,Jinzhu,d833efe,0,2020-05-23 10:05:26,2020-02-02 11:11:17
tests/create_test.go,5ec4fee,Jinzhu,Don't preload if foreign keys zero,165,176,Jinzhu,d833efe,0,2020-05-23 13:09:03,2020-02-02 11:11:17
tests/create_test.go,5ec4fee,Jinzhu,Don't preload if foreign keys zero,181,194,Jinzhu,d833efe,0,2020-05-23 13:09:03,2020-02-02 11:11:17
tests/create_test.go,bb68f0d,Jinzhu,Refactor tests,207,207,Jinzhu,d833efe,0,2020-05-23 08:08:50,2020-02-02 11:11:17
tests/create_test.go,590f622,Jinzhu,Refactor create tests,196,206,,,0,2020-05-23 14:32:16,
tests/create_test.go,bb68f0d,Jinzhu,Refactor tests,211,211,Jinzhu,d833efe,0,2020-05-23 08:08:50,2020-02-02 11:11:17
tests/create_test.go,e647855,Jinzhu,"Add helper methods to check user, pet",195,195,Jinzhu,d833efe,0,2020-05-23 10:05:26,2020-02-02 11:11:17
tests/create_test.go,9fcc337,Jinzhu,Fix create from map,103,126,Jinzhu,590f622,1,2020-08-17 09:41:36,2020-05-23 14:32:16
tests/create_test.go,bb68f0d,Jinzhu,Refactor tests,217,217,Jinzhu,d833efe,0,2020-05-23 08:08:50,2020-02-02 11:11:17
tests/create_test.go,590f622,Jinzhu,Refactor create tests,212,216,,,0,2020-05-23 14:32:16,
tests/create_test.go,9fcc337,Jinzhu,Fix create from map,128,141,Jinzhu,5ec4fee,1,2020-08-17 09:41:36,2020-05-23 13:09:03
tests/create_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),227,227,kinggo,ec58e33,0,2022-01-06 07:02:53,2021-10-12 13:19:08
tests/create_test.go,590f622,Jinzhu,Refactor create tests,208,210,,,0,2020-05-23 14:32:16,
tests/create_test.go,bb68f0d,Jinzhu,Refactor tests,231,231,Jinzhu,d833efe,0,2020-05-23 08:08:50,2020-02-02 11:11:17
tests/create_test.go,bb68f0d,Jinzhu,Refactor tests,235,235,Jinzhu,d833efe,0,2020-05-23 08:08:50,2020-02-02 11:11:17
tests/create_test.go,590f622,Jinzhu,Refactor create tests,218,223,,,0,2020-05-23 14:32:16,
tests/create_test.go,590f622,Jinzhu,Refactor create tests,228,230,,,0,2020-05-23 14:32:16,
tests/create_test.go,590f622,Jinzhu,Refactor create tests,232,234,,,0,2020-05-23 14:32:16,
tests/create_test.go,590f622,Jinzhu,Refactor create tests,225,226,,,0,2020-05-23 14:32:16,
tests/create_test.go,bb68f0d,Jinzhu,Refactor tests,224,224,Jinzhu,d833efe,0,2020-05-23 08:08:50,2020-02-02 11:11:17
tests/create_test.go,bb68f0d,Jinzhu,Refactor tests,242,242,Jinzhu,d833efe,0,2020-05-23 08:08:50,2020-02-02 11:11:17
tests/create_test.go,590f622,Jinzhu,Refactor create tests,236,236,,,0,2020-05-23 14:32:16,
tests/create_test.go,bb68f0d,Jinzhu,Refactor tests,237,237,Jinzhu,d833efe,0,2020-05-23 08:08:50,2020-02-02 11:11:17
tests/create_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),244,244,kinggo,ec58e33,0,2022-01-06 07:02:53,2021-10-12 13:19:08
tests/create_test.go,bb68f0d,Jinzhu,Refactor tests,271,271,Jinzhu,d833efe,0,2020-05-23 08:08:50,2020-02-02 11:11:17
tests/create_test.go,590f622,Jinzhu,Refactor create tests,243,243,,,0,2020-05-23 14:32:16,
tests/create_test.go,590f622,Jinzhu,Refactor create tests,238,241,,,0,2020-05-23 14:32:16,
tests/create_test.go,590f622,Jinzhu,Refactor create tests,245,270,,,0,2020-05-23 14:32:16,
tests/create_test.go,590f622,Jinzhu,Refactor create tests,274,291,,,0,2020-05-23 14:32:16,
tests/create_test.go,590f622,Jinzhu,Refactor create tests,272,272,,,0,2020-05-23 14:32:16,
tests/create_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),273,273,kinggo,ec58e33,0,2022-01-06 07:02:53,2021-10-12 13:19:08
tests/create_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),315,315,kinggo,ec58e33,0,2022-01-06 07:02:53,2021-10-12 13:19:08
tests/create_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),294,294,kinggo,ec58e33,0,2022-01-06 07:02:53,2021-10-12 13:19:08
tests/create_test.go,b733d16,Hinagiku Soranoba,"Create supports Array / ArrayPtr (#3076)  * add Array / ArrayPtr create tests  * support create using array",292,293,Jinzhu,8bb05a5,0,2020-06-23 06:38:36,2020-06-02 02:50:38
tests/create_test.go,b733d16,Hinagiku Soranoba,"Create supports Array / ArrayPtr (#3076)  * add Array / ArrayPtr create tests  * support create using array",316,333,maiyama18,1bbaa43,0,2020-06-23 06:38:36,2020-06-14 01:24:07
tests/create_test.go,590f622,Jinzhu,Refactor create tests,334,334,,,0,2020-05-23 14:32:16,
tests/create_test.go,1e7eb12,Jinzhu,Test empty struct,337,349,,,0,2020-05-31 03:19:45,
tests/create_test.go,1e7eb12,Jinzhu,Test empty struct,335,335,,,0,2020-05-31 03:19:45,
tests/create_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),352,352,kinggo,ec58e33,0,2022-01-06 07:02:53,2021-10-12 13:19:08
tests/create_test.go,b733d16,Hinagiku Soranoba,"Create supports Array / ArrayPtr (#3076)  * add Array / ArrayPtr create tests  * support create using array",295,314,Jinzhu,1546f8a,0,2020-06-23 06:38:36,2020-05-31 04:52:49
tests/create_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),357,357,kinggo,ec58e33,0,2022-01-06 07:02:53,2021-10-12 13:19:08
tests/create_test.go,b3b19a5,Jinzhu,Test Override NowFunc,375,397,,,0,2020-05-31 03:34:59,
tests/create_test.go,b3b19a5,Jinzhu,Test Override NowFunc,398,412,,,0,2020-05-31 03:34:59,
tests/create_test.go,b3b19a5,Jinzhu,Test Override NowFunc,350,350,,,0,2020-05-31 03:34:59,
tests/create_test.go,48b395b,Jinzhu,returns ErrEmptySlice when creating with zero length slice,351,351,Jinzhu,b3b19a5,0,2020-09-03 03:32:30,2020-05-31 03:34:59
tests/create_test.go,48b395b,Jinzhu,returns ErrEmptySlice when creating with zero length slice,353,356,Jinzhu,1546f8a,0,2020-09-03 03:32:30,2020-05-31 04:52:49
tests/create_test.go,48b395b,Jinzhu,returns ErrEmptySlice when creating with zero length slice,358,362,Hinagiku Soranoba,b733d16,0,2020-09-03 03:32:30,2020-06-23 06:38:36
tests/create_test.go,28121d4,Jinzhu,"Fix panic when batch creating from slice contains invalid data, close #3385",363,374,Hinagiku Soranoba,b733d16,1,2020-09-03 12:59:41,2020-06-23 06:38:36
tests/create_test.go,1546f8a,Jinzhu,Test CreateWithNoGORMPrimayKey,413,413,,,0,2020-05-31 04:52:49,
tests/create_test.go,9d3e929,Jinzhu,"Test Select, Omit with Create",431,433,,,0,2020-05-31 05:34:53,
tests/create_test.go,9d3e929,Jinzhu,"Test Select, Omit with Create",435,451,,,0,2020-05-31 05:34:53,
tests/create_test.go,9d3e929,Jinzhu,"Test Select, Omit with Create",454,459,,,0,2020-05-31 05:34:53,
tests/create_test.go,1bbaa43,maiyama18,fix typos in test method names (#3052),414,414,,,1,2020-06-14 01:24:07,
tests/create_test.go,1546f8a,Jinzhu,Test CreateWithNoGORMPrimayKey,415,430,,,0,2020-05-31 04:52:49,
tests/create_test.go,9d3e929,Jinzhu,"Test Select, Omit with Create",478,478,,,0,2020-05-31 05:34:53,
tests/create_test.go,dc1ae39,t-inagaki@hum_op,"fixed FirstOrCreate not handled error when table is not exists (#5367)  * fixed FirstOrCreate not handled error when table is not exists  * delete useless part",480,486,Cr,a65912c,1,2022-05-28 14:18:43,2022-04-13 07:52:07
tests/create_test.go,1a2fabb,Jinzhu,Test Not,434,434,,,0,2020-07-05 03:56:12,
tests/create_test.go,ec58e33,kinggo,"fixed:panic when create value from nil struct pointer. (#4771)  * fixed:create nil pointer  * fixed:panic when create value from nil struct pointer.",528,536,Jinzhu,6848ae8,1,2021-10-12 13:19:08,2020-12-15 07:50:35
tests/create_test.go,6848ae8,Jinzhu,"Fix gorm.Expr with SubQuery, fix #3857",505,527,Jinzhu,0c12a4c,1,2020-12-15 07:50:35,2020-12-02 06:59:50
tests/create_test.go,e9f25c7,Cr,"fix: on confilct with default null (#6129)  * fix: on confilct with default null  * Update create.go  ---------  Co-authored-by: Jinzhu <wosmvp@gmail.com>",551,551,t-inagaki@hum_op,dc1ae39,1,2023-03-10 08:35:26,2022-05-28 14:18:43
tests/create_test.go,a65912c,Cr,fix: FirstOrCreate RowsAffected (#5250),537,550,Jinzhu,39d84cb,1,2022-04-13 07:52:07,2022-02-19 09:02:53
tests/create_test.go,ed47415,Truong Nguyen,"Fix: Composite primary key with auto-increment value returns 0 after insert (#6127)  * Fix #4930 workaround for databases that support auto-increment in composite primary key.  * Add test for composite key with auto-increment.  * schema.go: use field.AutoIncrement instead of field.TagSettings[""AUTOINCREMENT""], add test to check autoincrement:false  create_test.go: remove unused code: drop table CompositeKeyProduct  ---------  Co-authored-by: Jinzhu <wosmvp@gmail.com>",552,559,Cr,e9f25c7,1,2023-03-10 08:50:03,2023-03-10 08:35:26
tests/create_test.go,5883490,Jinzhu,"Select, Omit, Preload supports clause.Associations",460,477,,,0,2020-06-20 09:21:01,
tests/create_test.go,ed47415,Truong Nguyen,"Fix: Composite primary key with auto-increment value returns 0 after insert (#6127)  * Fix #4930 workaround for databases that support auto-increment in composite primary key.  * Add test for composite key with auto-increment.  * schema.go: use field.AutoIncrement instead of field.TagSettings[""AUTOINCREMENT""], add test to check autoincrement:false  create_test.go: remove unused code: drop table CompositeKeyProduct  ---------  Co-authored-by: Jinzhu <wosmvp@gmail.com>",563,583,Cr,e9f25c7,1,2023-03-10 08:50:03,2023-03-10 08:35:26
tests/create_test.go,ac20d9e,black-06,"fix: unit test (#6250)  * fix: unit test  * fix create test  https://github.com/go-gorm/gorm/pull/6127#discussion_r1171214125  * style: rename to adaptorSerializerModel",560,562,Truong Nguyen,ed47415,1,2023-04-21 14:09:38,2023-03-10 08:50:03
tests/create_test.go,3207ad6,FangSqing,map insert support return increment id (#6662),584,584,black-06,ac20d9e,0,2023-11-15 13:32:56,2023-04-21 14:09:38
tests/create_test.go,f17a752,hishope,Signed-off-by: hishope <csqiye@126.com>  fix some typos in tests  Signed-off-by: hishope <csqiye@126.com>,585,585,FangSqing,3207ad6,1,2024-03-07 08:19:17,2023-11-15 13:32:56
tests/create_test.go,1bbaa43,maiyama18,fix typos in test method names (#3052),336,336,,,1,2020-06-14 01:24:07,
tests/create_test.go,f17a752,hishope,Signed-off-by: hishope <csqiye@126.com>  fix some typos in tests  Signed-off-by: hishope <csqiye@126.com>,592,592,FangSqing,3207ad6,1,2024-03-07 08:19:17,2023-11-15 13:32:56
tests/create_test.go,f17a752,hishope,Signed-off-by: hishope <csqiye@126.com>  fix some typos in tests  Signed-off-by: hishope <csqiye@126.com>,594,594,FangSqing,3207ad6,1,2024-03-07 08:19:17,2023-11-15 13:32:56
tests/create_test.go,f17a752,hishope,Signed-off-by: hishope <csqiye@126.com>  fix some typos in tests  Signed-off-by: hishope <csqiye@126.com>,597,601,FangSqing,3207ad6,1,2024-03-07 08:19:17,2023-11-15 13:32:56
tests/create_test.go,6ed697d,Jinzhu,"TestFirstOrCreateWithPrimaryKey, close #3192",479,479,,,0,2020-07-23 15:41:56,
tests/create_test.go,f17a752,hishope,Signed-off-by: hishope <csqiye@126.com>  fix some typos in tests  Signed-off-by: hishope <csqiye@126.com>,606,607,FangSqing,3207ad6,1,2024-03-07 08:19:17,2023-11-15 13:32:56
tests/create_test.go,f17a752,hishope,Signed-off-by: hishope <csqiye@126.com>  fix some typos in tests  Signed-off-by: hishope <csqiye@126.com>,612,612,FangSqing,3207ad6,1,2024-03-07 08:19:17,2023-11-15 13:32:56
tests/create_test.go,5883490,Jinzhu,"Select, Omit, Preload supports clause.Associations",452,453,,,0,2020-06-20 09:21:01,
tests/create_test.go,e9f25c7,Cr,"fix: on confilct with default null (#6129)  * fix: on confilct with default null  * Update create.go  ---------  Co-authored-by: Jinzhu <wosmvp@gmail.com>",593,593,,,1,2023-03-10 08:35:26,
tests/create_test.go,f17a752,hishope,Signed-off-by: hishope <csqiye@126.com>  fix some typos in tests  Signed-off-by: hishope <csqiye@126.com>,615,616,FangSqing,3207ad6,1,2024-03-07 08:19:17,2023-11-15 13:32:56
tests/create_test.go,e9f25c7,Cr,"fix: on confilct with default null (#6129)  * fix: on confilct with default null  * Update create.go  ---------  Co-authored-by: Jinzhu <wosmvp@gmail.com>",586,591,,,1,2023-03-10 08:35:26,
tests/create_test.go,3207ad6,FangSqing,map insert support return increment id (#6662),619,621,black-06,ac20d9e,0,2023-11-15 13:32:56,2023-04-21 14:09:38
tests/create_test.go,f17a752,hishope,Signed-off-by: hishope <csqiye@126.com>  fix some typos in tests  Signed-off-by: hishope <csqiye@126.com>,622,622,FangSqing,3207ad6,1,2024-03-07 08:19:17,2023-11-15 13:32:56
tests/create_test.go,e9f25c7,Cr,"fix: on confilct with default null (#6129)  * fix: on confilct with default null  * Update create.go  ---------  Co-authored-by: Jinzhu <wosmvp@gmail.com>",602,605,,,1,2023-03-10 08:35:26,
tests/create_test.go,81536f8,Jinzhu,"Fix insert id into map results, fix #6812",716,717,hishope,f17a752,1,2024-03-19 03:50:28,2024-03-07 08:19:17
tests/create_test.go,3207ad6,FangSqing,map insert support return increment id (#6662),623,715,black-06,ac20d9e,0,2023-11-15 13:32:56,2023-04-21 14:09:38
tests/create_test.go,3207ad6,FangSqing,map insert support return increment id (#6662),718,719,black-06,ac20d9e,0,2023-11-15 13:32:56,2023-04-21 14:09:38
tests/create_test.go,81536f8,Jinzhu,"Fix insert id into map results, fix #6812",720,720,hishope,f17a752,1,2024-03-19 03:50:28,2024-03-07 08:19:17
tests/create_test.go,81536f8,Jinzhu,"Fix insert id into map results, fix #6812",725,725,hishope,f17a752,1,2024-03-19 03:50:28,2024-03-07 08:19:17
tests/create_test.go,e9f25c7,Cr,"fix: on confilct with default null (#6129)  * fix: on confilct with default null  * Update create.go  ---------  Co-authored-by: Jinzhu <wosmvp@gmail.com>",608,611,,,1,2023-03-10 08:35:26,
tests/create_test.go,3207ad6,FangSqing,map insert support return increment id (#6662),721,724,black-06,ac20d9e,0,2023-11-15 13:32:56,2023-04-21 14:09:38
tests/create_test.go,3207ad6,FangSqing,map insert support return increment id (#6662),726,733,black-06,ac20d9e,0,2023-11-15 13:32:56,2023-04-21 14:09:38
tests/create_test.go,6ed697d,Jinzhu,"TestFirstOrCreateWithPrimaryKey, close #3192",487,504,,,0,2020-07-23 15:41:56,
tests/create_test.go,3207ad6,FangSqing,map insert support return increment id (#6662),745,752,black-06,ac20d9e,0,2023-11-15 13:32:56,2023-04-21 14:09:38
tests/create_test.go,81536f8,Jinzhu,"Fix insert id into map results, fix #6812",734,735,hishope,f17a752,1,2024-03-19 03:50:28,2024-03-07 08:19:17
tests/create_test.go,3207ad6,FangSqing,map insert support return increment id (#6662),736,743,black-06,ac20d9e,0,2023-11-15 13:32:56,2023-04-21 14:09:38
tests/create_test.go,81536f8,Jinzhu,"Fix insert id into map results, fix #6812",768,768,hishope,f17a752,1,2024-03-19 03:50:28,2024-03-07 08:19:17
tests/create_test.go,81536f8,Jinzhu,"Fix insert id into map results, fix #6812",753,753,hishope,f17a752,1,2024-03-19 03:50:28,2024-03-07 08:19:17
tests/create_test.go,3207ad6,FangSqing,map insert support return increment id (#6662),754,767,black-06,ac20d9e,0,2023-11-15 13:32:56,2023-04-21 14:09:38
tests/create_test.go,3207ad6,FangSqing,map insert support return increment id (#6662),769,771,black-06,ac20d9e,0,2023-11-15 13:32:56,2023-04-21 14:09:38
tests/create_test.go,e9f25c7,Cr,"fix: on confilct with default null (#6129)  * fix: on confilct with default null  * Update create.go  ---------  Co-authored-by: Jinzhu <wosmvp@gmail.com>",613,614,,,1,2023-03-10 08:35:26,
tests/create_test.go,3207ad6,FangSqing,map insert support return increment id (#6662),788,789,black-06,ac20d9e,0,2023-11-15 13:32:56,2023-04-21 14:09:38
tests/create_test.go,3207ad6,FangSqing,map insert support return increment id (#6662),773,785,black-06,ac20d9e,0,2023-11-15 13:32:56,2023-04-21 14:09:38
tests/create_test.go,81536f8,Jinzhu,"Fix insert id into map results, fix #6812",786,787,hishope,f17a752,1,2024-03-19 03:50:28,2024-03-07 08:19:17
tests/create_test.go,81536f8,Jinzhu,"Fix insert id into map results, fix #6812",772,772,hishope,f17a752,1,2024-03-19 03:50:28,2024-03-07 08:19:17
tests/create_test.go,81536f8,Jinzhu,"Fix insert id into map results, fix #6812",744,744,hishope,f17a752,1,2024-03-19 03:50:28,2024-03-07 08:19:17
tests/create_test.go,81536f8,Jinzhu,"Fix insert id into map results, fix #6812",790,791,hishope,f17a752,1,2024-03-19 03:50:28,2024-03-07 08:19:17
tests/create_test.go,3207ad6,FangSqing,map insert support return increment id (#6662),792,793,black-06,ac20d9e,0,2023-11-15 13:32:56,2023-04-21 14:09:38
tests/create_test.go,e9f25c7,Cr,"fix: on confilct with default null (#6129)  * fix: on confilct with default null  * Update create.go  ---------  Co-authored-by: Jinzhu <wosmvp@gmail.com>",617,618,,,1,2023-03-10 08:35:26,
tests/create_test.go,e9f25c7,Cr,"fix: on confilct with default null (#6129)  * fix: on confilct with default null  * Update create.go  ---------  Co-authored-by: Jinzhu <wosmvp@gmail.com>",595,596,,,1,2023-03-10 08:35:26,
schema/field.go,1079e17,Jinzhu,Implement schema parser,6,6,,,0,2020-01-31 04:46:16,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",5,5,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",4,4,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",7,7,,,0,2020-02-15 10:24:37,
schema/field.go,1079e17,Jinzhu,Implement schema parser,1,3,,,0,2020-01-31 04:46:16,
schema/field.go,cbbf8f3,Jinzhu,Update schema,10,10,,,0,2020-02-18 14:56:37,
schema/field.go,1079e17,Jinzhu,Implement schema parser,8,9,,,0,2020-01-31 04:46:16,
schema/field.go,1079e17,Jinzhu,Implement schema parser,11,12,,,0,2020-01-31 04:46:16,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",13,13,,,0,2020-02-15 10:24:37,
schema/field.go,5790ba9,Jinzhu,Fix package path,14,14,,,1,2020-06-02 01:25:55,
schema/field.go,1079e17,Jinzhu,Implement schema parser,17,18,,,0,2020-01-31 04:46:16,
schema/field.go,cbbf8f3,Jinzhu,Update schema,25,25,,,0,2020-02-18 14:56:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",19,24,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,e986371,Jinzhu,Rename package name,16,16,,,0,2020-06-02 01:18:01,
schema/field.go,f92e674,Jinzhu,Handle field set value error,15,15,Jinzhu,0097b39,1,2022-03-23 09:24:25,2022-03-20 00:55:08
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",26,31,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",33,33,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,cbbf8f3,Jinzhu,Update schema,34,34,,,0,2020-02-18 14:56:37,
schema/field.go,cbbf8f3,Jinzhu,Update schema,39,40,,,0,2020-02-18 14:56:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",41,41,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,1079e17,Jinzhu,Implement schema parser,42,42,,,0,2020-01-31 04:46:16,
schema/field.go,eea78f3,Jinzhu,Implement parse relationship architecture,43,43,,,0,2020-02-01 04:46:52,
schema/field.go,4456df7,Jinzhu,Lint with golangci-lint,44,49,,,0,2020-07-16 03:27:12,
schema/field.go,1079e17,Jinzhu,Implement schema parser,55,55,,,0,2020-01-31 04:46:16,
schema/field.go,1079e17,Jinzhu,Implement schema parser,50,51,,,0,2020-01-31 04:46:16,
schema/field.go,3207ad6,FangSqing,map insert support return increment id (#6662),52,53,aclich,6353414,0,2023-11-15 13:32:56,2023-05-15 01:59:26
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",54,54,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,da16a8a,Jinzhu,Update updated_at when upserting with Create OnConflict,35,38,Jinzhu,6950007,0,2021-09-17 07:29:49,2020-11-27 06:32:20
schema/field.go,79864af,Jinzhu,Allow customize auto increment increment,56,58,Jinzhu,6950007,0,2020-12-30 03:16:40,2020-11-27 06:32:20
schema/field.go,9a61ef2,yetone,fix: duplicated preload (#6948),59,59,jessetang,ab89d54,1,2024-04-15 03:20:20,2024-03-18 05:44:55
schema/field.go,ba25398,Jinzhu,Fix Pluck with Time and Scanner,32,32,,,1,2020-09-24 12:08:24,
schema/field.go,79864af,Jinzhu,Allow customize auto increment increment,71,78,Jinzhu,6950007,0,2020-12-30 03:16:40,2020-11-27 06:32:20
schema/field.go,79864af,Jinzhu,Allow customize auto increment increment,60,67,Jinzhu,6950007,0,2020-12-30 03:16:40,2020-11-27 06:32:20
schema/field.go,79864af,Jinzhu,Allow customize auto increment increment,68,69,Jinzhu,6950007,0,2020-12-30 03:16:40,2020-11-27 06:32:20
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",88,92,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,1079e17,Jinzhu,Implement schema parser,99,100,,,0,2020-01-31 04:46:16,
schema/field.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",93,98,FangSqing,3207ad6,1,2024-02-04 07:49:19,2023-11-15 13:32:56
schema/field.go,79864af,Jinzhu,Allow customize auto increment increment,80,87,Jinzhu,6950007,0,2020-12-30 03:16:40,2020-11-27 06:32:20
schema/field.go,1079e17,Jinzhu,Implement schema parser,106,106,,,0,2020-01-31 04:46:16,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",105,105,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,1079e17,Jinzhu,Implement schema parser,112,112,,,0,2020-01-31 04:46:16,
schema/field.go,78e9c9b,Jinzhu,"raise error when failed to parse default value, close #3378",111,111,,,1,2020-09-03 10:20:57,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",107,110,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",114,114,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,9a61ef2,yetone,fix: duplicated preload (#6948),116,116,jessetang,ab89d54,1,2024-04-15 03:20:20,2024-03-18 05:44:55
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",79,79,Jinzhu,6950007,1,2022-02-19 09:02:53,2020-11-27 06:32:20
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",70,70,Jinzhu,6950007,1,2022-02-19 09:02:53,2020-11-27 06:32:20
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",126,131,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",120,122,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,79864af,Jinzhu,Allow customize auto increment increment,113,113,,,0,2020-12-30 03:16:40,
schema/field.go,1079e17,Jinzhu,Implement schema parser,137,138,,,0,2020-01-31 04:46:16,
schema/field.go,1079e17,Jinzhu,Implement schema parser,133,134,,,0,2020-01-31 04:46:16,
schema/field.go,79864af,Jinzhu,Allow customize auto increment increment,117,119,,,0,2020-12-30 03:16:40,
schema/field.go,79864af,Jinzhu,Allow customize auto increment increment,123,125,,,0,2020-12-30 03:16:40,
schema/field.go,faee069,Jinzhu,"Test Field Valuer, Setter",139,139,,,0,2020-02-15 12:28:03,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",140,140,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,faee069,Jinzhu,"Test Field Valuer, Setter",135,136,,,0,2020-02-15 12:28:03,
schema/field.go,96368eb,Jinzhu,Test embedded struct implements Scan & Value interface,141,142,,,0,2020-06-18 01:15:23,
schema/field.go,c1782d6,Jinzhu,"Fix embedded scanner/valuer, close #3283",144,144,,,1,2020-08-19 07:47:08,
schema/field.go,6dc5838,Jinzhu,Don't use value's first field to guess data type for struct implements GormDataTypeInterface,143,143,,,0,2020-07-17 04:02:00,
schema/field.go,c1782d6,Jinzhu,"Fix embedded scanner/valuer, close #3283",149,150,,,1,2020-08-19 07:47:08,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",148,148,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,6dc5838,Jinzhu,Don't use value's first field to guess data type for struct implements GormDataTypeInterface,145,146,,,0,2020-07-17 04:02:00,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",151,166,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,6dc5838,Jinzhu,Don't use value's first field to guess data type for struct implements GormDataTypeInterface,167,169,,,0,2020-07-17 04:02:00,
schema/field.go,6dc5838,Jinzhu,Don't use value's first field to guess data type for struct implements GormDataTypeInterface,171,171,,,0,2020-07-17 04:02:00,
schema/field.go,1079e17,Jinzhu,Implement schema parser,170,170,,,0,2020-01-31 04:46:16,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",172,172,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,1079e17,Jinzhu,Implement schema parser,147,147,,,0,2020-01-31 04:46:16,
schema/field.go,1079e17,Jinzhu,Implement schema parser,179,181,,,0,2020-01-31 04:46:16,
schema/field.go,c1782d6,Jinzhu,"Fix embedded scanner/valuer, close #3283",182,183,,,1,2020-08-19 07:47:08,
schema/field.go,1079e17,Jinzhu,Implement schema parser,184,186,,,0,2020-01-31 04:46:16,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",187,190,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,c1782d6,Jinzhu,"Fix embedded scanner/valuer, close #3283",173,178,,,1,2020-08-19 07:47:08,
schema/field.go,1079e17,Jinzhu,Implement schema parser,210,215,,,0,2020-01-31 04:46:16,
schema/field.go,79864af,Jinzhu,Allow customize auto increment increment,115,115,,,0,2020-12-30 03:16:40,
schema/field.go,1079e17,Jinzhu,Implement schema parser,204,205,,,0,2020-01-31 04:46:16,
schema/field.go,fab7d96,Jinzhu,Add DataTypeOf for dialector,216,218,,,0,2020-02-22 09:53:57,
schema/field.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",101,104,piyongcai,a0d6ff1,1,2023-04-11 05:10:38,2022-01-12 05:11:40
schema/field.go,1079e17,Jinzhu,Implement schema parser,219,224,,,0,2020-01-31 04:46:16,
schema/field.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",225,228,,,0,2020-08-23 10:16:12,
schema/field.go,3207ad6,FangSqing,map insert support return increment id (#6662),132,132,piyongcai,a0d6ff1,0,2023-11-15 13:32:56,2022-01-12 05:11:40
schema/field.go,1079e17,Jinzhu,Implement schema parser,234,235,,,0,2020-01-31 04:46:16,
schema/field.go,231effe,Jinzhu,"Fix parse blank default value, close #3442",229,229,,,1,2020-09-10 03:59:18,
schema/field.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",233,233,,,0,2020-05-30 13:05:27,
schema/field.go,79864af,Jinzhu,Allow customize auto increment increment,206,209,Jinzhu,f121622,0,2020-12-30 03:16:40,2020-09-04 06:35:44
schema/field.go,231effe,Jinzhu,"Fix parse blank default value, close #3442",236,236,,,1,2020-09-10 03:59:18,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",192,203,Jinzhu,6950007,1,2022-02-19 09:02:53,2020-11-27 06:32:20
schema/field.go,1079e17,Jinzhu,Implement schema parser,241,242,,,0,2020-01-31 04:46:16,
schema/field.go,231effe,Jinzhu,"Fix parse blank default value, close #3442",231,232,,,1,2020-09-10 03:59:18,
schema/field.go,cbbf8f3,Jinzhu,Update schema,240,240,,,0,2020-02-18 14:56:37,
schema/field.go,78e9c9b,Jinzhu,"raise error when failed to parse default value, close #3378",239,239,,,1,2020-09-03 10:20:57,
schema/field.go,78e9c9b,Jinzhu,"raise error when failed to parse default value, close #3378",237,237,,,1,2020-09-03 10:20:57,
schema/field.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",191,191,piyongcai,a0d6ff1,1,2023-02-18 01:06:43,2022-01-12 05:11:40
schema/field.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",238,238,Jinzhu,1a526e6,1,2021-06-10 02:21:28,2020-09-24 03:32:38
schema/field.go,231effe,Jinzhu,"Fix parse blank default value, close #3442",243,243,,,1,2020-09-10 03:59:18,
schema/field.go,1079e17,Jinzhu,Implement schema parser,248,249,,,0,2020-01-31 04:46:16,
schema/field.go,2ba612e,yrong1997,"Add field tag to ignore migration (#4028)  * Add field tag to ignore migration  * Fix null value with space  * refactor migration tag",230,230,Jinzhu,f121622,1,2021-02-09 08:03:02,2020-09-04 06:35:44
schema/field.go,cbbf8f3,Jinzhu,Update schema,247,247,,,0,2020-02-18 14:56:37,
schema/field.go,78e9c9b,Jinzhu,"raise error when failed to parse default value, close #3378",244,244,,,1,2020-09-03 10:20:57,
schema/field.go,78e9c9b,Jinzhu,"raise error when failed to parse default value, close #3378",253,253,,,1,2020-09-03 10:20:57,
schema/field.go,231effe,Jinzhu,"Fix parse blank default value, close #3442",250,250,,,1,2020-09-10 03:59:18,
schema/field.go,78e9c9b,Jinzhu,"raise error when failed to parse default value, close #3378",246,246,,,1,2020-09-03 10:20:57,
schema/field.go,cbbf8f3,Jinzhu,Update schema,254,254,,,0,2020-02-18 14:56:37,
schema/field.go,78e9c9b,Jinzhu,"raise error when failed to parse default value, close #3378",251,251,,,1,2020-09-03 10:20:57,
schema/field.go,1079e17,Jinzhu,Implement schema parser,255,256,,,0,2020-01-31 04:46:16,
schema/field.go,cbbf8f3,Jinzhu,Update schema,261,261,,,0,2020-02-18 14:56:37,
schema/field.go,78e9c9b,Jinzhu,"raise error when failed to parse default value, close #3378",258,258,,,1,2020-09-03 10:20:57,
schema/field.go,1079e17,Jinzhu,Implement schema parser,262,263,,,0,2020-01-31 04:46:16,
schema/field.go,231effe,Jinzhu,"Fix parse blank default value, close #3442",257,257,,,1,2020-09-10 03:59:18,
schema/field.go,78e9c9b,Jinzhu,"raise error when failed to parse default value, close #3378",260,260,,,1,2020-09-03 10:20:57,
schema/field.go,abae7f7,Jinzhu,Test non std primary key and default value,265,265,,,0,2020-05-30 08:03:27,
schema/field.go,cbbf8f3,Jinzhu,Update schema,267,268,,,0,2020-02-18 14:56:37,
schema/field.go,1079e17,Jinzhu,Implement schema parser,269,269,,,0,2020-01-31 04:46:16,
schema/field.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,270,270,,,0,2020-02-01 12:18:32,
schema/field.go,231effe,Jinzhu,"Fix parse blank default value, close #3442",264,264,,,1,2020-09-10 03:59:18,
schema/field.go,1079e17,Jinzhu,Implement schema parser,271,271,,,0,2020-01-31 04:46:16,
schema/field.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",245,245,,,1,2021-06-10 02:21:28,
schema/field.go,47a5196,Jinzhu,"Fix uninitialized Valuer return time.Time, close #3214",273,273,,,1,2020-07-30 09:37:07,
schema/field.go,18236fa,Jinzhu,"Add more tests for setter, valuer",275,275,,,0,2020-02-15 16:37:59,
schema/field.go,ba25398,Jinzhu,Fix Pluck with Time and Scanner,272,272,,,1,2020-09-24 12:08:24,
schema/field.go,1079e17,Jinzhu,Implement schema parser,276,276,,,0,2020-01-31 04:46:16,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",274,274,daheige,a702546,1,2022-02-19 09:02:53,2021-07-14 14:03:17
schema/field.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",252,252,,,1,2021-06-10 02:21:28,
schema/field.go,1079e17,Jinzhu,Implement schema parser,282,282,,,0,2020-01-31 04:46:16,
schema/field.go,1079e17,Jinzhu,Implement schema parser,284,287,,,0,2020-01-31 04:46:16,
schema/field.go,a954d77,Jinzhu,Support customize gorm field type,288,291,,,0,2020-06-06 02:47:32,
schema/field.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",259,259,,,1,2021-06-10 02:21:28,
schema/field.go,63ac66b,Jinzhu,Support default tag for time.Time,277,277,daheige,a702546,0,2022-03-17 03:34:27,2021-07-14 14:03:17
schema/field.go,0097b39,Jinzhu,"Should ignore error when parsing default value for time, close #5176",278,279,daheige,a702546,1,2022-03-20 00:55:08,2021-07-14 14:03:17
schema/field.go,63ac66b,Jinzhu,Support default tag for time.Time,280,281,daheige,a702546,0,2022-03-17 03:34:27,2021-07-14 14:03:17
schema/field.go,7bb883b,lninl,"Auto creating/updating time with unix (milli) second (#3213)  * Auto creating/updating time with unix (milli) second  * add test for 'Auto creating/updating time with unix (milli) second'",297,298,,,0,2020-07-30 09:39:57,
schema/field.go,2da0ad5,Jinzhu,Add more tests for Update,296,296,,,0,2020-03-08 05:24:08,
schema/field.go,9144969,Jinzhu,Allow to use tag to disable auto create/update time,292,292,Jinzhu,f92e674,0,2022-04-02 09:17:47,2022-03-23 09:24:25
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",283,283,daheige,a702546,1,2022-02-19 09:02:53,2021-07-14 14:03:17
schema/field.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",266,266,,,1,2021-06-10 02:21:28,
schema/field.go,2da0ad5,Jinzhu,Add more tests for Update,308,308,,,0,2020-03-08 05:24:08,
schema/field.go,2da0ad5,Jinzhu,Add more tests for Update,311,315,,,0,2020-03-08 05:24:08,
schema/field.go,7bb883b,lninl,"Auto creating/updating time with unix (milli) second (#3213)  * Auto creating/updating time with unix (milli) second  * add test for 'Auto creating/updating time with unix (milli) second'",309,310,,,0,2020-07-30 09:39:57,
schema/field.go,9144969,Jinzhu,Allow to use tag to disable auto create/update time,304,304,Jinzhu,39d84cb,0,2022-04-02 09:17:47,2022-02-19 09:02:53
schema/field.go,2da0ad5,Jinzhu,Add more tests for Update,299,303,,,0,2020-03-08 05:24:08,
schema/field.go,af080e6,Jinzhu,Fix primary key tag,330,330,,,1,2020-03-12 00:39:42,
schema/field.go,1079e17,Jinzhu,Implement schema parser,331,341,,,0,2020-01-31 04:46:16,
schema/field.go,d50879c,Jinzhu,Add field permission test,342,342,,,0,2020-06-05 11:18:22,
schema/field.go,1079e17,Jinzhu,Implement schema parser,329,329,,,0,2020-01-31 04:46:16,
schema/field.go,2476c0f,Jinzhu,Set db type after autotime,320,328,,,0,2020-06-25 23:26:45,
schema/field.go,da16a8a,Jinzhu,Update updated_at when upserting with Create OnConflict,305,307,Jinzhu,79864af,0,2021-09-17 07:29:49,2020-12-30 03:16:40
schema/field.go,2ba612e,yrong1997,"Add field tag to ignore migration (#4028)  * Add field tag to ignore migration  * Fix null value with space  * refactor migration tag",343,359,Jinzhu,cb591a7,1,2021-02-09 08:03:02,2020-10-23 10:40:05
schema/field.go,d50879c,Jinzhu,Add field permission test,360,386,,,0,2020-06-05 11:18:22,
schema/field.go,dc48e04,Jinzhu,"Fix nested embedded struct, close #3278",398,399,,,1,2020-08-18 03:21:40,
schema/field.go,2cbdd29,Jinzhu,"Returns error for invalid embedded field, close #3209",393,396,,,1,2020-07-29 02:23:14,
schema/field.go,6834c25,Jinzhu,"Fix stack overflow for embedded self-referred associations, close #3269",397,397,,,1,2020-08-17 04:02:46,
schema/field.go,2cbdd29,Jinzhu,"Returns error for invalid embedded field, close #3209",401,401,,,1,2020-07-29 02:23:14,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",402,402,,,0,2020-02-15 10:24:37,
schema/field.go,dc48e04,Jinzhu,"Fix nested embedded struct, close #3278",403,403,,,1,2020-08-18 03:21:40,
schema/field.go,2cbdd29,Jinzhu,"Returns error for invalid embedded field, close #3209",407,407,,,1,2020-07-29 02:23:14,
schema/field.go,2cbdd29,Jinzhu,"Returns error for invalid embedded field, close #3209",404,405,,,1,2020-07-29 02:23:14,
schema/field.go,ff985b9,Jinzhu,"Fix failed to guess relations for embedded types, close #3224",406,406,,,1,2020-08-04 04:25:34,
schema/field.go,2cbdd29,Jinzhu,"Returns error for invalid embedded field, close #3209",411,416,,,1,2020-07-29 02:23:14,
schema/field.go,da16a8a,Jinzhu,Update updated_at when upserting with Create OnConflict,293,295,,,0,2021-09-17 07:29:49,
schema/field.go,9a61ef2,yetone,fix: duplicated preload (#6948),408,410,jessetang,ab89d54,1,2024-04-15 03:20:20,2024-03-18 05:44:55
schema/field.go,380cc64,piyongcai,"fix type alias AutoMigrate bug（Add Test Case） (#4888)  * fix type alias AutoMigrate bug. eg  ```go package main  type IDer interface{ GetID() int64 }  // ID will add some method to implement some interface eg: GetID type ID int64 func (z ID) GetID() int64 { return int64(z) }  type Test struct { 	ID 	Code string `gorm:""size:50""` 	Name string `gorm:""size:50""` }  func main() { 	db, err := gorm.Open(postgres.New(postgres.Config{ 		DSN: `dsn`, 		PreferSimpleProtocol: false, 	}), &gorm.Config{ 		Logger:                 logger.Default.LogMode(logger.Info), 		SkipDefaultTransaction: true, 	}) 	if err != nil { 		log.Fatal(err) 	}  	if err = db.AutoMigrate(&Test{}); err != nil { 		// invalid embedded struct for Test's field ID, should be struct, but got main.ID 		log.Fatal(err) 	} } ```  * fix type alias AutoMigrate bug. eg  ```go package main  type IDer interface{ GetID() int64 }  // ID will add some method to implement some interface eg: GetID type ID int64 func (z ID) GetID() int64 { return int64(z) }  type Test struct { 	ID 	Code string `gorm:""size:50""` 	Name string `gorm:""size:50""` }  func main() { 	db, err := gorm.Open(postgres.New(postgres.Config{ 		DSN:                  `dsn`, 		PreferSimpleProtocol: false, 	}), &gorm.Config{ 		Logger:                 logger.Default.LogMode(logger.Info), 		SkipDefaultTransaction: true, 	}) 	if err != nil { 		log.Fatal(err) 	}  	if err = db.AutoMigrate(&Test{}); err != nil { 		// invalid embedded struct for Test's field ID, should be struct, but got main.ID 		log.Fatal(err) 	} } ```  * Add typealis test.  * try to fix golangci-lint",390,392,Jinzhu,231effe,1,2021-12-10 09:45:36,2020-09-10 03:59:18
schema/field.go,1079e17,Jinzhu,Implement schema parser,417,417,,,0,2020-01-31 04:46:16,
schema/field.go,2cbdd29,Jinzhu,"Returns error for invalid embedded field, close #3209",419,420,,,1,2020-07-29 02:23:14,
schema/field.go,1079e17,Jinzhu,Implement schema parser,421,421,,,0,2020-01-31 04:46:16,
schema/field.go,6950007,Jinzhu,"Fix failed to parse relations when using goroutinue, close #3790  commit ee0ec43e8dfa85c1c1a562c2d0d47776cf8abd92 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Nov 27 14:31:57 2020 +0800      Fix failed to parse relations when using goroutinue, close #3790  commit 590e73ff95d8af6bd14f0a0da687dd7d12e5f94e Author: rokeyzhao <rokeyzhao@tencent.com> Date:   Thu Nov 26 20:27:55 2020 +0800      test: no cache preload in goroutine",400,400,,,1,2020-11-27 06:32:20,
schema/field.go,f121622,Jinzhu,Don't add prefix for invalid embedded fields,418,418,,,0,2020-09-04 06:35:44,
schema/field.go,b8a74a8,Jinzhu,"Fix embedded struct with default value, close #3451",422,422,,,1,2020-09-11 03:18:54,
schema/field.go,3313c11,Jinzhu,"Fix embedded struct containing field named ID, close #3286",429,429,,,1,2020-08-19 11:15:27,
schema/field.go,b8a74a8,Jinzhu,"Fix embedded struct with default value, close #3451",431,432,,,1,2020-09-11 03:18:54,
schema/field.go,b8a74a8,Jinzhu,"Fix embedded struct with default value, close #3451",424,428,,,1,2020-09-11 03:18:54,
schema/field.go,2cbdd29,Jinzhu,"Returns error for invalid embedded field, close #3209",434,434,,,1,2020-07-29 02:23:14,
schema/field.go,3313c11,Jinzhu,"Fix embedded struct containing field named ID, close #3286",433,433,,,1,2020-08-19 11:15:27,
schema/field.go,6d555ef,Jinzhu,Test embedded struct,435,435,,,0,2020-05-31 06:18:07,
schema/field.go,1079e17,Jinzhu,Implement schema parser,439,439,,,0,2020-01-31 04:46:16,
schema/field.go,2cbdd29,Jinzhu,"Returns error for invalid embedded field, close #3209",436,438,,,1,2020-07-29 02:23:14,
schema/field.go,2cbdd29,Jinzhu,"Returns error for invalid embedded field, close #3209",443,443,,,1,2020-07-29 02:23:14,
schema/field.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",442,442,yrong1997,2ba612e,1,2021-06-10 02:21:28,2021-02-09 08:03:02
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",448,448,,,0,2020-02-15 10:24:37,
schema/field.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),440,441,heige,5555b01,0,2022-01-06 07:02:53,2021-04-13 01:41:30
schema/field.go,06e174e,Cr,fix: embedded default value (#5540),423,423,piyongcai,380cc64,1,2022-07-25 06:10:30,2021-12-10 09:45:36
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",451,451,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,1079e17,Jinzhu,Implement schema parser,444,447,,,0,2020-01-31 04:46:16,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",449,450,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",387,389,,,1,2022-02-19 09:02:53,
schema/field.go,3c00980,ag9920,"fix: serializer use default valueOf in assignInterfacesToValue, close #5168  commit 58e1b2bffbc216f2862d040fb545a8a486e473b6 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 17:06:43 2022 +0800      Refactor #5168  commit fb9233011d209174e8223e970f0f732412852908 Author: ag9920 <alexgong7@outlook.com> Date:   Thu Mar 17 21:23:28 2022 +0800      fix: serializer use default valueOf in assignInterfacesToValue",452,452,Jinzhu,b1201fc,1,2022-03-18 09:12:17,2022-02-23 09:48:26
schema/field.go,b1201fc,Jinzhu,"Fix update with customized time type, close #5101",316,319,,,1,2022-02-23 09:48:26,
schema/field.go,faee069,Jinzhu,"Test Field Valuer, Setter",453,453,,,0,2020-02-15 12:28:03,
schema/field.go,530b0a1,Jinzhu,"Add fast path for ValueOf, ReflectValueOf",455,467,Jinzhu,b1201fc,0,2022-02-27 14:16:31,2022-02-23 09:48:26
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",454,454,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",468,468,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",488,493,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,530b0a1,Jinzhu,"Add fast path for ValueOf, ReflectValueOf",469,475,Jinzhu,b1201fc,0,2022-02-27 14:16:31,2022-02-23 09:48:26
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",484,487,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,530b0a1,Jinzhu,"Add fast path for ValueOf, ReflectValueOf",479,481,Jinzhu,b1201fc,0,2022-02-27 14:16:31,2022-02-23 09:48:26
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",478,478,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",476,477,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",482,483,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",495,499,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,faee069,Jinzhu,"Test Field Valuer, Setter",503,503,,,0,2020-02-15 12:28:03,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",502,502,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,3c00980,ag9920,"fix: serializer use default valueOf in assignInterfacesToValue, close #5168  commit 58e1b2bffbc216f2862d040fb545a8a486e473b6 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 17:06:43 2022 +0800      Refactor #5168  commit fb9233011d209174e8223e970f0f732412852908 Author: ag9920 <alexgong7@outlook.com> Date:   Thu Mar 17 21:23:28 2022 +0800      fix: serializer use default valueOf in assignInterfacesToValue",494,494,Jinzhu,b1201fc,1,2022-03-18 09:12:17,2022-02-23 09:48:26
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",501,501,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",504,504,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,530b0a1,Jinzhu,"Add fast path for ValueOf, ReflectValueOf",519,521,Jinzhu,b1201fc,0,2022-02-27 14:16:31,2022-02-23 09:48:26
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",522,522,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",518,518,,,0,2020-02-15 10:24:37,
schema/field.go,530b0a1,Jinzhu,"Add fast path for ValueOf, ReflectValueOf",523,525,Jinzhu,b1201fc,0,2022-02-27 14:16:31,2022-02-23 09:48:26
schema/field.go,530b0a1,Jinzhu,"Add fast path for ValueOf, ReflectValueOf",505,517,piyongcai,a0d6ff1,0,2022-02-27 14:16:31,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",526,527,,,0,2020-02-15 10:24:37,
schema/field.go,530b0a1,Jinzhu,"Add fast path for ValueOf, ReflectValueOf",528,528,Jinzhu,b1201fc,0,2022-02-27 14:16:31,2022-02-23 09:48:26
schema/field.go,18236fa,Jinzhu,"Add more tests for setter, valuer",535,535,,,0,2020-02-15 16:37:59,
schema/field.go,91a6958,Jinzhu,Test Association For BelongsTo,536,536,,,0,2020-05-24 10:33:15,
schema/field.go,6e03b97,hjwblog.com,"fix: empty serilizer err #5524 (#5525)  * fix: empty serilizer err #5524  * feat: fix UnixSecondSerializer return nil  * feat: split type case  Co-authored-by: huanjiawei <huanjiawei@bytedance.com>",500,500,Jinzhu,b1201fc,1,2022-07-27 05:59:47,2022-02-23 09:48:26
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",529,531,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",534,534,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",532,532,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,91a6958,Jinzhu,Test Association For BelongsTo,533,533,,,0,2020-05-24 10:33:15,
schema/field.go,b326583,Jinzhu,Fix can't scan null value into normal data types,539,539,,,1,2020-06-03 01:00:20,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",544,544,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",547,547,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,545,545,,,1,2020-06-02 15:30:26,
schema/field.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,548,549,,,1,2020-06-02 15:30:26,
schema/field.go,3643f85,aelmel,"check for pointer to pointer value (#5278)  * check for pointer to pointer value  * revert to Ptr  Co-authored-by: Alexei Melnic <alexei.melnic@meliora.xyz>",541,543,piyongcai,a0d6ff1,0,2022-04-24 01:10:36,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",550,550,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,552,552,,,1,2020-06-02 15:30:26,
schema/field.go,e77e7bb,Jinzhu,"Fix nested embedded field with pointer, close #3071",554,554,,,1,2020-06-23 01:12:57,
schema/field.go,e77e7bb,Jinzhu,"Fix nested embedded field with pointer, close #3071",556,556,,,1,2020-06-23 01:12:57,
schema/field.go,5555b01,heige,feat: Optimal value type acquisition for v (#4278),537,538,,,0,2021-04-13 01:41:30,
schema/field.go,5555b01,heige,feat: Optimal value type acquisition for v (#4278),540,540,,,0,2021-04-13 01:41:30,
schema/field.go,5555b01,heige,feat: Optimal value type acquisition for v (#4278),546,546,,,0,2021-04-13 01:41:30,
schema/field.go,a702546,daheige,optimize setupValuerAndSetter func,551,551,,,0,2021-07-14 14:03:17,
schema/field.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,558,560,,,1,2020-06-02 15:30:26,
schema/field.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,562,562,,,1,2020-06-02 15:30:26,
schema/field.go,6f4602a,Jinzhu,Fix mysql tests,564,564,,,1,2020-05-29 15:38:03,
schema/field.go,06e174e,Cr,fix: embedded default value (#5540),430,430,,,1,2022-07-25 06:10:30,
schema/field.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,565,565,,,1,2020-06-02 15:30:26,
schema/field.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,567,570,,,1,2020-06-02 15:30:26,
schema/field.go,f88e8b0,Jinzhu,Check valid pointer before use it as Valuer,571,571,,,0,2020-08-20 10:13:29,
schema/field.go,a702546,daheige,optimize setupValuerAndSetter func,553,553,,,0,2021-07-14 14:03:17,
schema/field.go,a702546,daheige,optimize setupValuerAndSetter func,555,555,,,0,2021-07-14 14:03:17,
schema/field.go,a702546,daheige,optimize setupValuerAndSetter func,557,557,,,0,2021-07-14 14:03:17,
schema/field.go,b326583,Jinzhu,Fix can't scan null value into normal data types,572,572,,,1,2020-06-03 01:00:20,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",573,576,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",578,578,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,b326583,Jinzhu,Fix can't scan null value into normal data types,577,577,,,1,2020-06-03 01:00:20,
schema/field.go,b326583,Jinzhu,Fix can't scan null value into normal data types,579,579,,,1,2020-06-03 01:00:20,
schema/field.go,f88e8b0,Jinzhu,Check valid pointer before use it as Valuer,580,581,,,0,2020-08-20 10:13:29,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",582,582,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,f88e8b0,Jinzhu,Check valid pointer before use it as Valuer,583,583,,,0,2020-08-20 10:13:29,
schema/field.go,18236fa,Jinzhu,"Add more tests for setter, valuer",587,587,,,0,2020-02-15 16:37:59,
schema/field.go,f92e674,Jinzhu,Handle field set value error,584,585,piyongcai,a0d6ff1,1,2022-03-23 09:24:25,2022-01-12 05:11:40
schema/field.go,91a6958,Jinzhu,Test Association For BelongsTo,586,586,,,0,2020-05-24 10:33:15,
schema/field.go,18236fa,Jinzhu,"Add more tests for setter, valuer",590,591,,,0,2020-02-15 16:37:59,
schema/field.go,cbbf8f3,Jinzhu,Update schema,592,592,,,0,2020-02-18 14:56:37,
schema/field.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,588,589,,,1,2020-06-02 15:30:26,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",595,595,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",593,594,,,0,2020-02-15 10:24:37,
schema/field.go,a702546,daheige,optimize setupValuerAndSetter func,561,561,,,0,2021-07-14 14:03:17,
schema/field.go,90a4036,Jinzhu,Fix set bool field from null,600,600,,,1,2020-07-04 00:21:23,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",597,599,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",596,596,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",601,602,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",604,604,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,603,603,,,1,2020-06-02 15:30:26,
schema/field.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,605,606,,,1,2020-06-02 15:30:26,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",608,608,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",607,607,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",614,614,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",615,615,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",609,609,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,a702546,daheige,optimize setupValuerAndSetter func,563,563,,,0,2021-07-14 14:03:17,
schema/field.go,67642ab,hykuan,fix: 🐛 numeric types in pointer embedded struct test failed (#6293),620,635,black-06,828e22b,1,2023-05-04 11:29:31,2023-04-11 05:10:38
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",616,619,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",610,613,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",638,638,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",640,640,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",642,642,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",636,636,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",637,637,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",639,639,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",641,641,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,a702546,daheige,optimize setupValuerAndSetter func,566,566,,,0,2021-07-14 14:03:17,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",644,644,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",643,643,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",648,648,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",650,650,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",645,645,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",652,652,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",649,649,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",646,646,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",651,651,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",647,647,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",654,654,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",653,653,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",658,658,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",656,656,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",655,655,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",660,660,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",657,657,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",661,661,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",659,659,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",665,667,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",662,663,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",664,664,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,d50879c,Jinzhu,Add field permission test,669,669,,,0,2020-06-05 11:18:22,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",670,670,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,cbbf8f3,Jinzhu,Update schema,673,673,,,0,2020-02-18 14:56:37,
schema/field.go,7bb883b,lninl,"Auto creating/updating time with unix (milli) second (#3213)  * Auto creating/updating time with unix (milli) second  * add test for 'Auto creating/updating time with unix (milli) second'",671,671,,,0,2020-07-30 09:39:57,
schema/field.go,cbbf8f3,Jinzhu,Update schema,668,668,,,0,2020-02-18 14:56:37,
schema/field.go,cbbf8f3,Jinzhu,Update schema,675,677,,,0,2020-02-18 14:56:37,
schema/field.go,d50879c,Jinzhu,Add field permission test,678,678,,,0,2020-06-05 11:18:22,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",674,674,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",679,679,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,cbbf8f3,Jinzhu,Update schema,682,682,,,0,2020-02-18 14:56:37,
schema/field.go,7bb883b,lninl,"Auto creating/updating time with unix (milli) second (#3213)  * Auto creating/updating time with unix (milli) second  * add test for 'Auto creating/updating time with unix (milli) second'",680,680,,,0,2020-07-30 09:39:57,
schema/field.go,cbbf8f3,Jinzhu,Update schema,684,685,,,0,2020-02-18 14:56:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",686,686,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",683,683,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,cbbf8f3,Jinzhu,Update schema,687,687,,,0,2020-02-18 14:56:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",690,690,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",689,689,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",688,688,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",694,694,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,18236fa,Jinzhu,"Add more tests for setter, valuer",691,691,,,0,2020-02-15 16:37:59,
schema/field.go,67642ab,hykuan,fix: 🐛 numeric types in pointer embedded struct test failed (#6293),700,715,black-06,828e22b,1,2023-05-04 11:29:31,2023-04-11 05:10:38
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",692,693,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",695,695,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",716,716,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",696,699,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",718,718,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",717,717,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",722,722,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",720,720,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",719,719,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",724,724,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",721,721,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",723,723,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",725,725,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",726,726,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",730,730,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",728,728,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",727,727,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",729,729,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",732,732,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",731,731,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",733,733,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",736,736,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",734,734,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",735,735,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",737,737,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",738,738,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",739,739,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",740,740,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",741,741,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",744,744,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",748,748,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,ed1b134,Jinzhu,"Fix use uint to for autoCreateTime, autoUpdateTime",747,747,,,1,2020-09-11 09:33:31,
schema/field.go,ed1b134,Jinzhu,"Fix use uint to for autoCreateTime, autoUpdateTime",742,743,,,1,2020-09-11 09:33:31,
schema/field.go,ed1b134,Jinzhu,"Fix use uint to for autoCreateTime, autoUpdateTime",745,745,,,1,2020-09-11 09:33:31,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",752,752,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",757,757,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",750,751,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",753,756,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",758,758,,,0,2020-02-15 10:24:37,
schema/field.go,18236fa,Jinzhu,"Add more tests for setter, valuer",759,759,,,0,2020-02-15 16:37:59,
schema/field.go,ed1b134,Jinzhu,"Fix use uint to for autoCreateTime, autoUpdateTime",749,749,,,1,2020-09-11 09:33:31,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",763,763,,,0,2020-02-15 10:24:37,
schema/field.go,ab89d54,jessetang,chore: UnixNano convert to UnixMilli (#6907),672,672,piyongcai,a0d6ff1,0,2024-03-18 05:44:55,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",764,767,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",762,762,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",760,761,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",772,772,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",774,774,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",773,773,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",776,776,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",778,778,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",775,775,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,ab89d54,jessetang,chore: UnixNano convert to UnixMilli (#6907),681,681,piyongcai,a0d6ff1,0,2024-03-18 05:44:55,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",782,782,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",777,777,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",781,781,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",779,779,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",780,780,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",784,784,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",786,786,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",783,783,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",788,788,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",785,785,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",787,787,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",789,789,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",790,790,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",792,792,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",791,791,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",793,793,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",796,796,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",794,794,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",798,799,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",800,800,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",797,797,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",795,795,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",805,805,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",801,804,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",806,806,,,0,2020-02-15 10:24:37,
schema/field.go,18236fa,Jinzhu,"Add more tests for setter, valuer",807,807,,,0,2020-02-15 16:37:59,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",808,809,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",810,810,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",811,811,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",812,815,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",816,816,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",819,819,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",817,817,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",820,820,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",818,818,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",821,821,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,ab89d54,jessetang,chore: UnixNano convert to UnixMilli (#6907),746,746,piyongcai,a0d6ff1,0,2024-03-18 05:44:55,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",824,824,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",822,822,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",823,823,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",826,826,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",825,825,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",828,830,,,0,2020-02-15 10:24:37,
schema/field.go,faee069,Jinzhu,"Test Field Valuer, Setter",831,831,,,0,2020-02-15 12:28:03,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",832,832,,,0,2020-02-15 10:24:37,
schema/field.go,18236fa,Jinzhu,"Add more tests for setter, valuer",827,827,,,0,2020-02-15 16:37:59,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",833,833,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",834,834,,,0,2020-02-15 10:24:37,
schema/field.go,67642ab,hykuan,fix: 🐛 numeric types in pointer embedded struct test failed (#6293),768,771,piyongcai,a0d6ff1,1,2023-05-04 11:29:31,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",839,839,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",835,838,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",841,841,,,0,2020-02-15 10:24:37,
schema/field.go,6b98ced,Jinzhu,"Fix set time field from null, close #3108",842,842,,,1,2020-07-03 23:45:07,
schema/field.go,6b98ced,Jinzhu,"Fix set time field from null, close #3108",844,844,,,1,2020-07-03 23:45:07,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",845,845,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,6b98ced,Jinzhu,"Fix set time field from null, close #3108",846,846,,,1,2020-07-03 23:45:07,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",850,850,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",852,853,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",847,848,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",849,849,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",855,858,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",854,854,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",859,859,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",861,861,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",863,864,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",860,860,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",843,843,heige,5555b01,1,2022-02-19 09:02:53,2021-04-13 01:41:30
schema/field.go,6f4602a,Jinzhu,Fix mysql tests,867,867,,,1,2020-05-29 15:38:03,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",866,866,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,6f4602a,Jinzhu,Fix mysql tests,868,870,,,1,2020-05-29 15:38:03,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",865,865,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",871,871,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",873,874,,,0,2020-02-15 10:24:37,
schema/field.go,6f4602a,Jinzhu,Fix mysql tests,876,882,,,1,2020-05-29 15:38:03,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",883,883,,,0,2020-02-15 10:24:37,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",885,886,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",887,887,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",888,891,,,0,2020-02-15 10:24:37,
schema/field.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",851,851,,,1,2021-06-10 02:21:28,
schema/field.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,895,895,,,1,2020-06-02 15:30:26,
schema/field.go,7d45833,Jinzhu,"Fix driver.Valuer interface returns nil, close #3248",892,893,,,1,2020-08-13 04:05:55,
schema/field.go,6353414,aclich,"fix: 🐛 embedded struct test failed with custom datatypes (#6311)  * fix: 🐛 embedded struct test failed with custom datatypes  Fix the pointer embedded struct within custom datatypes and *time.time should be nil issue.  * fix: 🐛 change test case to avoid mssql driver issue  change test cases from bytes to string to avoid mssql driver issue",862,862,piyongcai,a0d6ff1,1,2023-05-15 01:59:26,2022-01-12 05:11:40
schema/field.go,cb591a7,Jinzhu,"Fix panic when using FirstOrCreate with soft delete, close #3671",896,896,,,1,2020-10-23 10:40:05,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",894,894,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",897,897,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,b326583,Jinzhu,Fix can't scan null value into normal data types,902,902,,,1,2020-06-03 01:00:20,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",901,901,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",884,884,,,1,2021-06-10 02:21:28,
schema/field.go,cb591a7,Jinzhu,"Fix panic when using FirstOrCreate with soft delete, close #3671",900,900,,,1,2020-10-23 10:40:05,
schema/field.go,68a7a82,Jinzhu,Test HasOne Association,904,904,,,0,2020-05-24 15:07:42,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",905,905,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",840,840,,,1,2022-02-19 09:02:53,
schema/field.go,7d45833,Jinzhu,"Fix driver.Valuer interface returns nil, close #3248",906,914,,,1,2020-08-13 04:05:55,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",915,917,,,0,2020-02-15 10:24:37,
schema/field.go,7d45833,Jinzhu,"Fix driver.Valuer interface returns nil, close #3248",918,919,,,1,2020-08-13 04:05:55,
schema/field.go,7c2ecdf,Jinzhu,"Fix use pointer of Valuer as foreign key, close #3212",921,921,,,1,2020-07-30 02:23:35,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",872,872,,,1,2022-02-19 09:02:53,
schema/field.go,7d45833,Jinzhu,"Fix driver.Valuer interface returns nil, close #3248",922,922,,,1,2020-08-13 04:05:55,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",920,920,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",923,923,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,7d45833,Jinzhu,"Fix driver.Valuer interface returns nil, close #3248",926,926,,,1,2020-08-13 04:05:55,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",927,927,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,b326583,Jinzhu,Fix can't scan null value into normal data types,928,928,,,1,2020-06-03 01:00:20,
schema/field.go,68a7a82,Jinzhu,Test HasOne Association,930,930,,,0,2020-05-24 15:07:42,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",875,875,,,1,2022-02-19 09:02:53,
schema/field.go,18236fa,Jinzhu,"Add more tests for setter, valuer",933,933,,,0,2020-02-15 16:37:59,
schema/field.go,7d45833,Jinzhu,"Fix driver.Valuer interface returns nil, close #3248",931,932,,,1,2020-08-13 04:05:55,
schema/field.go,7d45833,Jinzhu,"Fix driver.Valuer interface returns nil, close #3248",934,934,,,1,2020-08-13 04:05:55,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",935,935,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,faee069,Jinzhu,"Test Field Valuer, Setter",936,936,,,0,2020-02-15 12:28:03,
schema/field.go,18236fa,Jinzhu,"Add more tests for setter, valuer",937,937,,,0,2020-02-15 16:37:59,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",942,942,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",940,941,piyongcai,a0d6ff1,1,2022-02-19 09:02:53,2022-01-12 05:11:40
schema/field.go,faee069,Jinzhu,"Test Field Valuer, Setter",938,939,,,0,2020-02-15 12:28:03,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",943,945,,,0,2020-02-15 10:24:37,
schema/field.go,3c00980,ag9920,"fix: serializer use default valueOf in assignInterfacesToValue, close #5168  commit 58e1b2bffbc216f2862d040fb545a8a486e473b6 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 17:06:43 2022 +0800      Refactor #5168  commit fb9233011d209174e8223e970f0f732412852908 Author: ag9920 <alexgong7@outlook.com> Date:   Thu Mar 17 21:23:28 2022 +0800      fix: serializer use default valueOf in assignInterfacesToValue",962,964,Jinzhu,63ac66b,1,2022-03-18 09:12:17,2022-03-17 03:34:27
schema/field.go,1643a36,Jinzhu,Fix possible concurrency problem for serializer,958,959,Jinzhu,9144969,1,2023-03-10 08:39:57,2022-04-02 09:17:47
schema/field.go,6353414,aclich,"fix: 🐛 embedded struct test failed with custom datatypes (#6311)  * fix: 🐛 embedded struct test failed with custom datatypes  Fix the pointer embedded struct within custom datatypes and *time.time should be nil issue.  * fix: 🐛 change test case to avoid mssql driver issue  change test cases from bytes to string to avoid mssql driver issue",924,925,piyongcai,a0d6ff1,1,2023-05-15 01:59:26,2022-01-12 05:11:40
schema/field.go,6353414,aclich,"fix: 🐛 embedded struct test failed with custom datatypes (#6311)  * fix: 🐛 embedded struct test failed with custom datatypes  Fix the pointer embedded struct within custom datatypes and *time.time should be nil issue.  * fix: 🐛 change test case to avoid mssql driver issue  change test cases from bytes to string to avoid mssql driver issue",929,929,piyongcai,a0d6ff1,1,2023-05-15 01:59:26,2022-01-12 05:11:40
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",960,961,,,1,2022-02-19 09:02:53,
schema/field.go,6353414,aclich,"fix: 🐛 embedded struct test failed with custom datatypes (#6311)  * fix: 🐛 embedded struct test failed with custom datatypes  Fix the pointer embedded struct within custom datatypes and *time.time should be nil issue.  * fix: 🐛 change test case to avoid mssql driver issue  change test cases from bytes to string to avoid mssql driver issue",903,903,,,1,2023-05-15 01:59:26,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",946,957,,,1,2022-02-19 09:02:53,
schema/field.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",980,980,,,0,2020-02-15 10:24:37,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",969,969,,,1,2022-02-19 09:02:53,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",967,968,,,1,2022-02-19 09:02:53,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",973,979,,,1,2022-02-19 09:02:53,
schema/field.go,1643a36,Jinzhu,Fix possible concurrency problem for serializer,970,972,,,1,2023-03-10 08:39:57,
schema/field.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",965,966,,,1,2022-02-19 09:02:53,
schema/field.go,3c00980,ag9920,"fix: serializer use default valueOf in assignInterfacesToValue, close #5168  commit 58e1b2bffbc216f2862d040fb545a8a486e473b6 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 17:06:43 2022 +0800      Refactor #5168  commit fb9233011d209174e8223e970f0f732412852908 Author: ag9920 <alexgong7@outlook.com> Date:   Thu Mar 17 21:23:28 2022 +0800      fix: serializer use default valueOf in assignInterfacesToValue",986,987,,,1,2022-03-18 09:12:17,
schema/field.go,3c00980,ag9920,"fix: serializer use default valueOf in assignInterfacesToValue, close #5168  commit 58e1b2bffbc216f2862d040fb545a8a486e473b6 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 17:06:43 2022 +0800      Refactor #5168  commit fb9233011d209174e8223e970f0f732412852908 Author: ag9920 <alexgong7@outlook.com> Date:   Thu Mar 17 21:23:28 2022 +0800      fix: serializer use default valueOf in assignInterfacesToValue",983,983,,,1,2022-03-18 09:12:17,
schema/field.go,1643a36,Jinzhu,Fix possible concurrency problem for serializer,984,985,,,1,2023-03-10 08:39:57,
schema/field.go,9f27377,Aman,"fix deprecated reflect.PtrTo reflect.PointerTo usage (#7366)  * fix deprecated reflect.PtrTo reflect.PointerTo usage  * replace all deprecated reflect.PtrTo reflect.PointerTo usage",999,999,yetone,9a61ef2,1,2025-02-13 06:16:26,2024-04-15 03:20:20
schema/field.go,3c00980,ag9920,"fix: serializer use default valueOf in assignInterfacesToValue, close #5168  commit 58e1b2bffbc216f2862d040fb545a8a486e473b6 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 17:06:43 2022 +0800      Refactor #5168  commit fb9233011d209174e8223e970f0f732412852908 Author: ag9920 <alexgong7@outlook.com> Date:   Thu Mar 17 21:23:28 2022 +0800      fix: serializer use default valueOf in assignInterfacesToValue",990,991,,,1,2022-03-18 09:12:17,
schema/field.go,6353414,aclich,"fix: 🐛 embedded struct test failed with custom datatypes (#6311)  * fix: 🐛 embedded struct test failed with custom datatypes  Fix the pointer embedded struct within custom datatypes and *time.time should be nil issue.  * fix: 🐛 change test case to avoid mssql driver issue  change test cases from bytes to string to avoid mssql driver issue",898,899,,,1,2023-05-15 01:59:26,
schema/field.go,1643a36,Jinzhu,Fix possible concurrency problem for serializer,988,989,,,1,2023-03-10 08:39:57,
schema/field.go,3c00980,ag9920,"fix: serializer use default valueOf in assignInterfacesToValue, close #5168  commit 58e1b2bffbc216f2862d040fb545a8a486e473b6 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 17:06:43 2022 +0800      Refactor #5168  commit fb9233011d209174e8223e970f0f732412852908 Author: ag9920 <alexgong7@outlook.com> Date:   Thu Mar 17 21:23:28 2022 +0800      fix: serializer use default valueOf in assignInterfacesToValue",993,995,,,1,2022-03-18 09:12:17,
schema/field.go,3c00980,ag9920,"fix: serializer use default valueOf in assignInterfacesToValue, close #5168  commit 58e1b2bffbc216f2862d040fb545a8a486e473b6 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 17:06:43 2022 +0800      Refactor #5168  commit fb9233011d209174e8223e970f0f732412852908 Author: ag9920 <alexgong7@outlook.com> Date:   Thu Mar 17 21:23:28 2022 +0800      fix: serializer use default valueOf in assignInterfacesToValue",996,998,,,1,2022-03-18 09:12:17,
schema/field.go,3c00980,ag9920,"fix: serializer use default valueOf in assignInterfacesToValue, close #5168  commit 58e1b2bffbc216f2862d040fb545a8a486e473b6 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 17:06:43 2022 +0800      Refactor #5168  commit fb9233011d209174e8223e970f0f732412852908 Author: ag9920 <alexgong7@outlook.com> Date:   Thu Mar 17 21:23:28 2022 +0800      fix: serializer use default valueOf in assignInterfacesToValue",1000,1001,,,1,2022-03-18 09:12:17,
schema/field.go,3c00980,ag9920,"fix: serializer use default valueOf in assignInterfacesToValue, close #5168  commit 58e1b2bffbc216f2862d040fb545a8a486e473b6 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 17:06:43 2022 +0800      Refactor #5168  commit fb9233011d209174e8223e970f0f732412852908 Author: ag9920 <alexgong7@outlook.com> Date:   Thu Mar 17 21:23:28 2022 +0800      fix: serializer use default valueOf in assignInterfacesToValue",981,982,,,1,2022-03-18 09:12:17,
schema/field.go,1643a36,Jinzhu,Fix possible concurrency problem for serializer,992,992,,,1,2023-03-10 08:39:57,
tests/preload_suits_test.go,b71171d,Jinzhu,Add more preload tests,440,694,,,0,2020-06-01 17:34:00,
tests/preload_suits_test.go,b71171d,Jinzhu,Add more preload tests,12,437,,,0,2020-06-01 17:34:00,
tests/preload_suits_test.go,b71171d,Jinzhu,Add more preload tests,9,10,,,0,2020-06-01 17:34:00,
tests/preload_suits_test.go,e986371,Jinzhu,Rename package name,11,11,Jinzhu,5ecbf25,0,2020-06-02 01:18:01,2020-06-01 23:56:53
tests/preload_suits_test.go,a1e35bd,Jinzhu,Support merge batch data some having primary values,7,7,Jinzhu,4f19e2a,0,2020-06-20 08:52:15,2020-06-19 17:20:18
tests/preload_suits_test.go,b71171d,Jinzhu,Add more preload tests,1,6,,,0,2020-06-01 17:34:00,
tests/preload_suits_test.go,6950007,Jinzhu,"Fix failed to parse relations when using goroutinue, close #3790  commit ee0ec43e8dfa85c1c1a562c2d0d47776cf8abd92 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Nov 27 14:31:57 2020 +0800      Fix failed to parse relations when using goroutinue, close #3790  commit 590e73ff95d8af6bd14f0a0da687dd7d12e5f94e Author: rokeyzhao <rokeyzhao@tencent.com> Date:   Thu Nov 26 20:27:55 2020 +0800      test: no cache preload in goroutine",8,8,Jinzhu,a1e35bd,1,2020-11-27 06:32:20,2020-06-20 08:52:15
tests/preload_suits_test.go,4f19e2a,Jinzhu,Test ForeignKeyConstraints,438,439,Jinzhu,94685d1,0,2020-06-19 17:20:18,2020-06-02 15:30:26
tests/preload_suits_test.go,5ecbf25,Jinzhu,Drop table with CASCADE option,1170,1170,Jinzhu,b71171d,0,2020-06-01 23:56:53,2020-06-01 17:34:00
tests/preload_suits_test.go,8bb05a5,Jinzhu,Refactor tests files,695,696,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/preload_suits_test.go,b71171d,Jinzhu,Add more preload tests,740,1169,,,0,2020-06-01 17:34:00,
tests/preload_suits_test.go,5ecbf25,Jinzhu,Drop table with CASCADE option,1213,1213,Jinzhu,b71171d,0,2020-06-01 23:56:53,2020-06-01 17:34:00
tests/preload_suits_test.go,b71171d,Jinzhu,Add more preload tests,1172,1212,,,0,2020-06-01 17:34:00,
tests/preload_suits_test.go,b71171d,Jinzhu,Add more preload tests,1214,1296,,,0,2020-06-01 17:34:00,
tests/preload_suits_test.go,b71171d,Jinzhu,Add more preload tests,697,739,,,0,2020-06-01 17:34:00,
tests/preload_suits_test.go,b71171d,Jinzhu,Add more preload tests,1171,1171,,,0,2020-06-01 17:34:00,
tests/preload_suits_test.go,5ecbf25,Jinzhu,Drop table with CASCADE option,1297,1297,Jinzhu,b71171d,0,2020-06-01 23:56:53,2020-06-01 17:34:00
tests/preload_suits_test.go,5ecbf25,Jinzhu,Drop table with CASCADE option,1325,1325,Jinzhu,b71171d,0,2020-06-01 23:56:53,2020-06-01 17:34:00
tests/preload_suits_test.go,b71171d,Jinzhu,Add more preload tests,1326,1337,,,0,2020-06-01 17:34:00,
tests/preload_suits_test.go,a1e35bd,Jinzhu,Support merge batch data some having primary values,1463,1468,Jinzhu,4f19e2a,0,2020-06-20 08:52:15,2020-06-19 17:20:18
tests/preload_suits_test.go,b71171d,Jinzhu,Add more preload tests,1303,1324,,,0,2020-06-01 17:34:00,
tests/preload_suits_test.go,b71171d,Jinzhu,Add more preload tests,1339,1462,,,0,2020-06-01 17:34:00,
tests/preload_suits_test.go,b71171d,Jinzhu,Add more preload tests,1298,1302,,,0,2020-06-01 17:34:00,
tests/preload_suits_test.go,b71171d,Jinzhu,Add more preload tests,1469,1486,,,0,2020-06-01 17:34:00,
tests/preload_suits_test.go,5431da8,chenrui,fix: preload panic when model and dest different close #5130  commit e8307b5ef5273519a32cd8e4fd29250d1c277f6e Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 13:37:22 2022 +0800      Refactor #5130  commit 40cbba49f374c9bae54f80daee16697ae45e905b Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:36:56 2022 +0800      test: fix test fail  commit 66d3f078291102a30532b6a9d97c757228a9b543 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:29:09 2022 +0800      test: drop table and auto migrate  commit 7cbf019a930019476a97ac7ac0f5fc186e8d5b42 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 15:27:45 2022 +0800      fix: preload panic when model and dest different,1338,1338,Jinzhu,6950007,1,2022-03-18 05:38:46,2020-11-27 06:32:20
tests/preload_suits_test.go,5ecbf25,Jinzhu,Drop table with CASCADE option,1487,1487,,,0,2020-06-01 23:56:53,
tests/preload_suits_test.go,b71171d,Jinzhu,Add more preload tests,1488,1500,,,0,2020-06-01 17:34:00,
tests/preload_suits_test.go,b71171d,Jinzhu,Add more preload tests,1502,1502,,,0,2020-06-01 17:34:00,
tests/preload_suits_test.go,b71171d,Jinzhu,Add more preload tests,1504,1511,,,0,2020-06-01 17:34:00,
tests/preload_suits_test.go,6950007,Jinzhu,"Fix failed to parse relations when using goroutinue, close #3790  commit ee0ec43e8dfa85c1c1a562c2d0d47776cf8abd92 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Nov 27 14:31:57 2020 +0800      Fix failed to parse relations when using goroutinue, close #3790  commit 590e73ff95d8af6bd14f0a0da687dd7d12e5f94e Author: rokeyzhao <rokeyzhao@tencent.com> Date:   Thu Nov 26 20:27:55 2020 +0800      test: no cache preload in goroutine",1503,1503,Jinzhu,a1e35bd,1,2020-11-27 06:32:20,2020-06-20 08:52:15
tests/preload_suits_test.go,6950007,Jinzhu,"Fix failed to parse relations when using goroutinue, close #3790  commit ee0ec43e8dfa85c1c1a562c2d0d47776cf8abd92 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Nov 27 14:31:57 2020 +0800      Fix failed to parse relations when using goroutinue, close #3790  commit 590e73ff95d8af6bd14f0a0da687dd7d12e5f94e Author: rokeyzhao <rokeyzhao@tencent.com> Date:   Thu Nov 26 20:27:55 2020 +0800      test: no cache preload in goroutine",1501,1501,Jinzhu,a1e35bd,1,2020-11-27 06:32:20,2020-06-20 08:52:15
tests/postgres_test.go,6b2f371,Jinzhu,Fix few cases with postgres,6,9,,,1,2020-06-18 00:40:41,
tests/postgres_test.go,9564b82,Wen Sun,Fix OnConstraint builder (#5738),10,10,Nguyen Huu Tuan,328f301,1,2022-10-07 05:46:20,2022-09-22 10:35:21
tests/postgres_test.go,6b2f371,Jinzhu,Fix few cases with postgres,1,4,,,1,2020-06-18 00:40:41,
tests/postgres_test.go,6b2f371,Jinzhu,Fix few cases with postgres,12,13,,,1,2020-06-18 00:40:41,
tests/postgres_test.go,983e96f,Jinzhu,Add tests for alter column type,11,11,Wen Sun,9564b82,0,2022-10-08 08:04:57,2022-10-07 05:46:20
tests/postgres_test.go,b1201fc,Jinzhu,"Fix update with customized time type, close #5101",5,5,Jinzhu,b8f33a4,1,2022-02-23 09:48:26,2021-11-23 09:11:52
tests/postgres_test.go,6b2f371,Jinzhu,Fix few cases with postgres,64,70,,,1,2020-06-18 00:40:41,
tests/postgres_test.go,328f301,Nguyen Huu Tuan,add some test case which related the logic (#5477),14,63,Cr,d71caef,0,2022-09-22 10:35:21,2022-09-03 12:00:21
tests/postgres_test.go,6b2f371,Jinzhu,Fix few cases with postgres,100,100,,,1,2020-06-18 00:40:41,
tests/postgres_test.go,6b2f371,Jinzhu,Fix few cases with postgres,97,98,,,1,2020-06-18 00:40:41,
tests/postgres_test.go,6b2f371,Jinzhu,Fix few cases with postgres,76,88,,,1,2020-06-18 00:40:41,
tests/postgres_test.go,6b2f371,Jinzhu,Fix few cases with postgres,114,114,,,1,2020-06-18 00:40:41,
tests/postgres_test.go,e93dc34,Jinzhu,Test postgres autoincrement check,115,153,Jinzhu,983e96f,0,2022-10-08 09:16:32,2022-10-08 08:04:57
tests/postgres_test.go,b1201fc,Jinzhu,"Fix update with customized time type, close #5101",71,73,Jinzhu,da16f7b,1,2022-02-23 09:48:26,2020-07-22 04:13:40
tests/postgres_test.go,b1201fc,Jinzhu,"Fix update with customized time type, close #5101",75,75,Jinzhu,da16f7b,1,2022-02-23 09:48:26,2020-07-22 04:13:40
tests/postgres_test.go,8500380,Jinzhu,"Add name checker test, close #4007",99,99,,,0,2021-01-27 09:45:59,
tests/postgres_test.go,0097b39,Jinzhu,"Should ignore error when parsing default value for time, close #5176",74,74,Jinzhu,da16f7b,1,2022-03-20 00:55:08,2020-07-22 04:13:40
tests/postgres_test.go,8500380,Jinzhu,"Add name checker test, close #4007",89,96,,,0,2021-01-27 09:45:59,
tests/postgres_test.go,6b2f371,Jinzhu,Fix few cases with postgres,154,154,,,1,2020-06-18 00:40:41,
tests/postgres_test.go,0546b59,Jinzhu,"Fix save many2many associations with UUID primary key, close #3182",155,156,,,1,2020-07-22 03:28:00,
tests/postgres_test.go,0546b59,Jinzhu,"Fix save many2many associations with UUID primary key, close #3182",158,162,,,1,2020-07-22 03:28:00,
tests/postgres_test.go,da16f7b,Jinzhu,Create extension uuid-ossp for postgres test database,173,176,,,0,2020-07-22 04:13:40,
tests/postgres_test.go,b1201fc,Jinzhu,"Fix update with customized time type, close #5101",105,113,,,1,2022-02-23 09:48:26,
tests/postgres_test.go,0546b59,Jinzhu,"Fix save many2many associations with UUID primary key, close #3182",177,191,,,1,2020-07-22 03:28:00,
tests/postgres_test.go,d71caef,Cr,fix: remove uuid autoincrement (#5620),163,163,,,1,2022-09-03 12:00:21,
tests/postgres_test.go,b8f33a4,Jinzhu,Add unused argument (#4871)  * Append unused argument to gorm statement,101,104,,,0,2021-11-23 09:11:52,
tests/postgres_test.go,0546b59,Jinzhu,"Fix save many2many associations with UUID primary key, close #3182",164,172,,,1,2020-07-22 03:28:00,
tests/postgres_test.go,9564b82,Wen Sun,Fix OnConstraint builder (#5738),192,241,Nguyen Huu Tuan,328f301,1,2022-10-07 05:46:20,2022-09-22 10:35:21
tests/postgres_test.go,d71caef,Cr,fix: remove uuid autoincrement (#5620),157,157,,,1,2022-09-03 12:00:21,
tests/postgres_test.go,983e96f,Jinzhu,Add tests for alter column type,242,256,,,0,2022-10-08 08:04:57,
tests/prepared_stmt_test.go,9b0ad47,Jinzhu,Squashed commit of the following:  commit 759038a126122d5b3323979fdd7d867a4ab85585 Author: Jinzhu <wosmvp@gmail.com> Date:   Mon Aug 31 12:06:31 2020 +0800      Add PreparedStmt tests  commit 066d54db1fc93ea58c190195104a2d7086623f69 Author: 王岚 <wanglan.backend@bytedance.com> Date:   Fri Aug 28 18:40:59 2020 +0800      prepare_stmt add ctx,1,4,,,0,2020-08-31 04:08:33,
tests/prepared_stmt_test.go,9b0ad47,Jinzhu,Squashed commit of the following:  commit 759038a126122d5b3323979fdd7d867a4ab85585 Author: Jinzhu <wosmvp@gmail.com> Date:   Mon Aug 31 12:06:31 2020 +0800      Add PreparedStmt tests  commit 066d54db1fc93ea58c190195104a2d7086623f69 Author: 王岚 <wanglan.backend@bytedance.com> Date:   Fri Aug 28 18:40:59 2020 +0800      prepare_stmt add ctx,22,54,,,0,2020-08-31 04:08:33,
tests/prepared_stmt_test.go,9b0ad47,Jinzhu,Squashed commit of the following:  commit 759038a126122d5b3323979fdd7d867a4ab85585 Author: Jinzhu <wosmvp@gmail.com> Date:   Mon Aug 31 12:06:31 2020 +0800      Add PreparedStmt tests  commit 066d54db1fc93ea58c190195104a2d7086623f69 Author: 王岚 <wanglan.backend@bytedance.com> Date:   Fri Aug 28 18:40:59 2020 +0800      prepare_stmt add ctx,7,16,,,0,2020-08-31 04:08:33,
tests/prepared_stmt_test.go,98e15e0,Jinzhu,"Setup DB's ConnPool in PrepareStmt mode, fix #3362",17,20,Jinzhu,e98a4a3,1,2020-09-03 04:54:26,2020-09-01 06:01:59
tests/prepared_stmt_test.go,5dd2bb4,Cr,"feat(PreparedStmtDB): support reset (#5782)  * feat(PreparedStmtDB): support reset  * fix: close all stmt  * test: fix test  * fix: delete one by one",6,6,Cr,0b7113b,1,2022-10-19 06:46:59,2022-09-30 10:13:36
tests/prepared_stmt_test.go,1223745,kinggo,"fix: use preparestmt in trasaction will use new conn, close #5508",5,5,Jinzhu,fe553a7,1,2022-09-22 08:47:43,2021-01-10 08:46:06
tests/prepared_stmt_test.go,e98a4a3,Jinzhu,Change default timeout interval to avoid test fail on CI,21,21,,,0,2020-09-01 06:01:59,
tests/prepared_stmt_test.go,fe553a7,Jinzhu,"Fix prepared statement in transaction mode can't be shared in normal operations, close #3927",55,92,Jinzhu,98e15e0,1,2021-01-10 08:46:06,2020-09-03 04:54:26
tests/prepared_stmt_test.go,0b7113b,Cr,"fix: prepare deadlock (#5568)  * fix: prepare deadlock  * chore[ci skip]: code style  * chore[ci skip]: test remove unnecessary params  * fix: prepare deadlock  * fix: double check prepare  * test: more goroutines  * chore[ci skip]: improve code comments  Co-authored-by: Jinzhu <wosmvp@gmail.com>",153,153,kinggo,1223745,1,2022-09-30 10:13:36,2022-09-22 08:47:43
tests/prepared_stmt_test.go,0b7113b,Cr,"fix: prepare deadlock (#5568)  * fix: prepare deadlock  * chore[ci skip]: code style  * chore[ci skip]: test remove unnecessary params  * fix: prepare deadlock  * fix: double check prepare  * test: more goroutines  * chore[ci skip]: improve code comments  Co-authored-by: Jinzhu <wosmvp@gmail.com>",155,177,kinggo,1223745,1,2022-09-30 10:13:36,2022-09-22 08:47:43
tests/prepared_stmt_test.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,178,180,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
tests/prepared_stmt_test.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,94,152,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
tests/prepared_stmt_test.go,1223745,kinggo,"fix: use preparestmt in trasaction will use new conn, close #5508",93,93,Jinzhu,fe553a7,1,2022-09-22 08:47:43,2021-01-10 08:46:06
tests/prepared_stmt_test.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,207,207,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
tests/prepared_stmt_test.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,204,204,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
tests/prepared_stmt_test.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,216,216,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
tests/prepared_stmt_test.go,c2d571c,Saeid,"test: coverage for duplicated key err (#6389)  * test: ErrDuplicatedKey coverage added  * test: updated sqlserver version  * test: removed sqlserver  * test: support added for sqlserver  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",154,154,kinggo,1223745,0,2023-06-10 13:05:19,2022-09-22 08:47:43
tests/prepared_stmt_test.go,5dd2bb4,Cr,"feat(PreparedStmtDB): support reset (#5782)  * feat(PreparedStmtDB): support reset  * fix: close all stmt  * test: fix test  * fix: delete one by one",205,206,,,1,2022-10-19 06:46:59,
tests/prepared_stmt_test.go,5dd2bb4,Cr,"feat(PreparedStmtDB): support reset (#5782)  * feat(PreparedStmtDB): support reset  * fix: close all stmt  * test: fix test  * fix: delete one by one",208,215,,,1,2022-10-19 06:46:59,
tests/prepared_stmt_test.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,225,225,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
tests/prepared_stmt_test.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,222,222,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
tests/prepared_stmt_test.go,1223745,kinggo,"fix: use preparestmt in trasaction will use new conn, close #5508",188,202,,,1,2022-09-22 08:47:43,
tests/prepared_stmt_test.go,0b7113b,Cr,"fix: prepare deadlock (#5568)  * fix: prepare deadlock  * chore[ci skip]: code style  * chore[ci skip]: test remove unnecessary params  * fix: prepare deadlock  * fix: double check prepare  * test: more goroutines  * chore[ci skip]: improve code comments  Co-authored-by: Jinzhu <wosmvp@gmail.com>",181,187,,,1,2022-09-30 10:13:36,
tests/prepared_stmt_test.go,0dbfda5,ivila,"fix memory leaks in PrepareStatementDB (#7142)  * fix memory leaks in PrepareStatementDB  * Fix CR: 1) Fix potential Segmentation Fault in Reset function 2) Setting db.Stmts to nil map when Close to avoid further using  * Add Test: 1) TestPreparedStmtConcurrentReset 2) TestPreparedStmtConcurrentClose  * Fix test, create new connection to keep away from other tests  ---------  Co-authored-by: Zehui Chen <zehui@ssc-hn.com>",229,234,Jinzhu,0d6c534,1,2024-08-22 11:02:05,2024-03-21 07:55:43
tests/prepared_stmt_test.go,5dd2bb4,Cr,"feat(PreparedStmtDB): support reset (#5782)  * feat(PreparedStmtDB): support reset  * fix: close all stmt  * test: fix test  * fix: delete one by one",217,221,,,1,2022-10-19 06:46:59,
tests/prepared_stmt_test.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,235,235,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
tests/prepared_stmt_test.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,237,238,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
tests/prepared_stmt_test.go,0dbfda5,ivila,"fix memory leaks in PrepareStatementDB (#7142)  * fix memory leaks in PrepareStatementDB  * Fix CR: 1) Fix potential Segmentation Fault in Reset function 2) Setting db.Stmts to nil map when Close to avoid further using  * Add Test: 1) TestPreparedStmtConcurrentReset 2) TestPreparedStmtConcurrentClose  * Fix test, create new connection to keep away from other tests  ---------  Co-authored-by: Zehui Chen <zehui@ssc-hn.com>",236,236,Jinzhu,0d6c534,1,2024-08-22 11:02:05,2024-03-21 07:55:43
tests/prepared_stmt_test.go,a827495,Zhaodong Xie,Preparestmt use LRU Map instead default map (#7435)  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 支持lru淘汰preparestmt cache  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * 只使用lru  * change const export  * Add stmt_store  * refact prepare stmt store  * Rename lru store  * change const export  * ADD UT  * format code and add session level prepare stmt config  * code format according to golinter ci  * ADD UT  ---------  Co-authored-by: xiezhaodong <xiezhaodong@bytedance.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>,281,281,ivila,0dbfda5,0,2025-04-25 08:22:26,2024-08-22 11:02:05
tests/prepared_stmt_test.go,0dbfda5,ivila,"fix memory leaks in PrepareStatementDB (#7142)  * fix memory leaks in PrepareStatementDB  * Fix CR: 1) Fix potential Segmentation Fault in Reset function 2) Setting db.Stmts to nil map when Close to avoid further using  * Add Test: 1) TestPreparedStmtConcurrentReset 2) TestPreparedStmtConcurrentClose  * Fix test, create new connection to keep away from other tests  ---------  Co-authored-by: Zehui Chen <zehui@ssc-hn.com>",239,280,Jinzhu,0d6c534,1,2024-08-22 11:02:05,2024-03-21 07:55:43
tests/prepared_stmt_test.go,5dd2bb4,Cr,"feat(PreparedStmtDB): support reset (#5782)  * feat(PreparedStmtDB): support reset  * fix: close all stmt  * test: fix test  * fix: delete one by one",203,203,,,1,2022-10-19 06:46:59,
tests/prepared_stmt_test.go,0dbfda5,ivila,"fix memory leaks in PrepareStatementDB (#7142)  * fix memory leaks in PrepareStatementDB  * Fix CR: 1) Fix potential Segmentation Fault in Reset function 2) Setting db.Stmts to nil map when Close to avoid further using  * Add Test: 1) TestPreparedStmtConcurrentReset 2) TestPreparedStmtConcurrentClose  * Fix test, create new connection to keep away from other tests  ---------  Co-authored-by: Zehui Chen <zehui@ssc-hn.com>",282,289,Jinzhu,0d6c534,1,2024-08-22 11:02:05,2024-03-21 07:55:43
tests/prepared_stmt_test.go,5dd2bb4,Cr,"feat(PreparedStmtDB): support reset (#5782)  * feat(PreparedStmtDB): support reset  * fix: close all stmt  * test: fix test  * fix: delete one by one",226,228,,,1,2022-10-19 06:46:59,
tests/prepared_stmt_test.go,5dd2bb4,Cr,"feat(PreparedStmtDB): support reset (#5782)  * feat(PreparedStmtDB): support reset  * fix: close all stmt  * test: fix test  * fix: delete one by one",223,224,,,1,2022-10-19 06:46:59,
tests/scopes_test.go,c422d75,Jinzhu,Add Scopes tests,1,3,,,0,2020-05-30 11:43:29,
tests/scopes_test.go,8e67a08,Jinzhu,"Fix Scopes with Row, close #4465",4,4,Jinzhu,92c3ba9,1,2021-06-18 07:38:20,2021-05-17 07:36:07
tests/scopes_test.go,c422d75,Jinzhu,Add Scopes tests,5,6,,,0,2020-05-30 11:43:29,
tests/scopes_test.go,c422d75,Jinzhu,Add Scopes tests,9,25,,,0,2020-05-30 11:43:29,
tests/scopes_test.go,8bb05a5,Jinzhu,Refactor tests files,8,8,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/scopes_test.go,c422d75,Jinzhu,Add Scopes tests,27,48,,,0,2020-05-30 11:43:29,
tests/scopes_test.go,e986371,Jinzhu,Rename package name,7,7,Jinzhu,c422d75,0,2020-06-02 01:18:01,2020-05-30 11:43:29
tests/scopes_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),26,26,Jinzhu,8e67a08,0,2022-01-06 07:02:53,2021-06-18 07:38:20
tests/scopes_test.go,8c92d96,Jinzhu,Fix to call Scopes with using Migrator,49,57,Jinzhu,8bb05a5,1,2021-03-19 08:34:51,2020-06-02 02:50:38
tests/scopes_test.go,92c3ba9,Jinzhu,Fix create new db sessions in scopes,58,65,Jinzhu,8c92d96,1,2021-05-17 07:36:07,2021-03-19 08:34:51
tests/scopes_test.go,4b0da0e,black-06,"fix cond in scopes (#6152)  * fix cond in scopes  * replace quote  * fix execute scopes",75,86,kinggo,b47cf57,1,2023-04-11 04:01:23,2022-01-06 07:02:53
tests/scopes_test.go,8e67a08,Jinzhu,"Fix Scopes with Row, close #4465",66,73,Jinzhu,92c3ba9,1,2021-06-18 07:38:20,2021-05-17 07:36:07
tests/scopes_test.go,c422d75,Jinzhu,Add Scopes tests,74,74,,,0,2020-05-30 11:43:29,
tests/scopes_test.go,940358e,Jinzhu,Fix tests doesn't follow https://gorm.io/docs/method_chaining.html convention,87,89,black-06,4b0da0e,1,2024-01-12 08:42:21,2023-04-11 04:01:23
tests/scopes_test.go,940358e,Jinzhu,Fix tests doesn't follow https://gorm.io/docs/method_chaining.html convention,98,100,black-06,4b0da0e,1,2024-01-12 08:42:21,2023-04-11 04:01:23
tests/scopes_test.go,4b0da0e,black-06,"fix cond in scopes (#6152)  * fix cond in scopes  * replace quote  * fix execute scopes",90,97,kinggo,b47cf57,1,2023-04-11 04:01:23,2022-01-06 07:02:53
tests/scopes_test.go,4b0da0e,black-06,"fix cond in scopes (#6152)  * fix cond in scopes  * replace quote  * fix execute scopes",101,110,kinggo,b47cf57,1,2023-04-11 04:01:23,2022-01-06 07:02:53
tests/scopes_test.go,940358e,Jinzhu,Fix tests doesn't follow https://gorm.io/docs/method_chaining.html convention,111,111,black-06,4b0da0e,1,2024-01-12 08:42:21,2023-04-11 04:01:23
tests/scopes_test.go,4b0da0e,black-06,"fix cond in scopes (#6152)  * fix cond in scopes  * replace quote  * fix execute scopes",112,129,kinggo,b47cf57,1,2023-04-11 04:01:23,2022-01-06 07:02:53
tests/serializer_test.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",1,18,,,1,2022-02-19 09:02:53,
tests/serializer_test.go,3e6ab99,wws,fix:serializer contain field panic (#5461),19,20,Jinzhu,74e07b0,1,2022-06-25 08:32:47,2022-04-11 14:07:56
tests/serializer_test.go,3e6ab99,wws,fix:serializer contain field panic (#5461),23,24,Jinzhu,74e07b0,1,2022-06-25 08:32:47,2022-04-11 14:07:56
tests/serializer_test.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",29,30,,,1,2022-02-19 09:02:53,
tests/serializer_test.go,a0f4d3f,Jinzhu,Save as empty string for not nullable nil field serialized into json,22,22,Jinzhu,ab5f80a,0,2022-10-18 08:25:39,2022-10-18 07:44:56
tests/serializer_test.go,ab5f80a,Jinzhu,Save as NULL for nil object serialized into json,21,21,hjwblog.com,6e03b97,0,2022-10-18 07:44:56,2022-07-27 05:59:47
tests/serializer_test.go,3e6ab99,wws,fix:serializer contain field panic (#5461),27,28,Jinzhu,74e07b0,1,2022-06-25 08:32:47,2022-04-11 14:07:56
tests/serializer_test.go,ac20d9e,black-06,"fix: unit test (#6250)  * fix: unit test  * fix create test  https://github.com/go-gorm/gorm/pull/6127#discussion_r1171214125  * style: rename to adaptorSerializerModel",25,26,Jinzhu,a0f4d3f,1,2023-04-21 14:09:38,2022-10-18 08:25:39
tests/serializer_test.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",55,55,,,1,2022-02-19 09:02:53,
tests/serializer_test.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",74,81,,,1,2022-02-19 09:02:53,
tests/serializer_test.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",64,72,,,1,2022-02-19 09:02:53,
tests/serializer_test.go,ac20d9e,black-06,"fix: unit test (#6250)  * fix: unit test  * fix create test  https://github.com/go-gorm/gorm/pull/6127#discussion_r1171214125  * style: rename to adaptorSerializerModel",31,54,Jinzhu,a0f4d3f,1,2023-04-21 14:09:38,2022-10-18 08:25:39
tests/serializer_test.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",106,106,,,1,2022-02-19 09:02:53,
tests/serializer_test.go,3741f25,jing1,feat: support gob serialize (#5108),56,63,,,0,2022-02-24 02:21:27,
tests/serializer_test.go,3c00980,ag9920,"fix: serializer use default valueOf in assignInterfacesToValue, close #5168  commit 58e1b2bffbc216f2862d040fb545a8a486e473b6 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 17:06:43 2022 +0800      Refactor #5168  commit fb9233011d209174e8223e970f0f732412852908 Author: ag9920 <alexgong7@outlook.com> Date:   Thu Mar 17 21:23:28 2022 +0800      fix: serializer use default valueOf in assignInterfacesToValue",73,73,Jinzhu,39d84cb,1,2022-03-18 09:12:17,2022-02-19 09:02:53
tests/serializer_test.go,3e6ab99,wws,fix:serializer contain field panic (#5461),82,105,Jinzhu,74e07b0,1,2022-06-25 08:32:47,2022-04-11 14:07:56
tests/serializer_test.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",110,113,,,1,2022-02-19 09:02:53,
tests/serializer_test.go,74e07b0,Jinzhu,Serializer unixtime support ptr of int,114,114,jing1,3741f25,0,2022-04-11 14:07:56,2022-02-24 02:21:27
tests/serializer_test.go,3741f25,jing1,feat: support gob serialize (#5108),123,128,,,0,2022-02-24 02:21:27,
tests/serializer_test.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",115,121,,,1,2022-02-19 09:02:53,
tests/serializer_test.go,ac20d9e,black-06,"fix: unit test (#6250)  * fix: unit test  * fix create test  https://github.com/go-gorm/gorm/pull/6127#discussion_r1171214125  * style: rename to adaptorSerializerModel",108,109,Jinzhu,a0f4d3f,1,2023-04-21 14:09:38,2022-10-18 08:25:39
tests/serializer_test.go,74e07b0,Jinzhu,Serializer unixtime support ptr of int,122,122,jing1,3741f25,0,2022-04-11 14:07:56,2022-02-24 02:21:27
tests/serializer_test.go,6e03b97,hjwblog.com,"fix: empty serilizer err #5524 (#5525)  * fix: empty serilizer err #5524  * feat: fix UnixSecondSerializer return nil  * feat: split type case  Co-authored-by: huanjiawei <huanjiawei@bytedance.com>",138,153,Jinzhu,62fdc2b,1,2022-07-27 05:59:47,2022-07-11 03:51:05
tests/serializer_test.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",130,136,,,1,2022-02-19 09:02:53,
tests/serializer_test.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",166,170,,,1,2022-02-19 09:02:53,
tests/serializer_test.go,3e6ab99,wws,fix:serializer contain field panic (#5461),107,107,,,1,2022-06-25 08:32:47,
tests/serializer_test.go,6e03b97,hjwblog.com,"fix: empty serilizer err #5524 (#5525)  * fix: empty serilizer err #5524  * feat: fix UnixSecondSerializer return nil  * feat: split type case  Co-authored-by: huanjiawei <huanjiawei@bytedance.com>",156,165,Jinzhu,62fdc2b,1,2022-07-27 05:59:47,2022-07-11 03:51:05
tests/serializer_test.go,3e6ab99,wws,fix:serializer contain field panic (#5461),129,129,jing1,3741f25,1,2022-06-25 08:32:47,2022-02-24 02:21:27
tests/serializer_test.go,a0f4d3f,Jinzhu,Save as empty string for not nullable nil field serialized into json,137,137,Jinzhu,62fdc2b,0,2022-10-18 08:25:39,2022-07-11 03:51:05
tests/serializer_test.go,ac20d9e,black-06,"fix: unit test (#6250)  * fix: unit test  * fix create test  https://github.com/go-gorm/gorm/pull/6127#discussion_r1171214125  * style: rename to adaptorSerializerModel",154,155,Jinzhu,a0f4d3f,1,2023-04-21 14:09:38,2022-10-18 08:25:39
tests/serializer_test.go,3c00980,ag9920,"fix: serializer use default valueOf in assignInterfacesToValue, close #5168  commit 58e1b2bffbc216f2862d040fb545a8a486e473b6 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 17:06:43 2022 +0800      Refactor #5168  commit fb9233011d209174e8223e970f0f732412852908 Author: ag9920 <alexgong7@outlook.com> Date:   Thu Mar 17 21:23:28 2022 +0800      fix: serializer use default valueOf in assignInterfacesToValue",179,181,,,1,2022-03-18 09:12:17,
tests/serializer_test.go,3c00980,ag9920,"fix: serializer use default valueOf in assignInterfacesToValue, close #5168  commit 58e1b2bffbc216f2862d040fb545a8a486e473b6 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 17:06:43 2022 +0800      Refactor #5168  commit fb9233011d209174e8223e970f0f732412852908 Author: ag9920 <alexgong7@outlook.com> Date:   Thu Mar 17 21:23:28 2022 +0800      fix: serializer use default valueOf in assignInterfacesToValue",185,201,,,1,2022-03-18 09:12:17,
tests/serializer_test.go,62fdc2b,Jinzhu,Fix serializer with empty string,171,178,jing1,3741f25,1,2022-07-11 03:51:05,2022-02-24 02:21:27
tests/serializer_test.go,ac20d9e,black-06,"fix: unit test (#6250)  * fix: unit test  * fix create test  https://github.com/go-gorm/gorm/pull/6127#discussion_r1171214125  * style: rename to adaptorSerializerModel",183,184,Jinzhu,a0f4d3f,1,2023-04-21 14:09:38,2022-10-18 08:25:39
tests/serializer_test.go,3c00980,ag9920,"fix: serializer use default valueOf in assignInterfacesToValue, close #5168  commit 58e1b2bffbc216f2862d040fb545a8a486e473b6 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 17:06:43 2022 +0800      Refactor #5168  commit fb9233011d209174e8223e970f0f732412852908 Author: ag9920 <alexgong7@outlook.com> Date:   Thu Mar 17 21:23:28 2022 +0800      fix: serializer use default valueOf in assignInterfacesToValue",203,216,,,1,2022-03-18 09:12:17,
tests/serializer_test.go,3c00980,ag9920,"fix: serializer use default valueOf in assignInterfacesToValue, close #5168  commit 58e1b2bffbc216f2862d040fb545a8a486e473b6 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 17:06:43 2022 +0800      Refactor #5168  commit fb9233011d209174e8223e970f0f732412852908 Author: ag9920 <alexgong7@outlook.com> Date:   Thu Mar 17 21:23:28 2022 +0800      fix: serializer use default valueOf in assignInterfacesToValue",218,228,,,1,2022-03-18 09:12:17,
tests/serializer_test.go,3e6ab99,wws,fix:serializer contain field panic (#5461),182,182,,,1,2022-06-25 08:32:47,
tests/serializer_test.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",229,229,,,1,2022-02-19 09:02:53,
tests/serializer_test.go,3e6ab99,wws,fix:serializer contain field panic (#5461),202,202,,,1,2022-06-25 08:32:47,
tests/serializer_test.go,c74bc57,Cr,"fix: association many2many duplicate elem (#5473)  * fix: association many2many duplicate elem  * chore: gofumpt style",217,217,,,1,2022-07-01 07:12:15,
schema/schema.go,1079e17,Jinzhu,Implement schema parser,1,3,,,0,2020-01-31 04:46:16,
schema/schema.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",9,9,Truong Nguyen,ed47415,1,2023-04-11 05:10:38,2023-03-10 08:50:03
schema/schema.go,d833efe,Jinzhu,Work on clauses,5,5,,,0,2020-02-02 11:11:17,
schema/schema.go,1079e17,Jinzhu,Implement schema parser,7,8,,,0,2020-01-31 04:46:16,
schema/schema.go,eea78f3,Jinzhu,Implement parse relationship architecture,6,6,,,0,2020-02-01 04:46:52,
schema/schema.go,1079e17,Jinzhu,Implement schema parser,10,10,,,0,2020-01-31 04:46:16,
schema/schema.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,11,11,,,0,2020-02-01 12:18:32,
schema/schema.go,8def7be,Jinzhu,Add context to logger,4,4,Jinzhu,04adbaf,0,2020-05-05 13:28:38,2020-02-24 00:51:35
schema/schema.go,e986371,Jinzhu,Rename package name,12,13,Jinzhu,befef0c,0,2020-06-02 01:18:01,2020-05-31 16:12:20
schema/schema.go,d833efe,Jinzhu,Work on clauses,30,32,,,0,2020-02-02 11:11:17,
schema/schema.go,1079e17,Jinzhu,Implement schema parser,33,33,,,0,2020-01-31 04:46:16,
schema/schema.go,1079e17,Jinzhu,Implement schema parser,14,15,,,0,2020-01-31 04:46:16,
schema/schema.go,8c18714,Jeremy Quirke,"Don't call MethodByName with a variable arg (#6602)  Go 1.22 goes somewhat toward addressing the issue using reflect MethodByName disabling linker deadcode elimination (DCE) and the resultant large increase in binary size because the linker cannot prune unused code because it might be reached via reflection.  Go Issue golang/go#62257 reduces the number of incidences of this problem by leveraging a compiler assist to avoid marking functions containing calls to MethodByName as ReflectMethods as long as the arguments are constants.  An analysis of Uber Technologies code base however shows that a number of transitive imports still contain calls to MethodByName with a variable argument, including GORM.  In the case of GORM, the solution we are proposing is because the number of possible methods is finite, we will ""unroll"" this. This demonstrably shows that GORM is not longer a problem for DCE.  Before ``` % go version go version devel go1.22-2f3458a8ce Sat Sep 16 16:26:48 2023 -0700 darwin/arm64 % go  test ./... -ldflags=-dumpdep   2>  >(grep -i -e  '->.*<reflectmethod>') gorm.io/gorm.(*Statement).BuildCondition -> gorm.io/gorm/schema.ParseWithSpecialTableName <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).Method <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).MethodByName <ReflectMethod> ok  	gorm.io/gorm	(cached) ok  	gorm.io/gorm/callbacks	(cached) gorm.io/gorm/clause_test.BenchmarkComplexSelect -> gorm.io/gorm/schema.ParseWithSpecialTableName <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).Method <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).MethodByName <ReflectMethod> ?   	gorm.io/gorm/migrator	[no test files] ok  	gorm.io/gorm/clause	(cached) ok  	gorm.io/gorm/logger	(cached) gorm.io/gorm/schema_test.TestAdvancedDataTypeValuerAndSetter -> gorm.io/gorm/schema.ParseWithSpecialTableName <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).Method <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).MethodByName <ReflectMethod> ?   	gorm.io/gorm/utils/tests	[no test files] ok  	gorm.io/gorm/schema	(cached) ok  	gorm.io/gorm/utils	(cached) ```  After  ``` %go version go version devel go1.22-2f3458a8ce Sat Sep 16 16:26:48 2023 -0700 darwin/arm64 %go  test ./... -ldflags=-dumpdep   2>  >(grep -i -e  '->.*<reflectmethod>') ok  	gorm.io/gorm	(cached) ok  	gorm.io/gorm/callbacks	(cached) ?   	gorm.io/gorm/migrator	[no test files] ?   	gorm.io/gorm/utils/tests	[no test files] ok  	gorm.io/gorm/clause	(cached) ok  	gorm.io/gorm/logger	(cached) ok  	gorm.io/gorm/schema	(cached) ok  	gorm.io/gorm/utils	(cached) ```",16,29,black-06,828e22b,1,2023-10-10 06:50:29,2023-04-11 05:10:38
schema/schema.go,e2a360b,Jinzhu,Add Before/After callbacks,34,39,,,0,2020-02-23 13:22:35,
schema/schema.go,e2a360b,Jinzhu,Add Before/After callbacks,41,42,,,0,2020-02-23 13:22:35,
schema/schema.go,5d9b57c,Jinzhu,Test HasMany Association,40,40,,,0,2020-05-25 03:11:09,
schema/schema.go,e2a360b,Jinzhu,Add Before/After callbacks,51,56,,,0,2020-02-23 13:22:35,
schema/schema.go,922a8ef,Jinzhu,Generate Query Conds for Relationship,47,50,Jinzhu,8def7be,0,2020-05-19 13:50:06,2020-05-05 13:28:38
schema/schema.go,e2a360b,Jinzhu,Add Before/After callbacks,44,44,,,0,2020-02-23 13:22:35,
schema/schema.go,e2a360b,Jinzhu,Add Before/After callbacks,46,46,,,0,2020-02-23 13:22:35,
schema/schema.go,6950007,Jinzhu,"Fix failed to parse relations when using goroutinue, close #3790  commit ee0ec43e8dfa85c1c1a562c2d0d47776cf8abd92 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Nov 27 14:31:57 2020 +0800      Fix failed to parse relations when using goroutinue, close #3790  commit 590e73ff95d8af6bd14f0a0da687dd7d12e5f94e Author: rokeyzhao <rokeyzhao@tencent.com> Date:   Thu Nov 26 20:27:55 2020 +0800      test: no cache preload in goroutine",57,57,Jinzhu,1a526e6,1,2020-11-27 06:32:20,2020-09-24 03:32:38
schema/schema.go,e2a360b,Jinzhu,Add Before/After callbacks,58,59,,,0,2020-02-23 13:22:35,
schema/schema.go,3cbd233,Jinzhu,Add more tests for parse schema relations,63,63,,,0,2020-02-01 16:03:56,
schema/schema.go,eea78f3,Jinzhu,Implement parse relationship architecture,60,62,,,0,2020-02-01 04:46:52,
schema/schema.go,3cbd233,Jinzhu,Add more tests for parse schema relations,65,65,,,0,2020-02-01 16:03:56,
schema/schema.go,eea78f3,Jinzhu,Implement parse relationship architecture,67,68,,,0,2020-02-01 04:46:52,
schema/schema.go,05167fd,Emilien,fix: use reflect.Append when preloading nested associations (#7014)  Co-authored-by: Emilien Kofman <emilien.kofman@miimosa.com>,70,70,Jeremy Quirke,8c18714,1,2024-06-12 10:52:33,2023-10-10 06:50:29
schema/schema.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,45,45,Jinzhu,5d9b57c,0,2020-06-05 15:26:56,2020-05-25 03:11:09
schema/schema.go,59365b7,Jinzhu,Refacotr Preload,69,69,,,0,2020-05-18 05:07:11,
schema/schema.go,05167fd,Emilien,fix: use reflect.Append when preloading nested associations (#7014)  Co-authored-by: Emilien Kofman <emilien.kofman@miimosa.com>,73,73,Jeremy Quirke,8c18714,1,2024-06-12 10:52:33,2023-10-10 06:50:29
schema/schema.go,59365b7,Jinzhu,Refacotr Preload,74,76,,,0,2020-05-18 05:07:11,
schema/schema.go,59365b7,Jinzhu,Refacotr Preload,71,72,,,0,2020-05-18 05:07:11,
schema/schema.go,eea78f3,Jinzhu,Implement parse relationship architecture,77,84,,,0,2020-02-01 04:46:52,
schema/schema.go,1079e17,Jinzhu,Implement schema parser,85,86,,,0,2020-01-31 04:46:16,
schema/schema.go,2218e32,Jinzhu,Allow customize table name with TableName,108,111,Jinzhu,e986371,0,2020-06-02 07:48:19,2020-06-02 01:18:01
schema/schema.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",87,107,Truong Nguyen,ed47415,1,2023-04-11 05:10:38,2023-03-10 08:50:03
schema/schema.go,a480bd8,Chen Quan,Update Optimize schema (#4364),116,116,Jinzhu,deff059,0,2021-05-10 01:51:50,2021-02-07 06:24:11
schema/schema.go,04adbaf,Jinzhu,Fix parse stmt ReflectValue,117,117,,,1,2020-02-24 00:51:35,
schema/schema.go,a3bd9c3,Wendell Sun,fix: automigrate error caused by indexes while using dynamic table name,119,120,kinggo,ec58e33,1,2021-10-19 01:59:57,2021-10-12 13:19:08
schema/schema.go,d321190,Jason Lee,"Refactor ParseWithSchemaTable method and improve test. (#4789)  * Refactor ParseWithSchemaTable method and improve test.  * Fix schema.ParseWithSchemaTable method for only use schemaTable in migrator and improve test.  * Rename `schemaTable` to `specialTableName` for clearly argument.",118,118,Wendell Sun,a3bd9c3,1,2021-10-25 03:26:44,2021-10-19 01:59:57
schema/schema.go,d321190,Jason Lee,"Refactor ParseWithSchemaTable method and improve test. (#4789)  * Refactor ParseWithSchemaTable method and improve test.  * Fix schema.ParseWithSchemaTable method for only use schemaTable in migrator and improve test.  * Rename `schemaTable` to `specialTableName` for clearly argument.",121,122,Wendell Sun,a3bd9c3,1,2021-10-25 03:26:44,2021-10-19 01:59:57
schema/schema.go,34fbe84,Jinzhu,"Add TableName with NamingStrategy support, close #5726",112,115,Wendell Sun,a3bd9c3,0,2022-10-07 13:18:37,2021-10-19 01:59:57
schema/schema.go,ec58e33,kinggo,"fixed:panic when create value from nil struct pointer. (#4771)  * fixed:create nil pointer  * fixed:panic when create value from nil struct pointer.",127,132,daheige,7a49629,1,2021-10-12 13:19:08,2021-07-28 11:00:34
schema/schema.go,12bbde8,Jinzhu,Fix Scan with interface,133,136,daheige,7a49629,1,2021-09-17 06:04:19,2021-07-28 11:00:34
schema/schema.go,b733d16,Hinagiku Soranoba,"Create supports Array / ArrayPtr (#3076)  * add Array / ArrayPtr create tests  * support create using array",137,137,Jinzhu,2218e32,0,2020-06-23 06:38:36,2020-06-02 07:48:19
schema/schema.go,eea78f3,Jinzhu,Implement parse relationship architecture,142,142,,,0,2020-02-01 04:46:52,
schema/schema.go,1079e17,Jinzhu,Implement schema parser,138,141,,,0,2020-01-31 04:46:16,
schema/schema.go,04adbaf,Jinzhu,Fix parse stmt ReflectValue,143,143,,,1,2020-02-24 00:51:35,
schema/schema.go,eea78f3,Jinzhu,Implement parse relationship architecture,144,144,,,0,2020-02-01 04:46:52,
schema/schema.go,1079e17,Jinzhu,Implement schema parser,146,147,,,0,2020-01-31 04:46:16,
schema/schema.go,d321190,Jason Lee,"Refactor ParseWithSchemaTable method and improve test. (#4789)  * Refactor ParseWithSchemaTable method and improve test.  * Fix schema.ParseWithSchemaTable method for only use schemaTable in migrator and improve test.  * Rename `schemaTable` to `specialTableName` for clearly argument.",148,156,Wendell Sun,a3bd9c3,1,2021-10-25 03:26:44,2021-10-19 01:59:57
schema/schema.go,d321190,Jason Lee,"Refactor ParseWithSchemaTable method and improve test. (#4789)  * Refactor ParseWithSchemaTable method and improve test.  * Fix schema.ParseWithSchemaTable method for only use schemaTable in migrator and improve test.  * Rename `schemaTable` to `specialTableName` for clearly argument.",158,158,daheige,7a49629,1,2021-10-25 03:26:44,2021-07-28 11:00:34
schema/schema.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",43,43,Jinzhu,1e241aa,1,2023-04-11 05:10:38,2020-11-10 13:23:20
schema/schema.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",64,64,,,1,2021-06-10 02:21:28,
schema/schema.go,3c6eb14,MJrocker,Fixed some typos in the code comment,157,157,daheige,7a49629,1,2022-07-27 02:22:49,2021-07-28 11:00:34
schema/schema.go,f83b00d,Jinzhu,"Fix Count with Select when Model not specfied, close #3220",123,126,,,1,2020-08-03 02:30:25,
schema/schema.go,1079e17,Jinzhu,Implement schema parser,163,164,,,0,2020-01-31 04:46:16,
schema/schema.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",66,66,,,1,2021-06-10 02:21:28,
schema/schema.go,6950007,Jinzhu,"Fix failed to parse relations when using goroutinue, close #3790  commit ee0ec43e8dfa85c1c1a562c2d0d47776cf8abd92 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Nov 27 14:31:57 2020 +0800      Fix failed to parse relations when using goroutinue, close #3790  commit 590e73ff95d8af6bd14f0a0da687dd7d12e5f94e Author: rokeyzhao <rokeyzhao@tencent.com> Date:   Thu Nov 26 20:27:55 2020 +0800      test: no cache preload in goroutine",159,159,Jinzhu,2218e32,1,2020-11-27 06:32:20,2020-06-02 07:48:19
schema/schema.go,1a526e6,Jinzhu,"Fix NamingStrategy with embedded struct, close #3513",173,175,Jinzhu,dc48e04,1,2020-09-24 03:32:38,2020-08-18 03:21:40
schema/schema.go,a480bd8,Chen Quan,Update Optimize schema (#4364),160,160,Jinzhu,2218e32,0,2021-05-10 01:51:50,2020-06-02 07:48:19
schema/schema.go,6950007,Jinzhu,"Fix failed to parse relations when using goroutinue, close #3790  commit ee0ec43e8dfa85c1c1a562c2d0d47776cf8abd92 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Nov 27 14:31:57 2020 +0800      Fix failed to parse relations when using goroutinue, close #3790  commit 590e73ff95d8af6bd14f0a0da687dd7d12e5f94e Author: rokeyzhao <rokeyzhao@tencent.com> Date:   Thu Nov 26 20:27:55 2020 +0800      test: no cache preload in goroutine",161,161,Jinzhu,2218e32,1,2020-11-27 06:32:20,2020-06-02 07:48:19
schema/schema.go,1079e17,Jinzhu,Implement schema parser,180,180,,,0,2020-01-31 04:46:16,
schema/schema.go,2218e32,Jinzhu,Allow customize table name with TableName,165,169,,,0,2020-06-02 07:48:19,
schema/schema.go,1079e17,Jinzhu,Implement schema parser,191,191,,,0,2020-01-31 04:46:16,
schema/schema.go,2218e32,Jinzhu,Allow customize table name with TableName,179,179,,,0,2020-06-02 07:48:19,
schema/schema.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",181,190,Jinzhu,5daa413,1,2023-04-11 05:10:38,2021-11-08 12:20:55
schema/schema.go,d321190,Jason Lee,"Refactor ParseWithSchemaTable method and improve test. (#4789)  * Refactor ParseWithSchemaTable method and improve test.  * Fix schema.ParseWithSchemaTable method for only use schemaTable in migrator and improve test.  * Rename `schemaTable` to `specialTableName` for clearly argument.",176,178,Jinzhu,53f8c9f,1,2021-10-25 03:26:44,2020-08-30 12:58:14
schema/schema.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",145,145,,,1,2021-06-10 02:21:28,
schema/schema.go,eea78f3,Jinzhu,Implement parse relationship architecture,203,204,,,0,2020-02-01 04:46:52,
schema/schema.go,1079e17,Jinzhu,Implement schema parser,202,202,,,0,2020-01-31 04:46:16,
schema/schema.go,d321190,Jason Lee,"Refactor ParseWithSchemaTable method and improve test. (#4789)  * Refactor ParseWithSchemaTable method and improve test.  * Fix schema.ParseWithSchemaTable method for only use schemaTable in migrator and improve test.  * Rename `schemaTable` to `specialTableName` for clearly argument.",196,196,Andy Bursavich,61d3a4d,1,2021-10-25 03:26:44,2020-12-04 03:28:38
schema/schema.go,a480bd8,Chen Quan,Update Optimize schema (#4364),192,194,Jinzhu,dc48e04,0,2021-05-10 01:51:50,2020-08-18 03:21:40
schema/schema.go,a4a0895,Jinzhu,Test parse schema relations,205,205,,,0,2020-02-01 14:26:17,
schema/schema.go,61d3a4d,Andy Bursavich,"Fix schema initialization paths (#3825)  * Fix schema initialization paths  The initialized channel was only closed if the schema's cacheStore did not contain the embeddedCacheKey and there were no errors parsing relations.  If the key existed or an error occurred, it would not be closed. This could leave other goroutines waiting for synchronization that will never occur.  Additionally, the other code paths that wait for initialization to complete did not return the possible error.  * Unnest common schema initialization  This makes the common code path less deeply nested and the flow control easier to follow.",162,162,,,1,2020-12-04 03:28:38,
schema/schema.go,eea78f3,Jinzhu,Implement parse relationship architecture,206,206,,,0,2020-02-01 04:46:52,
schema/schema.go,a4a0895,Jinzhu,Test parse schema relations,207,208,,,0,2020-02-01 14:26:17,
schema/schema.go,010dc7e,Jinzhu,Add namer when generate schema,209,210,,,0,2020-01-31 06:31:15,
schema/schema.go,d833efe,Jinzhu,Work on clauses,214,214,,,0,2020-02-02 11:11:17,
schema/schema.go,1079e17,Jinzhu,Implement schema parser,211,213,,,0,2020-01-31 04:46:16,
schema/schema.go,3cbd233,Jinzhu,Add more tests for parse schema relations,215,215,,,0,2020-02-01 16:03:56,
schema/schema.go,010dc7e,Jinzhu,Add namer when generate schema,216,217,,,0,2020-01-31 06:31:15,
schema/schema.go,f6ed895,Jinzhu,"Build relationships if fields are not ignored, fix #3181",221,221,Jinzhu,53f8c9f,1,2020-09-09 08:37:05,2020-08-30 12:58:14
schema/schema.go,1079e17,Jinzhu,Implement schema parser,219,219,,,0,2020-01-31 04:46:16,
schema/schema.go,010dc7e,Jinzhu,Add namer when generate schema,220,220,,,0,2020-01-31 06:31:15,
schema/schema.go,1079e17,Jinzhu,Implement schema parser,225,226,,,0,2020-01-31 04:46:16,
schema/schema.go,cbbf8f3,Jinzhu,Update schema,222,224,,,0,2020-02-18 14:56:37,
schema/schema.go,a4a0895,Jinzhu,Test parse schema relations,228,229,,,0,2020-02-01 14:26:17,
schema/schema.go,a4a0895,Jinzhu,Test parse schema relations,233,237,,,0,2020-02-01 14:26:17,
schema/schema.go,a4a0895,Jinzhu,Test parse schema relations,230,232,,,0,2020-02-01 14:26:17,
schema/schema.go,a4a0895,Jinzhu,Test parse schema relations,238,239,,,0,2020-02-01 14:26:17,
schema/schema.go,1079e17,Jinzhu,Implement schema parser,240,242,,,0,2020-01-31 04:46:16,
schema/schema.go,1079e17,Jinzhu,Implement schema parser,244,245,,,0,2020-01-31 04:46:16,
schema/schema.go,f655041,Jinzhu,"Allow overwrite ignored field's permission, close #3829",243,243,Jinzhu,0f77500,0,2020-12-06 03:07:05,2020-11-27 09:05:45
schema/schema.go,3c6eb14,MJrocker,Fixed some typos in the code comment,195,195,Andy Bursavich,61d3a4d,1,2022-07-27 02:22:49,2020-12-04 03:28:38
schema/schema.go,2cb88dc,Jinzhu,"Add Field Valuer, Setter",249,250,,,0,2020-02-15 10:24:37,
schema/schema.go,a480bd8,Chen Quan,Update Optimize schema (#4364),197,201,Jinzhu,2218e32,0,2021-05-10 01:51:50,2020-06-02 07:48:19
schema/schema.go,1079e17,Jinzhu,Implement schema parser,251,252,,,0,2020-01-31 04:46:16,
schema/schema.go,a4a0895,Jinzhu,Test parse schema relations,261,261,,,0,2020-02-01 14:26:17,
schema/schema.go,1079e17,Jinzhu,Implement schema parser,265,265,,,0,2020-01-31 04:46:16,
schema/schema.go,a4a0895,Jinzhu,Test parse schema relations,266,266,,,0,2020-02-01 14:26:17,
schema/schema.go,1079e17,Jinzhu,Implement schema parser,267,267,,,0,2020-01-31 04:46:16,
schema/schema.go,ed47415,Truong Nguyen,"Fix: Composite primary key with auto-increment value returns 0 after insert (#6127)  * Fix #4930 workaround for databases that support auto-increment in composite primary key.  * Add test for composite key with auto-increment.  * schema.go: use field.AutoIncrement instead of field.TagSettings[""AUTOINCREMENT""], add test to check autoincrement:false  create_test.go: remove unused code: drop table CompositeKeyProduct  ---------  Co-authored-by: Jinzhu <wosmvp@gmail.com>",268,279,Wendell Sun,a3bd9c3,1,2023-03-10 08:50:03,2021-10-19 01:59:57
schema/schema.go,5d9b57c,Jinzhu,Test HasMany Association,282,285,,,0,2020-05-25 03:11:09,
schema/schema.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",227,227,Andy Bursavich,61d3a4d,1,2023-04-11 05:10:38,2020-12-04 03:28:38
schema/schema.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,280,281,,,0,2020-06-05 15:26:56,
schema/schema.go,5daa413,Jinzhu,"Stabilize schema.FieldsWithDefaultDBValue's order, close #4643",286,286,Burak Demirpolat,0329b80,0,2021-11-08 12:20:55,2021-07-13 08:38:44
schema/schema.go,53f8c9f,Jinzhu,More compatible prioritized primary field #3156,253,260,,,0,2020-08-30 12:58:14,
schema/schema.go,34fbe84,Jinzhu,"Add TableName with NamingStrategy support, close #5726",170,172,,,0,2022-10-07 13:18:37,
schema/schema.go,43ce0b8,Jinzhu,Handle create with default db values,289,291,,,0,2020-02-20 02:13:26,
schema/schema.go,43ce0b8,Jinzhu,Handle create with default db values,294,294,,,0,2020-02-20 02:13:26,
schema/schema.go,d9525d4,Cr,"fix: skip append relation field to default db value (#5885)  * fix: relation field returning  * chore: gofumpt style",287,287,daheige,7a49629,1,2022-12-01 12:26:59,2021-07-28 11:00:34
schema/schema.go,53f8c9f,Jinzhu,More compatible prioritized primary field #3156,262,264,,,0,2020-08-30 12:58:14,
schema/schema.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",246,248,Jinzhu,dc48e04,1,2023-04-11 05:10:38,2020-08-18 03:21:40
schema/schema.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,292,292,,,0,2020-06-05 15:26:56,
schema/schema.go,8c18714,Jeremy Quirke,"Don't call MethodByName with a variable arg (#6602)  Go 1.22 goes somewhat toward addressing the issue using reflect MethodByName disabling linker deadcode elimination (DCE) and the resultant large increase in binary size because the linker cannot prune unused code because it might be reached via reflection.  Go Issue golang/go#62257 reduces the number of incidences of this problem by leveraging a compiler assist to avoid marking functions containing calls to MethodByName as ReflectMethods as long as the arguments are constants.  An analysis of Uber Technologies code base however shows that a number of transitive imports still contain calls to MethodByName with a variable argument, including GORM.  In the case of GORM, the solution we are proposing is because the number of possible methods is finite, we will ""unroll"" this. This demonstrably shows that GORM is not longer a problem for DCE.  Before ``` % go version go version devel go1.22-2f3458a8ce Sat Sep 16 16:26:48 2023 -0700 darwin/arm64 % go  test ./... -ldflags=-dumpdep   2>  >(grep -i -e  '->.*<reflectmethod>') gorm.io/gorm.(*Statement).BuildCondition -> gorm.io/gorm/schema.ParseWithSpecialTableName <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).Method <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).MethodByName <ReflectMethod> ok  	gorm.io/gorm	(cached) ok  	gorm.io/gorm/callbacks	(cached) gorm.io/gorm/clause_test.BenchmarkComplexSelect -> gorm.io/gorm/schema.ParseWithSpecialTableName <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).Method <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).MethodByName <ReflectMethod> ?   	gorm.io/gorm/migrator	[no test files] ok  	gorm.io/gorm/clause	(cached) ok  	gorm.io/gorm/logger	(cached) gorm.io/gorm/schema_test.TestAdvancedDataTypeValuerAndSetter -> gorm.io/gorm/schema.ParseWithSpecialTableName <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).Method <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).MethodByName <ReflectMethod> ?   	gorm.io/gorm/utils/tests	[no test files] ok  	gorm.io/gorm/schema	(cached) ok  	gorm.io/gorm/utils	(cached) ```  After  ``` %go version go version devel go1.22-2f3458a8ce Sat Sep 16 16:26:48 2023 -0700 darwin/arm64 %go  test ./... -ldflags=-dumpdep   2>  >(grep -i -e  '->.*<reflectmethod>') ok  	gorm.io/gorm	(cached) ok  	gorm.io/gorm/callbacks	(cached) ?   	gorm.io/gorm/migrator	[no test files] ?   	gorm.io/gorm/utils/tests	[no test files] ok  	gorm.io/gorm/clause	(cached) ok  	gorm.io/gorm/logger	(cached) ok  	gorm.io/gorm/schema	(cached) ok  	gorm.io/gorm/utils	(cached) ```",306,314,black-06,828e22b,1,2023-10-10 06:50:29,2023-04-11 05:10:38
schema/schema.go,43ce0b8,Jinzhu,Handle create with default db values,303,305,,,0,2020-02-20 02:13:26,
schema/schema.go,1490a06,Jinzhu,Refactor codebase and add benchmark test,288,288,,,0,2020-06-05 15:26:56,
schema/schema.go,e2a360b,Jinzhu,Add Before/After callbacks,315,315,,,0,2020-02-23 13:22:35,
schema/schema.go,8c18714,Jeremy Quirke,"Don't call MethodByName with a variable arg (#6602)  Go 1.22 goes somewhat toward addressing the issue using reflect MethodByName disabling linker deadcode elimination (DCE) and the resultant large increase in binary size because the linker cannot prune unused code because it might be reached via reflection.  Go Issue golang/go#62257 reduces the number of incidences of this problem by leveraging a compiler assist to avoid marking functions containing calls to MethodByName as ReflectMethods as long as the arguments are constants.  An analysis of Uber Technologies code base however shows that a number of transitive imports still contain calls to MethodByName with a variable argument, including GORM.  In the case of GORM, the solution we are proposing is because the number of possible methods is finite, we will ""unroll"" this. This demonstrably shows that GORM is not longer a problem for DCE.  Before ``` % go version go version devel go1.22-2f3458a8ce Sat Sep 16 16:26:48 2023 -0700 darwin/arm64 % go  test ./... -ldflags=-dumpdep   2>  >(grep -i -e  '->.*<reflectmethod>') gorm.io/gorm.(*Statement).BuildCondition -> gorm.io/gorm/schema.ParseWithSpecialTableName <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).Method <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).MethodByName <ReflectMethod> ok  	gorm.io/gorm	(cached) ok  	gorm.io/gorm/callbacks	(cached) gorm.io/gorm/clause_test.BenchmarkComplexSelect -> gorm.io/gorm/schema.ParseWithSpecialTableName <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).Method <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).MethodByName <ReflectMethod> ?   	gorm.io/gorm/migrator	[no test files] ok  	gorm.io/gorm/clause	(cached) ok  	gorm.io/gorm/logger	(cached) gorm.io/gorm/schema_test.TestAdvancedDataTypeValuerAndSetter -> gorm.io/gorm/schema.ParseWithSpecialTableName <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).Method <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).MethodByName <ReflectMethod> ?   	gorm.io/gorm/utils/tests	[no test files] ok  	gorm.io/gorm/schema	(cached) ok  	gorm.io/gorm/utils	(cached) ```  After  ``` %go version go version devel go1.22-2f3458a8ce Sat Sep 16 16:26:48 2023 -0700 darwin/arm64 %go  test ./... -ldflags=-dumpdep   2>  >(grep -i -e  '->.*<reflectmethod>') ok  	gorm.io/gorm	(cached) ok  	gorm.io/gorm/callbacks	(cached) ?   	gorm.io/gorm/migrator	[no test files] ?   	gorm.io/gorm/utils/tests	[no test files] ok  	gorm.io/gorm/clause	(cached) ok  	gorm.io/gorm/logger	(cached) ok  	gorm.io/gorm/schema	(cached) ok  	gorm.io/gorm/utils	(cached) ```",317,317,black-06,828e22b,1,2023-10-10 06:50:29,2023-04-11 05:10:38
schema/schema.go,8c18714,Jeremy Quirke,"Don't call MethodByName with a variable arg (#6602)  Go 1.22 goes somewhat toward addressing the issue using reflect MethodByName disabling linker deadcode elimination (DCE) and the resultant large increase in binary size because the linker cannot prune unused code because it might be reached via reflection.  Go Issue golang/go#62257 reduces the number of incidences of this problem by leveraging a compiler assist to avoid marking functions containing calls to MethodByName as ReflectMethods as long as the arguments are constants.  An analysis of Uber Technologies code base however shows that a number of transitive imports still contain calls to MethodByName with a variable argument, including GORM.  In the case of GORM, the solution we are proposing is because the number of possible methods is finite, we will ""unroll"" this. This demonstrably shows that GORM is not longer a problem for DCE.  Before ``` % go version go version devel go1.22-2f3458a8ce Sat Sep 16 16:26:48 2023 -0700 darwin/arm64 % go  test ./... -ldflags=-dumpdep   2>  >(grep -i -e  '->.*<reflectmethod>') gorm.io/gorm.(*Statement).BuildCondition -> gorm.io/gorm/schema.ParseWithSpecialTableName <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).Method <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).MethodByName <ReflectMethod> ok  	gorm.io/gorm	(cached) ok  	gorm.io/gorm/callbacks	(cached) gorm.io/gorm/clause_test.BenchmarkComplexSelect -> gorm.io/gorm/schema.ParseWithSpecialTableName <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).Method <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).MethodByName <ReflectMethod> ?   	gorm.io/gorm/migrator	[no test files] ok  	gorm.io/gorm/clause	(cached) ok  	gorm.io/gorm/logger	(cached) gorm.io/gorm/schema_test.TestAdvancedDataTypeValuerAndSetter -> gorm.io/gorm/schema.ParseWithSpecialTableName <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).Method <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).MethodByName <ReflectMethod> ?   	gorm.io/gorm/utils/tests	[no test files] ok  	gorm.io/gorm/schema	(cached) ok  	gorm.io/gorm/utils	(cached) ```  After  ``` %go version go version devel go1.22-2f3458a8ce Sat Sep 16 16:26:48 2023 -0700 darwin/arm64 %go  test ./... -ldflags=-dumpdep   2>  >(grep -i -e  '->.*<reflectmethod>') ok  	gorm.io/gorm	(cached) ok  	gorm.io/gorm/callbacks	(cached) ?   	gorm.io/gorm/migrator	[no test files] ?   	gorm.io/gorm/utils/tests	[no test files] ok  	gorm.io/gorm/clause	(cached) ok  	gorm.io/gorm/logger	(cached) ok  	gorm.io/gorm/schema	(cached) ok  	gorm.io/gorm/utils	(cached) ```",319,319,black-06,828e22b,1,2023-10-10 06:50:29,2023-04-11 05:10:38
schema/schema.go,e2a360b,Jinzhu,Add Before/After callbacks,318,318,,,0,2020-02-23 13:22:35,
schema/schema.go,e2a360b,Jinzhu,Add Before/After callbacks,320,323,,,0,2020-02-23 13:22:35,
schema/schema.go,befef0c,Jinzhu,Improve Hooks,316,316,,,0,2020-05-31 16:12:20,
schema/schema.go,e1084e7,Jinzhu,Allow customize AutoIncrement for primary field,300,302,,,0,2020-07-08 10:50:49,
schema/schema.go,ef002fd,Jinzhu,"Add GORMDataType to Field, close #3171",293,293,,,0,2020-07-20 11:00:03,
schema/schema.go,e1084e7,Jinzhu,Allow customize AutoIncrement for primary field,295,295,,,0,2020-07-08 10:50:49,
schema/schema.go,8a0af58,Jinzhu,fix map fields with clickhouse driver,341,341,Emilien,05167fd,1,2024-06-20 12:19:31,2024-06-12 10:52:33
schema/schema.go,7021db3,Jinzhu,"Fix FieldsWithDefaultDBValue for primary field, close #3187",296,299,,,1,2020-07-22 11:03:19,
schema/schema.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",218,218,Jinzhu,2218e32,1,2023-04-11 05:10:38,2020-06-02 07:48:19
schema/schema.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",346,346,Burak Demirpolat,0329b80,1,2023-04-11 05:10:38,2021-07-13 08:38:44
schema/schema.go,dc48e04,Jinzhu,"Fix nested embedded struct, close #3278",347,347,,,1,2020-08-18 03:21:40,
schema/schema.go,deff059,Jinzhu,"Save associations based on creatable/updatable permission, close #4056",344,345,,,0,2021-02-07 06:24:11,
schema/schema.go,61d3a4d,Andy Bursavich,"Fix schema initialization paths (#3825)  * Fix schema initialization paths  The initialized channel was only closed if the schema's cacheStore did not contain the embeddedCacheKey and there were no errors parsing relations.  If the key existed or an error occurred, it would not be closed. This could leave other goroutines waiting for synchronization that will never occur.  Additionally, the other code paths that wait for initialization to complete did not return the possible error.  * Unnest common schema initialization  This makes the common code path less deeply nested and the flow control easier to follow.",339,340,,,1,2020-12-04 03:28:38,
schema/schema.go,d321190,Jason Lee,"Refactor ParseWithSchemaTable method and improve test. (#4789)  * Refactor ParseWithSchemaTable method and improve test.  * Fix schema.ParseWithSchemaTable method for only use schemaTable in migrator and improve test.  * Rename `schemaTable` to `specialTableName` for clearly argument.",324,329,,,1,2021-10-25 03:26:44,
schema/schema.go,61d3a4d,Andy Bursavich,"Fix schema initialization paths (#3825)  * Fix schema initialization paths  The initialized channel was only closed if the schema's cacheStore did not contain the embeddedCacheKey and there were no errors parsing relations.  If the key existed or an error occurred, it would not be closed. This could leave other goroutines waiting for synchronization that will never occur.  Additionally, the other code paths that wait for initialization to complete did not return the possible error.  * Unnest common schema initialization  This makes the common code path less deeply nested and the flow control easier to follow.",342,343,,,1,2020-12-04 03:28:38,
schema/schema.go,61d3a4d,Andy Bursavich,"Fix schema initialization paths (#3825)  * Fix schema initialization paths  The initialized channel was only closed if the schema's cacheStore did not contain the embeddedCacheKey and there were no errors parsing relations.  If the key existed or an error occurred, it would not be closed. This could leave other goroutines waiting for synchronization that will never occur.  Additionally, the other code paths that wait for initialization to complete did not return the possible error.  * Unnest common schema initialization  This makes the common code path less deeply nested and the flow control easier to follow.",348,348,,,1,2020-12-04 03:28:38,
schema/schema.go,681268c,Jinzhu,Refactor Create/Query/Update/DeleteClauses interface,349,349,,,0,2020-08-17 08:31:09,
schema/schema.go,61d3a4d,Andy Bursavich,"Fix schema initialization paths (#3825)  * Fix schema initialization paths  The initialized channel was only closed if the schema's cacheStore did not contain the embeddedCacheKey and there were no errors parsing relations.  If the key existed or an error occurred, it would not be closed. This could leave other goroutines waiting for synchronization that will never occur.  Additionally, the other code paths that wait for initialization to complete did not return the possible error.  * Unnest common schema initialization  This makes the common code path less deeply nested and the flow control easier to follow.",350,350,,,1,2020-12-04 03:28:38,
schema/schema.go,681268c,Jinzhu,Refactor Create/Query/Update/DeleteClauses interface,355,355,,,0,2020-08-17 08:31:09,
schema/schema.go,6c94b07,Jinzhu,try to fix fatal error: concurrent map read and map write,330,338,,,1,2021-09-07 07:30:14,
schema/schema.go,7a49629,daheige,optimize Parse func for fieldValue.Interface,351,352,,,0,2021-07-28 11:00:34,
schema/schema.go,681268c,Jinzhu,Refactor Create/Query/Update/DeleteClauses interface,359,359,,,0,2020-08-17 08:31:09,
schema/schema.go,61d3a4d,Andy Bursavich,"Fix schema initialization paths (#3825)  * Fix schema initialization paths  The initialized channel was only closed if the schema's cacheStore did not contain the embeddedCacheKey and there were no errors parsing relations.  If the key existed or an error occurred, it would not be closed. This could leave other goroutines waiting for synchronization that will never occur.  Additionally, the other code paths that wait for initialization to complete did not return the possible error.  * Unnest common schema initialization  This makes the common code path less deeply nested and the flow control easier to follow.",353,354,,,1,2020-12-04 03:28:38,
schema/schema.go,61d3a4d,Andy Bursavich,"Fix schema initialization paths (#3825)  * Fix schema initialization paths  The initialized channel was only closed if the schema's cacheStore did not contain the embeddedCacheKey and there were no errors parsing relations.  If the key existed or an error occurred, it would not be closed. This could leave other goroutines waiting for synchronization that will never occur.  Additionally, the other code paths that wait for initialization to complete did not return the possible error.  * Unnest common schema initialization  This makes the common code path less deeply nested and the flow control easier to follow.",357,358,,,1,2020-12-04 03:28:38,
schema/schema.go,eea78f3,Jinzhu,Implement parse relationship architecture,367,367,,,0,2020-02-01 04:46:52,
schema/schema.go,1079e17,Jinzhu,Implement schema parser,368,369,,,0,2020-01-31 04:46:16,
schema/schema.go,04adbaf,Jinzhu,Fix parse stmt ReflectValue,370,370,,,1,2020-02-24 00:51:35,
schema/schema.go,1079e17,Jinzhu,Implement schema parser,371,371,,,0,2020-01-31 04:46:16,
schema/schema.go,7a49629,daheige,optimize Parse func for fieldValue.Interface,356,356,,,0,2021-07-28 11:00:34,
schema/schema.go,61d3a4d,Andy Bursavich,"Fix schema initialization paths (#3825)  * Fix schema initialization paths  The initialized channel was only closed if the schema's cacheStore did not contain the embeddedCacheKey and there were no errors parsing relations.  If the key existed or an error occurred, it would not be closed. This could leave other goroutines waiting for synchronization that will never occur.  Additionally, the other code paths that wait for initialization to complete did not return the possible error.  * Unnest common schema initialization  This makes the common code path less deeply nested and the flow control easier to follow.",361,363,,,1,2020-12-04 03:28:38,
schema/schema.go,8c18714,Jeremy Quirke,"Don't call MethodByName with a variable arg (#6602)  Go 1.22 goes somewhat toward addressing the issue using reflect MethodByName disabling linker deadcode elimination (DCE) and the resultant large increase in binary size because the linker cannot prune unused code because it might be reached via reflection.  Go Issue golang/go#62257 reduces the number of incidences of this problem by leveraging a compiler assist to avoid marking functions containing calls to MethodByName as ReflectMethods as long as the arguments are constants.  An analysis of Uber Technologies code base however shows that a number of transitive imports still contain calls to MethodByName with a variable argument, including GORM.  In the case of GORM, the solution we are proposing is because the number of possible methods is finite, we will ""unroll"" this. This demonstrably shows that GORM is not longer a problem for DCE.  Before ``` % go version go version devel go1.22-2f3458a8ce Sat Sep 16 16:26:48 2023 -0700 darwin/arm64 % go  test ./... -ldflags=-dumpdep   2>  >(grep -i -e  '->.*<reflectmethod>') gorm.io/gorm.(*Statement).BuildCondition -> gorm.io/gorm/schema.ParseWithSpecialTableName <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).Method <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).MethodByName <ReflectMethod> ok  	gorm.io/gorm	(cached) ok  	gorm.io/gorm/callbacks	(cached) gorm.io/gorm/clause_test.BenchmarkComplexSelect -> gorm.io/gorm/schema.ParseWithSpecialTableName <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).Method <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).MethodByName <ReflectMethod> ?   	gorm.io/gorm/migrator	[no test files] ok  	gorm.io/gorm/clause	(cached) ok  	gorm.io/gorm/logger	(cached) gorm.io/gorm/schema_test.TestAdvancedDataTypeValuerAndSetter -> gorm.io/gorm/schema.ParseWithSpecialTableName <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).Method <ReflectMethod> type:reflect.Value <UsedInIface> -> reflect.(*Value).MethodByName <ReflectMethod> ?   	gorm.io/gorm/utils/tests	[no test files] ok  	gorm.io/gorm/schema	(cached) ok  	gorm.io/gorm/utils	(cached) ```  After  ``` %go version go version devel go1.22-2f3458a8ce Sat Sep 16 16:26:48 2023 -0700 darwin/arm64 %go  test ./... -ldflags=-dumpdep   2>  >(grep -i -e  '->.*<reflectmethod>') ok  	gorm.io/gorm	(cached) ok  	gorm.io/gorm/callbacks	(cached) ?   	gorm.io/gorm/migrator	[no test files] ?   	gorm.io/gorm/utils/tests	[no test files] ok  	gorm.io/gorm/clause	(cached) ok  	gorm.io/gorm/logger	(cached) ok  	gorm.io/gorm/schema	(cached) ok  	gorm.io/gorm/utils	(cached) ```",373,405,black-06,828e22b,1,2023-10-10 06:50:29,2023-04-11 05:10:38
schema/schema.go,681268c,Jinzhu,Refactor Create/Query/Update/DeleteClauses interface,366,366,,,0,2020-08-17 08:31:09,
schema/schema.go,61d3a4d,Andy Bursavich,"Fix schema initialization paths (#3825)  * Fix schema initialization paths  The initialized channel was only closed if the schema's cacheStore did not contain the embeddedCacheKey and there were no errors parsing relations.  If the key existed or an error occurred, it would not be closed. This could leave other goroutines waiting for synchronization that will never occur.  Additionally, the other code paths that wait for initialization to complete did not return the possible error.  * Unnest common schema initialization  This makes the common code path less deeply nested and the flow control easier to follow.",365,365,,,1,2020-12-04 03:28:38,
schema/schema.go,7a49629,daheige,optimize Parse func for fieldValue.Interface,360,360,,,0,2021-07-28 11:00:34,
schema/schema.go,6950007,Jinzhu,"Fix failed to parse relations when using goroutinue, close #3790  commit ee0ec43e8dfa85c1c1a562c2d0d47776cf8abd92 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Nov 27 14:31:57 2020 +0800      Fix failed to parse relations when using goroutinue, close #3790  commit 590e73ff95d8af6bd14f0a0da687dd7d12e5f94e Author: rokeyzhao <rokeyzhao@tencent.com> Date:   Thu Nov 26 20:27:55 2020 +0800      test: no cache preload in goroutine",372,372,,,1,2020-11-27 06:32:20,
schema/schema.go,6950007,Jinzhu,"Fix failed to parse relations when using goroutinue, close #3790  commit ee0ec43e8dfa85c1c1a562c2d0d47776cf8abd92 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Nov 27 14:31:57 2020 +0800      Fix failed to parse relations when using goroutinue, close #3790  commit 590e73ff95d8af6bd14f0a0da687dd7d12e5f94e Author: rokeyzhao <rokeyzhao@tencent.com> Date:   Thu Nov 26 20:27:55 2020 +0800      test: no cache preload in goroutine",417,424,,,1,2020-11-27 06:32:20,
schema/schema.go,6950007,Jinzhu,"Fix failed to parse relations when using goroutinue, close #3790  commit ee0ec43e8dfa85c1c1a562c2d0d47776cf8abd92 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Nov 27 14:31:57 2020 +0800      Fix failed to parse relations when using goroutinue, close #3790  commit 590e73ff95d8af6bd14f0a0da687dd7d12e5f94e Author: rokeyzhao <rokeyzhao@tencent.com> Date:   Thu Nov 26 20:27:55 2020 +0800      test: no cache preload in goroutine",406,415,,,1,2020-11-27 06:32:20,
schema/schema.go,7a49629,daheige,optimize Parse func for fieldValue.Interface,364,364,,,0,2021-07-28 11:00:34,
schema/schema.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",416,416,,,1,2021-06-10 02:21:28,
tests/scanner_valuer_test.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",1,3,,,0,2020-05-30 13:05:27,
tests/scanner_valuer_test.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",10,10,,,0,2020-05-30 13:05:27,
tests/scanner_valuer_test.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",5,8,,,0,2020-05-30 13:05:27,
tests/scanner_valuer_test.go,ce8853e,Jinzhu,Add GormValuer interface support,9,9,Jinzhu,c1782d6,0,2020-08-27 07:03:57,2020-08-19 07:47:08
tests/scanner_valuer_test.go,ce8853e,Jinzhu,Add GormValuer interface support,11,11,Jinzhu,c1782d6,0,2020-08-27 07:03:57,2020-08-19 07:47:08
tests/scanner_valuer_test.go,ce8853e,Jinzhu,Add GormValuer interface support,4,4,Jinzhu,c1782d6,0,2020-08-27 07:03:57,2020-08-19 07:47:08
tests/scanner_valuer_test.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",12,15,,,0,2020-05-30 13:05:27,
tests/scanner_valuer_test.go,e986371,Jinzhu,Rename package name,16,16,Jinzhu,dffc271,0,2020-06-02 01:18:01,2020-06-01 02:54:32
tests/scanner_valuer_test.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",19,23,,,0,2020-05-30 13:05:27,
tests/scanner_valuer_test.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",25,33,,,0,2020-05-30 13:05:27,
tests/scanner_valuer_test.go,ce8853e,Jinzhu,Add GormValuer interface support,17,17,Jinzhu,c1782d6,0,2020-08-27 07:03:57,2020-08-19 07:47:08
tests/scanner_valuer_test.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",35,35,,,0,2020-05-30 13:05:27,
tests/scanner_valuer_test.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",37,42,,,0,2020-05-30 13:05:27,
tests/scanner_valuer_test.go,15b96ed,Caelansar,add testcase,43,43,Jinzhu,81c68db,0,2020-08-10 07:34:20,2020-07-30 09:56:16
tests/scanner_valuer_test.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",46,48,,,0,2020-05-30 13:05:27,
tests/scanner_valuer_test.go,c1782d6,Jinzhu,"Fix embedded scanner/valuer, close #3283",34,34,Jinzhu,d11c424,1,2020-08-19 07:47:08,2020-06-07 07:26:43
tests/scanner_valuer_test.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",50,53,,,0,2020-05-30 13:05:27,
tests/scanner_valuer_test.go,7d45833,Jinzhu,"Fix driver.Valuer interface returns nil, close #3248",44,45,Jinzhu,d11c424,1,2020-08-13 04:05:55,2020-06-07 07:26:43
tests/scanner_valuer_test.go,7d45833,Jinzhu,"Fix driver.Valuer interface returns nil, close #3248",58,59,Caelansar,15b96ed,1,2020-08-13 04:05:55,2020-08-10 07:34:20
tests/scanner_valuer_test.go,7d45833,Jinzhu,"Fix driver.Valuer interface returns nil, close #3248",54,54,Caelansar,15b96ed,1,2020-08-13 04:05:55,2020-08-10 07:34:20
tests/scanner_valuer_test.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",56,57,,,0,2020-05-30 13:05:27,
tests/scanner_valuer_test.go,07960fe,Jinzhu,Fix []byte support,49,49,Jinzhu,d11c424,1,2020-06-18 03:24:08,2020-06-07 07:26:43
tests/scanner_valuer_test.go,8bb05a5,Jinzhu,Refactor tests files,18,18,,,0,2020-06-02 02:50:38,
tests/scanner_valuer_test.go,07960fe,Jinzhu,Fix []byte support,36,36,Jinzhu,2b56fa0,1,2020-06-18 03:24:08,2020-05-30 17:21:16
tests/scanner_valuer_test.go,15b96ed,Caelansar,add testcase,60,61,Jinzhu,81c68db,0,2020-08-10 07:34:20,2020-07-30 09:56:16
tests/scanner_valuer_test.go,7d45833,Jinzhu,"Fix driver.Valuer interface returns nil, close #3248",62,63,Caelansar,15b96ed,1,2020-08-13 04:05:55,2020-08-10 07:34:20
tests/scanner_valuer_test.go,15b96ed,Caelansar,add testcase,64,64,Jinzhu,81c68db,0,2020-08-10 07:34:20,2020-07-30 09:56:16
tests/scanner_valuer_test.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",66,67,,,0,2020-05-30 13:05:27,
tests/scanner_valuer_test.go,dffc271,Jinzhu,Add mores tests for query,68,74,Jinzhu,1546f8a,0,2020-06-01 02:54:32,2020-05-31 04:52:49
tests/scanner_valuer_test.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",121,144,,,0,2020-05-30 13:05:27,
tests/scanner_valuer_test.go,07960fe,Jinzhu,Fix []byte support,24,24,,,1,2020-06-18 03:24:08,
tests/scanner_valuer_test.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",111,117,,,0,2020-05-30 13:05:27,
tests/scanner_valuer_test.go,dffc271,Jinzhu,Add mores tests for query,80,110,Jinzhu,1546f8a,0,2020-06-01 02:54:32,2020-05-31 04:52:49
tests/scanner_valuer_test.go,7d45833,Jinzhu,"Fix driver.Valuer interface returns nil, close #3248",75,79,Caelansar,15b96ed,1,2020-08-13 04:05:55,2020-08-10 07:34:20
tests/scanner_valuer_test.go,07960fe,Jinzhu,Fix []byte support,55,55,Jinzhu,1546f8a,1,2020-06-18 03:24:08,2020-05-31 04:52:49
tests/scanner_valuer_test.go,15b96ed,Caelansar,add testcase,145,150,Jinzhu,81c68db,0,2020-08-10 07:34:20,2020-07-30 09:56:16
tests/scanner_valuer_test.go,7d45833,Jinzhu,"Fix driver.Valuer interface returns nil, close #3248",118,120,Caelansar,15b96ed,1,2020-08-13 04:05:55,2020-08-10 07:34:20
tests/scanner_valuer_test.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",163,172,,,0,2020-05-30 13:05:27,
tests/scanner_valuer_test.go,15b96ed,Caelansar,add testcase,152,160,Jinzhu,81c68db,0,2020-08-10 07:34:20,2020-07-30 09:56:16
tests/scanner_valuer_test.go,7157b7e,Nuno Cruces,fix: database/sql.Scanner should not retain references (#6380),173,173,kinggo,b47cf57,1,2023-06-07 07:02:07,2022-01-06 07:02:53
tests/scanner_valuer_test.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",174,174,,,0,2020-05-30 13:05:27,
tests/scanner_valuer_test.go,2b56fa0,Jinzhu,Fix Scanner tests on mssql,177,177,,,1,2020-05-30 17:21:16,
tests/scanner_valuer_test.go,c1782d6,Jinzhu,"Fix embedded scanner/valuer, close #3283",151,151,Jinzhu,81c68db,1,2020-08-19 07:47:08,2020-07-30 09:56:16
tests/scanner_valuer_test.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",178,184,,,0,2020-05-30 13:05:27,
tests/scanner_valuer_test.go,7157b7e,Nuno Cruces,fix: database/sql.Scanner should not retain references (#6380),176,176,kinggo,b47cf57,1,2023-06-07 07:02:07,2022-01-06 07:02:53
tests/scanner_valuer_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),185,185,Jinzhu,dacbaa5,0,2022-01-06 07:02:53,2020-08-27 11:52:01
tests/scanner_valuer_test.go,2b56fa0,Jinzhu,Fix Scanner tests on mssql,175,175,,,1,2020-05-30 17:21:16,
tests/scanner_valuer_test.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",190,226,,,0,2020-05-30 13:05:27,
tests/scanner_valuer_test.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",186,188,,,0,2020-05-30 13:05:27,
tests/scanner_valuer_test.go,7d45833,Jinzhu,"Fix driver.Valuer interface returns nil, close #3248",227,228,Caelansar,15b96ed,1,2020-08-13 04:05:55,2020-08-10 07:34:20
tests/scanner_valuer_test.go,15b96ed,Caelansar,add testcase,233,234,Jinzhu,81c68db,0,2020-08-10 07:34:20,2020-07-30 09:56:16
tests/scanner_valuer_test.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",229,230,,,0,2020-05-30 13:05:27,
tests/scanner_valuer_test.go,7d45833,Jinzhu,"Fix driver.Valuer interface returns nil, close #3248",235,235,Caelansar,15b96ed,1,2020-08-13 04:05:55,2020-08-10 07:34:20
tests/scanner_valuer_test.go,7d45833,Jinzhu,"Fix driver.Valuer interface returns nil, close #3248",231,232,Caelansar,15b96ed,1,2020-08-13 04:05:55,2020-08-10 07:34:20
tests/scanner_valuer_test.go,15b96ed,Caelansar,add testcase,236,238,Jinzhu,81c68db,0,2020-08-10 07:34:20,2020-07-30 09:56:16
tests/scanner_valuer_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),189,189,Jinzhu,dacbaa5,0,2022-01-06 07:02:53,2020-08-27 11:52:01
tests/scanner_valuer_test.go,7d45833,Jinzhu,"Fix driver.Valuer interface returns nil, close #3248",239,239,Caelansar,15b96ed,1,2020-08-13 04:05:55,2020-08-10 07:34:20
tests/scanner_valuer_test.go,7d45833,Jinzhu,"Fix driver.Valuer interface returns nil, close #3248",65,65,Jinzhu,1546f8a,1,2020-08-13 04:05:55,2020-05-31 04:52:49
tests/scanner_valuer_test.go,c291c2f,Jinzhu,"Add Scanner, Valuer tests",255,271,,,0,2020-05-30 13:05:27,
tests/scanner_valuer_test.go,15b96ed,Caelansar,add testcase,245,254,Jinzhu,81c68db,0,2020-08-10 07:34:20,2020-07-30 09:56:16
tests/scanner_valuer_test.go,15b96ed,Caelansar,add testcase,240,243,Jinzhu,81c68db,0,2020-08-10 07:34:20,2020-07-30 09:56:16
tests/scanner_valuer_test.go,7d45833,Jinzhu,"Fix driver.Valuer interface returns nil, close #3248",244,244,Jinzhu,81c68db,1,2020-08-13 04:05:55,2020-07-30 09:56:16
tests/scanner_valuer_test.go,1546f8a,Jinzhu,Test CreateWithNoGORMPrimayKey,272,292,,,0,2020-05-31 04:52:49,
tests/scanner_valuer_test.go,7d45833,Jinzhu,"Fix driver.Valuer interface returns nil, close #3248",161,162,,,1,2020-08-13 04:05:55,
tests/scanner_valuer_test.go,ce8853e,Jinzhu,Add GormValuer interface support,312,316,Jinzhu,c1782d6,0,2020-08-27 07:03:57,2020-08-19 07:47:08
tests/scanner_valuer_test.go,ce8853e,Jinzhu,Add GormValuer interface support,317,351,Jinzhu,c1782d6,0,2020-08-27 07:03:57,2020-08-19 07:47:08
tests/scanner_valuer_test.go,cd54ddd,Jinzhu,Test update with GormValuer,378,386,Jinzhu,7a90496,0,2020-08-27 10:42:40,2020-08-27 08:27:59
tests/scanner_valuer_test.go,dacbaa5,Jinzhu,Fix update attrs order,387,387,Jinzhu,cd54ddd,1,2020-08-27 11:52:01,2020-08-27 10:42:40
tests/scanner_valuer_test.go,7a90496,Jinzhu,Test create from sql expr with map,352,377,Jinzhu,ce8853e,0,2020-08-27 08:27:59,2020-08-27 07:03:57
tests/scanner_valuer_test.go,cd54ddd,Jinzhu,Test update with GormValuer,388,392,Jinzhu,7a90496,0,2020-08-27 10:42:40,2020-08-27 08:27:59
tests/scanner_valuer_test.go,47a5196,Jinzhu,"Fix uninitialized Valuer return time.Time, close #3214",293,305,,,1,2020-07-30 09:37:07,
tests/scanner_valuer_test.go,47a5196,Jinzhu,"Fix uninitialized Valuer return time.Time, close #3214",307,307,,,1,2020-07-30 09:37:07,
tests/scanner_valuer_test.go,ce8853e,Jinzhu,Add GormValuer interface support,393,393,,,0,2020-08-27 07:03:57,
tests/scanner_valuer_test.go,81c68db,Jinzhu,Fix zero time failed on mysql 8,306,306,,,1,2020-07-30 09:56:16,
tests/scanner_valuer_test.go,c1782d6,Jinzhu,"Fix embedded scanner/valuer, close #3283",308,311,,,1,2020-08-19 07:47:08,
tests/table_test.go,90183fa,Jinzhu,Allow advanced table with args,1,4,,,0,2020-07-19 13:30:24,
tests/table_test.go,90183fa,Jinzhu,Allow advanced table with args,12,34,,,0,2020-07-19 13:30:24,
tests/table_test.go,90183fa,Jinzhu,Allow advanced table with args,9,9,,,0,2020-07-19 13:30:24,
tests/table_test.go,90183fa,Jinzhu,Allow advanced table with args,6,7,,,0,2020-07-19 13:30:24,
tests/table_test.go,9efae65,Cr,test: namer identifier lenght (#6872),8,8,Michael Anstis,532e9cf,0,2024-03-09 09:31:28,2023-02-18 01:06:43
tests/table_test.go,90183fa,Jinzhu,Allow advanced table with args,55,66,,,0,2020-07-19 13:30:24,
tests/table_test.go,82fe815,SmallTianTian,fix: table couln't be reentrant (#4556),35,54,Luis Guillermo Gómez,47ffd0b,1,2021-08-09 05:20:22,2020-11-20 07:38:25
tests/table_test.go,34fbe84,Jinzhu,"Add TableName with NamingStrategy support, close #5726",10,11,SmallTianTian,82fe815,0,2022-10-07 13:18:37,2021-08-09 05:20:22
tests/table_test.go,90183fa,Jinzhu,Allow advanced table with args,78,86,,,0,2020-07-19 13:30:24,
tests/table_test.go,5d05441,Jinzhu,Test From SubQuery with vars,87,93,,,0,2020-07-20 00:12:41,
tests/table_test.go,9efae65,Cr,test: namer identifier lenght (#6872),5,5,Michael Anstis,532e9cf,0,2024-03-09 09:31:28,2023-02-18 01:06:43
tests/table_test.go,90183fa,Jinzhu,Allow advanced table with args,94,94,,,0,2020-07-19 13:30:24,
tests/table_test.go,3df249c,Jinzhu,"Use table expr when inserting table, close #3239",67,77,Jinzhu,90183fa,0,2020-08-06 09:12:31,2020-07-19 13:30:24
tests/table_test.go,34fbe84,Jinzhu,"Add TableName with NamingStrategy support, close #5726",152,162,SmallTianTian,82fe815,0,2022-10-07 13:18:37,2021-08-09 05:20:22
tests/table_test.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",166,167,Jinzhu,34fbe84,1,2023-02-18 01:06:43,2022-10-07 13:18:37
tests/table_test.go,47ffd0b,Luis Guillermo Gómez,"Select all fields in SQL queries avoiding the SELECT * FROM (#3731)  * Select all fields in SQL queries avoiding the SELECT * FROM  * Select table name with fields in SQL queries  * Use QueryFields to execute the SQL query with all fields of the table",95,151,Jinzhu,3df249c,0,2020-11-20 07:38:25,2020-08-06 09:12:31
tests/table_test.go,34fbe84,Jinzhu,"Add TableName with NamingStrategy support, close #5726",168,176,SmallTianTian,82fe815,0,2022-10-07 13:18:37,2021-08-09 05:20:22
tests/table_test.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",163,163,Jinzhu,34fbe84,1,2023-02-18 01:06:43,2022-10-07 13:18:37
tests/table_test.go,34fbe84,Jinzhu,"Add TableName with NamingStrategy support, close #5726",164,165,SmallTianTian,82fe815,0,2022-10-07 13:18:37,2021-08-09 05:20:22
tests/table_test.go,9efae65,Cr,test: namer identifier lenght (#6872),177,261,Michael Anstis,532e9cf,0,2024-03-09 09:31:28,2023-02-18 01:06:43
tests/soft_delete_test.go,5507421,Jinzhu,Add SoftDelete support,1,3,,,0,2020-05-28 23:35:45,
tests/soft_delete_test.go,5507421,Jinzhu,Add SoftDelete support,8,9,,,0,2020-05-28 23:35:45,
tests/soft_delete_test.go,cfbcedb,qiankunli,"fix: support zeroValue tag on DeletedAt (#6011)  * fix: support zeroValue tag on DeletedAt  Signed-off-by: qiankunli <qiankun.li@qq.com>  * Update soft_delete_test.go  * Update tests_test.go  * Update soft_delete.go  ---------  Signed-off-by: qiankunli <qiankun.li@qq.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>",10,10,Jinzhu,2bc9137,1,2023-02-01 06:40:55,2023-01-02 13:46:27
tests/soft_delete_test.go,14a0976,Jinzhu,"populate the DeletedAt field when soft delete, fix #3855",4,4,Jinzhu,fcf2ab6,1,2020-12-15 02:39:20,2020-11-05 03:20:08
tests/soft_delete_test.go,fcf2ab6,Jinzhu,"Add deleted_at check when soft deleting, fix #3720",7,7,Jinzhu,560d303,1,2020-11-05 03:20:08,2020-11-04 03:03:22
tests/soft_delete_test.go,5507421,Jinzhu,Add SoftDelete support,13,17,,,0,2020-05-28 23:35:45,
tests/soft_delete_test.go,e7b2e92,Jinzhu,Remove RecordNotFound method,6,6,Jinzhu,8bb05a5,0,2020-06-07 14:03:45,2020-06-02 02:50:38
tests/soft_delete_test.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",20,21,Jinzhu,a8141b6,1,2020-11-04 03:03:22,2020-10-30 10:15:07
tests/soft_delete_test.go,a8141b6,Jinzhu,"Fix DeletedAt marshal and unmarshal, close #3693",5,5,Jinzhu,dbc3f8f,1,2020-10-30 10:15:07,2020-06-10 05:42:39
tests/soft_delete_test.go,dbc3f8f,Jinzhu,Add count soft deleted record test,18,19,Jinzhu,e7b2e92,0,2020-06-10 05:42:39,2020-06-07 14:03:45
tests/soft_delete_test.go,e7b2e92,Jinzhu,Remove RecordNotFound method,11,11,Jinzhu,e986371,0,2020-06-07 14:03:45,2020-06-02 01:18:01
tests/soft_delete_test.go,dbc3f8f,Jinzhu,Add count soft deleted record test,22,25,Jinzhu,e7b2e92,0,2020-06-10 05:42:39,2020-06-07 14:03:45
tests/soft_delete_test.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",26,29,Jinzhu,a8141b6,1,2020-11-04 03:03:22,2020-10-30 10:15:07
tests/soft_delete_test.go,8bb05a5,Jinzhu,Refactor tests files,12,12,,,0,2020-06-02 02:50:38,
tests/soft_delete_test.go,5507421,Jinzhu,Add SoftDelete support,30,33,,,0,2020-05-28 23:35:45,
tests/soft_delete_test.go,fcf2ab6,Jinzhu,"Add deleted_at check when soft deleting, fix #3720",38,42,Jinzhu,560d303,1,2020-11-05 03:20:08,2020-11-04 03:03:22
tests/soft_delete_test.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",52,52,Jinzhu,a8141b6,1,2020-11-04 03:03:22,2020-10-30 10:15:07
tests/soft_delete_test.go,5507421,Jinzhu,Add SoftDelete support,48,51,,,0,2020-05-28 23:35:45,
tests/soft_delete_test.go,14a0976,Jinzhu,"populate the DeletedAt field when soft delete, fix #3855",34,37,Jinzhu,fcf2ab6,1,2020-12-15 02:39:20,2020-11-05 03:20:08
tests/soft_delete_test.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",57,61,Jinzhu,a8141b6,1,2020-11-04 03:03:22,2020-10-30 10:15:07
tests/soft_delete_test.go,5507421,Jinzhu,Add SoftDelete support,62,65,,,0,2020-05-28 23:35:45,
tests/soft_delete_test.go,2bc9137,Jinzhu,"support implicit table alias, close #5840 #5940",43,47,kinggo,8dde09e,0,2023-01-02 13:46:27,2021-12-30 03:47:14
tests/soft_delete_test.go,5507421,Jinzhu,Add SoftDelete support,76,76,,,0,2020-05-28 23:35:45,
tests/soft_delete_test.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",71,75,Jinzhu,dbc3f8f,1,2020-11-04 03:03:22,2020-06-10 05:42:39
tests/soft_delete_test.go,560d303,Jinzhu,"Fix Scan with soft delete, close #3712",66,66,Jinzhu,dbc3f8f,1,2020-11-04 03:03:22,2020-06-10 05:42:39
tests/soft_delete_test.go,5507421,Jinzhu,Add SoftDelete support,78,80,,,0,2020-05-28 23:35:45,
tests/soft_delete_test.go,cfbcedb,qiankunli,"fix: support zeroValue tag on DeletedAt (#6011)  * fix: support zeroValue tag on DeletedAt  Signed-off-by: qiankunli <qiankun.li@qq.com>  * Update soft_delete_test.go  * Update tests_test.go  * Update soft_delete.go  ---------  Signed-off-by: qiankunli <qiankun.li@qq.com> Co-authored-by: Jinzhu <wosmvp@gmail.com>",102,169,Jinzhu,2bc9137,1,2023-02-01 06:40:55,2023-01-02 13:46:27
tests/soft_delete_test.go,8dde09e,kinggo,fix: generate sql incorrect when use soft_delete and only one OR (#4969)  * fix: generate sql incorrect when use soft_delete and only one OR,92,101,Jinzhu,14a0976,1,2021-12-30 03:47:14,2020-12-15 02:39:20
tests/soft_delete_test.go,e7b2e92,Jinzhu,Remove RecordNotFound method,77,77,,,0,2020-06-07 14:03:45,
tests/soft_delete_test.go,dbc3f8f,Jinzhu,Add count soft deleted record test,53,56,,,0,2020-06-10 05:42:39,
tests/soft_delete_test.go,dbc3f8f,Jinzhu,Add count soft deleted record test,67,70,,,0,2020-06-10 05:42:39,
tests/soft_delete_test.go,a8141b6,Jinzhu,"Fix DeletedAt marshal and unmarshal, close #3693",81,91,,,1,2020-10-30 10:15:07,
tests/preload_test.go,e60a8d5,Jinzhu,Test Nested Preload,8,8,,,0,2020-05-23 16:52:25,
tests/preload_test.go,e60a8d5,Jinzhu,Test Nested Preload,10,10,,,0,2020-05-23 16:52:25,
tests/preload_test.go,1c39ac9,Jinzhu,Test preload with conds,7,7,Jinzhu,e60a8d5,0,2020-05-23 17:16:08,2020-05-23 16:52:25
tests/preload_test.go,85299bf,Cr,"perf: merge nested preload query when using join (#6990)  * pref: merge nest preload query  * fix: preload test",11,11,yetone,9a61ef2,1,2024-04-25 12:21:03,2024-04-15 03:20:20
tests/preload_test.go,85299bf,Cr,"perf: merge nested preload query when using join (#6990)  * pref: merge nest preload query  * fix: preload test",4,4,yetone,9a61ef2,1,2024-04-25 12:21:03,2024-04-15 03:20:20
tests/preload_test.go,e60a8d5,Jinzhu,Test Nested Preload,1,3,,,0,2020-05-23 16:52:25,
tests/preload_test.go,d8ddccf,Jinzhu,"Don't marshal to null for associations after preloading, close #3395",5,6,Jinzhu,308d22b,0,2020-09-04 11:09:51,2020-09-01 05:48:37
tests/preload_test.go,6950007,Jinzhu,"Fix failed to parse relations when using goroutinue, close #3790  commit ee0ec43e8dfa85c1c1a562c2d0d47776cf8abd92 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Nov 27 14:31:57 2020 +0800      Fix failed to parse relations when using goroutinue, close #3790  commit 590e73ff95d8af6bd14f0a0da687dd7d12e5f94e Author: rokeyzhao <rokeyzhao@tencent.com> Date:   Thu Nov 26 20:27:55 2020 +0800      test: no cache preload in goroutine",9,9,Jinzhu,d8ddccf,1,2020-11-27 06:32:20,2020-09-04 11:09:51
tests/preload_test.go,e4e23d2,black-06,fix: nested preload with join panic when find (#6877),12,12,black-06,418ee3f,1,2024-03-09 13:27:19,2024-01-29 03:34:57
tests/preload_test.go,e60a8d5,Jinzhu,Test Nested Preload,16,17,,,0,2020-05-23 16:52:25,
tests/preload_test.go,308d22b,Jinzhu,"Clean up associations before Preload, close #3345",39,39,Jinzhu,3195ae1,0,2020-09-01 05:48:37,2020-08-25 10:59:19
tests/preload_test.go,5883490,Jinzhu,"Select, Omit, Preload supports clause.Associations",18,18,Jinzhu,8bb05a5,0,2020-06-20 09:21:01,2020-06-02 02:50:38
tests/preload_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),19,19,Jinzhu,ca7accd,0,2022-01-06 07:02:53,2021-11-08 11:47:10
tests/preload_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),40,40,Jinzhu,ca7accd,0,2022-01-06 07:02:53,2021-11-08 11:47:10
tests/preload_test.go,5883490,Jinzhu,"Select, Omit, Preload supports clause.Associations",20,38,Jinzhu,8bb05a5,0,2020-06-20 09:21:01,2020-06-02 02:50:38
tests/preload_test.go,3195ae1,Jinzhu,Allow override alias table in preload conditions,13,13,Jinzhu,8bb05a5,0,2020-08-25 10:59:19,2020-06-02 02:50:38
tests/preload_test.go,e60a8d5,Jinzhu,Test Nested Preload,55,55,,,0,2020-05-23 16:52:25,
tests/preload_test.go,308d22b,Jinzhu,"Clean up associations before Preload, close #3345",41,52,Jinzhu,3195ae1,0,2020-09-01 05:48:37,2020-08-25 10:59:19
tests/preload_test.go,8bb05a5,Jinzhu,Refactor tests files,15,15,,,0,2020-06-02 02:50:38,
tests/preload_test.go,e60a8d5,Jinzhu,Test Nested Preload,57,67,,,0,2020-05-23 16:52:25,
tests/preload_test.go,e986371,Jinzhu,Rename package name,14,14,,,0,2020-06-02 01:18:01,
tests/preload_test.go,e60a8d5,Jinzhu,Test Nested Preload,68,68,,,0,2020-05-23 16:52:25,
tests/preload_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),56,56,Jinzhu,ca7accd,0,2022-01-06 07:02:53,2021-11-08 11:47:10
tests/preload_test.go,d483ffa,Jinzhu,Fix Preload with nil pointer,73,76,Jinzhu,2055e29,1,2021-04-15 02:37:05,2021-03-14 02:42:58
tests/preload_test.go,e60a8d5,Jinzhu,Test Nested Preload,77,79,,,0,2020-05-23 16:52:25,
tests/preload_test.go,2055e29,Jinzhu,Refactor nested preload all associations,69,72,Jinzhu,6950007,0,2021-03-14 02:42:58,2020-11-27 06:32:20
tests/preload_test.go,5883490,Jinzhu,"Select, Omit, Preload supports clause.Associations",53,54,,,0,2020-06-20 09:21:01,
tests/preload_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),80,80,Jinzhu,ca7accd,0,2022-01-06 07:02:53,2021-11-08 11:47:10
tests/preload_test.go,1c39ac9,Jinzhu,Test preload with conds,111,137,Jinzhu,e60a8d5,0,2020-05-23 17:16:08,2020-05-23 16:52:25
tests/preload_test.go,e60a8d5,Jinzhu,Test Nested Preload,81,109,,,0,2020-05-23 16:52:25,
tests/preload_test.go,1c39ac9,Jinzhu,Test preload with conds,165,167,,,0,2020-05-23 17:16:08,
tests/preload_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),110,110,Jinzhu,ca7accd,0,2022-01-06 07:02:53,2021-11-08 11:47:10
tests/preload_test.go,ca7accd,Jinzhu,"Fix preload all associations with inline conditions, close #4836",152,164,Jinzhu,d483ffa,1,2021-11-08 11:47:10,2021-04-15 02:37:05
tests/preload_test.go,e60a8d5,Jinzhu,Test Nested Preload,215,215,,,0,2020-05-23 16:52:25,
tests/preload_test.go,1c39ac9,Jinzhu,Test preload with conds,169,214,,,0,2020-05-23 17:16:08,
tests/preload_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),168,168,Jinzhu,ca7accd,0,2022-01-06 07:02:53,2021-11-08 11:47:10
tests/preload_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),218,218,Jinzhu,ca7accd,0,2022-01-06 07:02:53,2021-11-08 11:47:10
tests/preload_test.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",311,311,Michael Anstis,532e9cf,1,2023-04-11 05:10:38,2023-02-18 01:06:43
tests/preload_test.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",274,310,chenrui,5431da8,1,2023-02-18 01:06:43,2022-03-18 05:38:46
tests/preload_test.go,85299bf,Cr,"perf: merge nested preload query when using join (#6990)  * pref: merge nest preload query  * fix: preload test",340,340,yetone,9a61ef2,1,2024-04-25 12:21:03,2024-04-15 03:20:20
tests/preload_test.go,85299bf,Cr,"perf: merge nested preload query when using join (#6990)  * pref: merge nest preload query  * fix: preload test",349,360,yetone,9a61ef2,1,2024-04-25 12:21:03,2024-04-15 03:20:20
tests/preload_test.go,5431da8,chenrui,fix: preload panic when model and dest different close #5130  commit e8307b5ef5273519a32cd8e4fd29250d1c277f6e Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Mar 18 13:37:22 2022 +0800      Refactor #5130  commit 40cbba49f374c9bae54f80daee16697ae45e905b Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:36:56 2022 +0800      test: fix test fail  commit 66d3f078291102a30532b6a9d97c757228a9b543 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 17:29:09 2022 +0800      test: drop table and auto migrate  commit 7cbf019a930019476a97ac7ac0f5fc186e8d5b42 Author: chenrui <chenrui@jingdaka.com> Date:   Sat Mar 5 15:27:45 2022 +0800      fix: preload panic when model and dest different,256,273,kinggo,b47cf57,1,2022-03-18 05:38:46,2022-01-06 07:02:53
tests/preload_test.go,418ee3f,black-06,"fix: preload shouldn't overwrite the value of join (#6771)  * fix: preload shouldn't overwrite the value of join  * fix lint  * fix: join may automatically add nested query",341,348,black-06,9fea15a,1,2024-01-29 03:34:57,2023-10-30 09:15:49
tests/preload_test.go,3195ae1,Jinzhu,Allow override alias table in preload conditions,138,151,Jinzhu,e60a8d5,0,2020-08-25 10:59:19,2020-05-23 16:52:25
tests/preload_test.go,418ee3f,black-06,"fix: preload shouldn't overwrite the value of join (#6771)  * fix: preload shouldn't overwrite the value of join  * fix lint  * fix: join may automatically add nested query",361,364,black-06,9fea15a,1,2024-01-29 03:34:57,2023-10-30 09:15:49
tests/preload_test.go,85299bf,Cr,"perf: merge nested preload query when using join (#6990)  * pref: merge nest preload query  * fix: preload test",365,365,yetone,9a61ef2,1,2024-04-25 12:21:03,2024-04-15 03:20:20
tests/preload_test.go,418ee3f,black-06,"fix: preload shouldn't overwrite the value of join (#6771)  * fix: preload shouldn't overwrite the value of join  * fix lint  * fix: join may automatically add nested query",312,339,black-06,9fea15a,1,2024-01-29 03:34:57,2023-10-30 09:15:49
tests/preload_test.go,85299bf,Cr,"perf: merge nested preload query when using join (#6990)  * pref: merge nest preload query  * fix: preload test",369,369,yetone,9a61ef2,1,2024-04-25 12:21:03,2024-04-15 03:20:20
tests/preload_test.go,418ee3f,black-06,"fix: preload shouldn't overwrite the value of join (#6771)  * fix: preload shouldn't overwrite the value of join  * fix lint  * fix: join may automatically add nested query",366,368,black-06,9fea15a,1,2024-01-29 03:34:57,2023-10-30 09:15:49
tests/preload_test.go,85299bf,Cr,"perf: merge nested preload query when using join (#6990)  * pref: merge nest preload query  * fix: preload test",373,373,yetone,9a61ef2,1,2024-04-25 12:21:03,2024-04-15 03:20:20
tests/preload_test.go,418ee3f,black-06,"fix: preload shouldn't overwrite the value of join (#6771)  * fix: preload shouldn't overwrite the value of join  * fix lint  * fix: join may automatically add nested query",370,372,Michael Anstis,532e9cf,1,2024-01-29 03:34:57,2023-02-18 01:06:43
tests/preload_test.go,d8ddccf,Jinzhu,"Don't marshal to null for associations after preloading, close #3395",216,217,,,0,2020-09-04 11:09:51,
tests/preload_test.go,d8ddccf,Jinzhu,"Don't marshal to null for associations after preloading, close #3395",219,237,,,0,2020-09-04 11:09:51,
tests/preload_test.go,6950007,Jinzhu,"Fix failed to parse relations when using goroutinue, close #3790  commit ee0ec43e8dfa85c1c1a562c2d0d47776cf8abd92 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Nov 27 14:31:57 2020 +0800      Fix failed to parse relations when using goroutinue, close #3790  commit 590e73ff95d8af6bd14f0a0da687dd7d12e5f94e Author: rokeyzhao <rokeyzhao@tencent.com> Date:   Thu Nov 26 20:27:55 2020 +0800      test: no cache preload in goroutine",238,255,,,1,2020-11-27 06:32:20,
tests/preload_test.go,85299bf,Cr,"perf: merge nested preload query when using join (#6990)  * pref: merge nest preload query  * fix: preload test",377,377,yetone,9a61ef2,1,2024-04-25 12:21:03,2024-04-15 03:20:20
tests/preload_test.go,e4e23d2,black-06,fix: nested preload with join panic when find (#6877),378,383,black-06,9fea15a,1,2024-03-09 13:27:19,2023-10-30 09:15:49
tests/preload_test.go,418ee3f,black-06,"fix: preload shouldn't overwrite the value of join (#6771)  * fix: preload shouldn't overwrite the value of join  * fix lint  * fix: join may automatically add nested query",374,376,Michael Anstis,532e9cf,1,2024-01-29 03:34:57,2023-02-18 01:06:43
tests/preload_test.go,418ee3f,black-06,"fix: preload shouldn't overwrite the value of join (#6771)  * fix: preload shouldn't overwrite the value of join  * fix lint  * fix: join may automatically add nested query",441,442,Michael Anstis,532e9cf,1,2024-01-29 03:34:57,2023-02-18 01:06:43
tests/preload_test.go,85299bf,Cr,"perf: merge nested preload query when using join (#6990)  * pref: merge nest preload query  * fix: preload test",384,440,yetone,9a61ef2,1,2024-04-25 12:21:03,2024-04-15 03:20:20
tests/preload_test.go,3fe7fcf,Nico Schäfer,"fix: `unsupported data` on nested joins with preloads (#6957)  * fix: `unsupported data` on nested joins with preloads  * Add test case for pointer join with nested prelaods  * Fix tests",443,494,Cr,85299bf,1,2024-06-12 10:00:47,2024-04-25 12:21:03
tests/preload_test.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",617,630,,,1,2023-04-11 05:10:38,
tests/preload_test.go,9a61ef2,yetone,fix: duplicated preload (#6948),587,587,,,1,2024-04-15 03:20:20,
tests/preload_test.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",495,586,,,1,2023-04-11 05:10:38,
tests/preload_test.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",588,616,,,1,2023-04-11 05:10:38,
tests/tracer_test.go,62593cf,viatoriche / Maxim Panfilov,"add test: TestAutoMigrateInt8PG: shouldn't execute ALTER COLUMN TYPE smallint, close #5762",1,34,,,0,2022-10-18 09:28:06,
tests/tests_all.sh,8204d0a,Jinzhu,Update tests script,13,13,Jinzhu,4d5cec8,0,2021-03-24 08:44:51,2021-03-24 06:22:36
tests/tests_all.sh,fe24c3f,Jinzhu,Setup tests script,4,8,,,0,2020-02-23 01:38:51,
tests/tests_all.sh,e3292b3,Jinzhu,Test with latest driver vesion,9,11,Jinzhu,a954d77,0,2020-06-19 10:44:19,2020-06-06 02:47:32
tests/tests_all.sh,67bd842,Jinzhu,Update tests all script,1,2,Jinzhu,a1e35bd,0,2020-06-24 06:56:04,2020-06-20 08:52:15
tests/tests_all.sh,5b65b02,Jinzhu,Update tests go.mod,14,14,Jinzhu,8204d0a,0,2021-06-11 08:00:26,2021-03-24 08:44:51
tests/tests_all.sh,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",3,3,Jinzhu,f19b84d,0,2023-02-08 08:29:09,2022-01-30 14:46:41
tests/tests_all.sh,6bfccf8,Jinzhu,Refactor all tests script,34,34,Omkar P,c6ac548,0,2024-11-21 09:03:31,2024-09-30 03:21:19
tests/tests_all.sh,6bfccf8,Jinzhu,Refactor all tests script,19,32,Omkar P,c6ac548,0,2024-11-21 09:03:31,2024-09-30 03:21:19
tests/tests_all.sh,696092e,kinggo,update tests' go.mod and tests_all.sh (#4774),12,12,Jinzhu,5b65b02,0,2021-10-13 06:41:33,2021-06-11 08:00:26
tests/tests_all.sh,e3292b3,Jinzhu,Test with latest driver vesion,15,17,Jinzhu,a954d77,0,2020-06-19 10:44:19,2020-06-06 02:47:32
tests/tests_all.sh,8d293d4,Jinzhu,Fix docker-compose test env for Mac M1,33,33,kinggo,696092e,1,2022-01-30 14:05:38,2021-10-13 06:41:33
tests/tests_all.sh,8d293d4,Jinzhu,Fix docker-compose test env for Mac M1,18,18,kinggo,696092e,1,2022-01-30 14:05:38,2021-10-13 06:41:33
tests/tests_all.sh,fe24c3f,Jinzhu,Setup tests script,38,40,,,0,2020-02-23 01:38:51,
tests/tests_all.sh,7c0de91,Jinzhu,Test Migrate Indexes,41,42,,,0,2020-05-30 14:43:41,
tests/tests_all.sh,8d293d4,Jinzhu,Fix docker-compose test env for Mac M1,35,37,kinggo,696092e,1,2022-01-30 14:05:38,2021-10-13 06:41:33
tests/tests_all.sh,fe24c3f,Jinzhu,Setup tests script,52,52,,,0,2020-02-23 01:38:51,
tests/tests_all.sh,bc01eb2,Jinzhu,Fix tests script,43,44,,,1,2020-06-01 16:24:16,
tests/tests_all.sh,8ce2dd5,Jinzhu,Update test script,45,45,Jinzhu,a954d77,0,2020-06-24 11:09:19,2020-06-06 02:47:32
tests/tests_all.sh,8ce2dd5,Jinzhu,Update test script,49,49,,,0,2020-06-24 11:09:19,
tests/tests_all.sh,a954d77,Jinzhu,Support customize gorm field type,46,48,,,0,2020-06-06 02:47:32,
tests/tests_all.sh,a954d77,Jinzhu,Support customize gorm field type,58,59,,,0,2020-06-06 02:47:32,
tests/tests_all.sh,fe24c3f,Jinzhu,Setup tests script,60,62,,,0,2020-02-23 01:38:51,
tests/tests_all.sh,8ce2dd5,Jinzhu,Update test script,53,53,,,0,2020-06-24 11:09:19,
tests/tests_all.sh,a954d77,Jinzhu,Support customize gorm field type,50,51,,,0,2020-06-06 02:47:32,
tests/tests_all.sh,a954d77,Jinzhu,Support customize gorm field type,54,56,,,0,2020-06-06 02:47:32,
tests/tests_all.sh,8ce2dd5,Jinzhu,Update test script,57,57,,,0,2020-06-24 11:09:19,
tests/update_belongs_to_test.go,abae7f7,Jinzhu,Test non std primary key and default value,1,5,,,0,2020-05-30 08:03:27,
tests/update_belongs_to_test.go,8bb05a5,Jinzhu,Refactor tests files,7,7,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/update_belongs_to_test.go,abae7f7,Jinzhu,Test non std primary key and default value,12,25,,,0,2020-05-30 08:03:27,
tests/update_belongs_to_test.go,4d40e34,Jinzhu,Update select tests,44,58,kinggo,b47cf57,0,2022-07-14 06:55:54,2022-01-06 07:02:53
tests/update_belongs_to_test.go,c0de3c5,Jinzhu,"Support FullSaveAssociations Mode, close #3487, #3506",6,6,Jinzhu,8bb05a5,0,2020-09-24 11:29:15,2020-06-02 02:50:38
tests/update_belongs_to_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),11,11,Jinzhu,c0de3c5,0,2022-01-06 07:02:53,2020-09-24 11:29:15
tests/update_belongs_to_test.go,abae7f7,Jinzhu,Test non std primary key and default value,8,10,,,0,2020-05-30 08:03:27,
tests/update_belongs_to_test.go,c0de3c5,Jinzhu,"Support FullSaveAssociations Mode, close #3487, #3506",26,43,Jinzhu,8bb05a5,0,2020-09-24 11:29:15,2020-06-02 02:50:38
tests/update_belongs_to_test.go,abae7f7,Jinzhu,Test non std primary key and default value,59,59,,,0,2020-05-30 08:03:27,
tests/update_has_many_test.go,abae7f7,Jinzhu,Test non std primary key and default value,1,5,,,0,2020-05-30 08:03:27,
tests/update_has_many_test.go,abae7f7,Jinzhu,Test non std primary key and default value,46,46,,,0,2020-05-30 08:03:27,
tests/update_has_many_test.go,abae7f7,Jinzhu,Test non std primary key and default value,8,10,,,0,2020-05-30 08:03:27,
tests/update_has_many_test.go,abae7f7,Jinzhu,Test non std primary key and default value,12,25,,,0,2020-05-30 08:03:27,
tests/update_has_many_test.go,c0de3c5,Jinzhu,"Support FullSaveAssociations Mode, close #3487, #3506",26,45,Jinzhu,8bb05a5,0,2020-09-24 11:29:15,2020-06-02 02:50:38
tests/update_has_many_test.go,8bb05a5,Jinzhu,Refactor tests files,7,7,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/update_has_many_test.go,abae7f7,Jinzhu,Test non std primary key and default value,48,60,,,0,2020-05-30 08:03:27,
tests/update_has_many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),11,11,Jinzhu,c0de3c5,0,2022-01-06 07:02:53,2020-09-24 11:29:15
tests/update_has_many_test.go,c0de3c5,Jinzhu,"Support FullSaveAssociations Mode, close #3487, #3506",6,6,Jinzhu,8bb05a5,0,2020-09-24 11:29:15,2020-06-02 02:50:38
tests/update_has_many_test.go,abae7f7,Jinzhu,Test non std primary key and default value,81,82,,,0,2020-05-30 08:03:27,
tests/update_has_many_test.go,c0de3c5,Jinzhu,"Support FullSaveAssociations Mode, close #3487, #3506",61,80,Jinzhu,8bb05a5,0,2020-09-24 11:29:15,2020-06-02 02:50:38
tests/update_has_many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),47,47,Jinzhu,c0de3c5,0,2022-01-06 07:02:53,2020-09-24 11:29:15
tests/scan_test.go,51c5be0,Jinzhu,Finish Scan support,7,7,,,0,2020-05-26 13:30:17,
tests/scan_test.go,51c5be0,Jinzhu,Finish Scan support,9,9,,,0,2020-05-26 13:30:17,
tests/scan_test.go,5be642a,Jinzhu,Add ScanRows support,4,6,Jinzhu,51c5be0,0,2020-05-26 15:13:05,2020-05-26 13:30:17
tests/scan_test.go,51c5be0,Jinzhu,Finish Scan support,1,3,,,0,2020-05-26 13:30:17,
tests/scan_test.go,51c5be0,Jinzhu,Finish Scan support,12,13,,,0,2020-05-26 13:30:17,
tests/scan_test.go,8bb05a5,Jinzhu,Refactor tests files,11,11,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/scan_test.go,dbaa6b0,Jinzhu,"Fix Scan struct with primary key, close #3357",10,10,Jinzhu,8bb05a5,1,2020-09-02 08:14:26,2020-06-02 02:50:38
tests/scan_test.go,73a988c,Waleed Masoom,fix(scan): update Scan function to reset structs to zero values for each scan (#7061)  Co-authored-by: waleed.masoom <waleed.masoom@wheniwork.com>,8,8,Cr,7e13b03,1,2024-06-12 10:57:36,2022-05-28 14:18:07
tests/scan_test.go,51c5be0,Jinzhu,Finish Scan support,27,31,,,0,2020-05-26 13:30:17,
tests/scan_test.go,51c5be0,Jinzhu,Finish Scan support,19,25,,,0,2020-05-26 13:30:17,
tests/scan_test.go,dbaa6b0,Jinzhu,"Fix Scan struct with primary key, close #3357",26,26,Jinzhu,8bb05a5,1,2020-09-02 08:14:26,2020-06-02 02:50:38
tests/scan_test.go,f3e2da5,Hasan,"Added offset when scanning the result back to struct, close #5143  commit 9a2058164d44c98d7b586b87bed1757f89d6fad7 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 22:34:19 2022 +0800      Refactor #5143  commit c259de21768936428c9d89f7b31afb95b8acb36a Author: Hasan <mr.k779@outlook.com> Date:   Mon Mar 14 20:04:01 2022 +0545      Update scan_test.go  commit 09f127b49151a52fbb8b354a03e6610d4f70262f Author: Hasan <mr.k779@outlook.com> Date:   Mon Mar 14 19:23:47 2022 +0545      Added test for scanning embedded data into structs  commit aeaca493cf412def7813d36fd6a68acc832bf79f Author: Hasan <mr.k779@outlook.com> Date:   Tue Mar 8 04:08:16 2022 +0600      Added offset when scanning the result back to struct",14,18,kinggo,b47cf57,0,2022-03-17 14:52:40,2022-01-06 07:02:53
tests/scan_test.go,ba59065,rorschach,retrieving gorm object support pointer,37,37,Jinzhu,02fb382,0,2021-01-27 03:48:47,2020-09-11 07:01:02
tests/scan_test.go,dbaa6b0,Jinzhu,"Fix Scan struct with primary key, close #3357",32,36,Jinzhu,8bb05a5,1,2020-09-02 08:14:26,2020-06-02 02:50:38
tests/scan_test.go,51c5be0,Jinzhu,Finish Scan support,52,53,,,0,2020-05-26 13:30:17,
tests/scan_test.go,51c5be0,Jinzhu,Finish Scan support,56,62,,,0,2020-05-26 13:30:17,
tests/scan_test.go,5be642a,Jinzhu,Add ScanRows support,55,55,Jinzhu,51c5be0,0,2020-05-26 15:13:05,2020-05-26 13:30:17
tests/scan_test.go,5be642a,Jinzhu,Add ScanRows support,63,66,Jinzhu,51c5be0,0,2020-05-26 15:13:05,2020-05-26 13:30:17
tests/scan_test.go,12bbde8,Jinzhu,Fix Scan with interface,38,40,Jinzhu,02fb382,1,2021-09-17 06:04:19,2020-09-11 07:01:02
tests/scan_test.go,51c5be0,Jinzhu,Finish Scan support,72,72,,,0,2020-05-26 13:30:17,
tests/scan_test.go,5be642a,Jinzhu,Add ScanRows support,68,70,Jinzhu,51c5be0,0,2020-05-26 15:13:05,2020-05-26 13:30:17
tests/scan_test.go,ab35533,Jinzhu,Fix scan with interface,112,119,Jinzhu,12bbde8,1,2021-09-17 10:35:14,2021-09-17 06:04:19
tests/scan_test.go,12bbde8,Jinzhu,Fix Scan with interface,80,111,Jinzhu,b616d81,1,2021-09-17 06:04:19,2021-07-13 11:29:10
tests/scan_test.go,ba59065,rorschach,retrieving gorm object support pointer,41,43,Jinzhu,8bb05a5,0,2021-01-27 03:48:47,2020-06-02 02:50:38
tests/scan_test.go,51c5be0,Jinzhu,Finish Scan support,120,120,,,0,2020-05-26 13:30:17,
tests/scan_test.go,d8ddccf,Jinzhu,"Don't marshal to null for associations after preloading, close #3395",67,67,Jinzhu,51c5be0,0,2020-09-04 11:09:51,2020-05-26 13:30:17
tests/scan_test.go,b616d81,Jinzhu,"Fix scan single value to custom type, close #4501",73,79,rorschach,ba59065,1,2021-07-13 11:29:10,2021-01-27 03:48:47
tests/scan_test.go,5be642a,Jinzhu,Add ScanRows support,121,129,,,0,2020-05-26 15:13:05,
tests/scan_test.go,5be642a,Jinzhu,Add ScanRows support,131,146,,,0,2020-05-26 15:13:05,
tests/scan_test.go,5be642a,Jinzhu,Add ScanRows support,151,151,,,0,2020-05-26 15:13:05,
tests/scan_test.go,73a988c,Waleed Masoom,fix(scan): update Scan function to reset structs to zero values for each scan (#7061)  Co-authored-by: waleed.masoom <waleed.masoom@wheniwork.com>,130,130,Cr,7e13b03,1,2024-06-12 10:57:36,2022-05-28 14:18:07
tests/scan_test.go,73a988c,Waleed Masoom,fix(scan): update Scan function to reset structs to zero values for each scan (#7061)  Co-authored-by: waleed.masoom <waleed.masoom@wheniwork.com>,152,152,Cr,7e13b03,1,2024-06-12 10:57:36,2022-05-28 14:18:07
tests/scan_test.go,d8ddccf,Jinzhu,"Don't marshal to null for associations after preloading, close #3395",71,71,Jinzhu,51c5be0,0,2020-09-04 11:09:51,2020-05-26 13:30:17
tests/scan_test.go,5be642a,Jinzhu,Add ScanRows support,153,153,,,0,2020-05-26 15:13:05,
tests/scan_test.go,73a988c,Waleed Masoom,fix(scan): update Scan function to reset structs to zero values for each scan (#7061)  Co-authored-by: waleed.masoom <waleed.masoom@wheniwork.com>,162,260,Cr,7e13b03,1,2024-06-12 10:57:36,2022-05-28 14:18:07
tests/scan_test.go,5be642a,Jinzhu,Add ScanRows support,262,262,,,0,2020-05-26 15:13:05,
tests/scan_test.go,dbaa6b0,Jinzhu,"Fix Scan struct with primary key, close #3357",44,51,Jinzhu,51c5be0,1,2020-09-02 08:14:26,2020-05-26 13:30:17
tests/scan_test.go,02fb382,Jinzhu,"Support scan into int, string data types",154,161,,,0,2020-09-11 07:01:02,
tests/scan_test.go,d8ddccf,Jinzhu,"Don't marshal to null for associations after preloading, close #3395",147,150,,,0,2020-09-04 11:09:51,
tests/scan_test.go,02fb382,Jinzhu,"Support scan into int, string data types",261,261,,,0,2020-09-11 07:01:02,
tests/scan_test.go,f3e2da5,Hasan,"Added offset when scanning the result back to struct, close #5143  commit 9a2058164d44c98d7b586b87bed1757f89d6fad7 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 22:34:19 2022 +0800      Refactor #5143  commit c259de21768936428c9d89f7b31afb95b8acb36a Author: Hasan <mr.k779@outlook.com> Date:   Mon Mar 14 20:04:01 2022 +0545      Update scan_test.go  commit 09f127b49151a52fbb8b354a03e6610d4f70262f Author: Hasan <mr.k779@outlook.com> Date:   Mon Mar 14 19:23:47 2022 +0545      Added test for scanning embedded data into structs  commit aeaca493cf412def7813d36fd6a68acc832bf79f Author: Hasan <mr.k779@outlook.com> Date:   Tue Mar 8 04:08:16 2022 +0600      Added offset when scanning the result back to struct",263,285,,,0,2022-03-17 14:52:40,
tests/scan_test.go,f3e2da5,Hasan,"Added offset when scanning the result back to struct, close #5143  commit 9a2058164d44c98d7b586b87bed1757f89d6fad7 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 22:34:19 2022 +0800      Refactor #5143  commit c259de21768936428c9d89f7b31afb95b8acb36a Author: Hasan <mr.k779@outlook.com> Date:   Mon Mar 14 20:04:01 2022 +0545      Update scan_test.go  commit 09f127b49151a52fbb8b354a03e6610d4f70262f Author: Hasan <mr.k779@outlook.com> Date:   Mon Mar 14 19:23:47 2022 +0545      Added test for scanning embedded data into structs  commit aeaca493cf412def7813d36fd6a68acc832bf79f Author: Hasan <mr.k779@outlook.com> Date:   Tue Mar 8 04:08:16 2022 +0600      Added offset when scanning the result back to struct",315,315,,,0,2022-03-17 14:52:40,
tests/scan_test.go,f3e2da5,Hasan,"Added offset when scanning the result back to struct, close #5143  commit 9a2058164d44c98d7b586b87bed1757f89d6fad7 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 22:34:19 2022 +0800      Refactor #5143  commit c259de21768936428c9d89f7b31afb95b8acb36a Author: Hasan <mr.k779@outlook.com> Date:   Mon Mar 14 20:04:01 2022 +0545      Update scan_test.go  commit 09f127b49151a52fbb8b354a03e6610d4f70262f Author: Hasan <mr.k779@outlook.com> Date:   Mon Mar 14 19:23:47 2022 +0545      Added test for scanning embedded data into structs  commit aeaca493cf412def7813d36fd6a68acc832bf79f Author: Hasan <mr.k779@outlook.com> Date:   Tue Mar 8 04:08:16 2022 +0600      Added offset when scanning the result back to struct",299,301,,,0,2022-03-17 14:52:40,
tests/scan_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),54,54,Jinzhu,51c5be0,0,2022-01-06 07:02:53,2020-05-26 13:30:17
tests/scan_test.go,81c4024,Hasan,Offset issue resolved for scanning results back into struct (#5227),286,288,,,1,2022-04-07 15:56:41,
tests/scan_test.go,81c4024,Hasan,Offset issue resolved for scanning results back into struct (#5227),302,314,,,1,2022-04-07 15:56:41,
tests/scan_test.go,7e13b03,Cr,"fix: duplicate column scan (#5369)  * fix: duplicate column scan  * fix: dup filed in inconsistent schema and database  * chore[ci skip]: gofumpt style  * chore[ci skip]: fix typo",316,340,,,1,2022-05-28 14:18:07,
tests/scan_test.go,f3e2da5,Hasan,"Added offset when scanning the result back to struct, close #5143  commit 9a2058164d44c98d7b586b87bed1757f89d6fad7 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 22:34:19 2022 +0800      Refactor #5143  commit c259de21768936428c9d89f7b31afb95b8acb36a Author: Hasan <mr.k779@outlook.com> Date:   Mon Mar 14 20:04:01 2022 +0545      Update scan_test.go  commit 09f127b49151a52fbb8b354a03e6610d4f70262f Author: Hasan <mr.k779@outlook.com> Date:   Mon Mar 14 19:23:47 2022 +0545      Added test for scanning embedded data into structs  commit aeaca493cf412def7813d36fd6a68acc832bf79f Author: Hasan <mr.k779@outlook.com> Date:   Tue Mar 8 04:08:16 2022 +0600      Added offset when scanning the result back to struct",289,289,,,0,2022-03-17 14:52:40,
tests/scan_test.go,81c4024,Hasan,Offset issue resolved for scanning results back into struct (#5227),290,298,,,1,2022-04-07 15:56:41,
tests/scan_test.go,f3e2da5,Hasan,"Added offset when scanning the result back to struct, close #5143  commit 9a2058164d44c98d7b586b87bed1757f89d6fad7 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 22:34:19 2022 +0800      Refactor #5143  commit c259de21768936428c9d89f7b31afb95b8acb36a Author: Hasan <mr.k779@outlook.com> Date:   Mon Mar 14 20:04:01 2022 +0545      Update scan_test.go  commit 09f127b49151a52fbb8b354a03e6610d4f70262f Author: Hasan <mr.k779@outlook.com> Date:   Mon Mar 14 19:23:47 2022 +0545      Added test for scanning embedded data into structs  commit aeaca493cf412def7813d36fd6a68acc832bf79f Author: Hasan <mr.k779@outlook.com> Date:   Tue Mar 8 04:08:16 2022 +0600      Added offset when scanning the result back to struct",341,341,,,0,2022-03-17 14:52:40,
tests/transaction_test.go,2a716e0,Jinzhu,"Avoid panic for invalid transaction, close #3271",4,4,Jinzhu,7dc255a,0,2020-08-17 04:16:42,2020-06-19 10:30:04
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,10,13,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,1,3,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,5,7,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,15,16,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,f0b6bd9,Jinzhu,Fix typo,14,14,Jinzhu,c8e7878,1,2020-06-08 15:25:16,2020-06-05 03:40:24
tests/transaction_test.go,e986371,Jinzhu,Rename package name,8,8,Jinzhu,befef0c,0,2020-06-02 01:18:01,2020-05-31 16:12:20
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,18,19,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,8bb05a5,Jinzhu,Refactor tests files,9,9,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/transaction_test.go,befef0c,Jinzhu,Improve Hooks,31,31,Jinzhu,5457fe8,0,2020-05-31 16:12:20,2020-05-31 10:51:43
tests/transaction_test.go,befef0c,Jinzhu,Improve Hooks,17,17,Jinzhu,5457fe8,0,2020-05-31 16:12:20,2020-05-31 10:51:43
tests/transaction_test.go,2c1b04a,Jinzhu,"Fix failed to create second record in same transaction, close #3060",21,30,Jinzhu,f0b6bd9,1,2020-06-19 04:38:03,2020-06-08 15:25:16
tests/transaction_test.go,f0b6bd9,Jinzhu,Fix typo,20,20,Jinzhu,c8e7878,1,2020-06-08 15:25:16,2020-06-05 03:40:24
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,32,33,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,36,39,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,42,43,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,befef0c,Jinzhu,Improve Hooks,41,41,Jinzhu,5457fe8,0,2020-05-31 16:12:20,2020-05-31 10:51:43
tests/transaction_test.go,f0b6bd9,Jinzhu,Fix typo,46,46,Jinzhu,c8e7878,1,2020-06-08 15:25:16,2020-06-05 03:40:24
tests/transaction_test.go,f0b6bd9,Jinzhu,Fix typo,40,40,Jinzhu,c8e7878,1,2020-06-08 15:25:16,2020-06-05 03:40:24
tests/transaction_test.go,189547f,Jinzhu,"Fix new session with Begin, close #4120",44,45,Jinzhu,468152d,1,2021-02-26 08:43:43,2020-12-16 11:33:35
tests/transaction_test.go,befef0c,Jinzhu,Improve Hooks,48,48,Jinzhu,5457fe8,0,2020-05-31 16:12:20,2020-05-31 10:51:43
tests/transaction_test.go,befef0c,Jinzhu,Improve Hooks,35,35,Jinzhu,5457fe8,0,2020-05-31 16:12:20,2020-05-31 10:51:43
tests/transaction_test.go,c8e7878,Jinzhu,Add PrepareStmt support,34,34,Jinzhu,5457fe8,0,2020-06-05 03:40:24,2020-05-31 10:51:43
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,47,47,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,49,50,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,53,56,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,befef0c,Jinzhu,Improve Hooks,52,52,Jinzhu,5457fe8,0,2020-05-31 16:12:20,2020-05-31 10:51:43
tests/transaction_test.go,befef0c,Jinzhu,Improve Hooks,58,58,Jinzhu,5457fe8,0,2020-05-31 16:12:20,2020-05-31 10:51:43
tests/transaction_test.go,812bb20,wangliuyang,"fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements (#6220)  * test: add nested transaction and prepareStmt coexist test case  note: please test in the MySQL environment  Change-Id: I0db32adc5f74b0d443e98943d3b182236583b959 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements  1. SavetPoint SQL Statement not support in Prepared Statements  e.g. see mysql8.0 doc: https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html  Change-Id: I082012db9b140e8ec69764c633724665cc802692 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * revert(transaction_api): remove savepoint name pool,meaningless  Change-Id: I84aa9924fc54612005a81c83d66fdf8968ee56ad Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  ---------  Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: 王柳洋 <wangliuyang.520@bytedance.com>",60,69,jesse.tang,be440e7,1,2023-05-26 02:24:28,2022-09-30 03:14:34
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,59,59,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,5e599a0,hakusai22,"fix: typo (#7003)  * fix: typo  * fix: covered",70,70,Saeid,c2d571c,1,2024-05-08 04:07:58,2023-06-10 13:05:19
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,73,74,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,812bb20,wangliuyang,"fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements (#6220)  * test: add nested transaction and prepareStmt coexist test case  note: please test in the MySQL environment  Change-Id: I0db32adc5f74b0d443e98943d3b182236583b959 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * fix(nested transaction): SavePoint SQL Statement not support in Prepared Statements  1. SavetPoint SQL Statement not support in Prepared Statements  e.g. see mysql8.0 doc: https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html  Change-Id: I082012db9b140e8ec69764c633724665cc802692 Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  * revert(transaction_api): remove savepoint name pool,meaningless  Change-Id: I84aa9924fc54612005a81c83d66fdf8968ee56ad Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com>  ---------  Signed-off-by: 王柳洋 <wangliuyang.520@bytedance.com> Co-authored-by: 王柳洋 <wangliuyang.520@bytedance.com>",71,72,jesse.tang,be440e7,1,2023-05-26 02:24:28,2022-09-30 03:14:34
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,94,97,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,99,105,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,2a716e0,Jinzhu,"Avoid panic for invalid transaction, close #3271",75,93,Jinzhu,7dc255a,0,2020-08-17 04:16:42,2020-06-19 10:30:04
tests/transaction_test.go,befef0c,Jinzhu,Improve Hooks,98,98,Jinzhu,5457fe8,0,2020-05-31 16:12:20,2020-05-31 10:51:43
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,109,111,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,f0b6bd9,Jinzhu,Fix typo,51,51,Jinzhu,5457fe8,1,2020-06-08 15:25:16,2020-05-31 10:51:43
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,107,107,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,f0b6bd9,Jinzhu,Fix typo,57,57,Jinzhu,5457fe8,1,2020-06-08 15:25:16,2020-05-31 10:51:43
tests/transaction_test.go,befef0c,Jinzhu,Improve Hooks,108,108,Jinzhu,5457fe8,0,2020-05-31 16:12:20,2020-05-31 10:51:43
tests/transaction_test.go,befef0c,Jinzhu,Improve Hooks,112,112,Jinzhu,5457fe8,0,2020-05-31 16:12:20,2020-05-31 10:51:43
tests/transaction_test.go,befef0c,Jinzhu,Improve Hooks,119,119,Jinzhu,5457fe8,0,2020-05-31 16:12:20,2020-05-31 10:51:43
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,113,117,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,120,121,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,befef0c,Jinzhu,Improve Hooks,123,123,Jinzhu,5457fe8,0,2020-05-31 16:12:20,2020-05-31 10:51:43
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,124,127,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,f0b6bd9,Jinzhu,Fix typo,122,122,Jinzhu,c8e7878,1,2020-06-08 15:25:16,2020-06-05 03:40:24
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,129,129,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,131,133,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,befef0c,Jinzhu,Improve Hooks,130,130,Jinzhu,5457fe8,0,2020-05-31 16:12:20,2020-05-31 10:51:43
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,135,138,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,befef0c,Jinzhu,Improve Hooks,140,140,,,0,2020-05-31 16:12:20,
tests/transaction_test.go,f0b6bd9,Jinzhu,Fix typo,106,106,Jinzhu,5457fe8,1,2020-06-08 15:25:16,2020-05-31 10:51:43
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,141,145,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,befef0c,Jinzhu,Improve Hooks,134,134,Jinzhu,5457fe8,0,2020-05-31 16:12:20,2020-05-31 10:51:43
tests/transaction_test.go,f0b6bd9,Jinzhu,Fix typo,128,128,Jinzhu,5457fe8,1,2020-06-08 15:25:16,2020-05-31 10:51:43
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,147,147,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,befef0c,Jinzhu,Improve Hooks,148,148,,,0,2020-05-31 16:12:20,
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,149,151,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,f0b6bd9,Jinzhu,Fix typo,139,139,,,1,2020-06-08 15:25:16,
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,153,158,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,befef0c,Jinzhu,Improve Hooks,160,160,,,0,2020-05-31 16:12:20,
tests/transaction_test.go,f0b6bd9,Jinzhu,Fix typo,146,146,,,1,2020-06-08 15:25:16,
tests/transaction_test.go,befef0c,Jinzhu,Improve Hooks,152,152,,,0,2020-05-31 16:12:20,
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,161,165,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,167,167,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,169,171,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,be440e7,jesse.tang,"fix possible nil panic in tests (#5720)  * fix maybe nil panic  * reset code",118,118,Jinzhu,c8e7878,1,2022-09-30 03:14:34,2020-06-05 03:40:24
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,173,175,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,befef0c,Jinzhu,Improve Hooks,168,168,,,0,2020-05-31 16:12:20,
tests/transaction_test.go,befef0c,Jinzhu,Improve Hooks,176,176,,,0,2020-05-31 16:12:20,
tests/transaction_test.go,f0b6bd9,Jinzhu,Fix typo,159,159,,,1,2020-06-08 15:25:16,
tests/transaction_test.go,befef0c,Jinzhu,Improve Hooks,172,172,,,0,2020-05-31 16:12:20,
tests/transaction_test.go,f0b6bd9,Jinzhu,Fix typo,166,166,,,1,2020-06-08 15:25:16,
tests/transaction_test.go,5457fe8,Jinzhu,Test Transactions,177,178,,,0,2020-05-31 10:51:43,
tests/transaction_test.go,7dc255a,Jinzhu,Add SavePoint/RollbackTo/NestedTransaction,179,298,Jinzhu,2c1b04a,0,2020-06-19 10:30:04,2020-06-19 04:38:03
tests/transaction_test.go,dd0d74f,Jinzhu,"Fix transaction on closed conn when using prepared statement, close #3380",299,299,Jinzhu,2a716e0,1,2020-09-03 11:16:55,2020-08-17 04:16:42
tests/transaction_test.go,7f75b12,Leo Sjöberg,"Generate unique savepoint names for nested transactions (#7174)  * Generate unique savepoint names  * Add a test for deeply nested wrapped transactions",300,367,hakusai22,5e599a0,0,2024-09-14 12:58:29,2024-05-08 04:07:58
tests/transaction_test.go,468152d,Jinzhu,Add DisableNestedTransaction support,368,430,Jinzhu,2a716e0,0,2020-12-16 11:33:35,2020-08-17 04:16:42
tests/transaction_test.go,dd0d74f,Jinzhu,"Fix transaction on closed conn when using prepared statement, close #3380",431,431,,,1,2020-09-03 11:16:55,
tests/transaction_test.go,dd0d74f,Jinzhu,"Fix transaction on closed conn when using prepared statement, close #3380",433,450,,,1,2020-09-03 11:16:55,
tests/transaction_test.go,7496c3a,Cr,"fix: trx in hooks clone stmt (#5338)  * fix: trx in hooks  * chore: format by gofumpt",451,480,,,1,2022-05-17 06:13:41,
tests/transaction_test.go,c2d571c,Saeid,"test: coverage for duplicated key err (#6389)  * test: ErrDuplicatedKey coverage added  * test: updated sqlserver version  * test: removed sqlserver  * test: support added for sqlserver  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",432,432,,,0,2023-06-10 13:05:19,
tests/update_has_one_test.go,abae7f7,Jinzhu,Test non std primary key and default value,1,3,,,0,2020-05-30 08:03:27,
tests/update_has_one_test.go,abae7f7,Jinzhu,Test non std primary key and default value,5,5,,,0,2020-05-30 08:03:27,
tests/update_has_one_test.go,abae7f7,Jinzhu,Test non std primary key and default value,10,12,,,0,2020-05-30 08:03:27,
tests/update_has_one_test.go,abae7f7,Jinzhu,Test non std primary key and default value,7,7,,,0,2020-05-30 08:03:27,
tests/update_has_one_test.go,eb9a704,Jinzhu,"Fix update UpdatedAt when full saving associations, close #4115",6,6,Jinzhu,c0de3c5,1,2021-02-26 09:11:25,2020-09-24 11:29:15
tests/update_has_one_test.go,8bb05a5,Jinzhu,Refactor tests files,9,9,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/update_has_one_test.go,c0de3c5,Jinzhu,"Support FullSaveAssociations Mode, close #3487, #3506",8,8,Jinzhu,8bb05a5,0,2020-09-24 11:29:15,2020-06-02 02:50:38
tests/update_has_one_test.go,7474621,zkqiang,Test update association with non-updatable,4,4,Jinzhu,eb9a704,0,2021-08-26 05:37:49,2021-02-26 09:11:25
tests/update_has_one_test.go,abae7f7,Jinzhu,Test non std primary key and default value,14,28,,,0,2020-05-30 08:03:27,
tests/update_has_one_test.go,c0de3c5,Jinzhu,"Support FullSaveAssociations Mode, close #3487, #3506",29,35,Jinzhu,8bb05a5,0,2020-09-24 11:29:15,2020-06-02 02:50:38
tests/update_has_one_test.go,c0de3c5,Jinzhu,"Support FullSaveAssociations Mode, close #3487, #3506",37,37,Jinzhu,8bb05a5,0,2020-09-24 11:29:15,2020-06-02 02:50:38
tests/update_has_one_test.go,eb9a704,Jinzhu,"Fix update UpdatedAt when full saving associations, close #4115",36,36,Jinzhu,c0de3c5,1,2021-02-26 09:11:25,2020-09-24 11:29:15
tests/update_has_one_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),38,38,zkqiang,7474621,0,2022-01-06 07:02:53,2021-08-26 05:37:49
tests/update_has_one_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),13,13,zkqiang,7474621,0,2022-01-06 07:02:53,2021-08-26 05:37:49
tests/update_has_one_test.go,eb9a704,Jinzhu,"Fix update UpdatedAt when full saving associations, close #4115",39,39,Jinzhu,c0de3c5,1,2021-02-26 09:11:25,2020-09-24 11:29:15
tests/update_has_one_test.go,abae7f7,Jinzhu,Test non std primary key and default value,55,55,,,0,2020-05-30 08:03:27,
tests/update_has_one_test.go,abae7f7,Jinzhu,Test non std primary key and default value,57,70,,,0,2020-05-30 08:03:27,
tests/update_has_one_test.go,eb9a704,Jinzhu,"Fix update UpdatedAt when full saving associations, close #4115",47,53,Jinzhu,c0de3c5,1,2021-02-26 09:11:25,2020-09-24 11:29:15
tests/update_has_one_test.go,c0de3c5,Jinzhu,"Support FullSaveAssociations Mode, close #3487, #3506",40,46,Jinzhu,8bb05a5,0,2020-09-24 11:29:15,2020-06-02 02:50:38
tests/update_has_one_test.go,abae7f7,Jinzhu,Test non std primary key and default value,88,88,,,0,2020-05-30 08:03:27,
tests/update_has_one_test.go,7474621,zkqiang,Test update association with non-updatable,89,92,Jinzhu,eb9a704,0,2021-08-26 05:37:49,2021-02-26 09:11:25
tests/update_has_one_test.go,4d40e34,Jinzhu,Update select tests,93,95,kinggo,b47cf57,0,2022-07-14 06:55:54,2022-01-06 07:02:53
tests/update_has_one_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),56,56,zkqiang,7474621,0,2022-01-06 07:02:53,2021-08-26 05:37:49
tests/update_has_one_test.go,c0de3c5,Jinzhu,"Support FullSaveAssociations Mode, close #3487, #3506",54,54,,,0,2020-09-24 11:29:15,
tests/update_has_one_test.go,4d40e34,Jinzhu,Update select tests,127,127,kinggo,b47cf57,0,2022-07-14 06:55:54,2022-01-06 07:02:53
tests/update_has_one_test.go,4d40e34,Jinzhu,Update select tests,135,135,kinggo,b47cf57,0,2022-07-14 06:55:54,2022-01-06 07:02:53
tests/update_has_one_test.go,7474621,zkqiang,Test update association with non-updatable,120,126,Jinzhu,eb9a704,0,2021-08-26 05:37:49,2021-02-26 09:11:25
tests/update_has_one_test.go,7474621,zkqiang,Test update association with non-updatable,128,134,Jinzhu,eb9a704,0,2021-08-26 05:37:49,2021-02-26 09:11:25
tests/update_has_one_test.go,4d40e34,Jinzhu,Update select tests,118,119,kinggo,b47cf57,0,2022-07-14 06:55:54,2022-01-06 07:02:53
tests/update_has_one_test.go,c0de3c5,Jinzhu,"Support FullSaveAssociations Mode, close #3487, #3506",71,87,Jinzhu,8bb05a5,0,2020-09-24 11:29:15,2020-06-02 02:50:38
tests/update_has_one_test.go,7474621,zkqiang,Test update association with non-updatable,96,117,Jinzhu,eb9a704,0,2021-08-26 05:37:49,2021-02-26 09:11:25
tests/update_has_one_test.go,abae7f7,Jinzhu,Test non std primary key and default value,137,137,,,0,2020-05-30 08:03:27,
tests/update_has_one_test.go,7474621,zkqiang,Test update association with non-updatable,136,136,,,0,2021-08-26 05:37:49,
tests/update_many2many_test.go,abae7f7,Jinzhu,Test non std primary key and default value,1,5,,,0,2020-05-30 08:03:27,
tests/update_many2many_test.go,8bb05a5,Jinzhu,Refactor tests files,7,7,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/update_many2many_test.go,abae7f7,Jinzhu,Test non std primary key and default value,12,29,,,0,2020-05-30 08:03:27,
tests/update_many2many_test.go,abae7f7,Jinzhu,Test non std primary key and default value,8,10,,,0,2020-05-30 08:03:27,
tests/update_many2many_test.go,abae7f7,Jinzhu,Test non std primary key and default value,54,54,,,0,2020-05-30 08:03:27,
tests/update_many2many_test.go,c0de3c5,Jinzhu,"Support FullSaveAssociations Mode, close #3487, #3506",30,53,Jinzhu,8bb05a5,0,2020-09-24 11:29:15,2020-06-02 02:50:38
tests/update_many2many_test.go,c0de3c5,Jinzhu,"Support FullSaveAssociations Mode, close #3487, #3506",6,6,Jinzhu,8bb05a5,0,2020-09-24 11:29:15,2020-06-02 02:50:38
tests/update_many2many_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),11,11,Jinzhu,c0de3c5,0,2022-01-06 07:02:53,2020-09-24 11:29:15
schema/relationship.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",2,2,,,0,2020-01-29 11:22:44,
schema/relationship.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",4,4,Mayank Govilla,d9d5c4d,1,2022-02-19 09:02:53,2021-11-08 01:47:29
schema/relationship.go,eea78f3,Jinzhu,Implement parse relationship architecture,5,7,,,0,2020-02-01 04:46:52,
schema/relationship.go,5790ba9,Jinzhu,Fix package path,10,10,,,1,2020-06-02 01:25:55,
schema/relationship.go,eea78f3,Jinzhu,Implement parse relationship architecture,3,3,,,0,2020-02-01 04:46:52,
schema/relationship.go,3cbd233,Jinzhu,Add more tests for parse schema relations,9,9,,,0,2020-02-01 16:03:56,
schema/relationship.go,1079e17,Jinzhu,Implement schema parser,1,1,,,0,2020-01-31 04:46:16,
schema/relationship.go,9ca84b3,Vladimir Avtsenov,fix concurrent map writes (#7298),8,8,Ryuji Kokubu,0f105ec,1,2025-01-12 11:49:06,2024-06-12 03:46:59
schema/relationship.go,0f105ec,Ryuji Kokubu,"fix: strings.Title -> cases.Title bcs strings.Title library is deprecated (#6999)  * add: add cases library  * fix: strings.Title -> cases.Title  * run goimports to solve the error",11,13,yetone,9a61ef2,1,2024-06-12 03:46:59,2024-04-15 03:20:20
schema/relationship.go,e986371,Jinzhu,Rename package name,14,14,,,0,2020-06-02 01:18:01,
schema/relationship.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",17,20,,,0,2020-01-29 11:22:44,
schema/relationship.go,eea78f3,Jinzhu,Implement parse relationship architecture,15,16,,,0,2020-02-01 04:46:52,
schema/relationship.go,eea78f3,Jinzhu,Implement parse relationship architecture,21,24,,,0,2020-02-01 04:46:52,
schema/relationship.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",26,28,,,0,2020-01-29 11:22:44,
schema/relationship.go,eea78f3,Jinzhu,Implement parse relationship architecture,29,33,,,0,2020-02-01 04:46:52,
schema/relationship.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",34,35,Michael Anstis,532e9cf,1,2023-04-11 05:10:38,2023-02-18 01:06:43
schema/relationship.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",38,40,,,0,2020-01-29 11:22:44,
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,46,48,,,0,2020-02-01 07:23:45,
schema/relationship.go,9ca84b3,Vladimir Avtsenov,fix concurrent map writes (#7298),36,37,Ryuji Kokubu,0f105ec,1,2025-01-12 11:49:06,2024-06-12 03:46:59
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,41,44,,,0,2020-02-01 07:23:45,
schema/relationship.go,e490e09,Jinzhu,Add SetupJoinTable support,45,45,,,0,2020-06-01 15:58:22,
schema/relationship.go,a4a0895,Jinzhu,Test parse schema relations,49,49,,,0,2020-02-01 14:26:17,
schema/relationship.go,eea78f3,Jinzhu,Implement parse relationship architecture,50,55,,,0,2020-02-01 04:46:52,
schema/relationship.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",56,57,,,0,2020-01-29 11:22:44,
schema/relationship.go,eea78f3,Jinzhu,Implement parse relationship architecture,61,61,,,0,2020-02-01 04:46:52,
schema/relationship.go,eea78f3,Jinzhu,Implement parse relationship architecture,58,58,,,0,2020-02-01 04:46:52,
schema/relationship.go,b9cce2b,Jinzhu,"Add clause, DB API, model definition",63,64,,,0,2020-01-29 11:22:44,
schema/relationship.go,3cbd233,Jinzhu,Add more tests for parse schema relations,59,60,,,0,2020-02-01 16:03:56,
schema/relationship.go,eea78f3,Jinzhu,Implement parse relationship architecture,66,66,,,0,2020-02-01 04:46:52,
schema/relationship.go,eea78f3,Jinzhu,Implement parse relationship architecture,69,69,,,0,2020-02-01 04:46:52,
schema/relationship.go,3cbd233,Jinzhu,Add more tests for parse schema relations,62,62,,,0,2020-02-01 16:03:56,
schema/relationship.go,faee069,Jinzhu,"Test Field Valuer, Setter",68,68,,,0,2020-02-15 12:28:03,
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,70,72,,,0,2020-02-01 07:23:45,
schema/relationship.go,eea78f3,Jinzhu,Implement parse relationship architecture,75,77,,,0,2020-02-01 04:46:52,
schema/relationship.go,a4a0895,Jinzhu,Test parse schema relations,73,74,,,0,2020-02-01 14:26:17,
schema/relationship.go,a4a0895,Jinzhu,Test parse schema relations,67,67,,,0,2020-02-01 14:26:17,
schema/relationship.go,6834c25,Jinzhu,"Fix stack overflow for embedded self-referred associations, close #3269",78,78,Jinzhu,ff985b9,1,2020-08-17 04:02:46,2020-08-04 04:25:34
schema/relationship.go,eea78f3,Jinzhu,Implement parse relationship architecture,83,84,,,0,2020-02-01 04:46:52,
schema/relationship.go,6834c25,Jinzhu,"Fix stack overflow for embedded self-referred associations, close #3269",79,79,Jinzhu,ff985b9,1,2020-08-17 04:02:46,2020-08-04 04:25:34
schema/relationship.go,6834c25,Jinzhu,"Fix stack overflow for embedded self-referred associations, close #3269",81,81,Jinzhu,2ae0653,1,2020-08-17 04:02:46,2020-07-09 01:03:48
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,88,88,,,0,2020-02-01 10:02:19,
schema/relationship.go,5d91dda,Paras Waykole,"fixed belongs_to & has_one reversed if field same (proper fix) (#4694)  * fixed belongs_to & has_one reversed if field same  * hasmany same foreign key bug fixed and test added  * belongsToSameForeignKey fixed and reverted old fix",89,90,Brenda Wallace,ac722c1,1,2021-10-08 02:59:55,2021-05-24 02:23:34
schema/relationship.go,4456df7,Jinzhu,Lint with golangci-lint,87,87,,,0,2020-07-16 03:27:12,
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,91,91,,,0,2020-02-01 07:23:45,
schema/relationship.go,faee069,Jinzhu,"Test Field Valuer, Setter",92,92,,,0,2020-02-15 12:28:03,
schema/relationship.go,6095dbf,Jinzhu,"Fix parse embedded relations, close #3964, #3965",82,82,Jinzhu,0f3201e,1,2021-01-19 07:40:04,2020-08-25 10:18:16
schema/relationship.go,628a0ae,Jinzhu,"Fix foreign key & reference with same name, close #4081",94,94,Jinzhu,916338a,1,2021-02-15 01:10:51,2021-01-26 05:39:34
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,97,97,,,0,2020-02-01 07:23:45,
schema/relationship.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",85,86,wangyuehong,80497f2,1,2023-12-15 08:36:08,2021-07-13 08:36:22
schema/relationship.go,6950007,Jinzhu,"Fix failed to parse relations when using goroutinue, close #3790  commit ee0ec43e8dfa85c1c1a562c2d0d47776cf8abd92 Author: Jinzhu <wosmvp@gmail.com> Date:   Fri Nov 27 14:31:57 2020 +0800      Fix failed to parse relations when using goroutinue, close #3790  commit 590e73ff95d8af6bd14f0a0da687dd7d12e5f94e Author: rokeyzhao <rokeyzhao@tencent.com> Date:   Thu Nov 26 20:27:55 2020 +0800      test: no cache preload in goroutine",80,80,Jinzhu,2ae0653,1,2020-11-27 06:32:20,2020-07-09 01:03:48
schema/relationship.go,ff985b9,Jinzhu,"Fix failed to guess relations for embedded types, close #3224",96,96,,,1,2020-08-04 04:25:34,
schema/relationship.go,c19a3ab,Jinzhu,"Fix self-referential belongs to, close #3319",95,95,,,1,2020-08-28 03:31:13,
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,100,102,,,0,2020-02-01 07:23:45,
schema/relationship.go,8f37cb0,Jinzhu,"Make has to be a const, close #4024",25,25,,,0,2021-02-01 02:42:13,
schema/relationship.go,6095dbf,Jinzhu,"Fix parse embedded relations, close #3964, #3965",65,65,,,1,2021-01-19 07:40:04,
schema/relationship.go,4f19e2a,Jinzhu,Test ForeignKeyConstraints,106,106,,,0,2020-06-19 17:20:18,
schema/relationship.go,9ca84b3,Vladimir Avtsenov,fix concurrent map writes (#7298),105,105,Ryuji Kokubu,0f105ec,1,2025-01-12 11:49:06,2024-06-12 03:46:59
schema/relationship.go,4f19e2a,Jinzhu,Test ForeignKeyConstraints,108,109,,,0,2020-06-19 17:20:18,
schema/relationship.go,9ca84b3,Vladimir Avtsenov,fix concurrent map writes (#7298),107,107,Ryuji Kokubu,0f105ec,1,2025-01-12 11:49:06,2024-06-12 03:46:59
schema/relationship.go,c19a3ab,Jinzhu,"Fix self-referential belongs to, close #3319",93,93,,,1,2020-08-28 03:31:13,
schema/relationship.go,faee069,Jinzhu,"Test Field Valuer, Setter",110,110,,,0,2020-02-15 12:28:03,
schema/relationship.go,a4a0895,Jinzhu,Test parse schema relations,117,118,,,0,2020-02-01 14:26:17,
schema/relationship.go,eea78f3,Jinzhu,Implement parse relationship architecture,111,115,,,0,2020-02-01 04:46:52,
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,116,116,,,0,2020-02-01 07:23:45,
schema/relationship.go,a4a0895,Jinzhu,Test parse schema relations,120,130,,,0,2020-02-01 14:26:17,
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,133,134,,,0,2020-02-01 07:23:45,
schema/relationship.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",135,148,black-06,828e22b,1,2023-12-15 08:36:08,2023-04-11 05:10:38
schema/relationship.go,9a61ef2,yetone,fix: duplicated preload (#6948),160,160,black-06,46816ad,1,2024-04-15 03:20:20,2024-02-04 07:49:19
schema/relationship.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",161,163,Michael Anstis,532e9cf,1,2023-04-11 05:10:38,2023-02-18 01:06:43
schema/relationship.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",149,159,Michael Anstis,532e9cf,1,2023-04-11 05:10:38,2023-02-18 01:06:43
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,182,182,,,0,2020-02-01 10:02:19,
schema/relationship.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",166,181,jesse.tang,4b22a55,1,2023-04-11 05:10:38,2022-10-07 10:29:28
schema/relationship.go,8f37cb0,Jinzhu,"Make has to be a const, close #4024",103,103,,,0,2021-02-01 02:42:13,
schema/relationship.go,9a61ef2,yetone,fix: duplicated preload (#6948),164,165,Michael Anstis,532e9cf,1,2024-04-15 03:20:20,2023-02-18 01:06:43
schema/relationship.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",194,196,black-06,828e22b,1,2023-12-15 08:36:08,2023-04-11 05:10:38
schema/relationship.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",198,207,black-06,828e22b,1,2023-12-15 08:36:08,2023-04-11 05:10:38
schema/relationship.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",183,193,Cr,373bcf7,1,2023-02-18 01:06:43,2022-05-09 02:07:18
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,197,197,,,0,2020-02-01 10:02:19,
schema/relationship.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",98,99,Shubhendra Singh Chauhan,0348b1d,1,2023-12-15 08:36:08,2021-03-08 02:46:43
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,208,209,,,0,2020-02-01 10:02:19,
schema/relationship.go,6095dbf,Jinzhu,"Fix parse embedded relations, close #3964, #3965",104,104,,,1,2021-01-19 07:40:04,
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,218,221,,,0,2020-02-01 10:02:19,
schema/relationship.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",210,216,black-06,828e22b,1,2023-12-15 08:36:08,2023-04-11 05:10:38
schema/relationship.go,6095dbf,Jinzhu,"Fix parse embedded relations, close #3964, #3965",131,132,,,1,2021-01-19 07:40:04,
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,224,226,,,0,2020-02-01 10:02:19,
schema/relationship.go,619cd33,Jinzhu,Add index priority supports,217,217,,,0,2020-07-08 09:59:40,
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,229,231,,,0,2020-02-01 10:02:19,
schema/relationship.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",222,223,black-06,828e22b,1,2023-12-15 08:36:08,2023-04-11 05:10:38
schema/relationship.go,3cbd233,Jinzhu,Add more tests for parse schema relations,233,233,,,0,2020-02-01 16:03:56,
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,234,237,,,0,2020-02-01 10:02:19,
schema/relationship.go,e490e09,Jinzhu,Add SetupJoinTable support,232,232,,,0,2020-06-01 15:58:22,
schema/relationship.go,a4a0895,Jinzhu,Test parse schema relations,238,239,,,0,2020-02-01 14:26:17,
schema/relationship.go,5ecbf25,Jinzhu,Drop table with CASCADE option,244,244,,,0,2020-06-01 23:56:53,
schema/relationship.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",240,241,black-06,828e22b,1,2023-12-15 08:36:08,2023-04-11 05:10:38
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,242,243,,,0,2020-02-01 10:02:19,
schema/relationship.go,5ecbf25,Jinzhu,Drop table with CASCADE option,251,251,,,0,2020-06-01 23:56:53,
schema/relationship.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",246,247,Michael Anstis,532e9cf,1,2023-12-15 08:36:08,2023-02-18 01:06:43
schema/relationship.go,f2adb08,Jinzhu,Set field size from primary fields to foreign fields,256,258,Jinzhu,c19a3ab,0,2020-09-03 08:11:15,2020-08-28 03:31:13
schema/relationship.go,5ecbf25,Jinzhu,Drop table with CASCADE option,259,259,,,0,2020-06-01 23:56:53,
schema/relationship.go,3cbd233,Jinzhu,Add more tests for parse schema relations,261,263,,,0,2020-02-01 16:03:56,
schema/relationship.go,ef002fd,Jinzhu,"Add GORMDataType to Field, close #3171",255,255,Jinzhu,a1e35bd,0,2020-07-20 11:00:03,2020-06-20 08:52:15
schema/relationship.go,e490e09,Jinzhu,Add SetupJoinTable support,260,260,,,0,2020-06-01 15:58:22,
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,264,266,,,0,2020-02-01 10:02:19,
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,268,273,,,0,2020-02-01 10:02:19,
schema/relationship.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",248,250,Brenda Wallace,ac722c1,1,2023-04-11 05:10:38,2021-05-24 02:23:34
schema/relationship.go,a4a0895,Jinzhu,Test parse schema relations,274,274,,,0,2020-02-01 14:26:17,
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,275,276,,,0,2020-02-01 10:02:19,
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,281,282,,,0,2020-02-01 10:02:19,
schema/relationship.go,49310d0,Jinzhu,"Test override foreign key, reference",279,280,,,0,2020-05-31 09:42:21,
schema/relationship.go,49310d0,Jinzhu,"Test override foreign key, reference",283,291,,,0,2020-05-31 09:42:21,
schema/relationship.go,8f37cb0,Jinzhu,"Make has to be a const, close #4024",267,267,Jinzhu,c19a3ab,0,2021-02-01 02:42:13,2020-08-28 03:31:13
schema/relationship.go,49310d0,Jinzhu,"Test override foreign key, reference",293,302,,,0,2020-05-31 09:42:21,
schema/relationship.go,3cbd233,Jinzhu,Add more tests for parse schema relations,303,303,,,0,2020-02-01 16:03:56,
schema/relationship.go,70e93e7,Jinzhu,Check data type if copyable before change reference field's type,252,254,,,0,2021-04-30 08:35:55,
schema/relationship.go,49310d0,Jinzhu,"Test override foreign key, reference",305,305,,,0,2020-05-31 09:42:21,
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,306,306,,,0,2020-02-01 10:02:19,
schema/relationship.go,49310d0,Jinzhu,"Test override foreign key, reference",307,308,,,0,2020-05-31 09:42:21,
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,309,309,,,0,2020-02-01 10:02:19,
schema/relationship.go,49310d0,Jinzhu,"Test override foreign key, reference",310,310,,,0,2020-05-31 09:42:21,
schema/relationship.go,0f105ec,Ryuji Kokubu,"fix: strings.Title -> cases.Title bcs strings.Title library is deprecated (#6999)  * add: add cases library  * fix: strings.Title -> cases.Title  * run goimports to solve the error",311,311,yetone,9a61ef2,1,2024-06-12 03:46:59,2024-04-15 03:20:20
schema/relationship.go,49310d0,Jinzhu,"Test override foreign key, reference",312,312,,,0,2020-05-31 09:42:21,
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,314,314,,,0,2020-02-01 10:02:19,
schema/relationship.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",292,292,Jinzhu,a1e35bd,1,2021-06-10 02:21:28,2020-06-20 08:52:15
schema/relationship.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",304,304,Jinzhu,f2adb08,1,2021-06-10 02:21:28,2020-09-03 08:11:15
schema/relationship.go,49310d0,Jinzhu,"Test override foreign key, reference",315,315,,,0,2020-05-31 09:42:21,
schema/relationship.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",119,119,,,1,2023-04-11 05:10:38,
schema/relationship.go,49310d0,Jinzhu,"Test override foreign key, reference",317,321,,,0,2020-05-31 09:42:21,
schema/relationship.go,49310d0,Jinzhu,"Test override foreign key, reference",324,327,,,0,2020-05-31 09:42:21,
schema/relationship.go,49310d0,Jinzhu,"Test override foreign key, reference",329,337,,,0,2020-05-31 09:42:21,
schema/relationship.go,0f105ec,Ryuji Kokubu,"fix: strings.Title -> cases.Title bcs strings.Title library is deprecated (#6999)  * add: add cases library  * fix: strings.Title -> cases.Title  * run goimports to solve the error",313,313,Cr,373bcf7,1,2024-06-12 03:46:59,2022-05-09 02:07:18
schema/relationship.go,3a72ba1,Jinzhu,Allow shared foreign key for many2many jointable,338,338,Cr,373bcf7,0,2022-09-22 07:03:41,2022-05-09 02:07:18
schema/relationship.go,3a72ba1,Jinzhu,Allow shared foreign key for many2many jointable,277,278,Jinzhu,b864a54,0,2022-09-22 07:03:41,2021-01-10 09:32:17
schema/relationship.go,3a72ba1,Jinzhu,Allow shared foreign key for many2many jointable,340,353,Cr,373bcf7,0,2022-09-22 07:03:41,2022-05-09 02:07:18
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,354,355,,,0,2020-02-01 10:02:19,
schema/relationship.go,162367b,Jinzhu,"Fix multiple M2M relations on one table, close #3347",356,356,Jinzhu,0f3201e,1,2020-09-01 03:30:16,2020-08-25 10:18:16
schema/relationship.go,373bcf7,Cr,"fix: many2many auto migrate (#5322)  * fix: many2many auto migrate  * fix: uuid ossp",322,323,Shubhendra Singh Chauhan,0348b1d,1,2022-05-09 02:07:18,2021-03-08 02:46:43
schema/relationship.go,0f105ec,Ryuji Kokubu,"fix: strings.Title -> cases.Title bcs strings.Title library is deprecated (#6999)  * add: add cases library  * fix: strings.Title -> cases.Title  * run goimports to solve the error",357,357,black-06,828e22b,1,2024-06-12 03:46:59,2023-04-11 05:10:38
schema/relationship.go,3a72ba1,Jinzhu,Allow shared foreign key for many2many jointable,316,316,Chris Faulkner,15a46bc,0,2022-09-22 07:03:41,2021-04-19 13:03:39
schema/relationship.go,0f105ec,Ryuji Kokubu,"fix: strings.Title -> cases.Title bcs strings.Title library is deprecated (#6999)  * add: add cases library  * fix: strings.Title -> cases.Title  * run goimports to solve the error",339,339,Cr,373bcf7,1,2024-06-12 03:46:59,2022-05-09 02:07:18
schema/relationship.go,162367b,Jinzhu,"Fix multiple M2M relations on one table, close #3347",368,368,Jinzhu,0f3201e,1,2020-09-01 03:30:16,2020-08-25 10:18:16
schema/relationship.go,162367b,Jinzhu,"Fix multiple M2M relations on one table, close #3347",358,361,Jinzhu,0f3201e,1,2020-09-01 03:30:16,2020-08-25 10:18:16
schema/relationship.go,a4a0895,Jinzhu,Test parse schema relations,364,365,,,0,2020-02-01 14:26:17,
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,369,369,,,0,2020-02-01 10:02:19,
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,366,367,,,0,2020-02-01 10:02:19,
schema/relationship.go,fee1e4a,Jinzhu,Fix create foreign keys for many2many relations,370,397,,,1,2020-06-21 02:48:23,
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,398,398,,,0,2020-02-01 10:02:19,
schema/relationship.go,f6ed895,Jinzhu,"Build relationships if fields are not ignored, fix #3181",400,400,Jinzhu,2676fa4,1,2020-09-09 08:37:05,2020-07-31 10:19:25
schema/relationship.go,162367b,Jinzhu,"Fix multiple M2M relations on one table, close #3347",399,399,,,1,2020-09-01 03:30:16,
schema/relationship.go,162367b,Jinzhu,"Fix multiple M2M relations on one table, close #3347",405,405,Jinzhu,2b510d6,1,2020-09-01 03:30:16,2020-08-21 07:40:50
schema/relationship.go,162367b,Jinzhu,"Fix multiple M2M relations on one table, close #3347",401,401,,,1,2020-09-01 03:30:16,
schema/relationship.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",245,245,,,1,2023-04-11 05:10:38,
schema/relationship.go,162367b,Jinzhu,"Fix multiple M2M relations on one table, close #3347",409,409,Jinzhu,2b510d6,1,2020-09-01 03:30:16,2020-08-21 07:40:50
schema/relationship.go,162367b,Jinzhu,"Fix multiple M2M relations on one table, close #3347",410,410,Jinzhu,2b510d6,1,2020-09-01 03:30:16,2020-08-21 07:40:50
schema/relationship.go,162367b,Jinzhu,"Fix multiple M2M relations on one table, close #3347",412,414,Jinzhu,2b510d6,1,2020-09-01 03:30:16,2020-08-21 07:40:50
schema/relationship.go,f2adb08,Jinzhu,Set field size from primary fields to foreign fields,406,408,,,0,2020-09-03 08:11:15,
schema/relationship.go,70e93e7,Jinzhu,Check data type if copyable before change reference field's type,402,404,Jinzhu,2b510d6,0,2021-04-30 08:35:55,2020-08-21 07:40:50
schema/relationship.go,162367b,Jinzhu,"Fix multiple M2M relations on one table, close #3347",416,417,Jinzhu,2b510d6,1,2020-09-01 03:30:16,2020-08-21 07:40:50
schema/relationship.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",227,228,,,1,2023-12-15 08:36:08,
schema/relationship.go,162367b,Jinzhu,"Fix multiple M2M relations on one table, close #3347",427,431,Jinzhu,2b510d6,1,2020-09-01 03:30:16,2020-08-21 07:40:50
schema/relationship.go,3a72ba1,Jinzhu,Allow shared foreign key for many2many jointable,432,432,Jinzhu,39d84cb,0,2022-09-22 07:03:41,2022-02-19 09:02:53
schema/relationship.go,3a72ba1,Jinzhu,Allow shared foreign key for many2many jointable,418,426,wangyuehong,80497f2,0,2022-09-22 07:03:41,2021-07-13 08:36:22
schema/relationship.go,162367b,Jinzhu,"Fix multiple M2M relations on one table, close #3347",435,435,Jinzhu,4456df7,1,2020-09-01 03:30:16,2020-07-16 03:27:12
schema/relationship.go,3a72ba1,Jinzhu,Allow shared foreign key for many2many jointable,436,440,Jinzhu,39d84cb,0,2022-09-22 07:03:41,2022-02-19 09:02:53
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,442,442,,,0,2020-02-01 10:02:19,
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,443,444,,,0,2020-02-01 10:02:19,
schema/relationship.go,fee1e4a,Jinzhu,Fix create foreign keys for many2many relations,441,441,,,1,2020-06-21 02:48:23,
schema/relationship.go,ff985b9,Jinzhu,"Fix failed to guess relations for embedded types, close #3224",445,447,,,1,2020-08-04 04:25:34,
schema/relationship.go,ff985b9,Jinzhu,"Fix failed to guess relations for embedded types, close #3224",450,450,,,1,2020-08-04 04:25:34,
schema/relationship.go,162367b,Jinzhu,"Fix multiple M2M relations on one table, close #3347",433,434,,,1,2020-09-01 03:30:16,
schema/relationship.go,628a0ae,Jinzhu,"Fix foreign key & reference with same name, close #4081",448,449,Jinzhu,2b510d6,1,2021-02-15 01:10:51,2020-08-21 07:40:50
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,456,458,,,0,2020-02-01 07:23:45,
schema/relationship.go,ff985b9,Jinzhu,"Fix failed to guess relations for embedded types, close #3224",453,454,,,1,2020-08-04 04:25:34,
schema/relationship.go,c19a3ab,Jinzhu,"Fix self-referential belongs to, close #3319",451,452,,,1,2020-08-28 03:31:13,
schema/relationship.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",362,363,Jinzhu,c19a3ab,1,2023-12-15 08:36:08,2020-08-28 03:31:13
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,460,461,,,0,2020-02-01 07:23:45,
schema/relationship.go,3a72ba1,Jinzhu,Allow shared foreign key for many2many jointable,415,415,Jinzhu,0f3201e,0,2022-09-22 07:03:41,2020-08-25 10:18:16
schema/relationship.go,628a0ae,Jinzhu,"Fix foreign key & reference with same name, close #4081",462,469,Jinzhu,6950007,1,2021-02-15 01:10:51,2020-11-27 06:32:20
schema/relationship.go,3a72ba1,Jinzhu,Allow shared foreign key for many2many jointable,411,411,Jinzhu,0f3201e,0,2022-09-22 07:03:41,2020-08-25 10:18:16
schema/relationship.go,ff985b9,Jinzhu,"Fix failed to guess relations for embedded types, close #3224",474,475,,,1,2020-08-04 04:25:34,
schema/relationship.go,628a0ae,Jinzhu,"Fix foreign key & reference with same name, close #4081",471,473,Jinzhu,2b510d6,1,2021-02-15 01:10:51,2020-08-21 07:40:50
schema/relationship.go,628a0ae,Jinzhu,"Fix foreign key & reference with same name, close #4081",459,459,Jinzhu,2b510d6,1,2021-02-15 01:10:51,2020-08-21 07:40:50
schema/relationship.go,ff985b9,Jinzhu,"Fix failed to guess relations for embedded types, close #3224",481,481,,,1,2020-08-04 04:25:34,
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,485,486,,,0,2020-02-01 07:23:45,
schema/relationship.go,628a0ae,Jinzhu,"Fix foreign key & reference with same name, close #4081",455,455,Jinzhu,2b510d6,1,2021-02-15 01:10:51,2020-08-21 07:40:50
schema/relationship.go,c19a3ab,Jinzhu,"Fix self-referential belongs to, close #3319",476,480,,,1,2020-08-28 03:31:13,
schema/relationship.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",482,483,Jinzhu,3a72ba1,1,2023-12-15 08:36:08,2022-09-22 07:03:41
schema/relationship.go,0f3201e,Jinzhu,friendly invalid field error message,470,470,,,1,2020-08-25 10:18:16,
schema/relationship.go,ff985b9,Jinzhu,"Fix failed to guess relations for embedded types, close #3224",484,484,,,1,2020-08-04 04:25:34,
schema/relationship.go,ff985b9,Jinzhu,"Fix failed to guess relations for embedded types, close #3224",493,494,,,1,2020-08-04 04:25:34,
schema/relationship.go,0f3201e,Jinzhu,friendly invalid field error message,492,492,,,1,2020-08-25 10:18:16,
schema/relationship.go,c19a3ab,Jinzhu,"Fix self-referential belongs to, close #3319",488,490,,,1,2020-08-28 03:31:13,
schema/relationship.go,ff985b9,Jinzhu,"Fix failed to guess relations for embedded types, close #3224",487,487,,,1,2020-08-04 04:25:34,
schema/relationship.go,0f3201e,Jinzhu,friendly invalid field error message,499,499,Jinzhu,619cd33,1,2020-08-25 10:18:16,2020-07-08 09:59:40
schema/relationship.go,ff985b9,Jinzhu,"Fix failed to guess relations for embedded types, close #3224",500,500,,,1,2020-08-04 04:25:34,
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,501,501,,,0,2020-02-01 07:23:45,
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,503,504,,,0,2020-02-01 07:23:45,
schema/relationship.go,c19a3ab,Jinzhu,"Fix self-referential belongs to, close #3319",496,497,,,1,2020-08-28 03:31:13,
schema/relationship.go,a4a0895,Jinzhu,Test parse schema relations,505,506,,,0,2020-02-01 14:26:17,
schema/relationship.go,4b22a55,jesse.tang,fix: primaryFields  are overwritten (#5721),498,498,Chris Faulkner,15a46bc,1,2022-10-07 10:29:28,2021-04-19 13:03:39
schema/relationship.go,4b22a55,jesse.tang,fix: primaryFields  are overwritten (#5721),502,502,Chris Faulkner,15a46bc,1,2022-10-07 10:29:28,2021-04-19 13:03:39
schema/relationship.go,0f105ec,Ryuji Kokubu,"fix: strings.Title -> cases.Title bcs strings.Title library is deprecated (#6999)  * add: add cases library  * fix: strings.Title -> cases.Title  * run goimports to solve the error",328,328,,,1,2024-06-12 03:46:59,
schema/relationship.go,0f3201e,Jinzhu,friendly invalid field error message,509,509,Jinzhu,619cd33,1,2020-08-25 10:18:16,2020-07-08 09:59:40
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,510,511,,,0,2020-02-01 07:23:45,
schema/relationship.go,4b22a55,jesse.tang,fix: primaryFields  are overwritten (#5721),495,495,Chris Faulkner,15a46bc,1,2022-10-07 10:29:28,2021-04-19 13:03:39
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,513,514,,,0,2020-02-01 07:23:45,
schema/relationship.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",530,530,Jinzhu,3a72ba1,1,2023-04-11 05:10:38,2022-09-22 07:03:41
schema/relationship.go,4b22a55,jesse.tang,fix: primaryFields  are overwritten (#5721),512,512,Jinzhu,916338a,1,2022-10-07 10:29:28,2021-01-26 05:39:34
schema/relationship.go,8bf50a5,Jinzhu,"Fix parse relations if only specfied References, close #3890",531,531,Jinzhu,619cd33,1,2020-12-28 09:58:12,2020-07-08 09:59:40
schema/relationship.go,ff985b9,Jinzhu,"Fix failed to guess relations for embedded types, close #3224",533,533,,,1,2020-08-04 04:25:34,
schema/relationship.go,a4a0895,Jinzhu,Test parse schema relations,534,536,,,0,2020-02-01 14:26:17,
schema/relationship.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",539,541,Michael Anstis,532e9cf,1,2023-12-15 08:36:08,2023-02-18 01:06:43
schema/relationship.go,4b22a55,jesse.tang,fix: primaryFields  are overwritten (#5721),507,508,Jinzhu,162367b,1,2022-10-07 10:29:28,2020-09-01 03:30:16
schema/relationship.go,065787c,Jinzhu,Compatible with with foreign key with ID suffix #3890,537,538,,,0,2020-12-28 10:20:55,
schema/relationship.go,8bf50a5,Jinzhu,"Fix parse relations if only specfied References, close #3890",519,529,,,1,2020-12-28 09:58:12,
schema/relationship.go,065787c,Jinzhu,Compatible with with foreign key with ID suffix #3890,542,544,Jinzhu,619cd33,0,2020-12-28 10:20:55,2020-07-08 09:59:40
schema/relationship.go,e6f7da0,Jinzhu,Support Variable Relation,516,518,,,0,2022-03-18 06:30:30,
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,557,560,,,0,2020-02-01 07:23:45,
schema/relationship.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",545,551,Chris Faulkner,15a46bc,1,2023-04-11 05:10:38,2021-04-19 13:03:39
schema/relationship.go,065787c,Jinzhu,Compatible with with foreign key with ID suffix #3890,552,554,,,0,2020-12-28 10:20:55,
schema/relationship.go,065787c,Jinzhu,Compatible with with foreign key with ID suffix #3890,556,556,,,0,2020-12-28 10:20:55,
schema/relationship.go,0f3201e,Jinzhu,friendly invalid field error message,563,563,,,1,2020-08-25 10:18:16,
schema/relationship.go,a4a0895,Jinzhu,Test parse schema relations,566,566,,,0,2020-02-01 14:26:17,
schema/relationship.go,eea78f3,Jinzhu,Implement parse relationship architecture,564,564,,,0,2020-02-01 04:46:52,
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,567,570,,,0,2020-02-01 07:23:45,
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,572,574,,,0,2020-02-01 07:23:45,
schema/relationship.go,0f3201e,Jinzhu,friendly invalid field error message,571,571,,,1,2020-08-25 10:18:16,
schema/relationship.go,4b22a55,jesse.tang,fix: primaryFields  are overwritten (#5721),561,562,Jinzhu,92a2389,1,2022-10-07 10:29:28,2021-02-16 00:35:19
schema/relationship.go,0f3201e,Jinzhu,friendly invalid field error message,575,575,,,1,2020-08-25 10:18:16,
schema/relationship.go,e6f7da0,Jinzhu,Support Variable Relation,532,532,Jinzhu,628a0ae,0,2022-03-18 06:30:30,2021-02-15 01:10:51
schema/relationship.go,4b22a55,jesse.tang,fix: primaryFields  are overwritten (#5721),565,565,Jinzhu,92a2389,1,2022-10-07 10:29:28,2021-02-16 00:35:19
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,576,578,,,0,2020-02-01 07:23:45,
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,586,587,,,0,2020-02-01 07:23:45,
schema/relationship.go,eea78f3,Jinzhu,Implement parse relationship architecture,588,589,,,0,2020-02-01 04:46:52,
schema/relationship.go,0f3201e,Jinzhu,friendly invalid field error message,585,585,,,1,2020-08-25 10:18:16,
schema/relationship.go,5ecbf25,Jinzhu,Drop table with CASCADE option,592,592,,,0,2020-06-01 23:56:53,
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,590,591,,,0,2020-02-01 07:23:45,
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,581,584,,,0,2020-02-01 07:23:45,
schema/relationship.go,6a0fca2,Jinzhu,"Return error for invalid relations definition, close #3830",580,580,,,1,2020-12-06 10:07:16,
schema/relationship.go,4b22a55,jesse.tang,fix: primaryFields  are overwritten (#5721),579,579,Jinzhu,6095dbf,1,2022-10-07 10:29:28,2021-01-19 07:40:04
schema/relationship.go,e490e09,Jinzhu,Add SetupJoinTable support,601,601,,,0,2020-06-01 15:58:22,
schema/relationship.go,5ecbf25,Jinzhu,Drop table with CASCADE option,600,600,,,0,2020-06-01 23:56:53,
schema/relationship.go,ef002fd,Jinzhu,"Add GORMDataType to Field, close #3171",596,596,,,0,2020-07-20 11:00:03,
schema/relationship.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",515,515,Jinzhu,916338a,1,2023-02-18 01:06:43,2021-01-26 05:39:34
schema/relationship.go,3cbd233,Jinzhu,Add more tests for parse schema relations,602,602,,,0,2020-02-01 16:03:56,
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,603,603,,,0,2020-02-01 07:23:45,
schema/relationship.go,eea78f3,Jinzhu,Implement parse relationship architecture,606,606,,,0,2020-02-01 04:46:52,
schema/relationship.go,1079e17,Jinzhu,Implement schema parser,607,607,,,0,2020-01-31 04:46:16,
schema/relationship.go,4b22a55,jesse.tang,fix: primaryFields  are overwritten (#5721),491,491,Jinzhu,2b510d6,1,2022-10-07 10:29:28,2020-08-21 07:40:50
schema/relationship.go,ff985b9,Jinzhu,"Fix failed to guess relations for embedded types, close #3224",604,604,,,1,2020-08-04 04:25:34,
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,605,605,,,0,2020-02-01 07:23:45,
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,610,610,,,0,2020-02-01 07:23:45,
schema/relationship.go,fd9b688,Jinzhu,Implement parse many2many relation,611,611,,,0,2020-02-01 10:02:19,
schema/relationship.go,a9c2029,Jinzhu,Implement guess relation,612,612,,,0,2020-02-01 07:23:45,
schema/relationship.go,ff985b9,Jinzhu,"Fix failed to guess relations for embedded types, close #3224",608,608,,,1,2020-08-04 04:25:34,
schema/relationship.go,1079e17,Jinzhu,Implement schema parser,613,613,,,0,2020-01-31 04:46:16,
schema/relationship.go,0be4817,Jinzhu,Finish CreateConstraint,614,614,,,0,2020-02-22 03:15:51,
schema/relationship.go,0be4817,Jinzhu,Finish CreateConstraint,616,626,,,0,2020-02-22 03:15:51,
schema/relationship.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",627,651,Alexis Viscogliosi,a2cac75,1,2024-02-04 07:49:19,2023-12-15 08:36:08
schema/relationship.go,f2adb08,Jinzhu,Set field size from primary fields to foreign fields,597,599,,,0,2020-09-03 08:11:15,
schema/relationship.go,0be4817,Jinzhu,Finish CreateConstraint,652,657,,,0,2020-02-22 03:15:51,
schema/relationship.go,0be4817,Jinzhu,Finish CreateConstraint,676,681,,,0,2020-02-22 03:15:51,
schema/relationship.go,70e93e7,Jinzhu,Check data type if copyable before change reference field's type,593,595,,,0,2021-04-30 08:35:55,
schema/relationship.go,0be4817,Jinzhu,Finish CreateConstraint,687,696,,,0,2020-02-22 03:15:51,
schema/relationship.go,8f37cb0,Jinzhu,"Make has to be a const, close #4024",609,609,,,0,2021-02-01 02:42:13,
schema/relationship.go,0be4817,Jinzhu,Finish CreateConstraint,697,699,,,0,2020-02-22 03:15:51,
schema/relationship.go,0be4817,Jinzhu,Finish CreateConstraint,701,702,,,0,2020-02-22 03:15:51,
schema/relationship.go,4f19e2a,Jinzhu,Test ForeignKeyConstraints,703,710,,,0,2020-06-19 17:20:18,
schema/relationship.go,92a2389,Jinzhu,"Fix create duplicated constraint, close #4090",658,659,,,1,2021-02-16 00:35:19,
schema/relationship.go,828e22b,black-06,"feat: support embedded preload (#6137)  * feat: support embedded preload  * fix lint and test  * fix test...",555,555,Jinzhu,162367b,1,2023-04-11 05:10:38,2020-09-01 03:30:16
schema/relationship.go,0be4817,Jinzhu,Finish CreateConstraint,711,715,,,0,2020-02-22 03:15:51,
schema/relationship.go,922a8ef,Jinzhu,Generate Query Conds for Relationship,716,716,,,0,2020-05-19 13:50:06,
schema/relationship.go,922a8ef,Jinzhu,Generate Query Conds for Relationship,719,722,,,0,2020-05-19 13:50:06,
schema/relationship.go,2ae0653,Jinzhu,"Fix ambiguous column when using same column name in join table, close #3120",718,718,,,1,2020-07-09 01:03:48,
schema/relationship.go,916338a,Jinzhu,"Test migrate constraints, close #3986",700,700,,,0,2021-01-26 05:39:34,
schema/relationship.go,02cb405,heige,"Optimize parse constraint (#4153)  * for Config.cacheStore store PreparedStmtDB key  * invalid db error and value and invalid value length error (#4151)  * support named params in Select API  (#4142)  * adds support for named arguments in select  * changes clause identifies and adds test  * optimize match english letters and midline  Co-authored-by: Ratan Phayade <ratanphayade@users.noreply.github.com>",682,686,,,1,2021-03-08 02:21:33,
schema/relationship.go,922a8ef,Jinzhu,Generate Query Conds for Relationship,724,726,,,0,2020-05-19 13:50:06,
schema/relationship.go,2ae0653,Jinzhu,"Fix ambiguous column when using same column name in join table, close #3120",723,723,,,1,2020-07-09 01:03:48,
schema/relationship.go,922a8ef,Jinzhu,Generate Query Conds for Relationship,728,756,,,0,2020-05-19 13:50:06,
schema/relationship.go,cc064f2,Jinzhu,Add on conflict support,727,727,,,0,2020-05-25 15:11:42,
schema/relationship.go,91a6958,Jinzhu,Test Association For BelongsTo,759,759,,,0,2020-05-24 10:33:15,
schema/relationship.go,2ae0653,Jinzhu,"Fix ambiguous column when using same column name in join table, close #3120",758,758,,,1,2020-07-09 01:03:48,
schema/relationship.go,92a2389,Jinzhu,"Fix create duplicated constraint, close #4090",661,675,,,1,2021-02-16 00:35:19,
schema/relationship.go,922a8ef,Jinzhu,Generate Query Conds for Relationship,760,762,,,0,2020-05-19 13:50:06,
schema/relationship.go,d9d5c4d,Mayank Govilla,"Fix self-referential belongs to constraint (#4801)  * create tests for self-ref has one migration  * add relation equality check to avoid skipping self-referential schemas  * remove drop table error check",660,660,,,1,2021-11-08 01:47:29,
schema/relationship.go,70e93e7,Jinzhu,Check data type if copyable before change reference field's type,763,771,,,0,2021-04-30 08:35:55,
schema/relationship.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",717,717,,,1,2022-02-19 09:02:53,
schema/relationship.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",757,757,,,1,2022-02-19 09:02:53,
schema/relationship.go,46816ad,black-06,"refactor: distinguish between Unique and UniqueIndex (#6386)  * refactor: distinguish between UniqueIndex and Index  * add test  * add ParseIndex test  * modify unique to constraint  * modify unique to constraint  * fix MigrateColumnUnique  * fix test  * fix unit test  * update test mod  * add MigrateColumnUnique to Migrator interface  * fix format lint  * add comment  * go mod tidy  * revert: revert MigrateColumn  * resolve conflicts",615,615,,,1,2024-02-04 07:49:19,
utils/tests/dummy_dialecter.go,0160bab,Jinzhu,Add clause tests,1,3,,,0,2020-02-05 10:28:58,
utils/tests/dummy_dialecter.go,34fbe84,Jinzhu,"Add TableName with NamingStrategy support, close #5726",5,5,Mikhail Faraponov,2990790,0,2022-10-07 13:18:37,2022-03-17 14:54:30
utils/tests/dummy_dialecter.go,0160bab,Jinzhu,Add clause tests,9,10,,,0,2020-02-05 10:28:58,
utils/tests/dummy_dialecter.go,0160bab,Jinzhu,Add clause tests,14,14,,,0,2020-02-05 10:28:58,
utils/tests/dummy_dialecter.go,85eaf9e,Saeid Kanishka,"feat: Unique Constraint Violation error translator for different drivers (#6004)  * feat: duplicated key error translator for different drivers  * test: removed the dependency  * test: fixed broken tests  * refactor: added ErrorTransltor interface  * style: applied styler  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",11,13,Jinzhu,34fbe84,1,2023-03-06 06:03:31,2022-10-07 13:18:37
utils/tests/dummy_dialecter.go,0160bab,Jinzhu,Add clause tests,27,29,,,0,2020-02-05 10:28:58,
utils/tests/dummy_dialecter.go,6d58b62,Jinzhu,Add sqlite migration tests,34,34,,,0,2020-02-22 12:57:29,
utils/tests/dummy_dialecter.go,a1e35bd,Jinzhu,Support merge batch data some having primary values,30,33,Jinzhu,e986371,0,2020-06-20 08:52:15,2020-06-02 01:18:01
utils/tests/dummy_dialecter.go,34fbe84,Jinzhu,"Add TableName with NamingStrategy support, close #5726",19,26,Mikhail Faraponov,2990790,0,2022-10-07 13:18:37,2022-03-17 14:54:30
utils/tests/dummy_dialecter.go,0160bab,Jinzhu,Add clause tests,35,37,,,0,2020-02-05 10:28:58,
utils/tests/dummy_dialecter.go,2a0c3e3,Jinzhu,AddVar accept writer,38,39,,,0,2020-03-09 09:59:54,
utils/tests/dummy_dialecter.go,0160bab,Jinzhu,Add clause tests,40,41,,,0,2020-02-05 10:28:58,
utils/tests/dummy_dialecter.go,d41fb3a,Jinzhu,Refactor dummy driver QuoteTo method,63,86,Jinzhu,a1e35bd,0,2021-09-11 08:22:35,2020-06-20 08:52:15
utils/tests/dummy_dialecter.go,d41fb3a,Jinzhu,Refactor dummy driver QuoteTo method,43,61,Jinzhu,a1e35bd,0,2021-09-11 08:22:35,2020-06-20 08:52:15
utils/tests/dummy_dialecter.go,e986371,Jinzhu,Rename package name,6,8,,,0,2020-06-02 01:18:01,
utils/tests/dummy_dialecter.go,e986371,Jinzhu,Rename package name,4,4,,,0,2020-06-02 01:18:01,
utils/tests/dummy_dialecter.go,504f427,Jinzhu,Refactor clause Writer,42,42,,,0,2020-03-09 09:07:00,
utils/tests/dummy_dialecter.go,0160bab,Jinzhu,Add clause tests,88,88,,,0,2020-02-05 10:28:58,
utils/tests/dummy_dialecter.go,6d58b62,Jinzhu,Add sqlite migration tests,89,89,,,0,2020-02-22 12:57:29,
utils/tests/dummy_dialecter.go,6d58b62,Jinzhu,Add sqlite migration tests,94,96,,,0,2020-02-22 12:57:29,
utils/tests/dummy_dialecter.go,85eaf9e,Saeid Kanishka,"feat: Unique Constraint Violation error translator for different drivers (#6004)  * feat: duplicated key error translator for different drivers  * test: removed the dependency  * test: fixed broken tests  * refactor: added ErrorTransltor interface  * style: applied styler  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",97,100,Jinzhu,34fbe84,1,2023-03-06 06:03:31,2022-10-07 13:18:37
utils/tests/dummy_dialecter.go,27cb613,Jinzhu,Refactor logger,90,93,,,0,2020-02-23 07:07:47,
utils/tests/dummy_dialecter.go,76b8e78,Jinzhu,Add multi primary keys test,15,18,,,0,2020-06-01 00:13:16,
utils/tests/dummy_dialecter.go,2990790,Mikhail Faraponov,Use WriteByte for single byte operations (#5167)  Co-authored-by: Mikhail Faraponov <mikefaraponov@Mikhails-MacBook-Pro.local>,62,62,Jinzhu,a1e35bd,0,2022-03-17 14:54:30,2020-06-20 08:52:15
utils/tests/dummy_dialecter.go,2990790,Mikhail Faraponov,Use WriteByte for single byte operations (#5167)  Co-authored-by: Mikhail Faraponov <mikefaraponov@Mikhails-MacBook-Pro.local>,87,87,,,0,2022-03-17 14:54:30,
tests/upsert_test.go,dca5244,Jinzhu,Add FirstOrCreate support,6,6,Jinzhu,ac8708b,0,2020-05-28 08:21:10,2020-05-28 05:12:56
tests/upsert_test.go,ac8708b,Jinzhu,Add FirstOrInit support,7,7,,,0,2020-05-28 05:12:56,
tests/upsert_test.go,ac8708b,Jinzhu,Add FirstOrInit support,1,3,,,0,2020-05-28 05:12:56,
tests/upsert_test.go,2ec7043,Jinzhu,Respect update permission for OnConflict Create,4,4,Jinzhu,62be27d,0,2021-07-13 10:04:42,2020-11-16 12:22:08
tests/upsert_test.go,ac8708b,Jinzhu,Add FirstOrInit support,5,5,,,0,2020-05-28 05:12:56,
tests/upsert_test.go,e986371,Jinzhu,Rename package name,9,9,Jinzhu,05e1af3,0,2020-06-02 01:18:01,2020-05-30 06:28:42
tests/upsert_test.go,2ec7043,Jinzhu,Respect update permission for OnConflict Create,8,8,Jinzhu,62be27d,0,2021-07-13 10:04:42,2020-11-16 12:22:08
tests/upsert_test.go,8bb05a5,Jinzhu,Refactor tests files,10,10,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/upsert_test.go,05e1af3,Jinzhu,Test Upsert,13,14,Jinzhu,5507421,0,2020-05-30 06:28:42,2020-05-28 23:35:45
tests/upsert_test.go,ac8708b,Jinzhu,Add FirstOrInit support,11,12,,,0,2020-05-28 05:12:56,
tests/upsert_test.go,05e1af3,Jinzhu,Test Upsert,18,19,Jinzhu,5507421,0,2020-05-30 06:28:42,2020-05-28 23:35:45
tests/upsert_test.go,05e1af3,Jinzhu,Test Upsert,23,29,Jinzhu,5507421,0,2020-05-30 06:28:42,2020-05-28 23:35:45
tests/upsert_test.go,82d55b1,Jinzhu,Add OnConflict DoUpdates test,15,17,Jinzhu,94685d1,0,2020-06-07 04:50:00,2020-06-02 15:30:26
tests/upsert_test.go,82d55b1,Jinzhu,Add OnConflict DoUpdates test,20,22,Jinzhu,94685d1,0,2020-06-07 04:50:00,2020-06-02 15:30:26
tests/upsert_test.go,82d55b1,Jinzhu,Add OnConflict DoUpdates test,30,45,Jinzhu,94685d1,0,2020-06-07 04:50:00,2020-06-02 15:30:26
tests/upsert_test.go,2ec7043,Jinzhu,Respect update permission for OnConflict Create,56,64,Jinzhu,62be27d,0,2021-07-13 10:04:42,2020-11-16 12:22:08
tests/upsert_test.go,62be27d,Jinzhu,Add OnConflict UpdateAll support,46,55,Jinzhu,0d58d5a,0,2020-11-16 12:22:08,2020-06-10 02:48:48
tests/upsert_test.go,b3eb1c8,Jiepeng Cao,simplified regexp (#5677),65,65,Jin,9a4d10b,0,2022-09-05 07:39:19,2022-03-24 01:31:58
tests/upsert_test.go,da16a8a,Jinzhu,Update updated_at when upserting with Create OnConflict,71,88,Jinzhu,2ec7043,0,2021-09-17 07:29:49,2021-07-13 10:04:42
tests/upsert_test.go,2ec7043,Jinzhu,Respect update permission for OnConflict Create,66,68,Jinzhu,62be27d,0,2021-07-13 10:04:42,2020-11-16 12:22:08
tests/upsert_test.go,da16a8a,Jinzhu,Update updated_at when upserting with Create OnConflict,69,69,Jinzhu,2ec7043,0,2021-09-17 07:29:49,2021-07-13 10:04:42
tests/upsert_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),70,70,kinggo,b46e2af,0,2022-01-06 07:02:53,2021-10-08 05:47:01
tests/upsert_test.go,05e1af3,Jinzhu,Test Upsert,89,112,Jinzhu,dca5244,0,2020-05-30 06:28:42,2020-05-28 08:21:10
tests/upsert_test.go,0d58d5a,Jinzhu,Upsert selected columns,143,143,Jinzhu,f3424c6,0,2020-06-10 02:48:48,2020-06-09 16:02:14
tests/upsert_test.go,05e1af3,Jinzhu,Test Upsert,136,137,Jinzhu,ac8708b,0,2020-05-30 06:28:42,2020-05-28 05:12:56
tests/upsert_test.go,0d58d5a,Jinzhu,Upsert selected columns,152,171,Jinzhu,f3424c6,0,2020-06-10 02:48:48,2020-06-09 16:02:14
tests/upsert_test.go,ac8708b,Jinzhu,Add FirstOrInit support,200,204,,,0,2020-05-28 05:12:56,
tests/upsert_test.go,da16a8a,Jinzhu,Update updated_at when upserting with Create OnConflict,175,197,Jinzhu,2ec7043,0,2021-09-17 07:29:49,2021-07-13 10:04:42
tests/upsert_test.go,5507421,Jinzhu,Add SoftDelete support,205,205,,,0,2020-05-28 23:35:45,
tests/upsert_test.go,f3424c6,Jinzhu,Support save slice of data,144,151,,,0,2020-06-09 16:02:14,
tests/upsert_test.go,dca5244,Jinzhu,Add FirstOrCreate support,248,248,,,0,2020-05-28 08:21:10,
tests/upsert_test.go,f3424c6,Jinzhu,Support save slice of data,138,142,,,0,2020-06-09 16:02:14,
tests/upsert_test.go,ac8708b,Jinzhu,Add FirstOrInit support,206,247,,,0,2020-05-28 05:12:56,
tests/upsert_test.go,5507421,Jinzhu,Add SoftDelete support,249,252,,,0,2020-05-28 23:35:45,
tests/upsert_test.go,dca5244,Jinzhu,Add FirstOrCreate support,279,303,,,0,2020-05-28 08:21:10,
tests/upsert_test.go,dca5244,Jinzhu,Add FirstOrCreate support,253,273,,,0,2020-05-28 08:21:10,
tests/upsert_test.go,f3424c6,Jinzhu,Support save slice of data,198,199,Jinzhu,ac8708b,0,2020-06-09 16:02:14,2020-05-28 05:12:56
tests/upsert_test.go,f3424c6,Jinzhu,Support save slice of data,172,173,Jinzhu,ac8708b,0,2020-06-09 16:02:14,2020-05-28 05:12:56
tests/upsert_test.go,dca5244,Jinzhu,Add FirstOrCreate support,305,307,,,0,2020-05-28 08:21:10,
tests/upsert_test.go,dca5244,Jinzhu,Add FirstOrCreate support,309,310,,,0,2020-05-28 08:21:10,
tests/upsert_test.go,0d58d5a,Jinzhu,Upsert selected columns,174,174,,,0,2020-06-10 02:48:48,
tests/upsert_test.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,274,278,,,1,2020-06-02 15:30:26,
tests/upsert_test.go,b46e2af,kinggo,"fix : update miss where's condition when primary key use ""<-:create"" tag (#4738)  * fix:update miss where condition  * fix:rename test case",323,327,Jinzhu,da16a8a,1,2021-10-08 05:47:01,2021-09-17 07:29:49
tests/upsert_test.go,b46e2af,kinggo,"fix : update miss where's condition when primary key use ""<-:create"" tag (#4738)  * fix:update miss where condition  * fix:rename test case",312,321,Jinzhu,da16a8a,1,2021-10-08 05:47:01,2021-09-17 07:29:49
tests/upsert_test.go,9a4d10b,Jin,style: fix coding typo (#5184),322,322,kinggo,b47cf57,1,2022-03-24 01:31:58,2022-01-06 07:02:53
tests/upsert_test.go,649d02f,Jinzhu,Add batch upsert tests,113,135,,,0,2020-06-09 01:04:32,
tests/upsert_test.go,ac8708b,Jinzhu,Add FirstOrInit support,311,311,,,0,2020-05-28 05:12:56,
tests/upsert_test.go,b46e2af,kinggo,"fix : update miss where's condition when primary key use ""<-:create"" tag (#4738)  * fix:update miss where condition  * fix:rename test case",328,328,Jinzhu,da16a8a,1,2021-10-08 05:47:01,2021-09-17 07:29:49
tests/upsert_test.go,e7b2e92,Jinzhu,Remove RecordNotFound method,304,304,,,0,2020-06-07 14:03:45,
tests/upsert_test.go,e7b2e92,Jinzhu,Remove RecordNotFound method,308,308,,,0,2020-06-07 14:03:45,
utils/tests/utils.go,8bb05a5,Jinzhu,Refactor tests files,1,15,,,0,2020-06-02 02:50:38,
utils/tests/utils.go,8bb05a5,Jinzhu,Refactor tests files,24,35,,,0,2020-06-02 02:50:38,
utils/tests/utils.go,8bb05a5,Jinzhu,Refactor tests files,86,91,,,0,2020-06-02 02:50:38,
utils/tests/utils.go,8bb05a5,Jinzhu,Refactor tests files,37,84,,,0,2020-06-02 02:50:38,
utils/tests/utils.go,8bb05a5,Jinzhu,Refactor tests files,103,103,,,0,2020-06-02 02:50:38,
utils/tests/utils.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",16,23,Cr,d402765,1,2023-03-10 09:21:56,2022-03-18 12:11:23
utils/tests/utils.go,d402765,Cr,test: fix utils.AssertEqual (#5172),92,102,Jinzhu,dc48e04,1,2022-03-18 12:11:23,2020-08-18 03:21:40
utils/tests/utils.go,8bb05a5,Jinzhu,Refactor tests files,109,117,,,0,2020-06-02 02:50:38,
utils/tests/utils.go,0790ff6,Jinzhu,Update tests helper to check time,36,36,,,0,2020-07-09 01:42:27,
utils/tests/utils.go,b572594,Jinzhu,Test Select with Update Struct,104,104,,,0,2020-07-06 03:20:43,
utils/tests/utils.go,dc48e04,Jinzhu,"Fix nested embedded struct, close #3278",85,85,Jinzhu,8bb05a5,1,2020-08-18 03:21:40,2020-06-02 02:50:38
utils/tests/utils.go,8bb05a5,Jinzhu,Refactor tests files,121,128,,,0,2020-06-02 02:50:38,
utils/tests/utils.go,d402765,Cr,test: fix utils.AssertEqual (#5172),118,120,,,1,2022-03-18 12:11:23,
utils/tests/utils.go,d402765,Cr,test: fix utils.AssertEqual (#5172),105,107,Jinzhu,8bb05a5,1,2022-03-18 12:11:23,2020-06-02 02:50:38
utils/tests/utils.go,b572594,Jinzhu,Test Select with Update Struct,108,108,,,0,2020-07-06 03:20:43,
utils/utils_test.go,d50dbb0,Jinzhu,"Fix check valid db name, close #3315",1,3,,,1,2020-08-27 11:15:40,
utils/utils_test.go,d50dbb0,Jinzhu,"Fix check valid db name, close #3315",8,9,,,1,2020-08-27 11:15:40,
utils/utils_test.go,d50dbb0,Jinzhu,"Fix check valid db name, close #3315",11,19,,,1,2020-08-27 11:15:40,
utils/utils_test.go,099813b,alingse,"Adjust ToStringKey use unpack params, fix  pass []any as any in variadic function (#5500)  * fix pass []any as any in variadic function  * add .vscode to gitignore",20,20,Jinzhu,d50dbb0,1,2022-07-14 12:05:22,2020-08-27 11:15:40
utils/utils_test.go,fb640cf,jessetang,test(utils): add utils unit test (#5834),4,7,alingse,099813b,0,2022-11-05 00:38:14,2022-07-14 12:05:22
utils/utils_test.go,fb640cf,jessetang,test(utils): add utils unit test (#5834),10,10,alingse,099813b,0,2022-11-05 00:38:14,2022-07-14 12:05:22
utils/utils_test.go,fb640cf,jessetang,test(utils): add utils unit test (#5834),21,43,alingse,099813b,0,2022-11-05 00:38:14,2022-07-14 12:05:22
utils/utils_test.go,099813b,alingse,"Adjust ToStringKey use unpack params, fix  pass []any as any in variadic function (#5500)  * fix pass []any as any in variadic function  * add .vscode to gitignore",44,50,,,1,2022-07-14 12:05:22,
utils/utils_test.go,d81ae6f,M Dmitry,Fixed: panic on nullable value with multiple foreign key usage (#6839)  See: https://github.com/go-gorm/playground/pull/537,51,51,Mathias Zeller,12ba285,1,2024-02-19 03:42:25,2023-10-10 06:46:32
utils/utils_test.go,0daaf17,abhijeet45,fix: AfterQuery using safer right trim while clearing from clause's join added as part of https://github.com/go-gorm/gorm/pull/7027 (#7153)  Co-authored-by: Abhijeet Bhowmik <abhijeet.bhowmik@cambiumnetworks.com>,141,201,M Dmitry,d81ae6f,1,2024-08-22 11:03:42,2024-02-19 03:42:25
utils/utils_test.go,099813b,alingse,"Adjust ToStringKey use unpack params, fix  pass []any as any in variadic function (#5500)  * fix pass []any as any in variadic function  * add .vscode to gitignore",52,53,,,1,2022-07-14 12:05:22,
utils/utils_test.go,fb640cf,jessetang,test(utils): add utils unit test (#5834),62,102,alingse,099813b,0,2022-11-05 00:38:14,2022-07-14 12:05:22
utils/utils_test.go,12ba285,Mathias Zeller,"*datatypes.JSON in model causes panic on tx.Statement.Changed (#6611)  * do not panic on nil  * more explanation in comments  * get things compact",103,103,jessetang,fb640cf,0,2023-10-10 06:46:32,2022-11-05 00:38:14
utils/utils_test.go,d81ae6f,M Dmitry,Fixed: panic on nullable value with multiple foreign key usage (#6839)  See: https://github.com/go-gorm/playground/pull/537,54,54,Mathias Zeller,12ba285,1,2024-02-19 03:42:25,2023-10-10 06:46:32
utils/utils_test.go,fb640cf,jessetang,test(utils): add utils unit test (#5834),104,140,alingse,099813b,0,2022-11-05 00:38:14,2022-07-14 12:05:22
utils/utils_test.go,099813b,alingse,"Adjust ToStringKey use unpack params, fix  pass []any as any in variadic function (#5500)  * fix pass []any as any in variadic function  * add .vscode to gitignore",55,61,,,1,2022-07-14 12:05:22,
utils/utils_unix_test.go,b6836c2,kvii,"fix bug in windows (#5844)  * fix bug in windows  * fix file name bug  * test in unix like platform",6,8,kvii,871f1de,1,2022-11-21 02:48:13,2022-11-05 03:52:08
utils/utils_unix_test.go,871f1de,kvii,fix logger path bug (#5836),4,5,,,1,2022-11-05 03:52:08,
utils/utils_unix_test.go,b6836c2,kvii,"fix bug in windows (#5844)  * fix bug in windows  * fix file name bug  * test in unix like platform",1,3,kvii,871f1de,1,2022-11-21 02:48:13,2022-11-05 03:52:08
utils/utils_unix_test.go,871f1de,kvii,fix logger path bug (#5836),9,38,,,1,2022-11-05 03:52:08,
utils/tests/models.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,15,21,,,0,2020-02-01 12:18:32,
utils/tests/models.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,8,13,,,0,2020-02-01 12:18:32,
utils/tests/models.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,1,6,,,0,2020-02-01 12:18:32,
utils/tests/models.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,25,26,,,0,2020-02-01 12:18:32,
utils/tests/models.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",23,24,Johannes Riecken,7dd702d,1,2023-12-15 08:36:08,2023-06-07 07:02:30
utils/tests/models.go,52cc438,Adrien Carreira,JoinsOn unit test + use all primary keys,22,22,Jinzhu,619cd33,0,2021-09-06 12:13:20,2020-07-08 09:59:40
utils/tests/models.go,a4a0895,Jinzhu,Test parse schema relations,29,29,,,0,2020-02-01 14:26:17,
utils/tests/models.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,28,28,,,0,2020-02-01 12:18:32,
utils/tests/models.go,7dd702d,Johannes Riecken,Fix incorrect documentation comment (has many -> has one) (#6382),14,14,Cr,f223279,1,2023-06-07 07:02:30,2022-08-10 03:03:42
utils/tests/models.go,619cd33,Jinzhu,Add index priority supports,30,31,Jinzhu,4f19e2a,0,2020-07-08 09:59:40,2020-06-19 17:20:18
utils/tests/models.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,33,42,,,0,2020-02-01 12:18:32,
utils/tests/models.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,44,49,,,0,2020-02-01 12:18:32,
utils/tests/models.go,4f19e2a,Jinzhu,Test ForeignKeyConstraints,43,43,Jinzhu,8bb05a5,0,2020-06-19 17:20:18,2020-06-02 02:50:38
utils/tests/models.go,af080e6,Jinzhu,Fix primary key tag,27,27,,,1,2020-03-12 00:39:42,
utils/tests/models.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,51,54,,,0,2020-02-01 12:18:32,
utils/tests/models.go,faee069,Jinzhu,"Test Field Valuer, Setter",32,32,,,0,2020-02-15 12:28:03,
utils/tests/models.go,3cbd233,Jinzhu,Add more tests for parse schema relations,68,68,,,0,2020-02-01 16:03:56,
utils/tests/models.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",55,61,Johannes Riecken,7dd702d,1,2023-12-15 08:36:08,2023-06-07 07:02:30
utils/tests/models.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,64,67,,,0,2020-02-01 12:18:32,
utils/tests/models.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,62,62,,,0,2020-02-01 12:18:32,
utils/tests/models.go,14724dd,Jinzhu,Add tests model definition and basic fields tests,69,70,,,0,2020-02-01 12:18:32,
utils/tests/models.go,8627634,Jinzhu,"Fix create associations with zero primary key, close #4890",73,73,Jinzhu,27e2753,1,2021-12-02 02:20:16,2021-11-29 10:43:39
utils/tests/models.go,e1b4c06,Jinzhu,"Fix FullSaveAssociations, close #4874",71,72,Adrien Carreira,52cc438,1,2021-11-29 03:02:44,2021-09-06 12:13:20
utils/tests/models.go,e1b4c06,Jinzhu,"Fix FullSaveAssociations, close #4874",74,74,Adrien Carreira,52cc438,1,2021-11-29 03:02:44,2021-09-06 12:13:20
utils/tests/models.go,8627634,Jinzhu,"Fix create associations with zero primary key, close #4890",80,82,Jinzhu,e1b4c06,1,2021-12-02 02:20:16,2021-11-29 03:02:44
utils/tests/models.go,1895d28,Jinzhu,Add migrator tests for mysql,63,63,,,0,2020-02-22 15:08:20,
utils/tests/models.go,952df52,Jinzhu,Test create polymorphic has one,50,50,,,0,2020-04-17 00:40:11,
utils/tests/models.go,9b9ae32,chenrui,"fix: circular reference save, close #5140  commit 2ac099a37ac7bd74f0a98a6fdc42cc8527404144 Author: Jinzhu <wosmvp@gmail.com> Date:   Thu Mar 17 23:49:21 2022 +0800      Refactor #5140  commit 6e3ca2d1aa09943dcfb5d9a4b93bea28212f71be Author: a631807682 <631807682@qq.com> Date:   Sun Mar 13 12:52:08 2022 +0800      test: add test for LoadOrStoreVisitMap  commit 9d5c68e41000fd15dea124797dd5f2656bf6b304 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:33:47 2022 +0800      chore: add more comment  commit bfffefb179c883389b72bef8f04469c0a8418043 Author: chenrui <chenrui@jingdaka.com> Date:   Thu Mar 10 20:28:48 2022 +0800      fix: should check values has been saved instead of rel.Name  commit e55cdfa4b3fbcf8b80baf009e8ddb2e40d471494 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:48:01 2022 +0800      chore: go lint  commit fe4715c5bd4ac28950c97dded9848710d8becb88 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:27:24 2022 +0800      chore: add test comment  commit 326862f3f8980482a09d7d1a7f4d1011bb8a7c59 Author: chenrui <chenrui@jingdaka.com> Date:   Tue Mar 8 17:22:33 2022 +0800      fix: circular reference save",91,104,Jinzhu,8627634,1,2022-03-17 15:53:31,2021-12-02 02:20:16
utils/tests/models.go,f223279,Cr,chore: fix gorm tag (#5577),75,76,Jinzhu,27e2753,1,2022-08-10 03:03:42,2021-11-29 10:43:39
utils/tests/models.go,e986371,Jinzhu,Rename package name,7,7,,,0,2020-06-02 01:18:01,
utils/tests/models.go,e1b4c06,Jinzhu,"Fix FullSaveAssociations, close #4874",77,79,,,1,2021-11-29 03:02:44,
utils/tests/models.go,e1b4c06,Jinzhu,"Fix FullSaveAssociations, close #4874",83,83,,,1,2021-11-29 03:02:44,
utils/tests/models.go,27e2753,Jinzhu,"Fix create duplicated value when updating nested has many relationship, close #4796",84,90,,,1,2021-11-29 10:43:39,
utils/utils_windows_test.go,b6836c2,kvii,"fix bug in windows (#5844)  * fix bug in windows  * fix file name bug  * test in unix like platform",21,22,kvii,871f1de,1,2022-11-21 02:48:13,2022-11-05 03:52:08
utils/utils_windows_test.go,b6836c2,kvii,"fix bug in windows (#5844)  * fix bug in windows  * fix file name bug  * test in unix like platform",3,5,kvii,871f1de,1,2022-11-21 02:48:13,2022-11-05 03:52:08
utils/utils_windows_test.go,871f1de,kvii,fix logger path bug (#5836),15,16,,,1,2022-11-05 03:52:08,
utils/utils_windows_test.go,871f1de,kvii,fix logger path bug (#5836),1,2,,,1,2022-11-05 03:52:08,
utils/utils_windows_test.go,b6836c2,kvii,"fix bug in windows (#5844)  * fix bug in windows  * fix file name bug  * test in unix like platform",17,18,kvii,871f1de,1,2022-11-21 02:48:13,2022-11-05 03:52:08
utils/utils_windows_test.go,871f1de,kvii,fix logger path bug (#5836),19,20,,,1,2022-11-05 03:52:08,
utils/utils_windows_test.go,871f1de,kvii,fix logger path bug (#5836),6,12,,,1,2022-11-05 03:52:08,
utils/utils_windows_test.go,b6836c2,kvii,"fix bug in windows (#5844)  * fix bug in windows  * fix file name bug  * test in unix like platform",13,14,kvii,871f1de,1,2022-11-21 02:48:13,2022-11-05 03:52:08
utils/utils_windows_test.go,871f1de,kvii,fix logger path bug (#5836),23,24,,,1,2022-11-05 03:52:08,
utils/utils_windows_test.go,871f1de,kvii,fix logger path bug (#5836),27,35,,,1,2022-11-05 03:52:08,
utils/utils_windows_test.go,b6836c2,kvii,"fix bug in windows (#5844)  * fix bug in windows  * fix file name bug  * test in unix like platform",25,26,kvii,871f1de,1,2022-11-21 02:48:13,2022-11-05 03:52:08
tests/tests_test.go,d833efe,Jinzhu,Work on clauses,9,10,,,0,2020-02-02 11:11:17,
tests/tests_test.go,8bb05a5,Jinzhu,Refactor tests files,2,2,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/tests_test.go,d833efe,Jinzhu,Work on clauses,3,4,,,0,2020-02-02 11:11:17,
tests/tests_test.go,a9d2729,a631807682,test: mssql ci,1,1,Omkar P,c6ac548,0,2025-03-11 07:56:46,2024-09-30 03:21:19
tests/tests_test.go,8bb05a5,Jinzhu,Refactor tests files,11,14,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/tests_test.go,8bb05a5,Jinzhu,Refactor tests files,17,17,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/tests_test.go,d833efe,Jinzhu,Work on clauses,18,19,,,0,2020-02-02 11:11:17,
tests/tests_test.go,7d1a92d,Cr,test: test for skip prepared when auto migrate (#5350),21,23,chenrui,9b9ae32,0,2022-05-22 08:12:28,2022-03-17 15:53:31
tests/tests_test.go,c6ac548,Omkar P,"Use official SQL Server docker image for tests (#7205)  * Use official SQL Server docker image for tests  * Try with tag 2019-latest instead of latest  * Use platform ubuntu-20.04 for SQL Server  * Switch to 2019-CU18-ubuntu-20.04  * Check with 2022-latest image tag and ubuntu-latest platform  * Update health-cmd  * Try sqlcmd without -N -C  * Re-include -N -C, try with ubuntu-20.04  * Try ubuntu-20.04 without -N -C (last trial)  * Finalize working config  * Remove unused env variables",24,24,Alexis Viscogliosi,a2cac75,0,2024-09-30 03:21:19,2023-12-15 08:36:08
tests/tests_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",25,25,Cr,7d1a92d,0,2023-02-08 08:29:09,2022-05-22 08:12:28
tests/tests_test.go,c2d571c,Saeid,"test: coverage for duplicated key err (#6389)  * test: ErrDuplicatedKey coverage added  * test: updated sqlserver version  * test: removed sqlserver  * test: support added for sqlserver  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",30,30,Cheese,02b7e26,0,2023-06-10 13:05:19,2023-02-08 08:29:09
tests/tests_test.go,7d1a92d,Cr,test: test for skip prepared when auto migrate (#5350),26,26,chenrui,9b9ae32,0,2022-05-22 08:12:28,2022-03-17 15:53:31
tests/tests_test.go,2ca4e91,Jinzhu,Fix LastInsertID with string primary key,5,8,,,1,2020-05-23 10:38:55,
tests/tests_test.go,dd0d74f,Jinzhu,"Fix transaction on closed conn when using prepared statement, close #3380",31,31,Jinzhu,da1e54d,1,2020-09-03 11:16:55,2020-08-06 07:37:36
tests/tests_test.go,2ca4e91,Jinzhu,Fix LastInsertID with string primary key,20,20,,,1,2020-05-23 10:38:55,
tests/tests_test.go,b9667cb,liweiting.wt,fix: fix the error handle in tests_test,35,37,Jinzhu,27e2753,1,2021-12-28 10:22:17,2021-11-29 10:43:39
tests/tests_test.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,33,33,Jinzhu,e986371,1,2020-06-02 15:30:26,2020-06-02 01:18:01
tests/tests_test.go,2ca4e91,Jinzhu,Fix LastInsertID with string primary key,27,29,,,1,2020-05-23 10:38:55,
tests/tests_test.go,e487f35,Jinzhu,Add DB method,34,34,Jinzhu,94685d1,0,2020-06-17 11:57:54,2020-06-02 15:30:26
tests/tests_test.go,e487f35,Jinzhu,Add DB method,38,39,Jinzhu,94685d1,0,2020-06-17 11:57:54,2020-06-02 15:30:26
tests/tests_test.go,e487f35,Jinzhu,Add DB method,41,41,Jinzhu,e986371,0,2020-06-17 11:57:54,2020-06-02 01:18:01
tests/tests_test.go,2ca4e91,Jinzhu,Fix LastInsertID with string primary key,32,32,,,1,2020-05-23 10:38:55,
tests/tests_test.go,e487f35,Jinzhu,Add DB method,44,45,Jinzhu,e986371,0,2020-06-17 11:57:54,2020-06-02 01:18:01
tests/tests_test.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,46,46,Jinzhu,e986371,1,2020-06-02 15:30:26,2020-06-02 01:18:01
tests/tests_test.go,7d1a92d,Cr,test: test for skip prepared when auto migrate (#5350),56,56,chenrui,9b9ae32,0,2022-05-22 08:12:28,2022-03-17 15:53:31
tests/tests_test.go,e986371,Jinzhu,Rename package name,15,15,,,0,2020-06-02 01:18:01,
tests/tests_test.go,b9667cb,liweiting.wt,fix: fix the error handle in tests_test,40,40,Jinzhu,4f19e2a,1,2021-12-28 10:22:17,2020-06-19 17:20:18
tests/tests_test.go,b9667cb,liweiting.wt,fix: fix the error handle in tests_test,42,43,Jinzhu,4f19e2a,1,2021-12-28 10:22:17,2020-06-19 17:20:18
tests/tests_test.go,c2d571c,Saeid,"test: coverage for duplicated key err (#6389)  * test: ErrDuplicatedKey coverage added  * test: updated sqlserver version  * test: removed sqlserver  * test: support added for sqlserver  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",50,50,Cheese,02b7e26,0,2023-06-10 13:05:19,2023-02-08 08:29:09
tests/tests_test.go,c2d571c,Saeid,"test: coverage for duplicated key err (#6389)  * test: ErrDuplicatedKey coverage added  * test: updated sqlserver version  * test: removed sqlserver  * test: support added for sqlserver  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",58,58,Cheese,02b7e26,0,2023-06-10 13:05:19,2023-02-08 08:29:09
tests/tests_test.go,2ca4e91,Jinzhu,Fix LastInsertID with string primary key,47,49,,,1,2020-05-23 10:38:55,
tests/tests_test.go,7d1a92d,Cr,test: test for skip prepared when auto migrate (#5350),62,62,chenrui,9b9ae32,0,2022-05-22 08:12:28,2022-03-17 15:53:31
tests/tests_test.go,c2d571c,Saeid,"test: coverage for duplicated key err (#6389)  * test: ErrDuplicatedKey coverage added  * test: updated sqlserver version  * test: removed sqlserver  * test: support added for sqlserver  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",67,67,Cheese,02b7e26,0,2023-06-10 13:05:19,2023-02-08 08:29:09
tests/tests_test.go,2ca4e91,Jinzhu,Fix LastInsertID with string primary key,51,55,,,1,2020-05-23 10:38:55,
tests/tests_test.go,8bb05a5,Jinzhu,Refactor tests files,68,68,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/tests_test.go,2ca4e91,Jinzhu,Fix LastInsertID with string primary key,57,57,,,1,2020-05-23 10:38:55,
tests/tests_test.go,2ca4e91,Jinzhu,Fix LastInsertID with string primary key,59,61,,,1,2020-05-23 10:38:55,
tests/tests_test.go,8d293d4,Jinzhu,Fix docker-compose test env for Mac M1,72,73,liweiting.wt,b9667cb,1,2022-01-30 14:05:38,2021-12-28 10:22:17
tests/tests_test.go,2ca4e91,Jinzhu,Fix LastInsertID with string primary key,63,63,,,1,2020-05-23 10:38:55,
tests/tests_test.go,8d293d4,Jinzhu,Fix docker-compose test env for Mac M1,69,70,liweiting.wt,b9667cb,1,2022-01-30 14:05:38,2021-12-28 10:22:17
tests/tests_test.go,2d945a9,Jinzhu,Switch pgx as default driver,64,66,Jinzhu,e986371,0,2020-07-03 00:54:12,2020-06-02 01:18:01
tests/tests_test.go,8d293d4,Jinzhu,Fix docker-compose test env for Mac M1,75,76,liweiting.wt,b9667cb,1,2022-01-30 14:05:38,2021-12-28 10:22:17
tests/tests_test.go,8bb05a5,Jinzhu,Refactor tests files,77,77,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/tests_test.go,c2d571c,Saeid,"test: coverage for duplicated key err (#6389)  * test: ErrDuplicatedKey coverage added  * test: updated sqlserver version  * test: removed sqlserver  * test: support added for sqlserver  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",81,81,Cheese,02b7e26,0,2023-06-10 13:05:19,2023-02-08 08:29:09
tests/tests_test.go,7d1a92d,Cr,test: test for skip prepared when auto migrate (#5350),79,79,chenrui,9b9ae32,0,2022-05-22 08:12:28,2022-03-17 15:53:31
tests/tests_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",82,86,Cr,7d1a92d,0,2023-02-08 08:29:09,2022-05-22 08:12:28
tests/tests_test.go,2ca4e91,Jinzhu,Fix LastInsertID with string primary key,71,71,,,1,2020-05-23 10:38:55,
tests/tests_test.go,e986371,Jinzhu,Rename package name,16,16,,,0,2020-06-02 01:18:01,
tests/tests_test.go,c2d571c,Saeid,"test: coverage for duplicated key err (#6389)  * test: ErrDuplicatedKey coverage added  * test: updated sqlserver version  * test: removed sqlserver  * test: support added for sqlserver  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",87,87,Cheese,02b7e26,0,2023-06-10 13:05:19,2023-02-08 08:29:09
tests/tests_test.go,2ca4e91,Jinzhu,Fix LastInsertID with string primary key,78,78,,,1,2020-05-23 10:38:55,
tests/tests_test.go,2ca4e91,Jinzhu,Fix LastInsertID with string primary key,74,74,,,1,2020-05-23 10:38:55,
tests/tests_test.go,78e9059,gleb,tests/sqilte: enable FOREIGN_KEYS inside OpenTestConnection (#6641),90,93,Saeid,c10f807,0,2023-10-26 03:54:15,2023-07-12 13:21:22
tests/tests_test.go,2ca4e91,Jinzhu,Fix LastInsertID with string primary key,80,80,,,1,2020-05-23 10:38:55,
tests/tests_test.go,b9667cb,liweiting.wt,fix: fix the error handle in tests_test,96,99,Jinzhu,92d5a95,1,2021-12-28 10:22:17,2021-11-29 07:16:57
tests/tests_test.go,2ca4e91,Jinzhu,Fix LastInsertID with string primary key,94,95,,,1,2020-05-23 10:38:55,
tests/tests_test.go,d833efe,Jinzhu,Work on clauses,107,108,,,0,2020-02-02 11:11:17,
tests/tests_test.go,2ca4e91,Jinzhu,Fix LastInsertID with string primary key,100,100,,,1,2020-05-23 10:38:55,
tests/tests_test.go,2ca4e91,Jinzhu,Fix LastInsertID with string primary key,88,89,,,1,2020-05-23 10:38:55,
tests/tests_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",111,111,gleb,78e9059,1,2023-12-15 08:36:08,2023-10-26 03:54:15
tests/tests_test.go,a158d1a,Jinzhu,Add GroupBy test,114,114,,,0,2020-03-08 10:05:22,
tests/tests_test.go,2ca4e91,Jinzhu,Fix LastInsertID with string primary key,102,102,,,1,2020-05-23 10:38:55,
tests/tests_test.go,2ca4e91,Jinzhu,Fix LastInsertID with string primary key,104,106,,,1,2020-05-23 10:38:55,
tests/tests_test.go,2ca4e91,Jinzhu,Fix LastInsertID with string primary key,109,110,,,1,2020-05-23 10:38:55,
tests/tests_test.go,2ca4e91,Jinzhu,Fix LastInsertID with string primary key,112,113,,,1,2020-05-23 10:38:55,
tests/tests_test.go,befef0c,Jinzhu,Improve Hooks,101,101,,,0,2020-05-31 16:12:20,
tests/tests_test.go,befef0c,Jinzhu,Improve Hooks,103,103,,,0,2020-05-31 16:12:20,
tests/tests_test.go,2ca4e91,Jinzhu,Fix LastInsertID with string primary key,116,133,,,1,2020-05-23 10:38:55,
tests/tests_test.go,5ec4fee,Jinzhu,Don't preload if foreign keys zero,115,115,,,0,2020-05-23 13:09:03,
tests/sql_builder_test.go,749ca37,Jinzhu,Add sql builder test,1,3,,,0,2020-05-31 11:23:32,
tests/sql_builder_test.go,749ca37,Jinzhu,Add sql builder test,6,6,,,0,2020-05-31 11:23:32,
tests/sql_builder_test.go,a948c84,Jinzhu,"Revert ""Revert ""Don't override the from clauses, close #4129"" close #4139""  This reverts commit d6c23586ae435a124353d3c5dfa6f504c24c5c3c.",10,10,Jinzhu,d6c2358,0,2021-03-05 14:19:34,2021-03-05 11:42:54
tests/sql_builder_test.go,e986371,Jinzhu,Rename package name,9,9,Jinzhu,dffc271,0,2020-06-02 01:18:01,2020-06-01 02:54:32
tests/sql_builder_test.go,749ca37,Jinzhu,Add sql builder test,8,8,,,0,2020-05-31 11:23:32,
tests/sql_builder_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),7,7,Jason Lee,8de266b,0,2022-01-06 07:02:53,2021-11-01 09:08:54
tests/sql_builder_test.go,3d8f6f9,Jinzhu,Test GroupConditions,5,5,Jinzhu,d50879c,0,2020-06-19 17:55:30,2020-06-05 11:18:22
tests/sql_builder_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",32,32,Jinzhu,3f20a54,0,2023-02-08 08:29:09,2022-10-18 10:01:55
tests/sql_builder_test.go,680dda2,Jinzhu,"Fix combine conditions when using string conditions, close #3358",4,4,Jinzhu,d4b462a,1,2020-09-02 12:09:51,2020-07-10 13:11:28
tests/sql_builder_test.go,749ca37,Jinzhu,Add sql builder test,12,29,,,0,2020-05-31 11:23:32,
tests/sql_builder_test.go,d4b462a,Jinzhu,"Fix alias keyword with Table, close #3104",30,31,Jinzhu,de482f5,1,2020-07-10 13:11:28,2020-07-06 07:47:33
tests/sql_builder_test.go,d4b462a,Jinzhu,"Fix alias keyword with Table, close #3104",33,45,Jinzhu,de482f5,1,2020-07-10 13:11:28,2020-07-06 07:47:33
tests/sql_builder_test.go,749ca37,Jinzhu,Add sql builder test,99,101,,,0,2020-05-31 11:23:32,
tests/sql_builder_test.go,749ca37,Jinzhu,Add sql builder test,46,97,,,0,2020-05-31 11:23:32,
tests/sql_builder_test.go,749ca37,Jinzhu,Add sql builder test,111,111,,,0,2020-05-31 11:23:32,
tests/sql_builder_test.go,dffc271,Jinzhu,Add mores tests for query,112,153,Jinzhu,749ca37,0,2020-06-01 02:54:32,2020-05-31 11:23:32
tests/sql_builder_test.go,8bb05a5,Jinzhu,Refactor tests files,11,11,,,0,2020-06-02 02:50:38,
tests/sql_builder_test.go,4eeb839,Jinzhu,Better support Stringer when explain SQL,171,223,kinggo,b47cf57,0,2022-02-09 07:17:25,2022-01-06 07:02:53
tests/sql_builder_test.go,88c26b6,Jinzhu,Support Scopes in group conditions,246,260,Jin,9a4d10b,0,2022-04-20 09:21:38,2022-03-24 01:31:58
tests/sql_builder_test.go,d50879c,Jinzhu,Add field permission test,154,169,,,0,2020-06-05 11:18:22,
tests/sql_builder_test.go,3d8f6f9,Jinzhu,Test GroupConditions,170,170,,,0,2020-06-19 17:55:30,
tests/sql_builder_test.go,de482f5,Jinzhu,Test raw sql with gorm.Expr,102,110,Jinzhu,749ca37,0,2020-07-06 07:47:33,2020-05-31 11:23:32
tests/sql_builder_test.go,3d8f6f9,Jinzhu,Test GroupConditions,224,245,,,0,2020-06-19 17:55:30,
tests/sql_builder_test.go,de482f5,Jinzhu,Test raw sql with gorm.Expr,98,98,Jinzhu,749ca37,0,2020-07-06 07:47:33,2020-05-31 11:23:32
tests/sql_builder_test.go,9b21811,Jinzhu,"Fix soft delete with OrCondition, close #3627",271,271,,,1,2020-10-19 06:50:11,
tests/sql_builder_test.go,3d8f6f9,Jinzhu,Test GroupConditions,261,261,,,0,2020-06-19 17:55:30,
tests/sql_builder_test.go,680dda2,Jinzhu,"Fix combine conditions when using string conditions, close #3358",262,270,,,1,2020-09-02 12:09:51,
tests/sql_builder_test.go,680dda2,Jinzhu,"Fix combine conditions when using string conditions, close #3358",272,275,,,1,2020-09-02 12:09:51,
tests/sql_builder_test.go,2a788fb,Jinzhu,Upgrade tests go.mod,370,370,Jinzhu,88c26b6,0,2022-10-17 09:01:42,2022-04-20 09:21:38
tests/sql_builder_test.go,680dda2,Jinzhu,"Fix combine conditions when using string conditions, close #3358",277,280,,,1,2020-09-02 12:09:51,
tests/sql_builder_test.go,8de266b,Jason Lee,"Add ToSQL support to generate SQL string. (#4787)  * Add db.ToSQL method for generate SQL string.  * Improve sql builder test for all dialects.  Improve assertEqualSQL test helper for ignore quotes in SQL.",359,369,Jinzhu,a948c84,0,2021-11-01 09:08:54,2021-03-05 14:19:34
tests/sql_builder_test.go,9b21811,Jinzhu,"Fix soft delete with OrCondition, close #3627",276,276,,,1,2020-10-19 06:50:11,
tests/sql_builder_test.go,8de266b,Jason Lee,"Add ToSQL support to generate SQL string. (#4787)  * Add db.ToSQL method for generate SQL string.  * Improve sql builder test for all dialects.  Improve assertEqualSQL test helper for ignore quotes in SQL.",371,377,Jinzhu,a948c84,0,2021-11-01 09:08:54,2021-03-05 14:19:34
tests/sql_builder_test.go,940358e,Jinzhu,Fix tests doesn't follow https://gorm.io/docs/method_chaining.html convention,391,391,Cheese,02b7e26,1,2024-01-12 08:42:21,2023-02-08 08:29:09
tests/sql_builder_test.go,9b21811,Jinzhu,"Fix soft delete with OrCondition, close #3627",281,281,,,1,2020-10-19 06:50:11,
tests/sql_builder_test.go,8de266b,Jason Lee,"Add ToSQL support to generate SQL string. (#4787)  * Add db.ToSQL method for generate SQL string.  * Improve sql builder test for all dialects.  Improve assertEqualSQL test helper for ignore quotes in SQL.",392,443,Jinzhu,a948c84,0,2021-11-01 09:08:54,2021-03-05 14:19:34
tests/sql_builder_test.go,8de266b,Jason Lee,"Add ToSQL support to generate SQL string. (#4787)  * Add db.ToSQL method for generate SQL string.  * Improve sql builder test for all dialects.  Improve assertEqualSQL test helper for ignore quotes in SQL.",379,390,Jinzhu,a948c84,0,2021-11-01 09:08:54,2021-03-05 14:19:34
tests/sql_builder_test.go,3f20a54,Jinzhu,Support use clause.Interface as query params,448,455,Jinzhu,2a788fb,0,2022-10-18 10:01:55,2022-10-17 09:01:42
tests/sql_builder_test.go,a948c84,Jinzhu,"Revert ""Revert ""Don't override the from clauses, close #4129"" close #4139""  This reverts commit d6c23586ae435a124353d3c5dfa6f504c24c5c3c.",315,358,,,0,2021-03-05 14:19:34,
tests/sql_builder_test.go,9a4d10b,Jin,style: fix coding typo (#5184),378,378,Jinzhu,a948c84,1,2022-03-24 01:31:58,2021-03-05 14:19:34
tests/sql_builder_test.go,9a4d10b,Jin,style: fix coding typo (#5184),444,444,codingxh,664c5fb,1,2022-03-24 01:31:58,2022-02-20 11:55:04
tests/sql_builder_test.go,680dda2,Jinzhu,"Fix combine conditions when using string conditions, close #3358",282,314,,,1,2020-09-02 12:09:51,
tests/sql_builder_test.go,9a4d10b,Jin,style: fix coding typo (#5184),466,466,codingxh,664c5fb,1,2022-03-24 01:31:58,2022-02-20 11:55:04
tests/sql_builder_test.go,9a4d10b,Jin,style: fix coding typo (#5184),458,458,Jinzhu,a948c84,1,2022-03-24 01:31:58,2021-03-05 14:19:34
tests/sql_builder_test.go,8de266b,Jason Lee,"Add ToSQL support to generate SQL string. (#4787)  * Add db.ToSQL method for generate SQL string.  * Improve sql builder test for all dialects.  Improve assertEqualSQL test helper for ignore quotes in SQL.",468,471,,,0,2021-11-01 09:08:54,
tests/sql_builder_test.go,8de266b,Jason Lee,"Add ToSQL support to generate SQL string. (#4787)  * Add db.ToSQL method for generate SQL string.  * Improve sql builder test for all dialects.  Improve assertEqualSQL test helper for ignore quotes in SQL.",456,457,,,0,2021-11-01 09:08:54,
tests/sql_builder_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),467,467,,,0,2022-01-06 07:02:53,
tests/sql_builder_test.go,8de266b,Jason Lee,"Add ToSQL support to generate SQL string. (#4787)  * Add db.ToSQL method for generate SQL string.  * Improve sql builder test for all dialects.  Improve assertEqualSQL test helper for ignore quotes in SQL.",459,465,,,0,2021-11-01 09:08:54,
tests/sql_builder_test.go,8de266b,Jason Lee,"Add ToSQL support to generate SQL string. (#4787)  * Add db.ToSQL method for generate SQL string.  * Improve sql builder test for all dialects.  Improve assertEqualSQL test helper for ignore quotes in SQL.",473,485,,,0,2021-11-01 09:08:54,
tests/sql_builder_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),472,472,,,0,2022-01-06 07:02:53,
tests/sql_builder_test.go,8de266b,Jason Lee,"Add ToSQL support to generate SQL string. (#4787)  * Add db.ToSQL method for generate SQL string.  * Improve sql builder test for all dialects.  Improve assertEqualSQL test helper for ignore quotes in SQL.",487,487,,,0,2021-11-01 09:08:54,
tests/sql_builder_test.go,8de266b,Jason Lee,"Add ToSQL support to generate SQL string. (#4787)  * Add db.ToSQL method for generate SQL string.  * Improve sql builder test for all dialects.  Improve assertEqualSQL test helper for ignore quotes in SQL.",445,447,,,0,2021-11-01 09:08:54,
tests/sql_builder_test.go,8de266b,Jason Lee,"Add ToSQL support to generate SQL string. (#4787)  * Add db.ToSQL method for generate SQL string.  * Improve sql builder test for all dialects.  Improve assertEqualSQL test helper for ignore quotes in SQL.",492,492,,,0,2021-11-01 09:08:54,
tests/sql_builder_test.go,9a4d10b,Jin,style: fix coding typo (#5184),488,488,,,1,2022-03-24 01:31:58,
tests/sql_builder_test.go,8de266b,Jason Lee,"Add ToSQL support to generate SQL string. (#4787)  * Add db.ToSQL method for generate SQL string.  * Improve sql builder test for all dialects.  Improve assertEqualSQL test helper for ignore quotes in SQL.",489,490,,,0,2021-11-01 09:08:54,
tests/sql_builder_test.go,664c5fb,codingxh,strings.replace -> strings.replaceAll (#5095)  Co-authored-by: huquan<xxhh_quan_g@163.com>,486,486,,,0,2022-02-20 11:55:04,
tests/sql_builder_test.go,664c5fb,codingxh,strings.replace -> strings.replaceAll (#5095)  Co-authored-by: huquan<xxhh_quan_g@163.com>,493,493,,,0,2022-02-20 11:55:04,
tests/sql_builder_test.go,8de266b,Jason Lee,"Add ToSQL support to generate SQL string. (#4787)  * Add db.ToSQL method for generate SQL string.  * Improve sql builder test for all dialects.  Improve assertEqualSQL test helper for ignore quotes in SQL.",494,494,,,0,2021-11-01 09:08:54,
tests/sql_builder_test.go,664c5fb,codingxh,strings.replace -> strings.replaceAll (#5095)  Co-authored-by: huquan<xxhh_quan_g@163.com>,491,491,,,0,2022-02-20 11:55:04,
tests/sql_builder_test.go,8de266b,Jason Lee,"Add ToSQL support to generate SQL string. (#4787)  * Add db.ToSQL method for generate SQL string.  * Improve sql builder test for all dialects.  Improve assertEqualSQL test helper for ignore quotes in SQL.",496,499,,,0,2021-11-01 09:08:54,
tests/sql_builder_test.go,664c5fb,codingxh,strings.replace -> strings.replaceAll (#5095)  Co-authored-by: huquan<xxhh_quan_g@163.com>,495,495,,,0,2022-02-20 11:55:04,
utils/utils.go,e509b31,Jinzhu,Implement callbacks,8,8,,,0,2020-01-30 22:35:25,
utils/utils.go,56ca9a8,Jinzhu,Add permission check when create associations,7,7,Jinzhu,511bd66,0,2020-04-16 02:29:18,2020-04-02 23:15:30
utils/utils.go,e509b31,Jinzhu,Implement callbacks,5,5,,,0,2020-01-30 22:35:25,
utils/utils.go,871f1de,kvii,fix logger path bug (#5836),6,6,Jinzhu,aa4312e,1,2022-11-05 03:52:08,2022-10-17 09:01:42
utils/utils.go,e509b31,Jinzhu,Implement callbacks,1,3,,,0,2020-01-30 22:35:25,
utils/utils.go,42aae57,Jinzhu,Test Preload for BelongsTo/HasOne/HasMany,4,4,Jinzhu,b549f9b,0,2020-05-14 06:41:33,2020-05-14 04:19:12
utils/utils.go,56ca9a8,Jinzhu,Add permission check when create associations,10,10,Jinzhu,511bd66,0,2020-04-16 02:29:18,2020-04-02 23:15:30
utils/utils.go,b549f9b,Jinzhu,Implement preload support,9,9,Jinzhu,56ca9a8,0,2020-05-14 04:19:12,2020-04-16 02:29:18
utils/utils.go,a145d7e,Jinzhu,Refactor structure,11,11,Jinzhu,b0e1bcc,0,2020-03-09 06:25:50,2020-03-04 03:33:50
utils/utils.go,3226937,Jinzhu,"Fix calc gormSourceDir, close #4456",18,18,heige,50e85e1,1,2021-06-13 02:32:03,2021-06-10 02:21:28
utils/utils.go,b6836c2,kvii,"fix bug in windows (#5844)  * fix bug in windows  * fix file name bug  * test in unix like platform",30,30,kvii,871f1de,1,2022-11-21 02:48:13,2022-11-05 03:52:08
utils/utils.go,e509b31,Jinzhu,Implement callbacks,12,13,,,0,2020-01-30 22:35:25,
utils/utils.go,590f622,Jinzhu,Refactor create tests,15,17,Jinzhu,5ec4fee,0,2020-05-23 14:32:16,2020-05-23 13:09:03
utils/utils.go,871f1de,kvii,fix logger path bug (#5836),19,29,Jinzhu,aa4312e,1,2022-11-05 03:52:08,2022-10-17 09:01:42
utils/utils.go,9934207,Jinzhu,Fix logger panic on windows,14,14,Jinzhu,590f622,1,2020-06-03 06:39:36,2020-05-23 14:32:16
utils/utils.go,e509b31,Jinzhu,Implement callbacks,34,34,,,0,2020-01-30 22:35:25,
utils/utils.go,bc49365,kkocdko,"Faster utils.FileWithLineNum (#6981)  * faster FileWithLineNum  * tweak caller skip count",35,44,M Dmitry,d81ae6f,0,2024-04-22 06:43:02,2024-02-19 03:42:25
utils/utils.go,e509b31,Jinzhu,Implement callbacks,32,32,,,0,2020-01-30 22:35:25,
utils/utils.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",33,33,Paras Waykole,8f7f3ad,1,2021-06-10 02:21:28,2021-05-04 23:57:54
utils/utils.go,e509b31,Jinzhu,Implement callbacks,45,46,,,0,2020-01-30 22:35:25,
utils/utils.go,e509b31,Jinzhu,Implement callbacks,48,49,,,0,2020-01-30 22:35:25,
utils/utils.go,590f622,Jinzhu,Refactor create tests,31,31,Jinzhu,2da0ad5,0,2020-05-23 14:32:16,2020-03-08 05:24:08
utils/utils.go,a145d7e,Jinzhu,Refactor structure,53,53,,,0,2020-03-09 06:25:50,
utils/utils.go,a145d7e,Jinzhu,Refactor structure,50,50,,,0,2020-03-09 06:25:50,
utils/utils.go,56ca9a8,Jinzhu,Add permission check when create associations,54,54,,,0,2020-04-16 02:29:18,
utils/utils.go,d50dbb0,Jinzhu,"Fix check valid db name, close #3315",51,51,Jinzhu,42aae57,1,2020-08-27 11:15:40,2020-05-14 06:41:33
utils/utils.go,70a7bd5,Jinzhu,Support delete associations with Select when deleting,52,52,Jinzhu,42aae57,0,2020-09-10 13:46:18,2020-05-14 06:41:33
utils/utils.go,56ca9a8,Jinzhu,Add permission check when create associations,63,63,,,0,2020-04-16 02:29:18,
utils/utils.go,56ca9a8,Jinzhu,Add permission check when create associations,61,61,,,0,2020-04-16 02:29:18,
utils/utils.go,50e85e1,heige,"Code optimize (#4415)  * optimize gormSourceDir replace  * fmt.Errorf adjust and Optimize for-break  * strings trim  * feat: avoid using the same name field and if..else optimization adjustment  * optimization callbacks/create.go Create func if...else logic  * fix: callbacks/create.go Create func  * fix FileWithLineNum func and add gormSourceDir unit test  * remove debug print and utils_filenum_test.go",47,47,Jinzhu,511bd66,1,2021-06-10 02:21:28,2020-04-02 23:15:30
utils/utils.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",59,60,Jinzhu,42aae57,1,2022-02-19 09:02:53,2020-05-14 06:41:33
utils/utils.go,b549f9b,Jinzhu,Implement preload support,64,64,,,0,2020-05-14 04:19:12,
utils/utils.go,5ec4fee,Jinzhu,Don't preload if foreign keys zero,65,65,Jinzhu,56ca9a8,0,2020-05-23 13:09:03,2020-04-16 02:29:18
utils/utils.go,b549f9b,Jinzhu,Implement preload support,66,68,,,0,2020-05-14 04:19:12,
utils/utils.go,b549f9b,Jinzhu,Implement preload support,72,72,,,0,2020-05-14 04:19:12,
utils/utils.go,42aae57,Jinzhu,Test Preload for BelongsTo/HasOne/HasMany,71,71,,,0,2020-05-14 06:41:33,
utils/utils.go,d81ae6f,M Dmitry,Fixed: panic on nullable value with multiple foreign key usage (#6839)  See: https://github.com/go-gorm/playground/pull/537,81,85,Jacky,0123dd4,1,2024-02-19 03:42:25,2024-01-12 09:09:22
utils/utils.go,5ec4fee,Jinzhu,Don't preload if foreign keys zero,69,70,,,0,2020-05-23 13:09:03,
utils/utils.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",55,57,Jinzhu,42aae57,1,2022-02-19 09:02:53,2020-05-14 06:41:33
utils/utils.go,7837fb6,Qt,"fix typo in TxCommitter interface comment & improve CheckTruth, chek val empty first (#5094)  * fix typo in TxCommitter interface comment  * improve CheckTruth, chek val empty first",58,58,Jinzhu,42aae57,1,2022-02-20 13:19:15,2020-05-14 06:41:33
utils/utils.go,12ba285,Mathias Zeller,"*datatypes.JSON in model causes panic on tx.Statement.Changed (#6611)  * do not panic on nil  * more explanation in comments  * get things compact",101,107,Cr,8bf1f26,0,2023-10-10 06:46:32,2023-03-10 09:21:56
utils/utils.go,5ec4fee,Jinzhu,Don't preload if foreign keys zero,73,73,,,0,2020-05-23 13:09:03,
utils/utils.go,b549f9b,Jinzhu,Implement preload support,74,80,,,0,2020-05-14 04:19:12,
utils/utils.go,b549f9b,Jinzhu,Implement preload support,86,90,,,0,2020-05-14 04:19:12,
utils/utils.go,39d84cb,Jinzhu,"Add serializer support (#5078)  * Update context  * Update GormFieldValuer  * Add Serializer  * Add Serializer Interface  * Refactor gorm field  * Refactor setter, valuer  * Add sync.Pool  * Fix test  * Add pool manager  * Fix pool manager  * Add poolInitializer  * Add Serializer Scan support  * Add Serializer Value method  * Add serializer test  * Finish Serializer  * Fix JSONSerializer for postgres  * Fix JSONSerializer for sqlserver  * Test serializer tag  * Add unixtime serializer  * Update go.mod",62,62,Jinzhu,42aae57,1,2022-02-19 09:02:53,2020-05-14 06:41:33
utils/utils.go,12ba285,Mathias Zeller,"*datatypes.JSON in model causes panic on tx.Statement.Changed (#6611)  * do not panic on nil  * more explanation in comments  * get things compact",109,114,Cr,8bf1f26,0,2023-10-10 06:46:32,2023-03-10 09:21:56
utils/utils.go,12ba285,Mathias Zeller,"*datatypes.JSON in model causes panic on tx.Statement.Changed (#6611)  * do not panic on nil  * more explanation in comments  * get things compact",116,120,Cr,8bf1f26,0,2023-10-10 06:46:32,2023-03-10 09:21:56
utils/utils.go,835d7bd,Jinzhu,Add returning support to delete,92,100,Jinzhu,d50dbb0,0,2021-10-27 23:56:55,2020-08-27 11:15:40
utils/utils.go,f556628,Jinzhu,"Add SetColumn, Changed method",115,115,,,0,2020-06-30 08:53:54,
utils/utils.go,f556628,Jinzhu,"Add SetColumn, Changed method",123,123,,,0,2020-06-30 08:53:54,
utils/utils.go,f556628,Jinzhu,"Add SetColumn, Changed method",91,91,,,0,2020-06-30 08:53:54,
utils/utils.go,12ba285,Mathias Zeller,"*datatypes.JSON in model causes panic on tx.Statement.Changed (#6611)  * do not panic on nil  * more explanation in comments  * get things compact",122,122,Jinzhu,d50dbb0,0,2023-10-10 06:46:32,2020-08-27 11:15:40
utils/utils.go,f556628,Jinzhu,"Add SetColumn, Changed method",108,108,,,0,2020-06-30 08:53:54,
utils/utils.go,0daaf17,abhijeet45,fix: AfterQuery using safer right trim while clearing from clause's join added as part of https://github.com/go-gorm/gorm/pull/7027 (#7153)  Co-authored-by: Abhijeet Bhowmik <abhijeet.bhowmik@cambiumnetworks.com>,169,179,kkocdko,bc49365,1,2024-08-22 11:03:42,2024-04-22 06:43:02
utils/utils.go,9a101c8,aimuz,fmt.Sprint() to strconv.Format (#3354),124,151,,,0,2020-09-01 13:03:37,
utils/utils.go,f556628,Jinzhu,"Add SetColumn, Changed method",121,121,,,0,2020-06-30 08:53:54,
utils/utils.go,8bf1f26,Cr,"feat: support nested join (#6067)  * feat: support nested join  * fix: empty rel value",152,168,,,1,2023-03-10 09:21:56,
tests/update_test.go,59586dc,Jinzhu,"Fix unnecessary duplicated primary condition when using Save, close #3330",5,5,Jinzhu,ebdb4ed,1,2020-08-29 15:02:19,2020-08-23 12:08:23
tests/update_test.go,f0a442a,Jinzhu,Refactor tests,1,3,,,0,2020-05-23 15:50:48,
tests/update_test.go,f0a442a,Jinzhu,Refactor tests,8,10,,,0,2020-05-23 15:50:48,
tests/update_test.go,e26abb8,Jinzhu,Test block global update/delete,4,4,Jinzhu,9dd516a,0,2020-05-31 12:42:07,2020-05-30 09:34:22
tests/update_test.go,b572594,Jinzhu,Test Select with Update Struct,13,13,Jinzhu,e7b2e92,0,2020-07-06 03:20:43,2020-06-07 14:03:45
tests/update_test.go,1559fe2,Jinzhu,Add more updates test,6,7,Jinzhu,e26abb8,0,2020-06-01 11:41:33,2020-05-31 12:42:07
tests/update_test.go,af3fbdc,Jinzhu,Improve returning support,12,12,Jinzhu,04f049c,0,2021-10-26 14:40:14,2021-09-09 03:22:55
tests/update_test.go,e986371,Jinzhu,Rename package name,11,11,Jinzhu,1559fe2,0,2020-06-02 01:18:01,2020-06-01 11:41:33
tests/update_test.go,f0a442a,Jinzhu,Refactor tests,15,27,,,0,2020-05-23 15:50:48,
tests/update_test.go,abae7f7,Jinzhu,Test non std primary key and default value,62,62,,,0,2020-05-30 08:03:27,
tests/update_test.go,8bb05a5,Jinzhu,Refactor tests files,14,14,Jinzhu,e986371,0,2020-06-02 02:50:38,2020-06-02 01:18:01
tests/update_test.go,f0a442a,Jinzhu,Refactor tests,29,61,,,0,2020-05-23 15:50:48,
tests/update_test.go,f0a442a,Jinzhu,Refactor tests,63,72,,,0,2020-05-23 15:50:48,
tests/update_test.go,04f049c,Jinzhu,Add tests for RowsAffected,73,76,Jinzhu,ba16b23,0,2021-09-09 03:22:55,2021-09-07 12:04:54
tests/update_test.go,abae7f7,Jinzhu,Test non std primary key and default value,28,28,,,0,2020-05-30 08:03:27,
tests/update_test.go,abae7f7,Jinzhu,Test non std primary key and default value,82,82,,,0,2020-05-30 08:03:27,
tests/update_test.go,f0a442a,Jinzhu,Refactor tests,77,81,,,0,2020-05-23 15:50:48,
tests/update_test.go,f0a442a,Jinzhu,Refactor tests,117,124,,,0,2020-05-23 15:50:48,
tests/update_test.go,f0a442a,Jinzhu,Refactor tests,98,115,,,0,2020-05-23 15:50:48,
tests/update_test.go,abae7f7,Jinzhu,Test non std primary key and default value,116,116,Jinzhu,f0a442a,0,2020-05-30 08:03:27,2020-05-23 15:50:48
tests/update_test.go,f0a442a,Jinzhu,Refactor tests,133,133,,,0,2020-05-23 15:50:48,
tests/update_test.go,028c9d6,Jinzhu,Test Updates,134,135,Jinzhu,abae7f7,0,2020-05-30 09:01:28,2020-05-30 08:03:27
tests/update_test.go,f0a442a,Jinzhu,Refactor tests,83,96,,,0,2020-05-23 15:50:48,
tests/update_test.go,abae7f7,Jinzhu,Test non std primary key and default value,97,97,,,0,2020-05-30 08:03:27,
tests/update_test.go,fe01e1b,Jinzhu,Fix Model with slice data,125,132,Jinzhu,f2edda5,1,2022-07-07 06:43:33,2022-02-27 00:40:15
tests/update_test.go,028c9d6,Jinzhu,Test Updates,137,144,Jinzhu,abae7f7,0,2020-05-30 09:01:28,2020-05-30 08:03:27
tests/update_test.go,028c9d6,Jinzhu,Test Updates,149,164,Jinzhu,abae7f7,0,2020-05-30 09:01:28,2020-05-30 08:03:27
tests/update_test.go,028c9d6,Jinzhu,Test Updates,166,168,,,0,2020-05-30 09:01:28,
tests/update_test.go,028c9d6,Jinzhu,Test Updates,170,171,,,0,2020-05-30 09:01:28,
tests/update_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),136,136,Jinzhu,ba16b23,0,2022-01-06 07:02:53,2021-09-07 12:04:54
tests/update_test.go,e7b2e92,Jinzhu,Remove RecordNotFound method,169,169,Jinzhu,028c9d6,0,2020-06-07 14:03:45,2020-05-30 09:01:28
tests/update_test.go,028c9d6,Jinzhu,Test Updates,176,177,,,0,2020-05-30 09:01:28,
tests/update_test.go,e953880,Jinzhu,Add returning tests,178,178,Jinzhu,835d7bd,0,2021-10-28 01:17:33,2021-10-27 23:56:55
tests/update_test.go,de850ed,Jinzhu,Fix Change UpdatedAt to current time when doing OnConflict UpdateAll,173,174,Jinzhu,8bb05a5,1,2021-01-11 11:16:47,2020-06-02 02:50:38
tests/update_test.go,7302c8a,Jinzhu,Fix tests and logger,172,172,Jinzhu,8bb05a5,1,2021-01-10 07:27:53,2020-06-02 02:50:38
tests/update_test.go,028c9d6,Jinzhu,Test Updates,181,183,,,0,2020-05-30 09:01:28,
tests/update_test.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,179,180,Jinzhu,028c9d6,1,2020-06-02 15:30:26,2020-05-30 09:01:28
tests/update_test.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,185,185,Jinzhu,028c9d6,1,2020-06-02 15:30:26,2020-05-30 09:01:28
tests/update_test.go,028c9d6,Jinzhu,Test Updates,186,186,,,0,2020-05-30 09:01:28,
tests/update_test.go,9dd516a,Jinzhu,Test UpdateColumn,187,188,Jinzhu,028c9d6,0,2020-05-30 09:34:22,2020-05-30 09:01:28
tests/update_test.go,7302c8a,Jinzhu,Fix tests and logger,175,175,Jinzhu,028c9d6,1,2021-01-10 07:27:53,2020-05-30 09:01:28
tests/update_test.go,9dd516a,Jinzhu,Test UpdateColumn,190,210,Jinzhu,028c9d6,0,2020-05-30 09:34:22,2020-05-30 09:01:28
tests/update_test.go,c3d7d08,Jinzhu,Clear SET clause after build SQL,211,211,black-06,0c7e575,0,2023-05-15 07:43:44,2023-03-23 03:18:57
tests/update_test.go,04f049c,Jinzhu,Add tests for RowsAffected,145,148,Jinzhu,abae7f7,0,2021-09-09 03:22:55,2020-05-30 08:03:27
tests/update_test.go,c3d7d08,Jinzhu,Clear SET clause after build SQL,218,221,black-06,0c7e575,0,2023-05-15 07:43:44,2023-03-23 03:18:57
tests/update_test.go,9dd516a,Jinzhu,Test UpdateColumn,222,242,,,0,2020-05-30 09:34:22,
tests/update_test.go,9dd516a,Jinzhu,Test UpdateColumn,212,217,Jinzhu,028c9d6,0,2020-05-30 09:34:22,2020-05-30 09:01:28
tests/update_test.go,e26abb8,Jinzhu,Test block global update/delete,243,247,,,0,2020-05-31 12:42:07,
tests/update_test.go,7302c8a,Jinzhu,Fix tests and logger,165,165,Jinzhu,8bb05a5,1,2021-01-10 07:27:53,2020-06-02 02:50:38
tests/update_test.go,1559fe2,Jinzhu,Add more updates test,253,297,Jinzhu,e26abb8,0,2020-06-01 11:41:33,2020-05-31 12:42:07
tests/update_test.go,b572594,Jinzhu,Test Select with Update Struct,298,313,Jinzhu,e7b2e92,0,2020-07-06 03:20:43,2020-06-07 14:03:45
tests/update_test.go,4d40e34,Jinzhu,Update select tests,314,315,Jinzhu,fe01e1b,0,2022-07-14 06:55:54,2022-07-07 06:43:33
tests/update_test.go,e26abb8,Jinzhu,Test block global update/delete,252,252,,,0,2020-05-31 12:42:07,
tests/update_test.go,1559fe2,Jinzhu,Add more updates test,316,338,Jinzhu,e26abb8,0,2020-06-01 11:41:33,2020-05-31 12:42:07
tests/update_test.go,1559fe2,Jinzhu,Add more updates test,340,365,Jinzhu,e26abb8,0,2020-06-01 11:41:33,2020-05-31 12:42:07
tests/update_test.go,ebdb4ed,Jinzhu,Add AllowGlobalUpdate mode,248,251,Jinzhu,e26abb8,0,2020-08-23 12:08:23,2020-05-31 12:42:07
tests/update_test.go,1559fe2,Jinzhu,Add more updates test,375,484,Jinzhu,e26abb8,0,2020-06-01 11:41:33,2020-05-31 12:42:07
tests/update_test.go,b572594,Jinzhu,Test Select with Update Struct,339,339,Jinzhu,e26abb8,0,2020-07-06 03:20:43,2020-05-31 12:42:07
tests/update_test.go,5082674,Jinzhu,Add error gorm.ErrInvalidData,366,374,Jinzhu,e26abb8,1,2020-08-18 10:00:36,2020-05-31 12:42:07
tests/update_test.go,1559fe2,Jinzhu,Add more updates test,489,492,Jinzhu,e26abb8,0,2020-06-01 11:41:33,2020-05-31 12:42:07
tests/update_test.go,1559fe2,Jinzhu,Add more updates test,497,587,Jinzhu,e26abb8,0,2020-06-01 11:41:33,2020-05-31 12:42:07
tests/update_test.go,b572594,Jinzhu,Test Select with Update Struct,496,496,Jinzhu,e26abb8,0,2020-07-06 03:20:43,2020-05-31 12:42:07
tests/update_test.go,b572594,Jinzhu,Test Select with Update Struct,485,488,Jinzhu,e26abb8,0,2020-07-06 03:20:43,2020-05-31 12:42:07
tests/update_test.go,0f00493,Jinzhu,"Continue to update tracking fields even not selected with Select, but skip them if omited with Omit, fix #3856",493,495,Jinzhu,e26abb8,1,2020-12-15 03:18:29,2020-05-31 12:42:07
tests/update_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),189,189,Jinzhu,028c9d6,0,2022-01-06 07:02:53,2020-05-30 09:01:28
tests/update_test.go,ecc946b,Jinzhu,Test update from sub query,588,604,,,0,2020-08-13 08:05:06,
tests/update_test.go,dea93ed,Jinzhu,Copy TableExpr when clone statement,605,614,,,0,2020-08-13 08:28:21,
tests/update_test.go,0c7e575,black-06,save should be idempotent #6139 (#6149),617,635,Cr,b621924,0,2023-03-23 03:18:57,2023-03-10 09:04:54
tests/update_test.go,e953880,Jinzhu,Add returning tests,184,184,Jinzhu,028c9d6,0,2021-10-28 01:17:33,2020-05-30 09:01:28
tests/update_test.go,d888c79,Jinzhu,Change UpdatedAt to current time when doing OnConflict UpdateAll,652,656,Jinzhu,b4166d9,0,2021-01-08 11:20:42,2020-08-30 02:21:11
tests/update_test.go,59586dc,Jinzhu,"Fix unnecessary duplicated primary condition when using Save, close #3330",616,616,,,1,2020-08-29 15:02:19,
tests/update_test.go,ecc946b,Jinzhu,Test update from sub query,615,615,,,0,2020-08-13 08:05:06,
tests/update_test.go,d888c79,Jinzhu,Change UpdatedAt to current time when doing OnConflict UpdateAll,659,660,Jinzhu,b4166d9,0,2021-01-08 11:20:42,2020-08-30 02:21:11
tests/update_test.go,de850ed,Jinzhu,Fix Change UpdatedAt to current time when doing OnConflict UpdateAll,657,657,Jinzhu,59586dc,1,2021-01-11 11:16:47,2020-08-29 15:02:19
tests/update_test.go,de850ed,Jinzhu,Fix Change UpdatedAt to current time when doing OnConflict UpdateAll,661,661,Jinzhu,59586dc,1,2021-01-11 11:16:47,2020-08-29 15:02:19
tests/update_test.go,d888c79,Jinzhu,Change UpdatedAt to current time when doing OnConflict UpdateAll,662,664,Jinzhu,b4166d9,0,2021-01-08 11:20:42,2020-08-30 02:21:11
tests/update_test.go,de850ed,Jinzhu,Fix Change UpdatedAt to current time when doing OnConflict UpdateAll,665,678,Jinzhu,b4166d9,1,2021-01-11 11:16:47,2020-08-30 02:21:11
tests/update_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),658,658,Jinzhu,de850ed,0,2022-01-06 07:02:53,2021-01-11 11:16:47
tests/update_test.go,e5bdd61,kinggo,"fix: save not use soft_delete (#4897)  * fix: Save not use soft_delete  * fix: save not use soft_delete  * fix: save not use soft_delete  * fix: save not use soft_delete  Co-authored-by: kinggo <>",682,687,riverchu,4581e8b,1,2021-12-08 05:58:06,2021-09-06 12:13:20
tests/update_test.go,ba16b23,Jinzhu,Refactor update record (#4679),699,701,Jinzhu,b4166d9,0,2021-09-07 12:04:54,2020-08-30 02:21:11
tests/update_test.go,59586dc,Jinzhu,"Fix unnecessary duplicated primary condition when using Save, close #3330",636,651,,,1,2020-08-29 15:02:19,
tests/update_test.go,c898622,riverchu,test: add testcase in TestSave,706,707,Jinzhu,b4166d9,0,2021-09-06 12:13:20,2020-08-30 02:21:11
tests/update_test.go,59586dc,Jinzhu,"Fix unnecessary duplicated primary condition when using Save, close #3330",679,680,,,1,2020-08-29 15:02:19,
tests/update_test.go,c898622,riverchu,test: add testcase in TestSave,690,698,Jinzhu,b4166d9,0,2021-09-06 12:13:20,2020-08-30 02:21:11
tests/update_test.go,c898622,riverchu,test: add testcase in TestSave,702,704,Jinzhu,b4166d9,0,2021-09-06 12:13:20,2020-08-30 02:21:11
tests/update_test.go,ba16b23,Jinzhu,Refactor update record (#4679),705,705,Jinzhu,b4166d9,0,2021-09-07 12:04:54,2020-08-30 02:21:11
tests/update_test.go,ba16b23,Jinzhu,Refactor update record (#4679),716,718,Jinzhu,b4166d9,0,2021-09-07 12:04:54,2020-08-30 02:21:11
tests/update_test.go,6a18a15,Jinzhu,Refactor check missing where condition,681,681,riverchu,4581e8b,0,2022-02-25 02:48:23,2021-09-06 12:13:20
tests/update_test.go,ba16b23,Jinzhu,Refactor update record (#4679),708,708,Jinzhu,b4166d9,0,2021-09-07 12:04:54,2020-08-30 02:21:11
tests/update_test.go,59586dc,Jinzhu,"Fix unnecessary duplicated primary condition when using Save, close #3330",688,689,,,1,2020-08-29 15:02:19,
tests/update_test.go,c898622,riverchu,test: add testcase in TestSave,709,715,Jinzhu,b4166d9,0,2021-09-06 12:13:20,2020-08-30 02:21:11
tests/update_test.go,b4166d9,Jinzhu,"Fix V2 Save compatibility, close #3332",725,743,,,1,2020-08-30 02:21:11,
tests/update_test.go,c898622,riverchu,test: add testcase in TestSave,719,723,,,0,2021-09-06 12:13:20,
tests/update_test.go,0579429,Jinzhu,"Fix Save with specified table, close #3396",744,765,,,1,2020-09-06 04:22:08,
tests/update_test.go,6bef318,Franco Liberali,add support for returning in sqlserver (#6585),768,768,black-06,11fdf46,0,2023-10-10 07:03:34,2023-05-26 02:28:02
tests/update_test.go,6bef318,Franco Liberali,add support for returning in sqlserver (#6585),770,770,black-06,11fdf46,0,2023-10-10 07:03:34,2023-05-26 02:28:02
tests/update_test.go,59586dc,Jinzhu,"Fix unnecessary duplicated primary condition when using Save, close #3330",724,724,,,1,2020-08-29 15:02:19,
tests/update_test.go,b4166d9,Jinzhu,"Fix V2 Save compatibility, close #3332",766,766,,,1,2020-08-30 02:21:11,
tests/update_test.go,9fea15a,black-06,"feat: add MigrateColumnUnique (#6640)  * feat: add MigrateColumnUnique  * feat: define new methods  * delete debug in test",841,841,Franco Liberali,6bef318,0,2023-10-30 09:15:49,2023-10-10 07:03:34
tests/update_test.go,11fdf46,black-06,fix: save with hook (#6285) (#6294),812,840,Jinzhu,c3d7d08,1,2023-05-26 02:28:02,2023-05-15 07:43:44
tests/update_test.go,e953880,Jinzhu,Add returning tests,767,767,,,0,2021-10-28 01:17:33,
tests/update_test.go,e953880,Jinzhu,Add returning tests,771,798,,,0,2021-10-28 01:17:33,
tests/update_test.go,e953880,Jinzhu,Add returning tests,769,769,,,0,2021-10-28 01:17:33,
tests/update_test.go,11fdf46,black-06,fix: save with hook (#6285) (#6294),842,884,Jinzhu,c3d7d08,1,2023-05-26 02:28:02,2023-05-15 07:43:44
tests/update_test.go,f0af94c,Franco Liberali,add test to show that update from works,885,933,black-06,9fea15a,0,2023-12-04 03:50:58,2023-10-30 09:15:49
tests/update_test.go,b621924,Cr,fix: diff schema update assign value (#6096),799,811,,,1,2023-03-10 09:04:54,
tests/query_test.go,9075b33,Jinzhu,Query with smaller struct,8,8,,,0,2020-07-01 00:56:21,
tests/query_test.go,dffc271,Jinzhu,Add mores tests for query,6,6,,,0,2020-06-01 02:54:32,
tests/query_test.go,f0a442a,Jinzhu,Refactor tests,1,1,,,0,2020-05-23 15:50:48,
tests/query_test.go,a02cb39,Jinzhu,Add more tests,9,9,,,0,2020-05-31 16:36:18,
tests/query_test.go,b4b249d,Jinzhu,Refactor test files,7,7,,,0,2020-04-15 11:13:36,
tests/query_test.go,b4b249d,Jinzhu,Refactor test files,2,3,,,0,2020-04-15 11:13:36,
tests/query_test.go,ba25398,Jinzhu,Fix Pluck with Time and Scanner,4,4,Jinzhu,5228735,1,2020-09-24 12:08:24,2020-09-24 07:00:13
tests/query_test.go,a7f01bd,Jinzhu,Test Pluck with customized type,5,5,Jiepeng Cao,877cc91,0,2023-07-25 02:47:19,2023-02-27 07:44:35
tests/query_test.go,b4b249d,Jinzhu,Refactor test files,12,12,,,0,2020-04-15 11:13:36,
tests/query_test.go,a02cb39,Jinzhu,Add more tests,13,13,,,0,2020-05-31 16:36:18,
tests/query_test.go,b4b249d,Jinzhu,Refactor test files,10,10,,,0,2020-04-15 11:13:36,
tests/query_test.go,e73147f,Jinzhu,"Better support for scan into map, fix unfriendly data type for interface, close #3351",11,11,Jinzhu,b5de8ae,1,2020-09-01 09:45:14,2020-08-18 10:58:53
tests/query_test.go,b4b249d,Jinzhu,Refactor test files,14,14,,,0,2020-04-15 11:13:36,
tests/query_test.go,e986371,Jinzhu,Rename package name,15,15,,,0,2020-06-02 01:18:01,
tests/query_test.go,c915471,Jinzhu,Support Expression for OrderBy clause,16,16,Jinzhu,7faf1ca,0,2020-11-03 02:30:05,2020-10-09 03:52:12
tests/query_test.go,8bb05a5,Jinzhu,Refactor tests files,17,17,,,0,2020-06-02 02:50:38,
tests/query_test.go,f0a442a,Jinzhu,Refactor tests,22,25,,,0,2020-05-23 15:50:48,
tests/query_test.go,b4b249d,Jinzhu,Refactor test files,26,26,,,0,2020-04-15 11:13:36,
tests/query_test.go,f0a442a,Jinzhu,Refactor tests,27,29,,,0,2020-05-23 15:50:48,
tests/query_test.go,f0a442a,Jinzhu,Refactor tests,20,20,,,0,2020-05-23 15:50:48,
tests/query_test.go,b4b249d,Jinzhu,Refactor test files,18,19,,,0,2020-04-15 11:13:36,
tests/query_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),21,21,Sec Cake,093694f,0,2022-01-06 07:02:53,2021-08-20 10:06:48
tests/query_test.go,b4b249d,Jinzhu,Refactor test files,30,30,,,0,2020-04-15 11:13:36,
tests/query_test.go,f0a442a,Jinzhu,Refactor tests,31,36,,,0,2020-05-23 15:50:48,
tests/query_test.go,b4b249d,Jinzhu,Refactor test files,37,37,,,0,2020-04-15 11:13:36,
tests/query_test.go,f0a442a,Jinzhu,Refactor tests,38,38,,,0,2020-05-23 15:50:48,
tests/query_test.go,b4b249d,Jinzhu,Refactor test files,39,39,,,0,2020-04-15 11:13:36,
tests/query_test.go,f0a442a,Jinzhu,Refactor tests,60,60,,,0,2020-05-23 15:50:48,
tests/query_test.go,f0a442a,Jinzhu,Refactor tests,62,63,,,0,2020-05-23 15:50:48,
tests/query_test.go,f0a442a,Jinzhu,Refactor tests,49,58,,,0,2020-05-23 15:50:48,
tests/query_test.go,f0a442a,Jinzhu,Refactor tests,40,47,,,0,2020-05-23 15:50:48,
tests/query_test.go,b4b249d,Jinzhu,Refactor test files,59,59,,,0,2020-04-15 11:13:36,
tests/query_test.go,b4b249d,Jinzhu,Refactor test files,48,48,,,0,2020-04-15 11:13:36,
tests/query_test.go,b4b249d,Jinzhu,Refactor test files,64,64,,,0,2020-04-15 11:13:36,
tests/query_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),61,61,Sec Cake,093694f,0,2022-01-06 07:02:53,2021-08-20 10:06:48
tests/query_test.go,f0a442a,Jinzhu,Refactor tests,65,67,,,0,2020-05-23 15:50:48,
tests/query_test.go,e73147f,Jinzhu,"Better support for scan into map, fix unfriendly data type for interface, close #3351",68,91,Jinzhu,b5de8ae,1,2020-09-01 09:45:14,2020-08-18 10:58:53
tests/query_test.go,f0a442a,Jinzhu,Refactor tests,116,117,,,0,2020-05-23 15:50:48,
tests/query_test.go,b4b249d,Jinzhu,Refactor test files,122,122,,,0,2020-04-15 11:13:36,
tests/query_test.go,f0a442a,Jinzhu,Refactor tests,121,121,,,0,2020-05-23 15:50:48,
tests/query_test.go,b4b249d,Jinzhu,Refactor test files,118,120,,,0,2020-04-15 11:13:36,
tests/query_test.go,e73147f,Jinzhu,"Better support for scan into map, fix unfriendly data type for interface, close #3351",93,115,Jinzhu,b5de8ae,1,2020-09-01 09:45:14,2020-08-18 10:58:53
tests/query_test.go,d50879c,Jinzhu,Add field permission test,123,123,,,0,2020-06-05 11:18:22,
tests/query_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),92,92,Sec Cake,093694f,0,2022-01-06 07:02:53,2021-08-20 10:06:48
tests/query_test.go,d50879c,Jinzhu,Add field permission test,136,138,,,0,2020-06-05 11:18:22,
tests/query_test.go,d50879c,Jinzhu,Add field permission test,142,147,,,0,2020-06-05 11:18:22,
tests/query_test.go,d50879c,Jinzhu,Add field permission test,140,140,,,0,2020-06-05 11:18:22,
tests/query_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),124,124,Sec Cake,093694f,0,2022-01-06 07:02:53,2021-08-20 10:06:48
tests/query_test.go,d50879c,Jinzhu,Add field permission test,125,134,,,0,2020-06-05 11:18:22,
tests/query_test.go,b4b249d,Jinzhu,Refactor test files,135,135,,,0,2020-04-15 11:13:36,
tests/query_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),139,139,Sec Cake,093694f,0,2022-01-06 07:02:53,2021-08-20 10:06:48
tests/query_test.go,e73147f,Jinzhu,"Better support for scan into map, fix unfriendly data type for interface, close #3351",148,173,Jinzhu,b5de8ae,1,2020-09-01 09:45:14,2020-08-18 10:58:53
tests/query_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),174,174,Sec Cake,093694f,0,2022-01-06 07:02:53,2021-08-20 10:06:48
tests/query_test.go,2242ac6,Jinzhu,Fix tests & refactor for PR #3429,210,210,caelansar,aceb3da,1,2020-09-09 02:31:48,2020-09-08 13:28:04
tests/query_test.go,e73147f,Jinzhu,"Better support for scan into map, fix unfriendly data type for interface, close #3351",141,141,Jinzhu,b5de8ae,1,2020-09-01 09:45:14,2020-08-18 10:58:53
tests/query_test.go,d50879c,Jinzhu,Add field permission test,200,207,,,0,2020-06-05 11:18:22,
tests/query_test.go,aceb3da,caelansar,correct generated sql,211,219,Jinzhu,3cd81ff,1,2020-09-08 13:28:04,2020-09-03 10:42:32
tests/query_test.go,e73147f,Jinzhu,"Better support for scan into map, fix unfriendly data type for interface, close #3351",175,199,Jinzhu,b5de8ae,1,2020-09-01 09:45:14,2020-08-18 10:58:53
tests/query_test.go,101a7c7,Cr,fix: scan array (#5624)  Co-authored-by: Jinzhu <wosmvp@gmail.com>,220,221,Jinzhu,7572009,1,2022-09-22 07:51:47,2022-07-18 10:07:05
tests/query_test.go,aceb3da,caelansar,correct generated sql,208,209,Jinzhu,3cd81ff,1,2020-09-08 13:28:04,2020-09-03 10:42:32
tests/query_test.go,877cc91,Jiepeng Cao,Remove redundant code (#6087),222,222,Cr,878ac51,0,2023-02-27 07:44:35,2023-02-08 05:40:41
tests/query_test.go,101a7c7,Cr,fix: scan array (#5624)  Co-authored-by: Jinzhu <wosmvp@gmail.com>,235,243,Jinzhu,7572009,1,2022-09-22 07:51:47,2022-07-18 10:07:05
tests/query_test.go,877cc91,Jiepeng Cao,Remove redundant code (#6087),234,234,Cr,878ac51,0,2023-02-27 07:44:35,2023-02-08 05:40:41
tests/query_test.go,101a7c7,Cr,fix: scan array (#5624)  Co-authored-by: Jinzhu <wosmvp@gmail.com>,223,233,Jinzhu,7572009,1,2022-09-22 07:51:47,2022-07-18 10:07:05
tests/query_test.go,95a6539,Jinzhu,Test Pluck,249,249,,,0,2020-05-31 13:11:20,
tests/query_test.go,b4b249d,Jinzhu,Refactor test files,248,248,,,0,2020-04-15 11:13:36,
tests/query_test.go,45cb6b4,Jinzhu,Add FindInBatches support,268,268,,,0,2020-06-10 07:36:34,
tests/query_test.go,2c4e857,Jinzhu,Should ignore association conditions when querying with struct,259,267,,,0,2020-08-13 10:09:04,
tests/query_test.go,2242ac6,Jinzhu,Fix tests & refactor for PR #3429,245,245,,,1,2020-09-09 02:31:48,
tests/query_test.go,aceb3da,caelansar,correct generated sql,246,247,,,1,2020-09-08 13:28:04,
tests/query_test.go,2c4e857,Jinzhu,Should ignore association conditions when querying with struct,250,256,,,0,2020-08-13 10:09:04,
tests/query_test.go,45cb6b4,Jinzhu,Add FindInBatches support,286,295,,,0,2020-06-10 07:36:34,
tests/query_test.go,45cb6b4,Jinzhu,Add FindInBatches support,270,284,,,0,2020-06-10 07:36:34,
tests/query_test.go,aceb3da,caelansar,correct generated sql,244,244,,,1,2020-09-08 13:28:04,
tests/query_test.go,2faff25,Jinzhu,Fix FirstOr(Init/Create) when assigning with association,257,258,,,1,2020-08-13 10:38:39,
tests/query_test.go,45cb6b4,Jinzhu,Add FindInBatches support,318,319,,,0,2020-06-10 07:36:34,
tests/query_test.go,45cb6b4,Jinzhu,Add FindInBatches support,304,311,,,0,2020-06-10 07:36:34,
tests/query_test.go,7572009,Jinzhu,Create a new db in FindInBatches,301,301,Cr,d402765,0,2022-07-18 10:07:05,2022-03-18 12:11:23
tests/query_test.go,b49ae84,Cr,"fix: FindInBatches with offset limit (#5255)  * fix: FindInBatches with offset limit  * fix: break first  * fix: FindInBatches Limit zero",320,381,Cr,d402765,1,2022-04-17 01:58:33,2022-03-18 12:11:23
tests/query_test.go,f5c2126,Jinzhu,Fix FindInBatches tests,296,300,,,1,2020-11-17 05:14:34,
tests/query_test.go,26dd4c9,Genta Kamitani,Fix: FindInBatches ignores errors (#4203),382,382,Jinzhu,f5c2126,1,2021-03-22 06:11:07,2020-11-17 05:14:34
tests/query_test.go,320f330,Jinzhu,"Fix FindInBatches to modify the query conditions, close #3734",312,317,,,1,2020-11-17 03:19:04,
tests/query_test.go,f5c2126,Jinzhu,Fix FindInBatches tests,302,303,,,1,2020-11-17 05:14:34,
tests/query_test.go,342310f,Cr,fix(FindInBatches): throw err if pk not exists (#5868),412,418,Cr,101a7c7,1,2022-11-21 02:49:27,2022-09-22 07:51:47
tests/query_test.go,26dd4c9,Genta Kamitani,Fix: FindInBatches ignores errors (#4203),388,411,Jinzhu,f5c2126,1,2021-03-22 06:11:07,2020-11-17 05:14:34
tests/query_test.go,a02cb39,Jinzhu,Add more tests,421,424,,,0,2020-05-31 16:36:18,
tests/query_test.go,26e0c6f,Jinzhu,skip test sqlserver due to it will raise data race for invalid sql,383,386,Jinzhu,f5c2126,0,2021-03-24 09:12:30,2020-11-17 05:14:34
tests/query_test.go,9075b33,Jinzhu,Query with smaller struct,426,426,,,0,2020-07-01 00:56:21,
tests/query_test.go,a02cb39,Jinzhu,Add more tests,425,425,,,0,2020-05-31 16:36:18,
tests/query_test.go,a02cb39,Jinzhu,Add more tests,427,436,,,0,2020-05-31 16:36:18,
tests/query_test.go,a8655f7,Jinzhu,Fix auto select with smaller struct for slices,457,474,,,1,2020-07-09 04:15:35,
tests/query_test.go,9075b33,Jinzhu,Query with smaller struct,437,456,,,0,2020-07-01 00:56:21,
tests/query_test.go,a02cb39,Jinzhu,Add more tests,475,476,,,0,2020-05-31 16:36:18,
tests/query_test.go,1a2fabb,Jinzhu,Test Not,510,522,,,0,2020-07-05 03:56:12,
tests/query_test.go,47ffd0b,Luis Guillermo Gómez,"Select all fields in SQL queries avoiding the SELECT * FROM (#3731)  * Select all fields in SQL queries avoiding the SELECT * FROM  * Select table name with fields in SQL queries  * Use QueryFields to execute the SQL query with all fields of the table",477,509,Jinzhu,f5c2126,0,2020-11-20 07:38:25,2020-11-17 05:14:34
tests/query_test.go,1a2fabb,Jinzhu,Test Not,528,532,,,0,2020-07-05 03:56:12,
tests/query_test.go,1a2fabb,Jinzhu,Test Not,538,556,,,0,2020-07-05 03:56:12,
tests/query_test.go,3e2c4fc,tsuba3,"Fix regression in db.Not introduced in v1.25.6. (#6844)  * Fix regression in db.Not introduced in 940358e.  * Fix",557,561,Jinzhu,940358e,1,2024-03-05 02:23:51,2024-01-12 08:42:21
tests/query_test.go,207f1ac,Cr,fix: not clause with or condition (#6984),562,566,jessetang,7b1fb0b,1,2024-04-25 12:22:53,2024-03-15 06:14:48
tests/query_test.go,1a2fabb,Jinzhu,Test Not,567,568,,,0,2020-07-05 03:56:12,
tests/query_test.go,26dd4c9,Genta Kamitani,Fix: FindInBatches ignores errors (#4203),419,420,,,1,2021-03-22 06:11:07,
tests/query_test.go,4e066c9,Jinzhu,Test Or,616,618,,,0,2020-07-05 04:23:45,
tests/query_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),269,269,Jinzhu,320f330,0,2022-01-06 07:02:53,2020-11-17 03:19:04
tests/query_test.go,47ffd0b,Luis Guillermo Gómez,"Select all fields in SQL queries avoiding the SELECT * FROM (#3731)  * Select all fields in SQL queries avoiding the SELECT * FROM  * Select table name with fields in SQL queries  * Use QueryFields to execute the SQL query with all fields of the table",569,615,Jinzhu,ba25398,0,2020-11-20 07:38:25,2020-09-24 12:08:24
tests/query_test.go,5228735,Jinzhu,"Don't build IN condition if value implemented Valuer interface, #3517",523,527,,,0,2020-09-24 07:00:13,
tests/query_test.go,093694f,Sec Cake,Fix extra 'AND' when len(values) == 0 ON IN.NegationBuild() (#4618),533,536,,,1,2021-08-20 10:06:48,
tests/query_test.go,4e066c9,Jinzhu,Test Or,636,636,,,0,2020-07-05 04:23:45,
tests/query_test.go,4e066c9,Jinzhu,Test Or,638,641,,,0,2020-07-05 04:23:45,
tests/query_test.go,9a4941b,Jinzhu,Test Order/GroupBy,637,637,,,0,2020-07-06 01:47:14,
tests/query_test.go,9a4941b,Jinzhu,Test Order/GroupBy,642,642,,,0,2020-07-06 01:47:14,
tests/query_test.go,4e066c9,Jinzhu,Test Or,643,646,,,0,2020-07-05 04:23:45,
tests/query_test.go,35ebfe6,Jinzhu,Support group conditions with single OR condition,626,635,Jinzhu,1ef1f0b,0,2021-01-20 10:24:05,2020-12-06 06:30:42
tests/query_test.go,9a4941b,Jinzhu,Test Order/GroupBy,647,647,,,0,2020-07-06 01:47:14,
tests/query_test.go,4e066c9,Jinzhu,Test Or,648,650,,,0,2020-07-05 04:23:45,
tests/query_test.go,47ffd0b,Luis Guillermo Gómez,"Select all fields in SQL queries avoiding the SELECT * FROM (#3731)  * Select all fields in SQL queries avoiding the SELECT * FROM  * Select table name with fields in SQL queries  * Use QueryFields to execute the SQL query with all fields of the table",651,671,Jinzhu,f5c2126,0,2020-11-20 07:38:25,2020-11-17 05:14:34
tests/query_test.go,95a6539,Jinzhu,Test Pluck,684,694,,,0,2020-05-31 13:11:20,
tests/query_test.go,7572009,Jinzhu,Create a new db in FindInBatches,285,285,Jinzhu,c915471,0,2022-07-18 10:07:05,2020-11-03 02:30:05
tests/query_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),387,387,Jinzhu,f5c2126,0,2022-01-06 07:02:53,2020-11-17 05:14:34
tests/query_test.go,a02cb39,Jinzhu,Add more tests,695,695,,,0,2020-05-31 16:36:18,
tests/query_test.go,dffc271,Jinzhu,Add mores tests for query,698,701,,,0,2020-06-01 02:54:32,
tests/query_test.go,95a6539,Jinzhu,Test Pluck,696,697,,,0,2020-05-31 13:11:20,
tests/query_test.go,95a6539,Jinzhu,Test Pluck,706,706,,,0,2020-05-31 13:11:20,
tests/query_test.go,a7f01bd,Jinzhu,Test Pluck with customized type,672,683,Jiepeng Cao,877cc91,0,2023-07-25 02:47:19,2023-02-27 07:44:35
tests/query_test.go,a02cb39,Jinzhu,Add more tests,708,708,,,0,2020-05-31 16:36:18,
tests/query_test.go,95a6539,Jinzhu,Test Pluck,709,710,,,0,2020-05-31 13:11:20,
tests/query_test.go,95a6539,Jinzhu,Test Pluck,716,726,,,0,2020-05-31 13:11:20,
tests/query_test.go,dffc271,Jinzhu,Add mores tests for query,705,705,,,0,2020-06-01 02:54:32,
tests/query_test.go,dffc271,Jinzhu,Add mores tests for query,707,707,,,0,2020-06-01 02:54:32,
tests/query_test.go,95a6539,Jinzhu,Test Pluck,760,760,,,0,2020-05-31 13:11:20,
tests/query_test.go,a7f01bd,Jinzhu,Test Pluck with customized type,711,715,Jiepeng Cao,877cc91,0,2023-07-25 02:47:19,2023-02-27 07:44:35
tests/query_test.go,416c4d0,Jinzhu,Test query with Or and soft delete,619,625,Jinzhu,5228735,0,2022-02-08 08:31:24,2020-09-24 07:00:13
tests/query_test.go,a02cb39,Jinzhu,Add more tests,761,761,,,0,2020-05-31 16:36:18,
tests/query_test.go,4e066c9,Jinzhu,Test Or,775,775,,,0,2020-07-05 04:23:45,
tests/query_test.go,4e066c9,Jinzhu,Test Or,786,788,,,0,2020-07-05 04:23:45,
tests/query_test.go,dffc271,Jinzhu,Add mores tests for query,762,774,,,0,2020-06-01 02:54:32,
tests/query_test.go,b47cf57,kinggo,ci: add gofumpt check in reviewdog (#4973),537,537,,,0,2022-01-06 07:02:53,
tests/query_test.go,58e3241,Jinzhu,"Fix Select with specific symbol, close #3158",789,789,,,1,2020-07-17 03:06:20,
tests/query_test.go,58e3241,Jinzhu,"Fix Select with specific symbol, close #3158",794,794,,,1,2020-07-17 03:06:20,
tests/query_test.go,4e066c9,Jinzhu,Test Or,790,793,,,0,2020-07-05 04:23:45,
tests/query_test.go,ba25398,Jinzhu,Fix Pluck with Time and Scanner,727,727,,,1,2020-09-24 12:08:24,
tests/query_test.go,4e066c9,Jinzhu,Test Or,795,796,,,0,2020-07-05 04:23:45,
tests/query_test.go,58e3241,Jinzhu,"Fix Select with specific symbol, close #3158",799,800,,,1,2020-07-17 03:06:20,
tests/query_test.go,4e066c9,Jinzhu,Test Or,798,798,,,0,2020-07-05 04:23:45,
tests/query_test.go,4e066c9,Jinzhu,Test Or,807,807,,,0,2020-07-05 04:23:45,
tests/query_test.go,58e3241,Jinzhu,"Fix Select with specific symbol, close #3158",812,814,,,1,2020-07-17 03:06:20,
tests/query_test.go,ba25398,Jinzhu,Fix Pluck with Time and Scanner,734,759,,,1,2020-09-24 12:08:24,
tests/query_test.go,7faf1ca,Jinzhu,"Fix Select with AS, close #3581, #3567",776,785,,,1,2020-10-09 03:52:12,
tests/query_test.go,ade0bd6,Jinzhu,"Fix SELECT with sql expression in some cases, close #3889",797,797,,,1,2020-12-28 02:40:30,
tests/query_test.go,b5de8ae,Jinzhu,Fix overrite SELECT clause,815,819,,,1,2020-08-18 10:58:53,
tests/query_test.go,58e3241,Jinzhu,"Fix Select with specific symbol, close #3158",820,821,,,1,2020-07-17 03:06:20,
tests/query_test.go,a0477f9,Jinzhu,"Allow Omit with Query, close #3165",824,838,,,0,2020-07-19 13:48:58,
tests/query_test.go,a02cb39,Jinzhu,Add more tests,885,893,,,0,2020-05-31 16:36:18,
tests/query_test.go,ade0bd6,Jinzhu,"Fix SELECT with sql expression in some cases, close #3889",808,811,Jinzhu,7faf1ca,1,2020-12-28 02:40:30,2020-10-09 03:52:12
tests/query_test.go,dffc271,Jinzhu,Add mores tests for query,822,823,,,0,2020-06-01 02:54:32,
tests/query_test.go,a3abb5f,Ratan Phayade,"support named params in Select API  (#4142)  * adds support for named arguments in select  * changes clause identifies and adds test",801,806,,,0,2021-03-07 02:59:00,
tests/query_test.go,11c4331,molon,"feat: add MapColumns method (#6901)  * add MapColumns method  * fix MapColumns desc  * add TestMapColumns",863,884,hakusai22,5e599a0,1,2024-06-24 09:42:59,2024-05-08 04:07:58
tests/query_test.go,dffc271,Jinzhu,Add mores tests for query,903,992,,,0,2020-06-01 02:54:32,
tests/query_test.go,1559fe2,Jinzhu,Add more updates test,993,993,,,0,2020-06-01 11:41:33,
tests/query_test.go,a02cb39,Jinzhu,Add more tests,895,902,,,0,2020-05-31 16:36:18,
tests/query_test.go,47ffd0b,Luis Guillermo Gómez,"Select all fields in SQL queries avoiding the SELECT * FROM (#3731)  * Select all fields in SQL queries avoiding the SELECT * FROM  * Select table name with fields in SQL queries  * Use QueryFields to execute the SQL query with all fields of the table",839,862,Jinzhu,f5c2126,0,2020-11-20 07:38:25,2020-11-17 05:14:34
tests/query_test.go,1559fe2,Jinzhu,Add more updates test,998,998,,,0,2020-06-01 11:41:33,
tests/query_test.go,a7f01bd,Jinzhu,Test Pluck with customized type,728,733,Jinzhu,5228735,0,2023-07-25 02:47:19,2020-09-24 07:00:13
tests/query_test.go,dffc271,Jinzhu,Add mores tests for query,994,997,,,0,2020-06-01 02:54:32,
tests/query_test.go,dffc271,Jinzhu,Add mores tests for query,999,1003,,,0,2020-06-01 02:54:32,
tests/query_test.go,9a4941b,Jinzhu,Test Order/GroupBy,1004,1006,,,0,2020-07-06 01:47:14,
tests/query_test.go,9a4941b,Jinzhu,Test Order/GroupBy,1018,1025,,,0,2020-07-06 01:47:14,
tests/query_test.go,9a4941b,Jinzhu,Test Order/GroupBy,1035,1036,,,0,2020-07-06 01:47:14,
tests/query_test.go,dffc271,Jinzhu,Add mores tests for query,1062,1068,,,0,2020-06-01 02:54:32,
tests/query_test.go,47ffd0b,Luis Guillermo Gómez,"Select all fields in SQL queries avoiding the SELECT * FROM (#3731)  * Select all fields in SQL queries avoiding the SELECT * FROM  * Select table name with fields in SQL queries  * Use QueryFields to execute the SQL query with all fields of the table",1037,1061,Jinzhu,f5c2126,0,2020-11-20 07:38:25,2020-11-17 05:14:34
tests/query_test.go,a870486,Walter Scheper,"Do not emit ORDER BY for empty values (#4592)  This restores the behavior from gorm v1, where calling `DB.Order` with an empty string, nil, or any unexpected type is a no-op.",1007,1017,Jinzhu,ade0bd6,0,2021-08-09 05:14:23,2020-12-28 02:40:30
tests/query_test.go,dffc271,Jinzhu,Add mores tests for query,1079,1092,,,0,2020-06-01 02:54:32,
tests/query_test.go,c915471,Jinzhu,Support Expression for OrderBy clause,1026,1034,,,0,2020-11-03 02:30:05,
tests/query_test.go,dffc271,Jinzhu,Add mores tests for query,1070,1077,,,0,2020-06-01 02:54:32,
tests/query_test.go,e583dfa,Jinzhu,Allow negative number for limit,1069,1069,,,0,2020-09-11 03:54:21,
tests/query_test.go,dffc271,Jinzhu,Add mores tests for query,1099,1114,,,0,2020-06-01 02:54:32,
tests/query_test.go,3c03b6e,SmallTianTian,"fix no limit no offset. (#3101)  * fix no limit no offset.  * add test for playground.",1094,1098,,,1,2020-07-02 10:14:33,
tests/query_test.go,1ef1f0b,Jinzhu,"Fix Count with complicated Select, close #3826",894,894,,,1,2020-12-06 06:30:42,
tests/query_test.go,dffc271,Jinzhu,Add mores tests for query,1116,1142,,,0,2020-06-01 02:54:32,
tests/query_test.go,1559fe2,Jinzhu,Add more updates test,1115,1115,,,0,2020-06-01 11:41:33,
tests/query_test.go,4e147e1,Jinzhu,Test SubQuery,1143,1143,,,0,2020-06-01 13:26:23,
tests/query_test.go,b8a74a8,Jinzhu,"Fix embedded struct with default value, close #3451",1093,1093,,,1,2020-09-11 03:18:54,
tests/query_test.go,e583dfa,Jinzhu,Allow negative number for limit,1078,1078,,,0,2020-09-11 03:54:21,
tests/query_test.go,4e147e1,Jinzhu,Test SubQuery,1168,1203,,,0,2020-06-01 13:26:23,
tests/query_test.go,1b8cb07,Jinzhu,Allow Where select fields when searching with struct,1154,1157,,,0,2020-12-30 10:13:52,
tests/query_test.go,1b8cb07,Jinzhu,Allow Where select fields when searching with struct,1159,1167,,,0,2020-12-30 10:13:52,
tests/query_test.go,1b8cb07,Jinzhu,Allow Where select fields when searching with struct,1144,1152,,,0,2020-12-30 10:13:52,
tests/query_test.go,d402765,Cr,test: fix utils.AssertEqual (#5172),702,704,Jinzhu,58e3241,1,2022-03-18 12:11:23,2020-07-17 03:06:20
tests/query_test.go,84ea3ec,Jinzhu,Fix sub query argument order with multiple raw SQL,1204,1204,,,1,2021-02-09 11:56:45,
tests/query_test.go,4e147e1,Jinzhu,Test SubQuery,1214,1218,,,0,2020-06-01 13:26:23,
tests/query_test.go,4e147e1,Jinzhu,Test SubQuery,1219,1233,,,0,2020-06-01 13:26:23,
tests/query_test.go,84ea3ec,Jinzhu,Fix sub query argument order with multiple raw SQL,1210,1210,,,1,2021-02-09 11:56:45,
tests/query_test.go,94685d1,Jinzhu,Fix can't scan null value into normal data types,1260,1291,,,1,2020-06-02 15:30:26,
tests/query_test.go,940358e,Jinzhu,Fix tests doesn't follow https://gorm.io/docs/method_chaining.html convention,1153,1153,,,1,2024-01-12 08:42:21,
tests/query_test.go,df24821,Jinzhu,Fix SubQuery for raw sql,1211,1213,,,1,2021-02-09 09:05:50,
tests/query_test.go,df24821,Jinzhu,Fix SubQuery for raw sql,1205,1209,,,1,2021-02-09 09:05:50,
tests/query_test.go,4e147e1,Jinzhu,Test SubQuery,1234,1259,,,0,2020-06-01 13:26:23,
tests/query_test.go,3cd81ff,Jinzhu,"Fix query with specified table and conditions, close #3382",1292,1299,,,1,2020-09-03 10:42:32,
tests/query_test.go,5e599a0,hakusai22,"fix: typo (#7003)  * fix: typo  * fix: covered",1360,1360,Cr,b49ae84,1,2024-05-08 04:07:58,2022-04-17 01:58:33
tests/query_test.go,940358e,Jinzhu,Fix tests doesn't follow https://gorm.io/docs/method_chaining.html convention,1158,1158,,,1,2024-01-12 08:42:21,
tests/query_test.go,47ffd0b,Luis Guillermo Gómez,"Select all fields in SQL queries avoiding the SELECT * FROM (#3731)  * Select all fields in SQL queries avoiding the SELECT * FROM  * Select table name with fields in SQL queries  * Use QueryFields to execute the SQL query with all fields of the table",1300,1309,,,0,2020-11-20 07:38:25,
tests/query_test.go,397b583,chenrui,fix: query scanner in single column,1310,1345,,,1,2022-02-25 14:38:48,
tests/query_test.go,8d45714,Cr,"fix: reset null value in slice (#5417)  * fix: reset null value in slice  * fix: can not set field in-place in join",1346,1359,,,1,2022-06-14 05:48:50,
tests/query_test.go,8d45714,Cr,"fix: reset null value in slice (#5417)  * fix: reset null value in slice  * fix: can not set field in-place in join",1361,1422,,,1,2022-06-14 05:48:50,
tests/query_test.go,7b1fb0b,jessetang,"fix(scan): array element is set to a zero value (#6890)  * fix(scan): array element is set to a zero value  * add test  * fix test  * optimization",1437,1449,,,1,2024-03-15 06:14:48,
tests/query_test.go,7b1fb0b,jessetang,"fix(scan): array element is set to a zero value (#6890)  * fix(scan): array element is set to a zero value  * add test  * fix test  * optimization",1451,1455,,,1,2024-03-15 06:14:48,
tests/query_test.go,878ac51,Cr,"fix:throw model value required error (#6031)  * fix:throw model value required error  * chore:ingore typecheck  * chore:ingore errcheck  * refactor: use other error  * chore: gofumpt style",1423,1436,,,1,2023-02-08 05:40:41,
tests/query_test.go,5e599a0,hakusai22,"fix: typo (#7003)  * fix: typo  * fix: covered",1450,1450,,,1,2024-05-08 04:07:58,
tests/migrate_test.go,8fb9a31,black-06,refactor: part 2 of distinguish between Unique and UniqueIndex (#6822),5,5,Alexis Viscogliosi,a2cac75,0,2024-02-06 11:48:40,2023-12-15 08:36:08
tests/migrate_test.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",2,3,,,0,2020-02-22 11:41:01,
tests/migrate_test.go,f0a442a,Jinzhu,Refactor tests,1,1,,,0,2020-05-23 15:50:48,
tests/migrate_test.go,f757b8f,halfcrazy,fix: auto migration column order unpredictable (#4980),9,9,kinggo,b47cf57,1,2022-01-06 10:55:20,2022-01-06 07:02:53
tests/migrate_test.go,93986de,Cr,fix: migrate column default value (#5359)  Co-authored-by: Jinzhu <wosmvp@gmail.com>,6,6,Cr,7d1a92d,1,2022-05-28 15:09:13,2022-05-22 08:12:28
tests/migrate_test.go,9d82aa5,Cr,"test: invalid cache plan with prepare stmt (#5778)  * test: invalid cache plan with prepare stmt  * test: more test cases  * test: drop and rename column",8,8,viatoriche / Maxim Panfilov,62593cf,0,2022-10-20 06:10:47,2022-10-18 09:28:06
tests/migrate_test.go,62593cf,viatoriche / Maxim Panfilov,"add test: TestAutoMigrateInt8PG: shouldn't execute ALTER COLUMN TYPE smallint, close #5762",4,4,Jinzhu,983e96f,0,2022-10-18 09:28:06,2022-10-08 08:04:57
tests/migrate_test.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,7,7,,,0,2020-02-22 16:18:12,
tests/migrate_test.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",12,12,,,0,2020-02-22 11:41:01,
tests/migrate_test.go,536e4d3,Jinzhu,Add test for AlterColumn,11,11,,,0,2020-05-31 03:01:06,
tests/migrate_test.go,1b0aa80,Jinzhu,Fix AutoMigrate for bool fields with default value,10,10,hishope,f17a752,1,2024-03-18 11:24:16,2024-03-07 08:19:17
tests/migrate_test.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,13,13,,,0,2020-02-22 16:18:12,
tests/migrate_test.go,8fb9a31,black-06,refactor: part 2 of distinguish between Unique and UniqueIndex (#6822),17,17,Alexis Viscogliosi,a2cac75,0,2024-02-06 11:48:40,2023-12-15 08:36:08
tests/migrate_test.go,e986371,Jinzhu,Rename package name,18,18,,,0,2020-06-02 01:18:01,
tests/migrate_test.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",14,14,,,0,2020-02-22 11:41:01,
tests/migrate_test.go,8fb9a31,black-06,refactor: part 2 of distinguish between Unique and UniqueIndex (#6822),15,15,Alexis Viscogliosi,a2cac75,0,2024-02-06 11:48:40,2023-12-15 08:36:08
tests/migrate_test.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",25,26,,,0,2020-02-22 11:41:01,
tests/migrate_test.go,8fb9a31,black-06,refactor: part 2 of distinguish between Unique and UniqueIndex (#6822),19,19,Alexis Viscogliosi,a2cac75,0,2024-02-06 11:48:40,2023-12-15 08:36:08
tests/migrate_test.go,8bb05a5,Jinzhu,Refactor tests files,24,24,,,0,2020-06-02 02:50:38,
tests/migrate_test.go,8fb9a31,black-06,refactor: part 2 of distinguish between Unique and UniqueIndex (#6822),21,21,Alexis Viscogliosi,a2cac75,0,2024-02-06 11:48:40,2023-12-15 08:36:08
tests/migrate_test.go,8fb9a31,black-06,refactor: part 2 of distinguish between Unique and UniqueIndex (#6822),23,23,Alexis Viscogliosi,a2cac75,0,2024-02-06 11:48:40,2023-12-15 08:36:08
tests/migrate_test.go,d3c63a0,Jinzhu,Handle constraint dependencies smartly,29,30,,,0,2020-02-22 16:18:12,
tests/migrate_test.go,f0a442a,Jinzhu,Refactor tests,27,27,,,0,2020-05-23 15:50:48,
tests/migrate_test.go,f0a442a,Jinzhu,Refactor tests,33,33,,,0,2020-05-23 15:50:48,
tests/migrate_test.go,d0764be,Jinzhu,Test migrate with comment and check created constraints,32,32,,,0,2020-06-21 05:59:43,
tests/migrate_test.go,7d1a92d,Cr,test: test for skip prepared when auto migrate (#5350),16,16,Jinzhu,e1b4c06,0,2022-05-22 08:12:28,2021-11-29 03:02:44
tests/migrate_test.go,d811795,Jinzhu,Add tests for Tables,34,34,,,0,2020-05-31 02:24:49,
tests/migrate_test.go,f0a442a,Jinzhu,Refactor tests,37,37,,,0,2020-05-23 15:50:48,
tests/migrate_test.go,6d58b62,Jinzhu,Add sqlite migration tests,35,36,,,0,2020-02-22 12:57:29,
tests/migrate_test.go,9123600,Jinzhu,"Fix Scopes with Migrator, close #4145",31,31,Jinzhu,73d44a4,1,2021-03-11 02:36:14,2021-02-16 00:52:56
tests/migrate_test.go,6d58b62,Jinzhu,Add sqlite migration tests,39,39,,,0,2020-02-22 12:57:29,
tests/migrate_test.go,5e64ac7,dino.ma,"feat(migrator,migrator/migrator.go,tests/migrate_test.go) : Get multiple data tables for migrator. (#4841)  * feat(migrator,migrator/migrator.go,tests/migrate_test.go) : Get multiple data tables for migrator.  * feat(migrator.go and migrator/migrator.go) : remove Table Struct replace with []string  * fix(migrator)  : Return all data tables  * Update migrator.go  * fix(migrator/migrator.go):remove var sql  * feat(migrate_test.go/go.mod):update sqlserver,sqlite,postgres,pq version and add getTables test  * fix(migrate_test.go):change GetTables Method Test,use intersection  Co-authored-by: dino.ma <mashengjie03@baidu.com>",41,43,Mayank Govilla,d9d5c4d,1,2021-11-13 06:03:33,2021-11-08 01:47:29
tests/migrate_test.go,5e64ac7,dino.ma,"feat(migrator,migrator/migrator.go,tests/migrate_test.go) : Get multiple data tables for migrator. (#4841)  * feat(migrator,migrator/migrator.go,tests/migrate_test.go) : Get multiple data tables for migrator.  * feat(migrator.go and migrator/migrator.go) : remove Table Struct replace with []string  * fix(migrator)  : Return all data tables  * Update migrator.go  * fix(migrator/migrator.go):remove var sql  * feat(migrate_test.go/go.mod):update sqlserver,sqlite,postgres,pq version and add getTables test  * fix(migrate_test.go):change GetTables Method Test,use intersection  Co-authored-by: dino.ma <mashengjie03@baidu.com>",45,57,Mayank Govilla,d9d5c4d,1,2021-11-13 06:03:33,2021-11-08 01:47:29
tests/migrate_test.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",40,40,,,0,2020-02-22 11:41:01,
tests/migrate_test.go,9d82aa5,Cr,"test: invalid cache plan with prepare stmt (#5778)  * test: invalid cache plan with prepare stmt  * test: more test cases  * test: drop and rename column",20,20,kinggo,b47cf57,0,2022-10-20 06:10:47,2022-01-06 07:02:53
tests/migrate_test.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",58,58,,,0,2020-02-22 11:41:01,
tests/migrate_test.go,f757b8f,halfcrazy,fix: auto migration column order unpredictable (#4980),22,22,Jinzhu,73d44a4,1,2022-01-06 10:55:20,2021-02-16 00:52:56
tests/migrate_test.go,f0a442a,Jinzhu,Refactor tests,59,59,,,0,2020-05-23 15:50:48,
tests/migrate_test.go,d0764be,Jinzhu,Test migrate with comment and check created constraints,72,78,,,0,2020-06-21 05:59:43,
tests/migrate_test.go,d0764be,Jinzhu,Test migrate with comment and check created constraints,63,63,,,0,2020-06-21 05:59:43,
tests/migrate_test.go,9123600,Jinzhu,"Fix Scopes with Migrator, close #4145",64,71,Jinzhu,916338a,1,2021-03-11 02:36:14,2021-01-26 05:39:34
tests/migrate_test.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",61,62,,,0,2020-02-22 11:41:01,
tests/migrate_test.go,d0764be,Jinzhu,Test migrate with comment and check created constraints,79,84,,,0,2020-06-21 05:59:43,
tests/migrate_test.go,62593cf,viatoriche / Maxim Panfilov,"add test: TestAutoMigrateInt8PG: shouldn't execute ALTER COLUMN TYPE smallint, close #5762",85,102,Jinzhu,983e96f,0,2022-10-18 09:28:06,2022-10-08 08:04:57
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",28,28,Ning,bbd2bbe,1,2023-12-15 08:36:08,2022-12-24 03:02:11
tests/migrate_test.go,d0764be,Jinzhu,Test migrate with comment and check created constraints,123,124,,,0,2020-06-21 05:59:43,
tests/migrate_test.go,62593cf,viatoriche / Maxim Panfilov,"add test: TestAutoMigrateInt8PG: shouldn't execute ALTER COLUMN TYPE smallint, close #5762",105,122,Jinzhu,983e96f,0,2022-10-18 09:28:06,2022-10-08 08:04:57
tests/migrate_test.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",186,186,,,0,2020-08-23 10:16:12,
tests/migrate_test.go,b0d70a2,홍성욱,"[#6372] Fixed nullable constraint bug for columns during auto migration (#7269)  * [#6372] Fixed nullable constraint bug for columns during auto migration  * [#6372] fix comment  * [#6372] Add test code  * [#6372] Add test code  * [#6372] Fix failed test case  * [#6372] Fix failed test case  * [#6372] wip  * [#6372] wip  * [#6372] wip  * [#6372] wip",144,185,Jinzhu,1b0aa80,1,2024-11-14 09:40:18,2024-03-18 11:24:16
tests/migrate_test.go,0aef8ac,Jinzhu,Add smart auto migrate tests,188,188,,,0,2020-10-22 08:36:27,
tests/migrate_test.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",189,192,,,0,2020-08-23 10:16:12,
tests/migrate_test.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",194,200,,,0,2020-08-23 10:16:12,
tests/migrate_test.go,d9d5c4d,Mayank Govilla,"Fix self-referential belongs to constraint (#4801)  * create tests for self-ref has one migration  * add relation equality check to avoid skipping self-referential schemas  * remove drop table error check",125,143,Jinzhu,916338a,1,2021-11-08 01:47:29,2021-01-26 05:39:34
tests/migrate_test.go,0aef8ac,Jinzhu,Add smart auto migrate tests,193,193,,,0,2020-10-22 08:36:27,
tests/migrate_test.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",187,187,Jinzhu,9123600,1,2022-02-19 09:02:53,2021-03-11 02:36:14
tests/migrate_test.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",206,219,,,0,2020-08-23 10:16:12,
tests/migrate_test.go,0aef8ac,Jinzhu,Add smart auto migrate tests,220,220,,,0,2020-10-22 08:36:27,
tests/migrate_test.go,2ba612e,yrong1997,"Add field tag to ignore migration (#4028)  * Add field tag to ignore migration  * Fix null value with space  * refactor migration tag",201,205,,,1,2021-02-09 08:03:02,
tests/migrate_test.go,48ced75,Jinzhu,Improve support for AutoMigrate,60,60,Jinzhu,73d44a4,0,2022-02-19 15:42:20,2021-02-16 00:52:56
tests/migrate_test.go,0aef8ac,Jinzhu,Add smart auto migrate tests,224,224,,,0,2020-10-22 08:36:27,
tests/migrate_test.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",221,223,,,0,2020-08-23 10:16:12,
tests/migrate_test.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",229,234,,,0,2020-08-23 10:16:12,
tests/migrate_test.go,0aef8ac,Jinzhu,Add smart auto migrate tests,228,228,,,0,2020-10-22 08:36:27,
tests/migrate_test.go,794edad,Cr,"test(MigrateColumn): mock alter column to improve field compare (#5499)  * test(MigrateColumn): mock alter column to improve field compare  * Update migrate_test.go  * Update migrate_test.go  * Update migrate_test.go  Co-authored-by: Jinzhu <wosmvp@gmail.com>",38,38,Mayank Govilla,d9d5c4d,0,2022-12-24 09:42:16,2021-11-08 01:47:29
tests/migrate_test.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",225,227,,,0,2020-08-23 10:16:12,
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",103,104,Jinzhu,983e96f,1,2023-12-15 08:36:08,2022-10-08 08:04:57
tests/migrate_test.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",240,253,,,0,2020-08-23 10:16:12,
tests/migrate_test.go,0aef8ac,Jinzhu,Add smart auto migrate tests,254,254,,,0,2020-10-22 08:36:27,
tests/migrate_test.go,0aef8ac,Jinzhu,Add smart auto migrate tests,258,258,,,0,2020-10-22 08:36:27,
tests/migrate_test.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",259,261,,,0,2020-08-23 10:16:12,
tests/migrate_test.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",255,257,,,0,2020-08-23 10:16:12,
tests/migrate_test.go,2ba612e,yrong1997,"Add field tag to ignore migration (#4028)  * Add field tag to ignore migration  * Fix null value with space  * refactor migration tag",235,239,,,1,2021-02-09 08:03:02,
tests/migrate_test.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",269,270,,,0,2020-08-23 10:16:12,
tests/migrate_test.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",263,264,,,0,2020-08-23 10:16:12,
tests/migrate_test.go,0aef8ac,Jinzhu,Add smart auto migrate tests,262,262,,,0,2020-10-22 08:36:27,
tests/migrate_test.go,cc6a64a,Jinzhu,"Support smart migrate, close #3078",271,272,,,0,2020-08-23 10:16:12,
tests/migrate_test.go,d0764be,Jinzhu,Test migrate with comment and check created constraints,275,275,,,0,2020-06-21 05:59:43,
tests/migrate_test.go,2ba612e,yrong1997,"Add field tag to ignore migration (#4028)  * Add field tag to ignore migration  * Fix null value with space  * refactor migration tag",265,268,,,1,2021-02-09 08:03:02,
tests/migrate_test.go,d0764be,Jinzhu,Test migrate with comment and check created constraints,280,282,,,0,2020-06-21 05:59:43,
tests/migrate_test.go,d0764be,Jinzhu,Test migrate with comment and check created constraints,303,304,,,0,2020-06-21 05:59:43,
tests/migrate_test.go,d0764be,Jinzhu,Test migrate with comment and check created constraints,277,278,,,0,2020-06-21 05:59:43,
tests/migrate_test.go,2202e99,s-takehana,"Fix create index with comments in MySQL (#4521)  * Fix create index with comments in MySQL  * Fix tests",273,274,,,1,2021-07-18 03:47:44,
tests/migrate_test.go,215f5e7,Jinzhu,"Add Raw, Row, Rows",305,305,,,0,2020-02-22 11:41:01,
tests/migrate_test.go,4201f7b,Jinzhu,"Fix create unique index when creating table, close #3081",307,308,,,1,2020-06-23 14:14:41,
tests/migrate_test.go,2202e99,s-takehana,"Fix create index with comments in MySQL (#4521)  * Fix create index with comments in MySQL  * Fix tests",279,279,,,1,2021-07-18 03:47:44,
tests/migrate_test.go,7c0de91,Jinzhu,Test Migrate Indexes,306,306,,,0,2020-05-30 14:43:41,
tests/migrate_test.go,4201f7b,Jinzhu,"Fix create unique index when creating table, close #3081",313,322,,,1,2020-06-23 14:14:41,
tests/migrate_test.go,4201f7b,Jinzhu,"Fix create unique index when creating table, close #3081",335,336,,,1,2020-06-23 14:14:41,
tests/migrate_test.go,d811795,Jinzhu,Add tests for Tables,338,365,,,0,2020-05-31 02:24:49,
tests/migrate_test.go,2202e99,s-takehana,"Fix create index with comments in MySQL (#4521)  * Fix create index with comments in MySQL  * Fix tests",276,276,,,1,2021-07-18 03:47:44,
tests/migrate_test.go,2202e99,s-takehana,"Fix create index with comments in MySQL (#4521)  * Fix create index with comments in MySQL  * Fix tests",283,302,,,1,2021-07-18 03:47:44,
tests/migrate_test.go,90183fa,Jinzhu,Allow advanced table with args,337,337,,,0,2020-07-19 13:30:24,
tests/migrate_test.go,7b6b9c4,Jinzhu,Add tests for Columns,390,390,,,0,2020-05-30 16:42:52,
tests/migrate_test.go,9a4d10b,Jin,style: fix coding typo (#5184),366,366,Jinzhu,0af95f5,1,2022-03-24 01:31:58,2022-02-19 09:02:53
tests/migrate_test.go,d811795,Jinzhu,Add tests for Tables,367,369,,,0,2020-05-31 02:24:49,
tests/migrate_test.go,90183fa,Jinzhu,Allow advanced table with args,389,389,,,0,2020-07-19 13:30:24,
tests/migrate_test.go,7c0de91,Jinzhu,Test Migrate Indexes,391,391,,,0,2020-05-30 14:43:41,
tests/migrate_test.go,7b6b9c4,Jinzhu,Add tests for Columns,392,392,,,0,2020-05-30 16:42:52,
tests/migrate_test.go,f5e77aa,black-06,fix: quote index when creating table (#5331),370,388,Jinzhu,0af95f5,1,2022-05-17 02:59:53,2022-02-19 09:02:53
tests/migrate_test.go,7b6b9c4,Jinzhu,Add tests for Columns,395,398,,,0,2020-05-30 16:42:52,
tests/migrate_test.go,7c0de91,Jinzhu,Test Migrate Indexes,393,394,,,0,2020-05-30 14:43:41,
tests/migrate_test.go,d811795,Jinzhu,Add tests for Tables,399,399,,,0,2020-05-31 02:24:49,
tests/migrate_test.go,7b6b9c4,Jinzhu,Add tests for Columns,400,402,,,0,2020-05-30 16:42:52,
tests/migrate_test.go,7c0de91,Jinzhu,Test Migrate Indexes,404,405,,,0,2020-05-30 14:43:41,
tests/migrate_test.go,7b6b9c4,Jinzhu,Add tests for Columns,406,406,,,0,2020-05-30 16:42:52,
tests/migrate_test.go,7b6b9c4,Jinzhu,Add tests for Columns,410,410,,,0,2020-05-30 16:42:52,
tests/migrate_test.go,d811795,Jinzhu,Add tests for Tables,403,403,,,0,2020-05-31 02:24:49,
tests/migrate_test.go,7c0de91,Jinzhu,Test Migrate Indexes,408,409,,,0,2020-05-30 14:43:41,
tests/migrate_test.go,d811795,Jinzhu,Add tests for Tables,407,407,,,0,2020-05-31 02:24:49,
tests/migrate_test.go,d811795,Jinzhu,Add tests for Tables,411,411,,,0,2020-05-31 02:24:49,
tests/migrate_test.go,7c0de91,Jinzhu,Test Migrate Indexes,412,413,,,0,2020-05-30 14:43:41,
tests/migrate_test.go,7b6b9c4,Jinzhu,Add tests for Columns,414,414,,,0,2020-05-30 16:42:52,
tests/migrate_test.go,d811795,Jinzhu,Add tests for Tables,415,415,,,0,2020-05-31 02:24:49,
tests/migrate_test.go,d811795,Jinzhu,Add tests for Tables,419,419,,,0,2020-05-31 02:24:49,
tests/migrate_test.go,7b6b9c4,Jinzhu,Add tests for Columns,418,418,,,0,2020-05-30 16:42:52,
tests/migrate_test.go,7c0de91,Jinzhu,Test Migrate Indexes,416,417,,,0,2020-05-30 14:43:41,
tests/migrate_test.go,7c0de91,Jinzhu,Test Migrate Indexes,420,421,,,0,2020-05-30 14:43:41,
tests/migrate_test.go,d811795,Jinzhu,Add tests for Tables,423,423,,,0,2020-05-31 02:24:49,
tests/migrate_test.go,04cbd95,Cr,test: pgsql migrate unique index (#6028),323,334,Cr,373bcf7,0,2023-02-18 01:21:07,2022-05-09 02:07:18
tests/migrate_test.go,7b6b9c4,Jinzhu,Add tests for Columns,426,426,,,0,2020-05-30 16:42:52,
tests/migrate_test.go,7c0de91,Jinzhu,Test Migrate Indexes,424,425,,,0,2020-05-30 14:43:41,
tests/migrate_test.go,7b6b9c4,Jinzhu,Add tests for Columns,422,422,,,0,2020-05-30 16:42:52,
tests/migrate_test.go,d811795,Jinzhu,Add tests for Tables,427,427,,,0,2020-05-31 02:24:49,
tests/migrate_test.go,7c0de91,Jinzhu,Test Migrate Indexes,428,429,,,0,2020-05-30 14:43:41,
tests/migrate_test.go,7b6b9c4,Jinzhu,Add tests for Columns,430,430,,,0,2020-05-30 16:42:52,
tests/migrate_test.go,d811795,Jinzhu,Add tests for Tables,431,431,,,0,2020-05-31 02:24:49,
tests/migrate_test.go,7c0de91,Jinzhu,Test Migrate Indexes,432,433,,,0,2020-05-30 14:43:41,
tests/migrate_test.go,7c0de91,Jinzhu,Test Migrate Indexes,436,437,,,0,2020-05-30 14:43:41,
tests/migrate_test.go,7b6b9c4,Jinzhu,Add tests for Columns,434,434,,,0,2020-05-30 16:42:52,
tests/migrate_test.go,d811795,Jinzhu,Add tests for Tables,435,435,,,0,2020-05-31 02:24:49,
tests/migrate_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",439,484,Jinzhu,3d91802,0,2023-02-08 08:29:09,2023-01-02 13:06:04
tests/migrate_test.go,7b6b9c4,Jinzhu,Add tests for Columns,438,438,,,0,2020-05-30 16:42:52,
tests/migrate_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",487,490,Jinzhu,3d91802,0,2023-02-08 08:29:09,2023-01-02 13:06:04
tests/migrate_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",493,494,Jinzhu,3d91802,0,2023-02-08 08:29:09,2023-01-02 13:06:04
tests/migrate_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",497,499,Jinzhu,3d91802,0,2023-02-08 08:29:09,2023-01-02 13:06:04
tests/migrate_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",502,503,Jinzhu,3d91802,0,2023-02-08 08:29:09,2023-01-02 13:06:04
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",495,496,Jinzhu,3d91802,1,2023-12-15 08:36:08,2023-01-02 13:06:04
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",491,492,Jinzhu,3d91802,1,2023-12-15 08:36:08,2023-01-02 13:06:04
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",485,486,Jinzhu,3d91802,1,2023-12-15 08:36:08,2023-01-02 13:06:04
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",509,510,Samuel N Cui,2095d42,1,2023-12-15 08:36:08,2023-10-09 09:26:27
tests/migrate_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",506,508,Jinzhu,3d91802,0,2023-02-08 08:29:09,2023-01-02 13:06:04
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",500,501,Jinzhu,3d91802,1,2023-12-15 08:36:08,2023-01-02 13:06:04
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",513,514,Samuel N Cui,2095d42,1,2023-12-15 08:36:08,2023-10-09 09:26:27
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",504,505,Jinzhu,3d91802,1,2023-12-15 08:36:08,2023-01-02 13:06:04
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",517,518,Jinzhu,3d91802,1,2023-12-15 08:36:08,2023-01-02 13:06:04
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",44,44,Mayank Govilla,d9d5c4d,1,2023-12-15 08:36:08,2021-11-08 01:47:29
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",523,524,Jinzhu,3d91802,1,2023-12-15 08:36:08,2023-01-02 13:06:04
tests/migrate_test.go,04cbd95,Cr,test: pgsql migrate unique index (#6028),309,312,,,0,2023-02-18 01:21:07,
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",527,528,Jinzhu,3d91802,1,2023-12-15 08:36:08,2023-01-02 13:06:04
tests/migrate_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",511,512,Jinzhu,0af95f5,0,2023-02-08 08:29:09,2022-02-19 09:02:53
tests/migrate_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",519,522,Jinzhu,0af95f5,0,2023-02-08 08:29:09,2022-02-19 09:02:53
tests/migrate_test.go,90183fa,Jinzhu,Allow advanced table with args,578,578,,,0,2020-07-19 13:30:24,
tests/migrate_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",562,577,Cr,5ed7b1a,0,2023-02-08 08:29:09,2022-09-22 03:25:03
tests/migrate_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",515,516,Jinzhu,0af95f5,0,2023-02-08 08:29:09,2022-02-19 09:02:53
tests/migrate_test.go,7b6b9c4,Jinzhu,Add tests for Columns,584,585,,,0,2020-05-30 16:42:52,
tests/migrate_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",525,526,Jinzhu,0af95f5,0,2023-02-08 08:29:09,2022-02-19 09:02:53
tests/migrate_test.go,7b6b9c4,Jinzhu,Add tests for Columns,591,598,,,0,2020-05-30 16:42:52,
tests/migrate_test.go,536e4d3,Jinzhu,Add test for AlterColumn,599,600,,,0,2020-05-31 03:01:06,
tests/migrate_test.go,536e4d3,Jinzhu,Add test for AlterColumn,605,606,,,0,2020-05-31 03:01:06,
tests/migrate_test.go,d11c424,Jinzhu,Fix typo,608,608,,,1,2020-06-07 07:26:43,
tests/migrate_test.go,536e4d3,Jinzhu,Add test for AlterColumn,609,610,,,0,2020-05-31 03:01:06,
tests/migrate_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",579,580,Jinzhu,0af95f5,0,2023-02-08 08:29:09,2022-02-19 09:02:53
tests/migrate_test.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",581,583,,,1,2022-02-19 09:02:53,
tests/migrate_test.go,536e4d3,Jinzhu,Add test for AlterColumn,615,621,,,0,2020-05-31 03:01:06,
tests/migrate_test.go,48ced75,Jinzhu,Improve support for AutoMigrate,601,604,,,0,2022-02-19 15:42:20,
tests/migrate_test.go,48ced75,Jinzhu,Improve support for AutoMigrate,607,607,,,0,2022-02-19 15:42:20,
tests/migrate_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",529,559,Jinzhu,0af95f5,0,2023-02-08 08:29:09,2022-02-19 09:02:53
tests/migrate_test.go,48ced75,Jinzhu,Improve support for AutoMigrate,611,614,,,0,2022-02-19 15:42:20,
tests/migrate_test.go,48ced75,Jinzhu,Improve support for AutoMigrate,586,590,,,0,2022-02-19 15:42:20,
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",560,561,Jinzhu,0af95f5,1,2023-12-15 08:36:08,2022-02-19 09:02:53
tests/migrate_test.go,536e4d3,Jinzhu,Add test for AlterColumn,629,630,,,0,2020-05-31 03:01:06,
tests/migrate_test.go,48ced75,Jinzhu,Improve support for AutoMigrate,624,624,,,0,2022-02-19 15:42:20,
tests/migrate_test.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",633,633,,,1,2022-02-19 09:02:53,
tests/migrate_test.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",622,623,,,1,2022-02-19 09:02:53,
tests/migrate_test.go,48ced75,Jinzhu,Improve support for AutoMigrate,634,634,,,0,2022-02-19 15:42:20,
tests/migrate_test.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",637,638,,,1,2022-02-19 09:02:53,
tests/migrate_test.go,48ced75,Jinzhu,Improve support for AutoMigrate,639,639,,,0,2022-02-19 15:42:20,
tests/migrate_test.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",627,628,,,1,2022-02-19 09:02:53,
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",625,626,,,1,2023-12-15 08:36:08,
tests/migrate_test.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",642,642,,,1,2022-02-19 09:02:53,
tests/migrate_test.go,0af95f5,Jinzhu,"Enhance migrator Columntype interface (#5088)  * Update Migrator ColumnType interface  * Update MigrateColumn Test  * Upgrade test drivers  * Fix typo",646,647,,,1,2022-02-19 09:02:53,
tests/migrate_test.go,48ced75,Jinzhu,Improve support for AutoMigrate,643,643,,,0,2022-02-19 15:42:20,
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",649,650,Samuel N Cui,2095d42,1,2023-12-15 08:36:08,2023-10-09 09:26:27
tests/migrate_test.go,536e4d3,Jinzhu,Add test for AlterColumn,651,651,,,0,2020-05-31 03:01:06,
tests/migrate_test.go,48ced75,Jinzhu,Improve support for AutoMigrate,652,652,,,0,2022-02-19 15:42:20,
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",653,654,Samuel N Cui,2095d42,1,2023-12-15 08:36:08,2023-10-09 09:26:27
tests/migrate_test.go,48ced75,Jinzhu,Improve support for AutoMigrate,648,648,,,0,2022-02-19 15:42:20,
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",635,636,,,1,2023-12-15 08:36:08,
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",631,632,,,1,2023-12-15 08:36:08,
tests/migrate_test.go,48ced75,Jinzhu,Improve support for AutoMigrate,659,661,,,0,2022-02-19 15:42:20,
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",640,641,,,1,2023-12-15 08:36:08,
tests/migrate_test.go,7b6b9c4,Jinzhu,Add tests for Columns,674,680,,,0,2020-05-30 16:42:52,
tests/migrate_test.go,536e4d3,Jinzhu,Add test for AlterColumn,670,673,,,0,2020-05-31 03:01:06,
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",644,645,,,1,2023-12-15 08:36:08,
tests/migrate_test.go,2428506,Jinzhu,"Fix RenameColumn for mssql, DropColumn for sqlite",685,685,,,1,2020-05-31 01:03:51,
tests/migrate_test.go,2428506,Jinzhu,"Fix RenameColumn for mssql, DropColumn for sqlite",681,681,,,1,2020-05-31 01:03:51,
tests/migrate_test.go,7b6b9c4,Jinzhu,Add tests for Columns,682,684,,,0,2020-05-30 16:42:52,
tests/migrate_test.go,7b6b9c4,Jinzhu,Add tests for Columns,686,688,,,0,2020-05-30 16:42:52,
tests/migrate_test.go,48ced75,Jinzhu,Improve support for AutoMigrate,655,656,,,0,2022-02-19 15:42:20,
tests/migrate_test.go,7b6b9c4,Jinzhu,Add tests for Columns,690,692,,,0,2020-05-30 16:42:52,
tests/migrate_test.go,2428506,Jinzhu,"Fix RenameColumn for mssql, DropColumn for sqlite",689,689,,,1,2020-05-31 01:03:51,
tests/migrate_test.go,2428506,Jinzhu,"Fix RenameColumn for mssql, DropColumn for sqlite",693,699,,,1,2020-05-31 01:03:51,
tests/migrate_test.go,916338a,Jinzhu,"Test migrate constraints, close #3986",717,718,,,0,2021-01-26 05:39:34,
tests/migrate_test.go,48ced75,Jinzhu,Improve support for AutoMigrate,664,669,,,0,2022-02-19 15:42:20,
tests/migrate_test.go,73d44a4,Jinzhu,"Fix create duplicated constraint, close #4090",719,719,,,1,2021-02-16 00:52:56,
tests/migrate_test.go,7b6b9c4,Jinzhu,Add tests for Columns,715,716,,,0,2020-05-30 16:42:52,
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",657,658,,,1,2023-12-15 08:36:08,
tests/migrate_test.go,2428506,Jinzhu,"Fix RenameColumn for mssql, DropColumn for sqlite",702,714,,,1,2020-05-31 01:03:51,
tests/migrate_test.go,d321190,Jason Lee,"Refactor ParseWithSchemaTable method and improve test. (#4789)  * Refactor ParseWithSchemaTable method and improve test.  * Fix schema.ParseWithSchemaTable method for only use schemaTable in migrator and improve test.  * Rename `schemaTable` to `specialTableName` for clearly argument.",744,744,,,1,2021-10-25 03:26:44,
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",662,663,,,1,2023-12-15 08:36:08,
tests/migrate_test.go,d321190,Jason Lee,"Refactor ParseWithSchemaTable method and improve test. (#4789)  * Refactor ParseWithSchemaTable method and improve test.  * Fix schema.ParseWithSchemaTable method for only use schemaTable in migrator and improve test.  * Rename `schemaTable` to `specialTableName` for clearly argument.",746,747,,,1,2021-10-25 03:26:44,
tests/migrate_test.go,a3bd9c3,Wendell Sun,fix: automigrate error caused by indexes while using dynamic table name,745,745,,,1,2021-10-19 01:59:57,
tests/migrate_test.go,a3bd9c3,Wendell Sun,fix: automigrate error caused by indexes while using dynamic table name,743,743,,,1,2021-10-19 01:59:57,
tests/migrate_test.go,a3bd9c3,Wendell Sun,fix: automigrate error caused by indexes while using dynamic table name,748,749,,,1,2021-10-19 01:59:57,
tests/migrate_test.go,a3bd9c3,Wendell Sun,fix: automigrate error caused by indexes while using dynamic table name,751,752,,,1,2021-10-19 01:59:57,
tests/migrate_test.go,916338a,Jinzhu,"Test migrate constraints, close #3986",720,742,,,0,2021-01-26 05:39:34,
tests/migrate_test.go,a3bd9c3,Wendell Sun,fix: automigrate error caused by indexes while using dynamic table name,761,764,,,1,2021-10-19 01:59:57,
tests/migrate_test.go,d321190,Jason Lee,"Refactor ParseWithSchemaTable method and improve test. (#4789)  * Refactor ParseWithSchemaTable method and improve test.  * Fix schema.ParseWithSchemaTable method for only use schemaTable in migrator and improve test.  * Rename `schemaTable` to `specialTableName` for clearly argument.",750,750,,,1,2021-10-25 03:26:44,
tests/migrate_test.go,d321190,Jason Lee,"Refactor ParseWithSchemaTable method and improve test. (#4789)  * Refactor ParseWithSchemaTable method and improve test.  * Fix schema.ParseWithSchemaTable method for only use schemaTable in migrator and improve test.  * Rename `schemaTable` to `specialTableName` for clearly argument.",753,760,,,1,2021-10-25 03:26:44,
tests/migrate_test.go,a3bd9c3,Wendell Sun,fix: automigrate error caused by indexes while using dynamic table name,767,769,,,1,2021-10-19 01:59:57,
tests/migrate_test.go,d321190,Jason Lee,"Refactor ParseWithSchemaTable method and improve test. (#4789)  * Refactor ParseWithSchemaTable method and improve test.  * Fix schema.ParseWithSchemaTable method for only use schemaTable in migrator and improve test.  * Rename `schemaTable` to `specialTableName` for clearly argument.",765,766,,,1,2021-10-25 03:26:44,
tests/migrate_test.go,d321190,Jason Lee,"Refactor ParseWithSchemaTable method and improve test. (#4789)  * Refactor ParseWithSchemaTable method and improve test.  * Fix schema.ParseWithSchemaTable method for only use schemaTable in migrator and improve test.  * Rename `schemaTable` to `specialTableName` for clearly argument.",770,770,,,1,2021-10-25 03:26:44,
tests/migrate_test.go,a3bd9c3,Wendell Sun,fix: automigrate error caused by indexes while using dynamic table name,771,771,,,1,2021-10-19 01:59:57,
tests/migrate_test.go,d321190,Jason Lee,"Refactor ParseWithSchemaTable method and improve test. (#4789)  * Refactor ParseWithSchemaTable method and improve test.  * Fix schema.ParseWithSchemaTable method for only use schemaTable in migrator and improve test.  * Rename `schemaTable` to `specialTableName` for clearly argument.",772,774,,,1,2021-10-25 03:26:44,
tests/migrate_test.go,d321190,Jason Lee,"Refactor ParseWithSchemaTable method and improve test. (#4789)  * Refactor ParseWithSchemaTable method and improve test.  * Fix schema.ParseWithSchemaTable method for only use schemaTable in migrator and improve test.  * Rename `schemaTable` to `specialTableName` for clearly argument.",776,778,,,1,2021-10-25 03:26:44,
tests/migrate_test.go,a3bd9c3,Wendell Sun,fix: automigrate error caused by indexes while using dynamic table name,775,775,,,1,2021-10-19 01:59:57,
tests/migrate_test.go,a3bd9c3,Wendell Sun,fix: automigrate error caused by indexes while using dynamic table name,779,781,,,1,2021-10-19 01:59:57,
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",700,701,Wendell Sun,a3bd9c3,1,2023-12-15 08:36:08,2021-10-19 01:59:57
tests/migrate_test.go,d3488ae,Heliner,fix: add judge result of auto_migrate (#5306)  Co-authored-by: fredhan <fredhan@futunn.com>,917,929,,,1,2022-04-30 01:50:53,
tests/migrate_test.go,a0cc631,Cr,"test: test for postgrs serial column (#5234)  * test: test for postgrs sercial column  * test: only for postgres  * chore: spelling mistake  * test: for drop sequence",852,913,,,0,2022-04-24 04:13:27,
tests/migrate_test.go,2095d42,Samuel N Cui,"fix: sqlite dialector cannot apply `PRIMARY KEY AUTOINCREMENT` type (#6624)  * fix: sqlite dialector cannot apply `PRIMARY KEY AUTOINCREMENT` type  fix #4760  * feat: add auto increment test  * feat: update sqlite  * feat: update tests deps sqlite to v1.5.4",936,977,Cr,9d82aa5,1,2023-10-09 09:26:27,2022-10-20 06:10:47
tests/migrate_test.go,f757b8f,halfcrazy,fix: auto migration column order unpredictable (#4980),782,851,,,1,2022-01-06 10:55:20,
tests/migrate_test.go,bd7e42e,Cr,"fix: AutoMigrate with special table name (#5301)  * fix: AutoMigrate with special table name  * test: migrate with special table name",914,916,,,1,2022-04-27 13:13:48,
tests/migrate_test.go,bbd2bbe,Ning,fix:Issue migrating field with CURRENT_TIMESTAMP (#5906)  Co-authored-by: ningfei <accelerator314@outlook.com>,1014,1035,viatoriche / Maxim Panfilov,62593cf,1,2022-12-24 03:02:11,2022-10-18 09:28:06
tests/migrate_test.go,373bcf7,Cr,"fix: many2many auto migrate (#5322)  * fix: many2many auto migrate  * fix: uuid ossp",935,935,,,1,2022-05-09 02:07:18,
tests/migrate_test.go,bd7e42e,Cr,"fix: AutoMigrate with special table name (#5301)  * fix: AutoMigrate with special table name  * test: migrate with special table name",930,934,,,1,2022-04-27 13:13:48,
tests/migrate_test.go,bbd2bbe,Ning,fix:Issue migrating field with CURRENT_TIMESTAMP (#5906)  Co-authored-by: ningfei <accelerator314@outlook.com>,1038,1040,viatoriche / Maxim Panfilov,62593cf,1,2022-12-24 03:02:11,2022-10-18 09:28:06
tests/migrate_test.go,02b7e26,Cheese,"feat: add tidb integration test cases (#6014)  * feat: support tidb integration test  * feat: update the mysql driver version to test",1113,1114,viatoriche / Maxim Panfilov,62593cf,0,2023-02-08 08:29:09,2022-10-18 09:28:06
tests/migrate_test.go,373bcf7,Cr,"fix: many2many auto migrate (#5322)  * fix: many2many auto migrate  * fix: uuid ossp",978,1012,,,1,2022-05-09 02:07:18,
tests/migrate_test.go,8fb9a31,black-06,refactor: part 2 of distinguish between Unique and UniqueIndex (#6822),1099,1100,Cr,7d1a92d,0,2024-02-06 11:48:40,2022-05-22 08:12:28
tests/migrate_test.go,93986de,Cr,fix: migrate column default value (#5359)  Co-authored-by: Jinzhu <wosmvp@gmail.com>,1041,1098,,,1,2022-05-28 15:09:13,
tests/migrate_test.go,8fb9a31,black-06,refactor: part 2 of distinguish between Unique and UniqueIndex (#6822),1036,1037,Cr,7d1a92d,0,2024-02-06 11:48:40,2022-05-22 08:12:28
tests/migrate_test.go,7d1a92d,Cr,test: test for skip prepared when auto migrate (#5350),1013,1013,,,0,2022-05-22 08:12:28,
tests/migrate_test.go,93986de,Cr,fix: migrate column default value (#5359)  Co-authored-by: Jinzhu <wosmvp@gmail.com>,1101,1112,,,1,2022-05-28 15:09:13,
tests/migrate_test.go,93986de,Cr,fix: migrate column default value (#5359)  Co-authored-by: Jinzhu <wosmvp@gmail.com>,1115,1158,,,1,2022-05-28 15:09:13,
tests/migrate_test.go,93986de,Cr,fix: migrate column default value (#5359)  Co-authored-by: Jinzhu <wosmvp@gmail.com>,1159,1161,,,1,2022-05-28 15:09:13,
tests/migrate_test.go,93986de,Cr,fix: migrate column default value (#5359)  Co-authored-by: Jinzhu <wosmvp@gmail.com>,1164,1178,,,1,2022-05-28 15:09:13,
tests/migrate_test.go,9d82aa5,Cr,"test: invalid cache plan with prepare stmt (#5778)  * test: invalid cache plan with prepare stmt  * test: more test cases  * test: drop and rename column",1179,1179,,,0,2022-10-20 06:10:47,
tests/migrate_test.go,c74bc57,Cr,"fix: association many2many duplicate elem (#5473)  * fix: association many2many duplicate elem  * chore: gofumpt style",1162,1163,,,1,2022-07-01 07:12:15,
tests/migrate_test.go,7d1a92d,Cr,test: test for skip prepared when auto migrate (#5350),1180,1212,,,0,2022-05-22 08:12:28,
tests/migrate_test.go,235c093,Cr,fix(MigrateColumn):declared different type without length (#5465),1213,1213,,,1,2022-06-29 02:07:42,
tests/migrate_test.go,532e9cf,Michael Anstis,"Issue 6054: Unscoped not working with PreLoad on Joins (#6058)  * Issue 6054: Unscoped not working with PreLoad on Joins  * Formatting  ---------  Co-authored-by: Michael Anstis <manstis@redhat.com>",1397,1397,Haibo,da2b286,1,2023-02-18 01:06:43,2023-01-01 11:54:28
tests/migrate_test.go,46bce17,Cr,test: pg array type (#5480),1347,1382,,,0,2022-07-04 08:42:27,
tests/migrate_test.go,9d82aa5,Cr,"test: invalid cache plan with prepare stmt (#5778)  * test: invalid cache plan with prepare stmt  * test: more test cases  * test: drop and rename column",1214,1308,,,0,2022-10-20 06:10:47,
tests/migrate_test.go,5ed7b1a,Cr,fix: same embedded filed name (#5705),1383,1383,,,1,2022-09-22 03:25:03,
tests/migrate_test.go,f17a752,hishope,Signed-off-by: hishope <csqiye@126.com>  fix some typos in tests  Signed-off-by: hishope <csqiye@126.com>,1459,1459,Haibo,da2b286,1,2024-03-07 08:19:17,2023-01-01 11:54:28
tests/migrate_test.go,5ed7b1a,Cr,fix: same embedded filed name (#5705),1428,1458,,,1,2022-09-22 03:25:03,
tests/migrate_test.go,794edad,Cr,"test(MigrateColumn): mock alter column to improve field compare (#5499)  * test(MigrateColumn): mock alter column to improve field compare  * Update migrate_test.go  * Update migrate_test.go  * Update migrate_test.go  Co-authored-by: Jinzhu <wosmvp@gmail.com>",1398,1427,,,0,2022-12-24 09:42:16,
tests/migrate_test.go,235c093,Cr,fix(MigrateColumn):declared different type without length (#5465),1309,1346,,,1,2022-06-29 02:07:42,
tests/migrate_test.go,1b0aa80,Jinzhu,Fix AutoMigrate for bool fields with default value,1466,1466,hishope,f17a752,1,2024-03-18 11:24:16,2024-03-07 08:19:17
tests/migrate_test.go,f17a752,hishope,Signed-off-by: hishope <csqiye@126.com>  fix some typos in tests  Signed-off-by: hishope <csqiye@126.com>,1462,1462,Haibo,da2b286,1,2024-03-07 08:19:17,2023-01-01 11:54:28
tests/migrate_test.go,794edad,Cr,"test(MigrateColumn): mock alter column to improve field compare (#5499)  * test(MigrateColumn): mock alter column to improve field compare  * Update migrate_test.go  * Update migrate_test.go  * Update migrate_test.go  Co-authored-by: Jinzhu <wosmvp@gmail.com>",1384,1396,,,0,2022-12-24 09:42:16,
tests/migrate_test.go,5ed7b1a,Cr,fix: same embedded filed name (#5705),1460,1461,,,1,2022-09-22 03:25:03,
tests/migrate_test.go,1b0aa80,Jinzhu,Fix AutoMigrate for bool fields with default value,1501,1508,Haibo,16a2722,1,2024-03-18 11:24:16,2023-01-01 14:14:28
tests/migrate_test.go,5ed7b1a,Cr,fix: same embedded filed name (#5705),1463,1464,,,1,2022-09-22 03:25:03,
tests/migrate_test.go,1b0aa80,Jinzhu,Fix AutoMigrate for bool fields with default value,1480,1480,Haibo,da2b286,1,2024-03-18 11:24:16,2023-01-01 11:54:28
tests/migrate_test.go,da2b286,Haibo,fix(migrator): ignore relationships when migrating #5913 (#5946),1465,1465,,,1,2023-01-01 11:54:28,
tests/migrate_test.go,da2b286,Haibo,fix(migrator): ignore relationships when migrating #5913 (#5946),1573,1635,,,1,2023-01-01 11:54:28,
tests/migrate_test.go,16a2722,Haibo,"fix(migrator): Tag default:'null' always causes field migration #5953 (#5954)  * fix(migrator): Tag default:'null' always causes field migration #5953  * Update migrate_test.go  * Update migrate_test.go  * Update migrate_test.go  Co-authored-by: Jinzhu <wosmvp@gmail.com>",1509,1540,,,1,2023-01-01 14:14:28,
tests/migrate_test.go,16a2722,Haibo,"fix(migrator): Tag default:'null' always causes field migration #5953 (#5954)  * fix(migrator): Tag default:'null' always causes field migration #5953  * Update migrate_test.go  * Update migrate_test.go  * Update migrate_test.go  Co-authored-by: Jinzhu <wosmvp@gmail.com>",1467,1479,,,1,2023-01-01 14:14:28,
tests/migrate_test.go,16a2722,Haibo,"fix(migrator): Tag default:'null' always causes field migration #5953 (#5954)  * fix(migrator): Tag default:'null' always causes field migration #5953  * Update migrate_test.go  * Update migrate_test.go  * Update migrate_test.go  Co-authored-by: Jinzhu <wosmvp@gmail.com>",1481,1500,,,1,2023-01-01 14:14:28,
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",1710,1711,Jeffry Luqman,654b5f2,1,2023-12-15 08:36:08,2023-03-10 09:11:56
tests/migrate_test.go,3d91802,Jinzhu,"Fix unexpected alter table in auto migration, close #5942, #5943",1541,1572,,,1,2023-01-02 13:06:04,
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",1640,1641,black-06,a80707d,1,2023-12-15 08:36:08,2023-02-27 07:43:10
tests/migrate_test.go,a80707d,black-06,"Create and drop view (#6097)  * create view  * add comment  * fix test  * check param and add comment",1636,1639,,,1,2023-02-27 07:43:10,
tests/migrate_test.go,a80707d,black-06,"Create and drop view (#6097)  * create view  * add comment  * fix test  * check param and add comment",1642,1669,,,1,2023-02-27 07:43:10,
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",1716,1717,,,1,2023-12-15 08:36:08,
tests/migrate_test.go,654b5f2,Jeffry Luqman,"test: pgsql alter column from smallint or string to boolean (#6107)  * test: pgsql alter column from smallint to boolean  * test: pgsql alter column from string to boolean",1670,1709,,,0,2023-03-10 09:11:56,
tests/migrate_test.go,654b5f2,Jeffry Luqman,"test: pgsql alter column from smallint or string to boolean (#6107)  * test: pgsql alter column from smallint to boolean  * test: pgsql alter column from string to boolean",1712,1715,,,0,2023-03-10 09:11:56,
tests/migrate_test.go,1fb26ac,Saeid,"test: coverage for tabletype added (#6496)  * test: coverage for tabletype added  * test: tidb exclueded  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",1729,1747,,,0,2023-08-04 02:30:07,
tests/migrate_test.go,654b5f2,Jeffry Luqman,"test: pgsql alter column from smallint or string to boolean (#6107)  * test: pgsql alter column from smallint to boolean  * test: pgsql alter column from string to boolean",1724,1728,,,0,2023-03-10 09:11:56,
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",1722,1723,,,1,2023-12-15 08:36:08,
tests/migrate_test.go,8fb9a31,black-06,refactor: part 2 of distinguish between Unique and UniqueIndex (#6822),1775,1989,Alexis Viscogliosi,a2cac75,0,2024-02-06 11:48:40,2023-12-15 08:36:08
tests/migrate_test.go,1fb26ac,Saeid,"test: coverage for tabletype added (#6496)  * test: coverage for tabletype added  * test: tidb exclueded  ---------  Co-authored-by: Saeid Saeidee <s.saeidee@sensysgatso.com>",1750,1774,,,0,2023-08-04 02:30:07,
tests/migrate_test.go,654b5f2,Jeffry Luqman,"test: pgsql alter column from smallint or string to boolean (#6107)  * test: pgsql alter column from smallint to boolean  * test: pgsql alter column from string to boolean",1718,1721,,,0,2023-03-10 09:11:56,
tests/migrate_test.go,a2cac75,Alexis Viscogliosi,"feature: bring custom type and id column name to polymorphism (#6716)  * feature: bring custom type and id column name to polymorphism  * relationship: better returns for hasPolymorphicRelation  * fix: tests",1748,1749,,,1,2023-12-15 08:36:08,
